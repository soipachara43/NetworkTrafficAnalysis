{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!src/core/public/i18n/i18n_eui_mapping.js","dependencies":[{"path":"src/core/public/i18n/i18n_eui_mapping.js","mtime":1589249549302},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmV1aUNvbnRleHRNYXBwaW5nID0gdm9pZCAwOwoKdmFyIF9yZWFjdCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgicmVhY3QiKSk7Cgp2YXIgX2kxOG4gPSByZXF1aXJlKCJAa2JuL2kxOG4iKTsKCnZhciBfcmVhY3QyID0gcmVxdWlyZSgiQGtibi9pMThuL3JlYWN0Iik7CgpmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgewogIHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7CiAgICBkZWZhdWx0OiBvYmoKICB9Owp9Ci8qCiAqIExpY2Vuc2VkIHRvIEVsYXN0aWNzZWFyY2ggQi5WLiB1bmRlciBvbmUgb3IgbW9yZSBjb250cmlidXRvcgogKiBsaWNlbnNlIGFncmVlbWVudHMuIFNlZSB0aGUgTk9USUNFIGZpbGUgZGlzdHJpYnV0ZWQgd2l0aAogKiB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24gcmVnYXJkaW5nIGNvcHlyaWdodAogKiBvd25lcnNoaXAuIEVsYXN0aWNzZWFyY2ggQi5WLiBsaWNlbnNlcyB0aGlzIGZpbGUgdG8geW91IHVuZGVyCiAqIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSAiTGljZW5zZSIpOyB5b3UgbWF5CiAqIG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuCiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdAogKgogKiAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKICoKICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLAogKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbgogKiAiQVMgSVMiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkKICogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlCiAqIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnMKICogdW5kZXIgdGhlIExpY2Vuc2UuCiAqLwoKCnZhciBldWlDb250ZXh0TWFwcGluZyA9IHsKICAnZXVpQmFzaWNUYWJsZS5zZWxlY3RBbGxSb3dzJzogX2kxOG4uaTE4bi50cmFuc2xhdGUoJ2NvcmUuZXVpQmFzaWNUYWJsZS5zZWxlY3RBbGxSb3dzJywgewogICAgZGVmYXVsdE1lc3NhZ2U6ICdTZWxlY3QgYWxsIHJvd3MnLAogICAgZGVzY3JpcHRpb246ICdBUklBIGFuZCBkaXNwbGF5ZWQgbGFiZWwgb24gYSBjaGVja2JveCB0byBzZWxlY3QgYWxsIHRhYmxlIHJvd3MnCiAgfSksCiAgJ2V1aUJhc2ljVGFibGUuc2VsZWN0VGhpc1Jvdyc6IF9pMThuLmkxOG4udHJhbnNsYXRlKCdjb3JlLmV1aUJhc2ljVGFibGUuc2VsZWN0VGhpc1JvdycsIHsKICAgIGRlZmF1bHRNZXNzYWdlOiAnU2VsZWN0IHRoaXMgcm93JywKICAgIGRlc2NyaXB0aW9uOiAnQVJJQSBhbmQgZGlzcGxheWVkIGxhYmVsIG9uIGEgY2hlY2tib3ggdG8gc2VsZWN0IGEgc2luZ2xlIHRhYmxlIHJvdycKICB9KSwKICAnZXVpQmFzaWNUYWJsZS50YWJsZURlc2NyaXB0aW9uJzogZnVuY3Rpb24gZXVpQmFzaWNUYWJsZVRhYmxlRGVzY3JpcHRpb24oX3JlZikgewogICAgdmFyIGl0ZW1Db3VudCA9IF9yZWYuaXRlbUNvdW50OwogICAgcmV0dXJuIF9pMThuLmkxOG4udHJhbnNsYXRlKCdjb3JlLmV1aUJhc2ljVGFibGUudGFibGVEZXNjcmlwdGlvbicsIHsKICAgICAgZGVmYXVsdE1lc3NhZ2U6ICdCZWxvdyBpcyBhIHRhYmxlIG9mIHtpdGVtQ291bnR9IGl0ZW1zLicsCiAgICAgIHZhbHVlczogewogICAgICAgIGl0ZW1Db3VudDogaXRlbUNvdW50CiAgICAgIH0sCiAgICAgIGRlc2NyaXB0aW9uOiAnU2NyZWVuIHJlYWRlciB0ZXh0IHRvIGRlc2NyaWJlIHRoZSBzaXplIG9mIGEgdGFibGUnCiAgICB9KTsKICB9LAogICdldWlCb3R0b21CYXIuc2NyZWVuUmVhZGVyQW5ub3VuY2VtZW50JzogX2kxOG4uaTE4bi50cmFuc2xhdGUoJ2NvcmUuZXVpQm90dG9tQmFyLnNjcmVlblJlYWRlckFubm91bmNlbWVudCcsIHsKICAgIGRlZmF1bHRNZXNzYWdlOiAnVGhlcmUgaXMgYSBuZXcgbWVudSBvcGVuaW5nIHdpdGggcGFnZSBsZXZlbCBjb250cm9scyBhdCB0aGUgZW5kIG9mIHRoZSBkb2N1bWVudC4nLAogICAgZGVzY3JpcHRpb246ICdTY3JlZW4gcmVhZGVyIGFubm91bmNlbWVudCB0aGF0IGZ1bmN0aW9uYWxpdHkgaXMgYXZhaWxhYmxlIGluIHRoZSBwYWdlIGRvY3VtZW50JwogIH0pLAogICdldWlCcmVhZGNydW1icy5jb2xsYXBzZWRCYWRnZS5hcmlhTGFiZWwnOiBfaTE4bi5pMThuLnRyYW5zbGF0ZSgnY29yZS5ldWlCcmVhZGNydW1icy5jb2xsYXBzZWRCYWRnZS5hcmlhTGFiZWwnLCB7CiAgICBkZWZhdWx0TWVzc2FnZTogJ1Nob3cgYWxsIGJyZWFkY3J1bWJzJywKICAgIGRlc2NyaXB0aW9uOiAnRGlzcGxheWVkIHdoZW4gb25lIG9yIG1vcmUgYnJlYWRjcnVtYnMgYXJlIGhpZGRlbi4nCiAgfSksCiAgJ2V1aUNhcmRTZWxlY3Quc2VsZWN0JzogX2kxOG4uaTE4bi50cmFuc2xhdGUoJ2NvcmUuZXVpQ2FyZFNlbGVjdC5zZWxlY3QnLCB7CiAgICBkZWZhdWx0TWVzc2FnZTogJ1NlbGVjdCcsCiAgICBkZXNjcmlwdGlvbjogJ0Rpc3BsYXllZCBidXR0b24gdGV4dCB3aGVuIGEgY2FyZCBvcHRpb24gY2FuIGJlIHNlbGVjdGVkLicKICB9KSwKICAnZXVpQ2FyZFNlbGVjdC5zZWxlY3RlZCc6IF9pMThuLmkxOG4udHJhbnNsYXRlKCdjb3JlLmV1aUNhcmRTZWxlY3Quc2VsZWN0ZWQnLCB7CiAgICBkZWZhdWx0TWVzc2FnZTogJ1NlbGVjdGVkJywKICAgIGRlc2NyaXB0aW9uOiAnRGlzcGxheWVkIGJ1dHRvbiB0ZXh0IHdoZW4gYSBjYXJkIG9wdGlvbiBpcyBzZWxlY3RlZC4nCiAgfSksCiAgJ2V1aUNhcmRTZWxlY3QudW5hdmFpbGFibGUnOiBfaTE4bi5pMThuLnRyYW5zbGF0ZSgnY29yZS5ldWlDYXJkU2VsZWN0LnVuYXZhaWxhYmxlJywgewogICAgZGVmYXVsdE1lc3NhZ2U6ICdVbmF2YWlsYWJsZScsCiAgICBkZXNjcmlwdGlvbjogJ0Rpc3BsYXllZCBidXR0b24gdGV4dCB3aGVuIGEgY2FyZCBvcHRpb24gaXMgdW5hdmFpbGFibGUuJwogIH0pLAogICdldWlDb2RlQmxvY2suY29weUJ1dHRvbic6IF9pMThuLmkxOG4udHJhbnNsYXRlKCdjb3JlLmV1aUNvZGVCbG9jay5jb3B5QnV0dG9uJywgewogICAgZGVmYXVsdE1lc3NhZ2U6ICdDb3B5JywKICAgIGRlc2NyaXB0aW9uOiAnQVJJQSBsYWJlbCBmb3IgYSBidXR0b24gdGhhdCBjb3BpZXMgc291cmNlIGNvZGUgdGV4dCB0byB0aGUgY2xpcGJvYXJkJwogIH0pLAogICdldWlDb2RlRWRpdG9yLnN0YXJ0RWRpdGluZyc6IF9pMThuLmkxOG4udHJhbnNsYXRlKCdjb3JlLmV1aUNvZGVFZGl0b3Iuc3RhcnRFZGl0aW5nJywgewogICAgZGVmYXVsdE1lc3NhZ2U6ICdQcmVzcyBFbnRlciB0byBzdGFydCBlZGl0aW5nLicKICB9KSwKICAnZXVpQ29kZUVkaXRvci5zdGFydEludGVyYWN0aW5nJzogX2kxOG4uaTE4bi50cmFuc2xhdGUoJ2NvcmUuZXVpQ29kZUVkaXRvci5zdGFydEludGVyYWN0aW5nJywgewogICAgZGVmYXVsdE1lc3NhZ2U6ICdQcmVzcyBFbnRlciB0byBzdGFydCBpbnRlcmFjdGluZyB3aXRoIHRoZSBjb2RlLicKICB9KSwKICAnZXVpQ29kZUVkaXRvci5zdG9wRWRpdGluZyc6IF9pMThuLmkxOG4udHJhbnNsYXRlKCdjb3JlLmV1aUNvZGVFZGl0b3Iuc3RvcEVkaXRpbmcnLCB7CiAgICBkZWZhdWx0TWVzc2FnZTogIldoZW4geW91J3JlIGRvbmUsIHByZXNzIEVzY2FwZSB0byBzdG9wIGVkaXRpbmcuIgogIH0pLAogICdldWlDb2RlRWRpdG9yLnN0b3BJbnRlcmFjdGluZyc6IF9pMThuLmkxOG4udHJhbnNsYXRlKCdjb3JlLmV1aUNvZGVFZGl0b3Iuc3RvcEludGVyYWN0aW5nJywgewogICAgZGVmYXVsdE1lc3NhZ2U6ICJXaGVuIHlvdSdyZSBkb25lLCBwcmVzcyBFc2NhcGUgdG8gc3RvcCBpbnRlcmFjdGluZyB3aXRoIHRoZSBjb2RlLiIKICB9KSwKICAnZXVpQ29sbGFwc2VkSXRlbUFjdGlvbnMuYWxsQWN0aW9ucyc6IF9pMThuLmkxOG4udHJhbnNsYXRlKCdjb3JlLmV1aUNvbGxhcHNlZEl0ZW1BY3Rpb25zLmFsbEFjdGlvbnMnLCB7CiAgICBkZWZhdWx0TWVzc2FnZTogJ0FsbCBhY3Rpb25zJywKICAgIGRlc2NyaXB0aW9uOiAnQVJJQSBsYWJlbCBhbmQgdG9vbHRpcCBjb250ZW50IGRlc2NyaWJpbmcgYSBidXR0b24gdGhhdCBleHBhbmRzIGFuIGFjdGlvbnMgbWVudScKICB9KSwKICAnZXVpQ29sb3JQaWNrZXIuc2NyZWVuUmVhZGVyQW5ub3VuY2VtZW50JzogX2kxOG4uaTE4bi50cmFuc2xhdGUoJ2NvcmUuZXVpQ29sb3JQaWNrZXIuc2NyZWVuUmVhZGVyQW5ub3VuY2VtZW50JywgewogICAgZGVmYXVsdE1lc3NhZ2U6ICdBIHBvcHVwIHdpdGggYSByYW5nZSBvZiBzZWxlY3RhYmxlIGNvbG9ycyBvcGVuZWQuIFRhYiBmb3J3YXJkIHRvIGN5Y2xlIHRocm91Z2ggY29sb3JzIGNob2ljZXMgb3IgcHJlc3MgZXNjYXBlIHRvIGNsb3NlIHRoaXMgcG9wdXAuJywKICAgIGRlc2NyaXB0aW9uOiAnTWVzc2FnZSB3aGVuIHRoZSBjb2xvciBwaWNrZXIgcG9wb3ZlciBpcyBvcGVuZWQuIERlc2NyaWJlcyB0aGUgaW50ZXJhY3Rpb24gd2l0aCB0aGUgZWxlbWVudHMgaW4gdGhlIHBvcG92ZXIuJwogIH0pLAogICdldWlDb2xvclBpY2tlci5zd2F0Y2hBcmlhTGFiZWwnOiBmdW5jdGlvbiBldWlDb2xvclBpY2tlclN3YXRjaEFyaWFMYWJlbChfcmVmMikgewogICAgdmFyIHN3YXRjaCA9IF9yZWYyLnN3YXRjaDsKICAgIHJldHVybiBfaTE4bi5pMThuLnRyYW5zbGF0ZSgnY29yZS5ldWlDb2xvclBpY2tlci5zd2F0Y2hBcmlhTGFiZWwnLCB7CiAgICAgIGRlZmF1bHRNZXNzYWdlOiAnU2VsZWN0IHtzd2F0Y2h9IGFzIHRoZSBjb2xvcicsCiAgICAgIHZhbHVlczogewogICAgICAgIHN3YXRjaDogc3dhdGNoCiAgICAgIH0sCiAgICAgIGRlc2NyaXB0aW9uOiAnU2NyZWVuIHJlYWRlciB0ZXh0IHRvIGRlc2NyaWJlIHRoZSBhY3Rpb24gYW5kIGhleCB2YWx1ZSBvZiB0aGUgc2VsZWN0YWJsZSBvcHRpb24nCiAgICB9KTsKICB9LAogICdldWlDb2xvclN0b3BUaHVtYi5yZW1vdmVMYWJlbCc6IF9pMThuLmkxOG4udHJhbnNsYXRlKCdjb3JlLmV1aUNvbG9yU3RvcFRodW1iLnJlbW92ZUxhYmVsJywgewogICAgZGVmYXVsdE1lc3NhZ2U6ICdSZW1vdmUgdGhpcyBzdG9wJywKICAgIGRlc2NyaXB0aW9uOiAnTGFiZWwgYWNjb21wYW55aW5nIGEgYnV0dG9uIHdob3NlIGFjdGlvbiB3aWxsIHJlbW92ZSB0aGUgY29sb3Igc3RvcCcKICB9KSwKICAnZXVpQ29sb3JTdG9wVGh1bWIuc2NyZWVuUmVhZGVyQW5ub3VuY2VtZW50JzogX2kxOG4uaTE4bi50cmFuc2xhdGUoJ2NvcmUuZXVpQ29sb3JTdG9wVGh1bWIuc2NyZWVuUmVhZGVyQW5ub3VuY2VtZW50JywgewogICAgZGVmYXVsdE1lc3NhZ2U6ICdBIHBvcHVwIHdpdGggYSBjb2xvciBzdG9wIGVkaXQgZm9ybSBvcGVuZWQuIFRhYiBmb3J3YXJkIHRvIGN5Y2xlIHRocm91Z2ggZm9ybSBjb250cm9scyBvciBwcmVzcyBlc2NhcGUgdG8gY2xvc2UgdGhpcyBwb3B1cC4nLAogICAgZGVzY3JpcHRpb246ICdNZXNzYWdlIHdoZW4gdGhlIGNvbG9yIHBpY2tlciBwb3BvdmVyIGhhcyBvcGVuZWQgZm9yIGFuIGluZGl2aWR1YWwgY29sb3Igc3RvcCB0aHVtYi4nCiAgfSksCiAgJ2V1aUNvbG9yU3RvcHMuc2NyZWVuUmVhZGVyQW5ub3VuY2VtZW50JzogZnVuY3Rpb24gZXVpQ29sb3JTdG9wc1NjcmVlblJlYWRlckFubm91bmNlbWVudChfcmVmMykgewogICAgdmFyIGxhYmVsID0gX3JlZjMubGFiZWwsCiAgICAgICAgcmVhZE9ubHkgPSBfcmVmMy5yZWFkT25seSwKICAgICAgICBkaXNhYmxlZCA9IF9yZWYzLmRpc2FibGVkOwogICAgcmV0dXJuIF9pMThuLmkxOG4udHJhbnNsYXRlKCdjb3JlLmV1aUNvbG9yU3RvcHMuc2NyZWVuUmVhZGVyQW5ub3VuY2VtZW50JywgewogICAgICBkZWZhdWx0TWVzc2FnZTogJ3tsYWJlbH06IHtyZWFkT25seX0ge2Rpc2FibGVkfSBDb2xvciBzdG9wIHBpY2tlci4gRWFjaCBzdG9wIGNvbnNpc3RzIG9mIGEgbnVtYmVyIGFuZCBjb3JyZXNwb25kaW5nIGNvbG9yIHZhbHVlLiBVc2UgdGhlIERvd24gYW5kIFVwIGFycm93IGtleXMgdG8gc2VsZWN0IGluZGl2aWR1YWwgc3RvcHMuIFByZXNzIHRoZSBFbnRlciBrZXkgdG8gY3JlYXRlIGEgbmV3IHN0b3AuJywKICAgICAgdmFsdWVzOiB7CiAgICAgICAgbGFiZWw6IGxhYmVsLAogICAgICAgIHJlYWRPbmx5OiByZWFkT25seSwKICAgICAgICBkaXNhYmxlZDogZGlzYWJsZWQKICAgICAgfSwKICAgICAgZGVzY3JpcHRpb246ICdTY3JlZW4gcmVhZGVyIHRleHQgdG8gZGVzY3JpYmUgdGhlIGNvbXBvc2l0ZSBiZWhhdmlvciBvZiB0aGUgY29sb3Igc3RvcHMgY29tcG9uZW50LicKICAgIH0pOwogIH0sCiAgJ2V1aUNvbHVtblNlbGVjdG9yLmhpZGVBbGwnOiBfaTE4bi5pMThuLnRyYW5zbGF0ZSgnY29yZS5ldWlDb2x1bW5TZWxlY3Rvci5oaWRlQWxsJywgewogICAgZGVmYXVsdE1lc3NhZ2U6ICdIaWRlIGFsbCcKICB9KSwKICAnZXVpQ29sdW1uU2VsZWN0b3Iuc2VsZWN0QWxsJzogX2kxOG4uaTE4bi50cmFuc2xhdGUoJ2NvcmUuZXVpQ29sdW1uU2VsZWN0b3Iuc2VsZWN0QWxsJywgewogICAgZGVmYXVsdE1lc3NhZ2U6ICdTaG93IGFsbCcKICB9KSwKICAnZXVpQ29sdW1uU29ydGluZy5jbGVhckFsbCc6IF9pMThuLmkxOG4udHJhbnNsYXRlKCdjb3JlLmV1aUNvbHVtblNvcnRpbmcuY2xlYXJBbGwnLCB7CiAgICBkZWZhdWx0TWVzc2FnZTogJ0NsZWFyIHNvcnRpbmcnCiAgfSksCiAgJ2V1aUNvbHVtblNvcnRpbmcuZW1wdHlTb3J0aW5nJzogX2kxOG4uaTE4bi50cmFuc2xhdGUoJ2NvcmUuZXVpQ29sdW1uU29ydGluZy5lbXB0eVNvcnRpbmcnLCB7CiAgICBkZWZhdWx0TWVzc2FnZTogJ0N1cnJlbnRseSBubyBmaWVsZHMgYXJlIHNvcnRlZCcKICB9KSwKICAnZXVpQ29sdW1uU29ydGluZy5waWNrRmllbGRzJzogX2kxOG4uaTE4bi50cmFuc2xhdGUoJ2NvcmUuZXVpQ29sdW1uU29ydGluZy5waWNrRmllbGRzJywgewogICAgZGVmYXVsdE1lc3NhZ2U6ICdQaWNrIGZpZWxkcyB0byBzb3J0IGJ5JwogIH0pLAogICdldWlDb2x1bW5Tb3J0aW5nLnNvcnRGaWVsZEFyaWFMYWJlbCc6IF9pMThuLmkxOG4udHJhbnNsYXRlKCdjb3JlLmV1aUNvbHVtblNvcnRpbmcuc29ydEZpZWxkQXJpYUxhYmVsJywgewogICAgZGVmYXVsdE1lc3NhZ2U6ICdTb3J0IGJ5OicKICB9KSwKICAnZXVpQ29sdW1uU29ydGluZ0RyYWdnYWJsZS5hY3RpdmVTb3J0TGFiZWwnOiBfaTE4bi5pMThuLnRyYW5zbGF0ZSgnY29yZS5ldWlDb2x1bW5Tb3J0aW5nRHJhZ2dhYmxlLmFjdGl2ZVNvcnRMYWJlbCcsIHsKICAgIGRlZmF1bHRNZXNzYWdlOiAnaXMgc29ydGluZyB0aGlzIGRhdGEgZ3JpZCcKICB9KSwKICAnZXVpQ29sdW1uU29ydGluZ0RyYWdnYWJsZS5kZWZhdWx0U29ydEFzYyc6IF9pMThuLmkxOG4udHJhbnNsYXRlKCdjb3JlLmV1aUNvbHVtblNvcnRpbmdEcmFnZ2FibGUuZGVmYXVsdFNvcnRBc2MnLCB7CiAgICBkZWZhdWx0TWVzc2FnZTogJ0EtWicsCiAgICBkZXNjcmlwdGlvbjogJ0FzY2VuZGluZyBzb3J0IGxhYmVsJwogIH0pLAogICdldWlDb2x1bW5Tb3J0aW5nRHJhZ2dhYmxlLmRlZmF1bHRTb3J0RGVzYyc6IF9pMThuLmkxOG4udHJhbnNsYXRlKCdjb3JlLmV1aUNvbHVtblNvcnRpbmdEcmFnZ2FibGUuZGVmYXVsdFNvcnREZXNjJywgewogICAgZGVmYXVsdE1lc3NhZ2U6ICdaLUEnLAogICAgZGVzY3JpcHRpb246ICdEZXNjZW5kaW5nIHNvcnQgbGFiZWwnCiAgfSksCiAgJ2V1aUNvbHVtblNvcnRpbmdEcmFnZ2FibGUucmVtb3ZlU29ydExhYmVsJzogX2kxOG4uaTE4bi50cmFuc2xhdGUoJ2NvcmUuZXVpQ29sdW1uU29ydGluZ0RyYWdnYWJsZS5yZW1vdmVTb3J0TGFiZWwnLCB7CiAgICBkZWZhdWx0TWVzc2FnZTogJ1JlbW92ZSBmcm9tIGRhdGEgZ3JpZCBzb3J0OicKICB9KSwKICAnZXVpQ29sdW1uU29ydGluZ0RyYWdnYWJsZS50b2dnbGVMZWdlbmQnOiBfaTE4bi5pMThuLnRyYW5zbGF0ZSgnY29yZS5ldWlDb2x1bW5Tb3J0aW5nRHJhZ2dhYmxlLnRvZ2dsZUxlZ2VuZCcsIHsKICAgIGRlZmF1bHRNZXNzYWdlOiAnU2VsZWN0IHNvcnRpbmcgbWV0aG9kIGZvciBmaWVsZDonCiAgfSksCiAgJ2V1aUNvbWJvQm94T3B0aW9uc0xpc3QuYWxsT3B0aW9uc1NlbGVjdGVkJzogX2kxOG4uaTE4bi50cmFuc2xhdGUoJ2NvcmUuZXVpQ29tYm9Cb3hPcHRpb25zTGlzdC5hbGxPcHRpb25zU2VsZWN0ZWQnLCB7CiAgICBkZWZhdWx0TWVzc2FnZTogIllvdSd2ZSBzZWxlY3RlZCBhbGwgYXZhaWxhYmxlIG9wdGlvbnMiCiAgfSksCiAgJ2V1aUNvbWJvQm94T3B0aW9uc0xpc3QuYWxyZWFkeUFkZGVkJzogZnVuY3Rpb24gZXVpQ29tYm9Cb3hPcHRpb25zTGlzdEFscmVhZHlBZGRlZChfcmVmNCkgewogICAgdmFyIGxhYmVsID0gX3JlZjQubGFiZWw7CiAgICByZXR1cm4gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfcmVhY3QyLkZvcm1hdHRlZE1lc3NhZ2UsIHsKICAgICAgaWQ6ICJjb3JlLmV1aUNvbWJvQm94T3B0aW9uc0xpc3QuYWxyZWFkeUFkZGVkIiwKICAgICAgZGVmYXVsdE1lc3NhZ2U6ICJ7bGFiZWx9IGhhcyBhbHJlYWR5IGJlZW4gYWRkZWQiLAogICAgICB2YWx1ZXM6IHsKICAgICAgICBsYWJlbDogbGFiZWwKICAgICAgfQogICAgfSk7CiAgfSwKICAnZXVpQ29tYm9Cb3hPcHRpb25zTGlzdC5jcmVhdGVDdXN0b21PcHRpb24nOiBmdW5jdGlvbiBldWlDb21ib0JveE9wdGlvbnNMaXN0Q3JlYXRlQ3VzdG9tT3B0aW9uKF9yZWY1KSB7CiAgICB2YXIga2V5ID0gX3JlZjUua2V5LAogICAgICAgIHNlYXJjaFZhbHVlID0gX3JlZjUuc2VhcmNoVmFsdWU7CiAgICByZXR1cm4gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfcmVhY3QyLkZvcm1hdHRlZE1lc3NhZ2UsIHsKICAgICAgaWQ6ICJjb3JlLmV1aUNvbWJvQm94T3B0aW9uc0xpc3QuY3JlYXRlQ3VzdG9tT3B0aW9uIiwKICAgICAgZGVmYXVsdE1lc3NhZ2U6ICJIaXQge2tleX0gdG8gYWRkIHtzZWFyY2hWYWx1ZX0gYXMgYSBjdXN0b20gb3B0aW9uIiwKICAgICAgdmFsdWVzOiB7CiAgICAgICAga2V5OiBrZXksCiAgICAgICAgc2VhcmNoVmFsdWU6IHNlYXJjaFZhbHVlCiAgICAgIH0KICAgIH0pOwogIH0sCiAgJ2V1aUNvbWJvQm94T3B0aW9uc0xpc3QubG9hZGluZ09wdGlvbnMnOiBfaTE4bi5pMThuLnRyYW5zbGF0ZSgnY29yZS5ldWlDb21ib0JveE9wdGlvbnNMaXN0LmxvYWRpbmdPcHRpb25zJywgewogICAgZGVmYXVsdE1lc3NhZ2U6ICdMb2FkaW5nIG9wdGlvbnMnLAogICAgZGVzY3JpcHRpb246ICdQbGFjZWhvbGRlciBtZXNzYWdlIHdoaWxlIGRhdGEgaXMgYXN5bmNocm9ub3VzbHkgbG9hZGVkJwogIH0pLAogICdldWlDb21ib0JveE9wdGlvbnNMaXN0Lm5vQXZhaWxhYmxlT3B0aW9ucyc6IF9pMThuLmkxOG4udHJhbnNsYXRlKCdjb3JlLmV1aUNvbWJvQm94T3B0aW9uc0xpc3Qubm9BdmFpbGFibGVPcHRpb25zJywgewogICAgZGVmYXVsdE1lc3NhZ2U6ICJUaGVyZSBhcmVuJ3QgYW55IG9wdGlvbnMgYXZhaWxhYmxlIgogIH0pLAogICdldWlDb21ib0JveE9wdGlvbnNMaXN0Lm5vTWF0Y2hpbmdPcHRpb25zJzogZnVuY3Rpb24gZXVpQ29tYm9Cb3hPcHRpb25zTGlzdE5vTWF0Y2hpbmdPcHRpb25zKF9yZWY2KSB7CiAgICB2YXIgc2VhcmNoVmFsdWUgPSBfcmVmNi5zZWFyY2hWYWx1ZTsKICAgIHJldHVybiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9yZWFjdDIuRm9ybWF0dGVkTWVzc2FnZSwgewogICAgICBpZDogImNvcmUuZXVpQ29tYm9Cb3hPcHRpb25zTGlzdC5ub01hdGNoaW5nT3B0aW9ucyIsCiAgICAgIGRlZmF1bHRNZXNzYWdlOiAie3NlYXJjaFZhbHVlfSBkb2Vzbid0IG1hdGNoIGFueSBvcHRpb25zIiwKICAgICAgdmFsdWVzOiB7CiAgICAgICAgc2VhcmNoVmFsdWU6IHNlYXJjaFZhbHVlCiAgICAgIH0KICAgIH0pOwogIH0sCiAgJ2V1aUNvbWJvQm94UGlsbC5yZW1vdmVTZWxlY3Rpb24nOiBmdW5jdGlvbiBldWlDb21ib0JveFBpbGxSZW1vdmVTZWxlY3Rpb24oX3JlZjcpIHsKICAgIHZhciBjaGlsZHJlbiA9IF9yZWY3LmNoaWxkcmVuOwogICAgcmV0dXJuIF9pMThuLmkxOG4udHJhbnNsYXRlKCdjb3JlLmV1aUNvbWJvQm94UGlsbC5yZW1vdmVTZWxlY3Rpb24nLCB7CiAgICAgIGRlZmF1bHRNZXNzYWdlOiAnUmVtb3ZlIHtjaGlsZHJlbn0gZnJvbSBzZWxlY3Rpb24gaW4gdGhpcyBncm91cCcsCiAgICAgIHZhbHVlczogewogICAgICAgIGNoaWxkcmVuOiBjaGlsZHJlbgogICAgICB9LAogICAgICBkZXNjcmlwdGlvbjogJ0FSSUEgbGFiZWwsIGBjaGlsZHJlbmAgaXMgdGhlIGh1bWFuLWZyaWVuZGx5IHZhbHVlIG9mIGFuIG9wdGlvbicKICAgIH0pOwogIH0sCiAgJ2V1aUNvbW1vbmx5VXNlZFRpbWVSYW5nZXMubGVnZW5kJzogX2kxOG4uaTE4bi50cmFuc2xhdGUoJ2NvcmUuZXVpQ29tbW9ubHlVc2VkVGltZVJhbmdlcy5sZWdlbmQnLCB7CiAgICBkZWZhdWx0TWVzc2FnZTogJ0NvbW1vbmx5IHVzZWQnCiAgfSksCiAgJ2V1aURhdGFHcmlkLnNjcmVlblJlYWRlck5vdGljZSc6IF9pMThuLmkxOG4udHJhbnNsYXRlKCdjb3JlLmV1aURhdGFHcmlkLnNjcmVlblJlYWRlck5vdGljZScsIHsKICAgIGRlZmF1bHRNZXNzYWdlOiAnQ2VsbCBjb250YWlucyBpbnRlcmFjdGl2ZSBjb250ZW50LicKICB9KSwKICAnZXVpRGF0YUdyaWRDZWxsLmV4cGFuZEJ1dHRvblRpdGxlJzogX2kxOG4uaTE4bi50cmFuc2xhdGUoJ2NvcmUuZXVpRGF0YUdyaWRDZWxsLmV4cGFuZEJ1dHRvblRpdGxlJywgewogICAgZGVmYXVsdE1lc3NhZ2U6ICdDbGljayBvciBoaXQgZW50ZXIgdG8gaW50ZXJhY3Qgd2l0aCBjZWxsIGNvbnRlbnQnCiAgfSksCiAgJ2V1aURhdGFHcmlkU2NoZW1hLmJvb2xlYW5Tb3J0VGV4dEFzYyc6IF9pMThuLmkxOG4udHJhbnNsYXRlKCdjb3JlLmV1aURhdGFHcmlkU2NoZW1hLmJvb2xlYW5Tb3J0VGV4dEFzYycsIHsKICAgIGRlZmF1bHRNZXNzYWdlOiAnVHJ1ZS1GYWxzZScsCiAgICBkZXNjcmlwdGlvbjogJ0FzY2VuZGluZyBib29sZWFuIGxhYmVsJwogIH0pLAogICdldWlEYXRhR3JpZFNjaGVtYS5ib29sZWFuU29ydFRleHREZXNjJzogX2kxOG4uaTE4bi50cmFuc2xhdGUoJ2NvcmUuZXVpRGF0YUdyaWRTY2hlbWEuYm9vbGVhblNvcnRUZXh0RGVzYycsIHsKICAgIGRlZmF1bHRNZXNzYWdlOiAnRmFsc2UtVHJ1ZScsCiAgICBkZXNjcmlwdGlvbjogJ0Rlc2NlbmRpbmcgYm9vbGVhbiBsYWJlbCcKICB9KSwKICAnZXVpRGF0YUdyaWRTY2hlbWEuY3VycmVuY3lTb3J0VGV4dEFzYyc6IF9pMThuLmkxOG4udHJhbnNsYXRlKCdjb3JlLmV1aURhdGFHcmlkU2NoZW1hLmN1cnJlbmN5U29ydFRleHRBc2MnLCB7CiAgICBkZWZhdWx0TWVzc2FnZTogJ0xvdy1IaWdoJywKICAgIGRlc2NyaXB0aW9uOiAnQXNjZW5kaW5nIGN1cnJlbmN5IGxhYmVsJwogIH0pLAogICdldWlEYXRhR3JpZFNjaGVtYS5jdXJyZW5jeVNvcnRUZXh0RGVzYyc6IF9pMThuLmkxOG4udHJhbnNsYXRlKCdjb3JlLmV1aURhdGFHcmlkU2NoZW1hLmN1cnJlbmN5U29ydFRleHREZXNjJywgewogICAgZGVmYXVsdE1lc3NhZ2U6ICdIaWdoLUxvdycsCiAgICBkZXNjcmlwdGlvbjogJ0Rlc2NlbmRpbmcgY3VycmVuY3kgbGFiZWwnCiAgfSksCiAgJ2V1aURhdGFHcmlkU2NoZW1hLmRhdGVTb3J0VGV4dEFzYyc6IF9pMThuLmkxOG4udHJhbnNsYXRlKCdjb3JlLmV1aURhdGFHcmlkU2NoZW1hLmRhdGVTb3J0VGV4dEFzYycsIHsKICAgIGRlZmF1bHRNZXNzYWdlOiAnTmV3LU9sZCcsCiAgICBkZXNjcmlwdGlvbjogJ0FzY2VuZGluZyBkYXRlIGxhYmVsJwogIH0pLAogICdldWlEYXRhR3JpZFNjaGVtYS5kYXRlU29ydFRleHREZXNjJzogX2kxOG4uaTE4bi50cmFuc2xhdGUoJ2NvcmUuZXVpRGF0YUdyaWRTY2hlbWEuZGF0ZVNvcnRUZXh0RGVzYycsIHsKICAgIGRlZmF1bHRNZXNzYWdlOiAnT2xkLU5ldycsCiAgICBkZXNjcmlwdGlvbjogJ0Rlc2NlbmRpbmcgZGF0ZSBsYWJlbCcKICB9KSwKICAnZXVpRGF0YUdyaWRTY2hlbWEubnVtYmVyU29ydFRleHRBc2MnOiBfaTE4bi5pMThuLnRyYW5zbGF0ZSgnY29yZS5ldWlEYXRhR3JpZFNjaGVtYS5udW1iZXJTb3J0VGV4dEFzYycsIHsKICAgIGRlZmF1bHRNZXNzYWdlOiAnTG93LUhpZ2gnLAogICAgZGVzY3JpcHRpb246ICdBc2NlbmRpbmcgbnVtYmVyIGxhYmVsJwogIH0pLAogICdldWlEYXRhR3JpZFNjaGVtYS5udW1iZXJTb3J0VGV4dERlc2MnOiBfaTE4bi5pMThuLnRyYW5zbGF0ZSgnY29yZS5ldWlEYXRhR3JpZFNjaGVtYS5udW1iZXJTb3J0VGV4dERlc2MnLCB7CiAgICBkZWZhdWx0TWVzc2FnZTogJ0hpZ2gtTG93JywKICAgIGRlc2NyaXB0aW9uOiAnRGVzY2VuZGluZyBudW1iZXIgbGFiZWwnCiAgfSksCiAgJ2V1aURhdGFHcmlkU2NoZW1hLmpzb25Tb3J0VGV4dEFzYyc6IF9pMThuLmkxOG4udHJhbnNsYXRlKCdjb3JlLmV1aURhdGFHcmlkU2NoZW1hLmpzb25Tb3J0VGV4dEFzYycsIHsKICAgIGRlZmF1bHRNZXNzYWdlOiAnU21hbGwtTGFyZ2UnLAogICAgZGVzY3JpcHRpb246ICdBc2NlbmRpbmcgc2l6ZSBsYWJlbCcKICB9KSwKICAnZXVpRGF0YUdyaWRTY2hlbWEuanNvblNvcnRUZXh0RGVzYyc6IF9pMThuLmkxOG4udHJhbnNsYXRlKCdjb3JlLmV1aURhdGFHcmlkU2NoZW1hLmpzb25Tb3J0VGV4dERlc2MnLCB7CiAgICBkZWZhdWx0TWVzc2FnZTogJ0xhcmdlLVNtYWxsJywKICAgIGRlc2NyaXB0aW9uOiAnRGVzY2VuZGluZyBzaXplIGxhYmVsJwogIH0pLAogICdldWlGaWx0ZXJCdXR0b24uZmlsdGVyQmFkZ2UnOiBmdW5jdGlvbiBldWlGaWx0ZXJCdXR0b25GaWx0ZXJCYWRnZShfcmVmOCkgewogICAgdmFyIGNvdW50ID0gX3JlZjguY291bnQsCiAgICAgICAgaGFzQWN0aXZlRmlsdGVycyA9IF9yZWY4Lmhhc0FjdGl2ZUZpbHRlcnM7CiAgICByZXR1cm4gX2kxOG4uaTE4bi50cmFuc2xhdGUoJ2NvcmUuZXVpRmlsdGVyQnV0dG9uLmZpbHRlckJhZGdlJywgewogICAgICBkZWZhdWx0TWVzc2FnZTogJyR7Y291bnR9ICR7ZmlsdGVyQ291bnRMYWJlbH0gZmlsdGVycycsCiAgICAgIHZhbHVlczogewogICAgICAgIGNvdW50OiBjb3VudCwKICAgICAgICBmaWx0ZXJDb3VudExhYmVsOiBoYXNBY3RpdmVGaWx0ZXJzID8gJ2FjdGl2ZScgOiAnYXZhaWxhYmxlJwogICAgICB9CiAgICB9KTsKICB9LAogICdldWlGb3JtLmFkZHJlc3NGb3JtRXJyb3JzJzogX2kxOG4uaTE4bi50cmFuc2xhdGUoJ2NvcmUuZXVpRm9ybS5hZGRyZXNzRm9ybUVycm9ycycsIHsKICAgIGRlZmF1bHRNZXNzYWdlOiAnUGxlYXNlIGFkZHJlc3MgdGhlIGVycm9ycyBpbiB5b3VyIGZvcm0uJwogIH0pLAogICdldWlGb3JtQ29udHJvbExheW91dENsZWFyQnV0dG9uLmxhYmVsJzogX2kxOG4uaTE4bi50cmFuc2xhdGUoJ2NvcmUuZXVpRm9ybUNvbnRyb2xMYXlvdXRDbGVhckJ1dHRvbi5sYWJlbCcsIHsKICAgIGRlZmF1bHRNZXNzYWdlOiAnQ2xlYXIgaW5wdXQnLAogICAgZGVzY3JpcHRpb246ICdBUklBIGxhYmVsIG9uIGEgYnV0dG9uIHRoYXQgcmVtb3ZlcyBhbnkgZW50cnkgaW4gYSBmb3JtIGZpZWxkJwogIH0pLAogICdldWlIZWFkZXJBbGVydC5kaXNtaXNzJzogX2kxOG4uaTE4bi50cmFuc2xhdGUoJ2NvcmUuZXVpSGVhZGVyQWxlcnQuZGlzbWlzcycsIHsKICAgIGRlZmF1bHRNZXNzYWdlOiAnRGlzbWlzcycsCiAgICBkZXNjcmlwdGlvbjogJ0FSSUEgbGFiZWwgb24gYSBidXR0b24gdGhhdCBkaXNtaXNzZXMvcmVtb3ZlcyBhIG5vdGlmaWNhdGlvbicKICB9KSwKICAnZXVpSGVhZGVyTGlua3MuYXBwTmF2aWdhdGlvbic6IF9pMThuLmkxOG4udHJhbnNsYXRlKCdjb3JlLmV1aUhlYWRlckxpbmtzLmFwcE5hdmlnYXRpb24nLCB7CiAgICBkZWZhdWx0TWVzc2FnZTogJ0FwcCBuYXZpZ2F0aW9uJywKICAgIGRlc2NyaXB0aW9uOiAnQVJJQSBsYWJlbCBvbiBhIGBuYXZgIGVsZW1lbnQnCiAgfSksCiAgJ2V1aUhlYWRlckxpbmtzLm9wZW5OYXZpZ2F0aW9uTWVudSc6IF9pMThuLmkxOG4udHJhbnNsYXRlKCdjb3JlLmV1aUhlYWRlckxpbmtzLm9wZW5OYXZpZ2F0aW9uTWVudScsIHsKICAgIGRlZmF1bHRNZXNzYWdlOiAnT3BlbiBuYXZpZ2F0aW9uIG1lbnUnCiAgfSksCiAgJ2V1aUh1ZS5sYWJlbCc6IF9pMThuLmkxOG4udHJhbnNsYXRlKCdjb3JlLmV1aUh1ZS5sYWJlbCcsIHsKICAgIGRlZmF1bHRNZXNzYWdlOiAnU2VsZWN0IHRoZSBIU1YgY29sb3IgbW9kZSAiaHVlIiB2YWx1ZScKICB9KSwKICAnZXVpSW1hZ2UuY2xvc2VJbWFnZSc6IGZ1bmN0aW9uIGV1aUltYWdlQ2xvc2VJbWFnZShfcmVmOSkgewogICAgdmFyIGFsdCA9IF9yZWY5LmFsdDsKICAgIHJldHVybiBfaTE4bi5pMThuLnRyYW5zbGF0ZSgnY29yZS5ldWlJbWFnZS5jbG9zZUltYWdlJywgewogICAgICBkZWZhdWx0TWVzc2FnZTogJ0Nsb3NlIGZ1bGwgc2NyZWVuIHthbHR9IGltYWdlJywKICAgICAgdmFsdWVzOiB7CiAgICAgICAgYWx0OiBhbHQKICAgICAgfQogICAgfSk7CiAgfSwKICAnZXVpSW1hZ2Uub3BlbkltYWdlJzogZnVuY3Rpb24gZXVpSW1hZ2VPcGVuSW1hZ2UoX3JlZjEwKSB7CiAgICB2YXIgYWx0ID0gX3JlZjEwLmFsdDsKICAgIHJldHVybiBfaTE4bi5pMThuLnRyYW5zbGF0ZSgnY29yZS5ldWlJbWFnZS5vcGVuSW1hZ2UnLCB7CiAgICAgIGRlZmF1bHRNZXNzYWdlOiAnT3BlbiBmdWxsIHNjcmVlbiB7YWx0fSBpbWFnZScsCiAgICAgIHZhbHVlczogewogICAgICAgIGFsdDogYWx0CiAgICAgIH0KICAgIH0pOwogIH0sCiAgJ2V1aUxpbmsuZXh0ZXJuYWwuYXJpYUxhYmVsJzogX2kxOG4uaTE4bi50cmFuc2xhdGUoJ2NvcmUuZXVpTGluay5leHRlcm5hbC5hcmlhTGFiZWwnLCB7CiAgICBkZWZhdWx0TWVzc2FnZTogJ0V4dGVybmFsIGxpbmsnCiAgfSksCiAgJ2V1aU1vZGFsLmNsb3NlTW9kYWwnOiBfaTE4bi5pMThuLnRyYW5zbGF0ZSgnY29yZS5ldWlNb2RhbC5jbG9zZU1vZGFsJywgewogICAgZGVmYXVsdE1lc3NhZ2U6ICdDbG9zZXMgdGhpcyBtb2RhbCB3aW5kb3cnCiAgfSksCiAgJ2V1aVBhZ2luYXRpb24uanVtcFRvTGFzdFBhZ2UnOiBmdW5jdGlvbiBldWlQYWdpbmF0aW9uSnVtcFRvTGFzdFBhZ2UoX3JlZjExKSB7CiAgICB2YXIgcGFnZUNvdW50ID0gX3JlZjExLnBhZ2VDb3VudDsKICAgIHJldHVybiBfaTE4bi5pMThuLnRyYW5zbGF0ZSgnY29yZS5ldWlQYWdpbmF0aW9uLmp1bXBUb0xhc3RQYWdlJywgewogICAgICBkZWZhdWx0TWVzc2FnZTogJ0p1bXAgdG8gdGhlIGxhc3QgcGFnZSwgbnVtYmVyIHtwYWdlQ291bnR9JywKICAgICAgdmFsdWVzOiB7CiAgICAgICAgcGFnZUNvdW50OiBwYWdlQ291bnQKICAgICAgfQogICAgfSk7CiAgfSwKICAnZXVpUGFnaW5hdGlvbi5uZXh0UGFnZSc6IF9pMThuLmkxOG4udHJhbnNsYXRlKCdjb3JlLmV1aVBhZ2luYXRpb24ubmV4dFBhZ2UnLCB7CiAgICBkZWZhdWx0TWVzc2FnZTogJ05leHQgcGFnZScKICB9KSwKICAnZXVpUGFnaW5hdGlvbi5wYWdlT2ZUb3RhbCc6IGZ1bmN0aW9uIGV1aVBhZ2luYXRpb25QYWdlT2ZUb3RhbChfcmVmMTIpIHsKICAgIHZhciBwYWdlID0gX3JlZjEyLnBhZ2UsCiAgICAgICAgdG90YWwgPSBfcmVmMTIudG90YWw7CiAgICByZXR1cm4gX2kxOG4uaTE4bi50cmFuc2xhdGUoJ2NvcmUuZXVpUGFnaW5hdGlvbi5wYWdlT2ZUb3RhbCcsIHsKICAgICAgZGVmYXVsdE1lc3NhZ2U6ICdQYWdlIHtwYWdlfSBvZiB7dG90YWx9JywKICAgICAgdmFsdWVzOiB7CiAgICAgICAgcGFnZTogcGFnZSwKICAgICAgICB0b3RhbDogdG90YWwKICAgICAgfQogICAgfSk7CiAgfSwKICAnZXVpUGFnaW5hdGlvbi5wcmV2aW91c1BhZ2UnOiBfaTE4bi5pMThuLnRyYW5zbGF0ZSgnY29yZS5ldWlQYWdpbmF0aW9uLnByZXZpb3VzUGFnZScsIHsKICAgIGRlZmF1bHRNZXNzYWdlOiAnUHJldmlvdXMgcGFnZScKICB9KSwKICAnZXVpUG9wb3Zlci5zY3JlZW5SZWFkZXJBbm5vdW5jZW1lbnQnOiBfaTE4bi5pMThuLnRyYW5zbGF0ZSgnY29yZS5ldWlQb3BvdmVyLnNjcmVlblJlYWRlckFubm91bmNlbWVudCcsIHsKICAgIGRlZmF1bHRNZXNzYWdlOiAnWW91IGFyZSBpbiBhIGRpYWxvZy4gVG8gY2xvc2UgdGhpcyBkaWFsb2csIGhpdCBlc2NhcGUuJwogIH0pLAogICdldWlRdWlja1NlbGVjdC5hcHBseUJ1dHRvbic6IF9pMThuLmkxOG4udHJhbnNsYXRlKCdjb3JlLmV1aVF1aWNrU2VsZWN0LmFwcGx5QnV0dG9uJywgewogICAgZGVmYXVsdE1lc3NhZ2U6ICdBcHBseScKICB9KSwKICAnZXVpUXVpY2tTZWxlY3QuZnVsbERlc2NyaXB0aW9uJzogZnVuY3Rpb24gZXVpUXVpY2tTZWxlY3RGdWxsRGVzY3JpcHRpb24oX3JlZjEzKSB7CiAgICB2YXIgdGltZVRlbnNlID0gX3JlZjEzLnRpbWVUZW5zZSwKICAgICAgICB0aW1lVmFsdWUgPSBfcmVmMTMudGltZVZhbHVlLAogICAgICAgIHRpbWVVbml0ID0gX3JlZjEzLnRpbWVVbml0OwogICAgcmV0dXJuIF9pMThuLmkxOG4udHJhbnNsYXRlKCdjb3JlLmV1aVF1aWNrU2VsZWN0LmZ1bGxEZXNjcmlwdGlvbicsIHsKICAgICAgZGVmYXVsdE1lc3NhZ2U6ICdDdXJyZW50bHkgc2V0IHRvIHt0aW1lVGVuc2V9IHt0aW1lVmFsdWV9IHt0aW1lVW5pdH0uJywKICAgICAgdmFsdWVzOiB7CiAgICAgICAgdGltZVRlbnNlOiB0aW1lVGVuc2UsCiAgICAgICAgdGltZVZhbHVlOiB0aW1lVmFsdWUsCiAgICAgICAgdGltZVVuaXQ6IHRpbWVVbml0CiAgICAgIH0KICAgIH0pOwogIH0sCiAgJ2V1aVF1aWNrU2VsZWN0LmxlZ2VuZFRleHQnOiBfaTE4bi5pMThuLnRyYW5zbGF0ZSgnY29yZS5ldWlRdWlja1NlbGVjdC5sZWdlbmRUZXh0JywgewogICAgZGVmYXVsdE1lc3NhZ2U6ICdRdWljayBzZWxlY3QgYSB0aW1lIHJhbmdlJwogIH0pLAogICdldWlRdWlja1NlbGVjdC5uZXh0TGFiZWwnOiBfaTE4bi5pMThuLnRyYW5zbGF0ZSgnY29yZS5ldWlRdWlja1NlbGVjdC5uZXh0TGFiZWwnLCB7CiAgICBkZWZhdWx0TWVzc2FnZTogJ05leHQgdGltZSB3aW5kb3cnCiAgfSksCiAgJ2V1aVF1aWNrU2VsZWN0LnByZXZpb3VzTGFiZWwnOiBfaTE4bi5pMThuLnRyYW5zbGF0ZSgnY29yZS5ldWlRdWlja1NlbGVjdC5wcmV2aW91c0xhYmVsJywgewogICAgZGVmYXVsdE1lc3NhZ2U6ICdQcmV2aW91cyB0aW1lIHdpbmRvdycKICB9KSwKICAnZXVpUXVpY2tTZWxlY3QucXVpY2tTZWxlY3RUaXRsZSc6IF9pMThuLmkxOG4udHJhbnNsYXRlKCdjb3JlLmV1aVF1aWNrU2VsZWN0LnF1aWNrU2VsZWN0VGl0bGUnLCB7CiAgICBkZWZhdWx0TWVzc2FnZTogJ1F1aWNrIHNlbGVjdCcKICB9KSwKICAnZXVpUXVpY2tTZWxlY3QudGVuc2VMYWJlbCc6IF9pMThuLmkxOG4udHJhbnNsYXRlKCdjb3JlLmV1aVF1aWNrU2VsZWN0LnRlbnNlTGFiZWwnLCB7CiAgICBkZWZhdWx0TWVzc2FnZTogJ1RpbWUgdGVuc2UnCiAgfSksCiAgJ2V1aVF1aWNrU2VsZWN0LnVuaXRMYWJlbCc6IF9pMThuLmkxOG4udHJhbnNsYXRlKCdjb3JlLmV1aVF1aWNrU2VsZWN0LnVuaXRMYWJlbCcsIHsKICAgIGRlZmF1bHRNZXNzYWdlOiAnVGltZSB1bml0JwogIH0pLAogICdldWlRdWlja1NlbGVjdC52YWx1ZUxhYmVsJzogX2kxOG4uaTE4bi50cmFuc2xhdGUoJ2NvcmUuZXVpUXVpY2tTZWxlY3QudmFsdWVMYWJlbCcsIHsKICAgIGRlZmF1bHRNZXNzYWdlOiAnVGltZSB2YWx1ZScKICB9KSwKICAnZXVpUmVmcmVzaEludGVydmFsLmZ1bGxEZXNjcmlwdGlvbic6IGZ1bmN0aW9uIGV1aVJlZnJlc2hJbnRlcnZhbEZ1bGxEZXNjcmlwdGlvbihfcmVmMTQpIHsKICAgIHZhciBvcHRpb25WYWx1ZSA9IF9yZWYxNC5vcHRpb25WYWx1ZSwKICAgICAgICBvcHRpb25UZXh0ID0gX3JlZjE0Lm9wdGlvblRleHQ7CiAgICByZXR1cm4gX2kxOG4uaTE4bi50cmFuc2xhdGUoJ2NvcmUuZXVpUmVmcmVzaEludGVydmFsLmZ1bGxEZXNjcmlwdGlvbicsIHsKICAgICAgZGVmYXVsdE1lc3NhZ2U6ICdDdXJyZW50bHkgc2V0IHRvIHtvcHRpb25WYWx1ZX0ge29wdGlvblRleHR9LicsCiAgICAgIHZhbHVlczogewogICAgICAgIG9wdGlvblZhbHVlOiBvcHRpb25WYWx1ZSwKICAgICAgICBvcHRpb25UZXh0OiBvcHRpb25UZXh0CiAgICAgIH0KICAgIH0pOwogIH0sCiAgJ2V1aVJlZnJlc2hJbnRlcnZhbC5sZWdlbmQnOiBfaTE4bi5pMThuLnRyYW5zbGF0ZSgnY29yZS5ldWlSZWZyZXNoSW50ZXJ2YWwubGVnZW5kJywgewogICAgZGVmYXVsdE1lc3NhZ2U6ICdSZWZyZXNoIGV2ZXJ5JwogIH0pLAogICdldWlSZWZyZXNoSW50ZXJ2YWwuc3RhcnQnOiBfaTE4bi5pMThuLnRyYW5zbGF0ZSgnY29yZS5ldWlSZWZyZXNoSW50ZXJ2YWwuc3RhcnQnLCB7CiAgICBkZWZhdWx0TWVzc2FnZTogJ1N0YXJ0JwogIH0pLAogICdldWlSZWZyZXNoSW50ZXJ2YWwuc3RvcCc6IF9pMThuLmkxOG4udHJhbnNsYXRlKCdjb3JlLmV1aVJlZnJlc2hJbnRlcnZhbC5zdG9wJywgewogICAgZGVmYXVsdE1lc3NhZ2U6ICdTdG9wJwogIH0pLAogICdldWlSZWxhdGl2ZVRhYi5mdWxsRGVzY3JpcHRpb24nOiBmdW5jdGlvbiBldWlSZWxhdGl2ZVRhYkZ1bGxEZXNjcmlwdGlvbihfcmVmMTUpIHsKICAgIHZhciB1bml0ID0gX3JlZjE1LnVuaXQ7CiAgICByZXR1cm4gX2kxOG4uaTE4bi50cmFuc2xhdGUoJ2NvcmUuZXVpUmVsYXRpdmVUYWIuZnVsbERlc2NyaXB0aW9uJywgewogICAgICBkZWZhdWx0TWVzc2FnZTogJ1RoZSB1bml0IGlzIGNoYW5nZWFibGUuIEN1cnJlbnRseSBzZXQgdG8ge3VuaXR9LicsCiAgICAgIHZhbHVlczogewogICAgICAgIHVuaXQ6IHVuaXQKICAgICAgfQogICAgfSk7CiAgfSwKICAnZXVpUmVsYXRpdmVUYWIucmVsYXRpdmVEYXRlJzogZnVuY3Rpb24gZXVpUmVsYXRpdmVUYWJSZWxhdGl2ZURhdGUoX3JlZjE2KSB7CiAgICB2YXIgcG9zaXRpb24gPSBfcmVmMTYucG9zaXRpb247CiAgICByZXR1cm4gX2kxOG4uaTE4bi50cmFuc2xhdGUoJ2NvcmUuZXVpUmVsYXRpdmVUYWIucmVsYXRpdmVEYXRlJywgewogICAgICBkZWZhdWx0TWVzc2FnZTogJ3twb3NpdGlvbn0gZGF0ZScsCiAgICAgIHZhbHVlczogewogICAgICAgIHBvc2l0aW9uOiBwb3NpdGlvbgogICAgICB9CiAgICB9KTsKICB9LAogICdldWlSZWxhdGl2ZVRhYi5yb3VuZGluZ0xhYmVsJzogZnVuY3Rpb24gZXVpUmVsYXRpdmVUYWJSb3VuZGluZ0xhYmVsKF9yZWYxNykgewogICAgdmFyIHVuaXQgPSBfcmVmMTcudW5pdDsKICAgIHJldHVybiBfaTE4bi5pMThuLnRyYW5zbGF0ZSgnY29yZS5ldWlSZWxhdGl2ZVRhYi5yb3VuZGluZ0xhYmVsJywgewogICAgICBkZWZhdWx0TWVzc2FnZTogJ1JvdW5kIHRvIHRoZSB7dW5pdH0nLAogICAgICB2YWx1ZXM6IHsKICAgICAgICB1bml0OiB1bml0CiAgICAgIH0KICAgIH0pOwogIH0sCiAgJ2V1aVJlbGF0aXZlVGFiLnVuaXRJbnB1dExhYmVsJzogX2kxOG4uaTE4bi50cmFuc2xhdGUoJ2NvcmUuZXVpUmVsYXRpdmVUYWIudW5pdElucHV0TGFiZWwnLCB7CiAgICBkZWZhdWx0TWVzc2FnZTogJ1JlbGF0aXZlIHRpbWUgc3BhbicKICB9KSwKICAnZXVpU2F0dXJhdGlvbi5yb2xlRGVzY3JpcHRpb24nOiBfaTE4bi5pMThuLnRyYW5zbGF0ZSgnY29yZS5ldWlTYXR1cmF0aW9uLnJvbGVEZXNjcmlwdGlvbicsIHsKICAgIGRlZmF1bHRNZXNzYWdlOiAnSFNWIGNvbG9yIG1vZGUgc2F0dXJhdGlvbiBhbmQgdmFsdWUgc2VsZWN0aW9uJwogIH0pLAogICdldWlTYXR1cmF0aW9uLnNjcmVlblJlYWRlckFubm91bmNlbWVudCc6IF9pMThuLmkxOG4udHJhbnNsYXRlKCdjb3JlLmV1aVNhdHVyYXRpb24uc2NyZWVuUmVhZGVyQW5ub3VuY2VtZW50JywgewogICAgZGVmYXVsdE1lc3NhZ2U6ICdVc2UgdGhlIGFycm93IGtleXMgdG8gbmF2aWdhdGUgdGhlIHNxdWFyZSBjb2xvciBncmFkaWVudC4gVGhlIGNvb3JkaW5hdGVzIHJlc3VsdGluZyBmcm9tIGVhY2gga2V5IHByZXNzIHdpbGwgYmUgdXNlZCB0byBjYWxjdWxhdGUgSFNWIGNvbG9yIG1vZGUgInNhdHVyYXRpb24iIGFuZCAidmFsdWUiIG51bWJlcnMsIGluIHRoZSByYW5nZSBvZiAwIHRvIDEuIExlZnQgYW5kIHJpZ2h0IGRlY3JlYXNlIGFuZCBpbmNyZWFzZSAocmVzcGVjdGl2ZWx5KSB0aGUgInNhdHVyYXRpb24iIHZhbHVlLiBVcCBhbmQgZG93biBkZWNyZWFzZSBhbmQgaW5jcmVhc2UgKHJlc3BlY3RpdmVseSkgdGhlICJ2YWx1ZSIgdmFsdWUuJwogIH0pLAogICdldWlTZWxlY3RhYmxlLmxvYWRpbmdPcHRpb25zJzogX2kxOG4uaTE4bi50cmFuc2xhdGUoJ2NvcmUuZXVpU2VsZWN0YWJsZS5sb2FkaW5nT3B0aW9ucycsIHsKICAgIGRlZmF1bHRNZXNzYWdlOiAnTG9hZGluZyBvcHRpb25zJywKICAgIGRlc2NyaXB0aW9uOiAnUGxhY2Vob2xkZXIgbWVzc2FnZSB3aGlsZSBkYXRhIGlzIGFzeW5jaHJvbm91c2x5IGxvYWRlZCcKICB9KSwKICAnZXVpU2VsZWN0YWJsZS5ub0F2YWlsYWJsZU9wdGlvbnMnOiBfaTE4bi5pMThuLnRyYW5zbGF0ZSgnY29yZS5ldWlTZWxlY3RhYmxlLm5vQXZhaWxhYmxlT3B0aW9ucycsIHsKICAgIGRlZmF1bHRNZXNzYWdlOiAiVGhlcmUgYXJlbid0IGFueSBvcHRpb25zIGF2YWlsYWJsZSIKICB9KSwKICAnZXVpU2VsZWN0YWJsZS5ub01hdGNoaW5nT3B0aW9ucyc6IGZ1bmN0aW9uIGV1aVNlbGVjdGFibGVOb01hdGNoaW5nT3B0aW9ucyhfcmVmMTgpIHsKICAgIHZhciBzZWFyY2hWYWx1ZSA9IF9yZWYxOC5zZWFyY2hWYWx1ZTsKICAgIHJldHVybiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9yZWFjdDIuRm9ybWF0dGVkTWVzc2FnZSwgewogICAgICBpZDogImNvcmUuZXVpU2VsZWN0YWJsZS5ub01hdGNoaW5nT3B0aW9ucyIsCiAgICAgIGRlZmF1bHRNZXNzYWdlOiAie3NlYXJjaFZhbHVlfSBkb2Vzbid0IG1hdGNoIGFueSBvcHRpb25zIiwKICAgICAgdmFsdWVzOiB7CiAgICAgICAgc2VhcmNoVmFsdWU6IHNlYXJjaFZhbHVlCiAgICAgIH0KICAgIH0pOwogIH0sCiAgJ2V1aVN0YXQubG9hZGluZ1RleHQnOiBfaTE4bi5pMThuLnRyYW5zbGF0ZSgnY29yZS5ldWlTdGF0LmxvYWRpbmdUZXh0JywgewogICAgZGVmYXVsdE1lc3NhZ2U6ICdTdGF0aXN0aWMgaXMgbG9hZGluZycKICB9KSwKICAnZXVpU3RlcC5hcmlhTGFiZWwnOiBmdW5jdGlvbiBldWlTdGVwQXJpYUxhYmVsKF9yZWYxOSkgewogICAgdmFyIHN0YXR1cyA9IF9yZWYxOS5zdGF0dXM7CiAgICByZXR1cm4gX2kxOG4uaTE4bi50cmFuc2xhdGUoJ2NvcmUuZXVpU3RlcC5hcmlhTGFiZWwnLCB7CiAgICAgIGRlZmF1bHRNZXNzYWdlOiAne3N0ZXBTdGF0dXN9JywKICAgICAgdmFsdWVzOiB7CiAgICAgICAgc3RlcFN0YXR1czogc3RhdHVzID09PSAnaW5jb21wbGV0ZScgPyAnSW5jb21wbGV0ZSBTdGVwJyA6ICdTdGVwJwogICAgICB9CiAgICB9KTsKICB9LAogICdldWlTdGVwSG9yaXpvbnRhbC5idXR0b25UaXRsZSc6IGZ1bmN0aW9uIGV1aVN0ZXBIb3Jpem9udGFsQnV0dG9uVGl0bGUoX3JlZjIwKSB7CiAgICB2YXIgc3RlcCA9IF9yZWYyMC5zdGVwLAogICAgICAgIHRpdGxlID0gX3JlZjIwLnRpdGxlLAogICAgICAgIGRpc2FibGVkID0gX3JlZjIwLmRpc2FibGVkLAogICAgICAgIGlzQ29tcGxldGUgPSBfcmVmMjAuaXNDb21wbGV0ZTsKICAgIHJldHVybiBfaTE4bi5pMThuLnRyYW5zbGF0ZSgnY29yZS5ldWlTdGVwSG9yaXpvbnRhbC5idXR0b25UaXRsZScsIHsKICAgICAgZGVmYXVsdE1lc3NhZ2U6ICdTdGVwIHtzdGVwfToge3RpdGxlfXt0aXRsZUFwcGVuZGl4fScsCiAgICAgIHZhbHVlczogewogICAgICAgIHN0ZXA6IHN0ZXAsCiAgICAgICAgdGl0bGU6IHRpdGxlLAogICAgICAgIHRpdGxlQXBwZW5kaXg6IGRpc2FibGVkID8gJyBpcyBkaXNhYmxlZCcgOiBpc0NvbXBsZXRlID8gJyBpcyBjb21wbGV0ZScgOiAnJwogICAgICB9CiAgICB9KTsKICB9LAogICdldWlTdGVwSG9yaXpvbnRhbC5zdGVwJzogX2kxOG4uaTE4bi50cmFuc2xhdGUoJ2NvcmUuZXVpU3RlcEhvcml6b250YWwuc3RlcCcsIHsKICAgIGRlZmF1bHRNZXNzYWdlOiAnU3RlcCcsCiAgICBkZXNjcmlwdGlvbjogJ1NjcmVlbiByZWFkZXIgdGV4dCBhbm5vdW5jaW5nIGluZm9ybWF0aW9uIGFib3V0IGEgc3RlcCBpbiBzb21lIHByb2Nlc3MnCiAgfSksCiAgJ2V1aVN0ZXBOdW1iZXIuaGFzRXJyb3JzJzogX2kxOG4uaTE4bi50cmFuc2xhdGUoJ2NvcmUuZXVpU3RlcE51bWJlci5oYXNFcnJvcnMnLCB7CiAgICBkZWZhdWx0TWVzc2FnZTogJ2hhcyBlcnJvcnMnLAogICAgZGVzY3JpcHRpb246ICdVc2VkIGFzIHRoZSB0aXRsZSBhdHRyaWJ1dGUgb24gYW4gaW1hZ2Ugb3Igc3ZnIGljb24gdG8gaW5kaWNhdGUgYSBnaXZlbiBwcm9jZXNzIHN0ZXAgaGFzIGVycm9ycycKICB9KSwKICAnZXVpU3RlcE51bWJlci5oYXNXYXJuaW5ncyc6IF9pMThuLmkxOG4udHJhbnNsYXRlKCdjb3JlLmV1aVN0ZXBOdW1iZXIuaGFzV2FybmluZ3MnLCB7CiAgICBkZWZhdWx0TWVzc2FnZTogJ2hhcyB3YXJuaW5ncycsCiAgICBkZXNjcmlwdGlvbjogJ1VzZWQgYXMgdGhlIHRpdGxlIGF0dHJpYnV0ZSBvbiBhbiBpbWFnZSBvciBzdmcgaWNvbiB0byBpbmRpY2F0ZSBhIGdpdmVuIHByb2Nlc3Mgc3RlcCBoYXMgd2FybmluZ3MnCiAgfSksCiAgJ2V1aVN0ZXBOdW1iZXIuaXNDb21wbGV0ZSc6IF9pMThuLmkxOG4udHJhbnNsYXRlKCdjb3JlLmV1aVN0ZXBOdW1iZXIuaXNDb21wbGV0ZScsIHsKICAgIGRlZmF1bHRNZXNzYWdlOiAnY29tcGxldGUnLAogICAgZGVzY3JpcHRpb246ICdVc2VkIGFzIHRoZSB0aXRsZSBhdHRyaWJ1dGUgb24gYW4gaW1hZ2Ugb3Igc3ZnIGljb24gdG8gaW5kaWNhdGUgYSBnaXZlbiBwcm9jZXNzIHN0ZXAgaXMgY29tcGxldGUnCiAgfSksCiAgJ2V1aVN0eWxlU2VsZWN0b3IuYnV0dG9uVGV4dCc6IF9pMThuLmkxOG4udHJhbnNsYXRlKCdjb3JlLmV1aVN0eWxlU2VsZWN0b3IuYnV0dG9uVGV4dCcsIHsKICAgIGRlZmF1bHRNZXNzYWdlOiAnRGVuc2l0eScKICB9KSwKICAnZXVpU3VwZXJEYXRlUGlja2VyLnNob3dEYXRlc0J1dHRvbkxhYmVsJzogX2kxOG4uaTE4bi50cmFuc2xhdGUoJ2NvcmUuZXVpU3VwZXJEYXRlUGlja2VyLnNob3dEYXRlc0J1dHRvbkxhYmVsJywgewogICAgZGVmYXVsdE1lc3NhZ2U6ICdTaG93IGRhdGVzJywKICAgIGRlc2NyaXB0aW9uOiAnRGlzcGxheWVkIGluIGEgYnV0dG9uIHRoYXQgc2hvd3MgZGF0ZSBwaWNrZXInCiAgfSksCiAgJ2V1aVN1cGVyU2VsZWN0LnNjcmVlblJlYWRlckFubm91bmNlbWVudCc6IGZ1bmN0aW9uIGV1aVN1cGVyU2VsZWN0U2NyZWVuUmVhZGVyQW5ub3VuY2VtZW50KF9yZWYyMSkgewogICAgdmFyIG9wdGlvbnNDb3VudCA9IF9yZWYyMS5vcHRpb25zQ291bnQ7CiAgICByZXR1cm4gX2kxOG4uaTE4bi50cmFuc2xhdGUoJ2NvcmUuZXVpU3VwZXJTZWxlY3Quc2NyZWVuUmVhZGVyQW5ub3VuY2VtZW50JywgewogICAgICBkZWZhdWx0TWVzc2FnZTogJ1lvdSBhcmUgaW4gYSBmb3JtIHNlbGVjdG9yIG9mIHtvcHRpb25zQ291bnR9IGl0ZW1zIGFuZCBtdXN0IHNlbGVjdCBhIHNpbmdsZSBvcHRpb24uIFVzZSB0aGUgVXAgYW5kIERvd24ga2V5cyB0byBuYXZpZ2F0ZSBvciBFc2NhcGUgdG8gY2xvc2UuJywKICAgICAgdmFsdWVzOiB7CiAgICAgICAgb3B0aW9uc0NvdW50OiBvcHRpb25zQ291bnQKICAgICAgfQogICAgfSk7CiAgfSwKICAnZXVpU3VwZXJTZWxlY3RDb250cm9sLnNlbGVjdEFuT3B0aW9uJzogZnVuY3Rpb24gZXVpU3VwZXJTZWxlY3RDb250cm9sU2VsZWN0QW5PcHRpb24oX3JlZjIyKSB7CiAgICB2YXIgc2VsZWN0ZWRWYWx1ZSA9IF9yZWYyMi5zZWxlY3RlZFZhbHVlOwogICAgcmV0dXJuIF9pMThuLmkxOG4udHJhbnNsYXRlKCdjb3JlLmV1aVN1cGVyU2VsZWN0Q29udHJvbC5zZWxlY3RBbk9wdGlvbicsIHsKICAgICAgZGVmYXVsdE1lc3NhZ2U6ICdTZWxlY3QgYW4gb3B0aW9uOiB7c2VsZWN0ZWRWYWx1ZX0sIGlzIHNlbGVjdGVkJywKICAgICAgdmFsdWVzOiB7CiAgICAgICAgc2VsZWN0ZWRWYWx1ZTogc2VsZWN0ZWRWYWx1ZQogICAgICB9CiAgICB9KTsKICB9LAogICdldWlTdXBlclVwZGF0ZUJ1dHRvbi5jYW5ub3RVcGRhdGVUb29sdGlwJzogX2kxOG4uaTE4bi50cmFuc2xhdGUoJ2NvcmUuZXVpU3VwZXJVcGRhdGVCdXR0b24uY2Fubm90VXBkYXRlVG9vbHRpcCcsIHsKICAgIGRlZmF1bHRNZXNzYWdlOiAnQ2Fubm90IHVwZGF0ZScsCiAgICBkZXNjcmlwdGlvbjogIkRpc3BsYXllZCBpbiBhIHRvb2x0aXAgd2hlbiB1cGRhdGVzIGNhbid0IGhhcHBlbiIKICB9KSwKICAnZXVpU3VwZXJVcGRhdGVCdXR0b24uY2xpY2tUb0FwcGx5VG9vbHRpcCc6IF9pMThuLmkxOG4udHJhbnNsYXRlKCdjb3JlLmV1aVN1cGVyVXBkYXRlQnV0dG9uLmNsaWNrVG9BcHBseVRvb2x0aXAnLCB7CiAgICBkZWZhdWx0TWVzc2FnZTogJ0NsaWNrIHRvIGFwcGx5JywKICAgIGRlc2NyaXB0aW9uOiAiRGlzcGxheWVkIGluIGEgdG9vbHRpcCB3aGVuIHRoZXJlIGFyZSBjaGFuZ2VzIHRoYXQgaGF2ZW4ndCBiZWVuIGFwcGxpZWQiCiAgfSksCiAgJ2V1aVN1cGVyVXBkYXRlQnV0dG9uLnJlZnJlc2hCdXR0b25MYWJlbCc6IF9pMThuLmkxOG4udHJhbnNsYXRlKCdjb3JlLmV1aVN1cGVyVXBkYXRlQnV0dG9uLnJlZnJlc2hCdXR0b25MYWJlbCcsIHsKICAgIGRlZmF1bHRNZXNzYWdlOiAnUmVmcmVzaCcsCiAgICBkZXNjcmlwdGlvbjogJ0Rpc3BsYXllZCBpbiBhIGJ1dHRvbiB0aGF0IHJlZnJlc2hlcyBiYXNlZCBvbiBkYXRlIHBpY2tlZCcKICB9KSwKICAnZXVpU3VwZXJVcGRhdGVCdXR0b24udXBkYXRpbmdCdXR0b25MYWJlbCc6IF9pMThuLmkxOG4udHJhbnNsYXRlKCdjb3JlLmV1aVN1cGVyVXBkYXRlQnV0dG9uLnVwZGF0aW5nQnV0dG9uTGFiZWwnLCB7CiAgICBkZWZhdWx0TWVzc2FnZTogJ1VwZGF0aW5nJywKICAgIGRlc2NyaXB0aW9uOiAnRGlzcGxheWVkIGluIGEgYnV0dG9uIHRoYXQgcmVmcmVzaGVzIHdoZW4gdXBkYXRlcyBhcmUgaGFwcGVuaW5nJwogIH0pLAogICdldWlTdXBlclVwZGF0ZUJ1dHRvbi51cGRhdGVCdXR0b25MYWJlbCc6IF9pMThuLmkxOG4udHJhbnNsYXRlKCdjb3JlLmV1aVN1cGVyVXBkYXRlQnV0dG9uLnVwZGF0ZUJ1dHRvbkxhYmVsJywgewogICAgZGVmYXVsdE1lc3NhZ2U6ICdVcGRhdGUnLAogICAgZGVzY3JpcHRpb246ICdEaXNwbGF5ZWQgaW4gYSBidXR0b24gdGhhdCB1cGRhdGVzIGJhc2VkIG9uIGRhdGUgcGlja2VkJwogIH0pLAogICdldWlUYWJsZVBhZ2luYXRpb24ucm93c1BlclBhZ2UnOiBfaTE4bi5pMThuLnRyYW5zbGF0ZSgnY29yZS5ldWlUYWJsZVBhZ2luYXRpb24ucm93c1BlclBhZ2UnLCB7CiAgICBkZWZhdWx0TWVzc2FnZTogJ1Jvd3MgcGVyIHBhZ2UnLAogICAgZGVzY3JpcHRpb246ICdEaXNwbGF5ZWQgaW4gYSBidXR0b24gdGhhdCB0b2dnbGVzIGEgdGFibGUgcGFnaW5hdGlvbiBtZW51JwogIH0pLAogICdldWlUYWJsZVBhZ2luYXRpb24ucm93c1BlclBhZ2VPcHRpb24nOiBmdW5jdGlvbiBldWlUYWJsZVBhZ2luYXRpb25Sb3dzUGVyUGFnZU9wdGlvbihfcmVmMjMpIHsKICAgIHZhciByb3dzUGVyUGFnZSA9IF9yZWYyMy5yb3dzUGVyUGFnZTsKICAgIHJldHVybiBfaTE4bi5pMThuLnRyYW5zbGF0ZSgnY29yZS5ldWlUYWJsZVBhZ2luYXRpb24ucm93c1BlclBhZ2VPcHRpb24nLCB7CiAgICAgIGRlZmF1bHRNZXNzYWdlOiAne3Jvd3NQZXJQYWdlfSByb3dzJywKICAgICAgZGVzY3JpcHRpb246ICdEaXNwbGF5ZWQgaW4gYSBidXR0b24gdGhhdCB0b2dnbGVzIHRoZSBudW1iZXIgb2YgdmlzaWJsZSByb3dzJywKICAgICAgdmFsdWVzOiB7CiAgICAgICAgcm93c1BlclBhZ2U6IHJvd3NQZXJQYWdlCiAgICAgIH0KICAgIH0pOwogIH0sCiAgJ2V1aVRhYmxlU29ydE1vYmlsZS5zb3J0aW5nJzogX2kxOG4uaTE4bi50cmFuc2xhdGUoJ2NvcmUuZXVpVGFibGVTb3J0TW9iaWxlLnNvcnRpbmcnLCB7CiAgICBkZWZhdWx0TWVzc2FnZTogJ1NvcnRpbmcnLAogICAgZGVzY3JpcHRpb246ICdEaXNwbGF5ZWQgaW4gYSBidXR0b24gdGhhdCB0b2dnbGVzIGEgdGFibGUgc29ydGluZyBtZW51JwogIH0pLAogICdldWlUb2FzdC5kaXNtaXNzVG9hc3QnOiBfaTE4bi5pMThuLnRyYW5zbGF0ZSgnY29yZS5ldWlUb2FzdC5kaXNtaXNzVG9hc3QnLCB7CiAgICBkZWZhdWx0TWVzc2FnZTogJ0Rpc21pc3MgdG9hc3QnCiAgfSksCiAgJ2V1aVRvYXN0Lm5ld05vdGlmaWNhdGlvbic6IF9pMThuLmkxOG4udHJhbnNsYXRlKCdjb3JlLmV1aVRvYXN0Lm5ld05vdGlmaWNhdGlvbicsIHsKICAgIGRlZmF1bHRNZXNzYWdlOiAnQSBuZXcgbm90aWZpY2F0aW9uIGFwcGVhcnMnCiAgfSksCiAgJ2V1aVRvYXN0Lm5vdGlmaWNhdGlvbic6IF9pMThuLmkxOG4udHJhbnNsYXRlKCdjb3JlLmV1aVRvYXN0Lm5vdGlmaWNhdGlvbicsIHsKICAgIGRlZmF1bHRNZXNzYWdlOiAnTm90aWZpY2F0aW9uJywKICAgIGRlc2NyaXB0aW9uOiAnQVJJQSBsYWJlbCBvbiBhbiBlbGVtZW50IGNvbnRhaW5pbmcgYSBub3RpZmljYXRpb24nCiAgfSksCiAgJ2V1aVRyZWVWaWV3LmFyaWFMYWJlbCc6IGZ1bmN0aW9uIGV1aVRyZWVWaWV3QXJpYUxhYmVsKF9yZWYyNCkgewogICAgdmFyIG5vZGVMYWJlbCA9IF9yZWYyNC5ub2RlTGFiZWwsCiAgICAgICAgYXJpYUxhYmVsID0gX3JlZjI0LmFyaWFMYWJlbDsKICAgIHJldHVybiBfaTE4bi5pMThuLnRyYW5zbGF0ZSgnY29yZS5ldWlUcmVlVmlldy5hcmlhTGFiZWwnLCB7CiAgICAgIGRlZmF1bHRNZXNzYWdlOiAne25vZGVMYWJlbH0gY2hpbGQgb2Yge2FyaWFMYWJlbH0nLAogICAgICB2YWx1ZXM6IHsKICAgICAgICBub2RlTGFiZWw6IG5vZGVMYWJlbCwKICAgICAgICBhcmlhTGFiZWw6IGFyaWFMYWJlbAogICAgICB9CiAgICB9KTsKICB9LAogICdldWlUcmVlVmlldy5saXN0TmF2aWdhdGlvbkluc3RydWN0aW9ucyc6IF9pMThuLmkxOG4udHJhbnNsYXRlKCdjb3JlLmV1aVRyZWVWaWV3Lmxpc3ROYXZpZ2F0aW9uSW5zdHJ1Y3Rpb25zJywgewogICAgZGVmYXVsdE1lc3NhZ2U6ICdZb3UgY2FuIHF1aWNrbHkgbmF2aWdhdGUgdGhpcyBsaXN0IHVzaW5nIGFycm93IGtleXMuJwogIH0pCn07CmV4cG9ydHMuZXVpQ29udGV4dE1hcHBpbmcgPSBldWlDb250ZXh0TWFwcGluZzs="},null]}