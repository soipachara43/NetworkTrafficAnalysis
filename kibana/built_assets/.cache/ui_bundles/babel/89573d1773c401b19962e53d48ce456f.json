{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/lens/public/drag_drop/drag_drop.js","dependencies":[{"path":"x-pack/legacy/plugins/lens/public/drag_drop/drag_drop.js","mtime":1589249552292},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLkRyYWdEcm9wID0gRHJhZ0Ryb3A7Cgp2YXIgX3JlYWN0ID0gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQocmVxdWlyZSgicmVhY3QiKSk7Cgp2YXIgX2NsYXNzbmFtZXMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoImNsYXNzbmFtZXMiKSk7Cgp2YXIgX3Byb3ZpZGVycyA9IHJlcXVpcmUoIi4vcHJvdmlkZXJzIik7Cgp2YXIgX2xlbnNfdWlfdGVsZW1ldHJ5ID0gcmVxdWlyZSgiLi4vbGVuc191aV90ZWxlbWV0cnkiKTsKCmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7CiAgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsKICAgIGRlZmF1bHQ6IG9iagogIH07Cn0KCmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKG9iaikgewogIGlmIChvYmogJiYgb2JqLl9fZXNNb2R1bGUpIHsKICAgIHJldHVybiBvYmo7CiAgfSBlbHNlIHsKICAgIHZhciBuZXdPYmogPSB7fTsKCiAgICBpZiAob2JqICE9IG51bGwpIHsKICAgICAgZm9yICh2YXIga2V5IGluIG9iaikgewogICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBrZXkpKSB7CiAgICAgICAgICB2YXIgZGVzYyA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSAmJiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID8gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmosIGtleSkgOiB7fTsKCiAgICAgICAgICBpZiAoZGVzYy5nZXQgfHwgZGVzYy5zZXQpIHsKICAgICAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG5ld09iaiwga2V5LCBkZXNjKTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIG5ld09ialtrZXldID0gb2JqW2tleV07CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9CgogICAgbmV3T2JqLmRlZmF1bHQgPSBvYmo7CiAgICByZXR1cm4gbmV3T2JqOwogIH0KfQoKZnVuY3Rpb24gb3duS2V5cyhvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7CiAgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhvYmplY3QpOwoKICBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykgewogICAgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCk7CiAgICBpZiAoZW51bWVyYWJsZU9ubHkpIHN5bWJvbHMgPSBzeW1ib2xzLmZpbHRlcihmdW5jdGlvbiAoc3ltKSB7CiAgICAgIHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iamVjdCwgc3ltKS5lbnVtZXJhYmxlOwogICAgfSk7CiAgICBrZXlzLnB1c2guYXBwbHkoa2V5cywgc3ltYm9scyk7CiAgfQoKICByZXR1cm4ga2V5czsKfQoKZnVuY3Rpb24gX29iamVjdFNwcmVhZCh0YXJnZXQpIHsKICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgewogICAgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXSAhPSBudWxsID8gYXJndW1lbnRzW2ldIDoge307CgogICAgaWYgKGkgJSAyKSB7CiAgICAgIG93bktleXMoc291cmNlLCB0cnVlKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsKICAgICAgICBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTsKICAgICAgfSk7CiAgICB9IGVsc2UgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKSB7CiAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMoc291cmNlKSk7CiAgICB9IGVsc2UgewogICAgICBvd25LZXlzKHNvdXJjZSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7CiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZSwga2V5KSk7CiAgICAgIH0pOwogICAgfQogIH0KCiAgcmV0dXJuIHRhcmdldDsKfQoKZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkgewogIGlmIChrZXkgaW4gb2JqKSB7CiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHsKICAgICAgdmFsdWU6IHZhbHVlLAogICAgICBlbnVtZXJhYmxlOiB0cnVlLAogICAgICBjb25maWd1cmFibGU6IHRydWUsCiAgICAgIHdyaXRhYmxlOiB0cnVlCiAgICB9KTsKICB9IGVsc2UgewogICAgb2JqW2tleV0gPSB2YWx1ZTsKICB9CgogIHJldHVybiBvYmo7Cn0KCmZ1bmN0aW9uIF9zbGljZWRUb0FycmF5KGFyciwgaSkgewogIHJldHVybiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB8fCBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB8fCBfbm9uSXRlcmFibGVSZXN0KCk7Cn0KCmZ1bmN0aW9uIF9ub25JdGVyYWJsZVJlc3QoKSB7CiAgdGhyb3cgbmV3IFR5cGVFcnJvcigiSW52YWxpZCBhdHRlbXB0IHRvIGRlc3RydWN0dXJlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZSIpOwp9CgpmdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB7CiAgdmFyIF9hcnIgPSBbXTsKICB2YXIgX24gPSB0cnVlOwogIHZhciBfZCA9IGZhbHNlOwogIHZhciBfZSA9IHVuZGVmaW5lZDsKCiAgdHJ5IHsKICAgIGZvciAodmFyIF9pID0gYXJyW1N5bWJvbC5pdGVyYXRvcl0oKSwgX3M7ICEoX24gPSAoX3MgPSBfaS5uZXh0KCkpLmRvbmUpOyBfbiA9IHRydWUpIHsKICAgICAgX2Fyci5wdXNoKF9zLnZhbHVlKTsKCiAgICAgIGlmIChpICYmIF9hcnIubGVuZ3RoID09PSBpKSBicmVhazsKICAgIH0KICB9IGNhdGNoIChlcnIpIHsKICAgIF9kID0gdHJ1ZTsKICAgIF9lID0gZXJyOwogIH0gZmluYWxseSB7CiAgICB0cnkgewogICAgICBpZiAoIV9uICYmIF9pWyJyZXR1cm4iXSAhPSBudWxsKSBfaVsicmV0dXJuIl0oKTsKICAgIH0gZmluYWxseSB7CiAgICAgIGlmIChfZCkgdGhyb3cgX2U7CiAgICB9CiAgfQoKICByZXR1cm4gX2FycjsKfQoKZnVuY3Rpb24gX2FycmF5V2l0aEhvbGVzKGFycikgewogIGlmIChBcnJheS5pc0FycmF5KGFycikpIHJldHVybiBhcnI7Cn0KLyoqCiAqIEEgZHJhZ2dhYmxlIC8gZHJvcHBhYmxlIGl0ZW0uIEl0ZW1zIGNhbiBiZSBib3RoIGRyYWdnYWJsZSBhbmQgZHJvcHBhYmxlIGF0CiAqIHRoZSBzYW1lIHRpbWUuCiAqCiAqIEBwYXJhbSBwcm9wcwogKi8KCgpmdW5jdGlvbiBEcmFnRHJvcChwcm9wcykgewogIHZhciBfdXNlQ29udGV4dCA9ICgwLCBfcmVhY3QudXNlQ29udGV4dCkoX3Byb3ZpZGVycy5EcmFnQ29udGV4dCksCiAgICAgIGRyYWdnaW5nID0gX3VzZUNvbnRleHQuZHJhZ2dpbmcsCiAgICAgIHNldERyYWdnaW5nID0gX3VzZUNvbnRleHQuc2V0RHJhZ2dpbmc7CgogIHZhciBfdXNlU3RhdGUgPSAoMCwgX3JlYWN0LnVzZVN0YXRlKSh7CiAgICBpc0FjdGl2ZTogZmFsc2UKICB9KSwKICAgICAgX3VzZVN0YXRlMiA9IF9zbGljZWRUb0FycmF5KF91c2VTdGF0ZSwgMiksCiAgICAgIHN0YXRlID0gX3VzZVN0YXRlMlswXSwKICAgICAgc2V0U3RhdGUgPSBfdXNlU3RhdGUyWzFdOwoKICB2YXIgY2xhc3NOYW1lID0gcHJvcHMuY2xhc3NOYW1lLAogICAgICBvbkRyb3AgPSBwcm9wcy5vbkRyb3AsCiAgICAgIHZhbHVlID0gcHJvcHMudmFsdWUsCiAgICAgIGNoaWxkcmVuID0gcHJvcHMuY2hpbGRyZW4sCiAgICAgIGRyb3BwYWJsZSA9IHByb3BzLmRyb3BwYWJsZSwKICAgICAgZHJhZ2dhYmxlID0gcHJvcHMuZHJhZ2dhYmxlOwogIHZhciBpc0RyYWdnaW5nID0gZHJhZ2dhYmxlICYmIHZhbHVlID09PSBkcmFnZ2luZzsKICB2YXIgY2xhc3NlcyA9ICgwLCBfY2xhc3NuYW1lcy5kZWZhdWx0KSgnbG5zRHJhZ0Ryb3AnLCBjbGFzc05hbWUsIHsKICAgICdsbnNEcmFnRHJvcC1pc0Ryb3BUYXJnZXQnOiBkcm9wcGFibGUsCiAgICAnbG5zRHJhZ0Ryb3AtaXNBY3RpdmVEcm9wVGFyZ2V0JzogZHJvcHBhYmxlICYmIHN0YXRlLmlzQWN0aXZlLAogICAgJ2xuc0RyYWdEcm9wLWlzRHJhZ2dpbmcnOiBpc0RyYWdnaW5nCiAgfSk7CgogIHZhciBkcmFnU3RhcnQgPSBmdW5jdGlvbiBkcmFnU3RhcnQoZSkgewogICAgLy8gU2V0dGluZyBzdG9wUHJvcGdhZ2F0aW9uIGNhdXNlcyBDaHJvbWUgZmFpbHVyZXMsIHNvCiAgICAvLyB3ZSBhcmUgbWFudWFsbHkgY2hlY2tpbmcgaWYgd2UndmUgYWxyZWFkeSBoYW5kbGVkIHRoaXMKICAgIC8vIGluIGEgbmVzdGVkIGNoaWxkLCBhbmQgZG9pbmcgbm90aGluZyBpZiBzby4uLgogICAgaWYgKGUuZGF0YVRyYW5zZmVyLmdldERhdGEoJ3RleHQnKSkgewogICAgICByZXR1cm47CiAgICB9IC8vIFdlIG9ubHkgY2FuIHJlYWNoIHRoZSBkcmFnU3RhcnQgbWV0aG9kIGlmIHRoZSBlbGVtZW50IGlzIGRyYWdnYWJsZSwKICAgIC8vIHNvIHdlIGtub3cgd2UgaGF2ZSBEcmFnZ2FibGVQcm9wcyBpZiB3ZSByZWFjaCB0aGlzIGNvZGUuCgoKICAgIGUuZGF0YVRyYW5zZmVyLnNldERhdGEoJ3RleHQnLCBwcm9wcy5sYWJlbCk7IC8vIENocm9tZSBjYXVzZXMgaXNzdWVzIGlmIHlvdSB0cnkgdG8gcmVuZGVyIGZyb20gd2l0aGluIGEKICAgIC8vIGRyYWdTdGFydCBldmVudCwgc28gd2UgZHJvcCBhIHNldFRpbWVvdXQgdG8gYXZvaWQgdGhhdC4KCiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIHNldERyYWdnaW5nKHZhbHVlKTsKICAgIH0pOwogIH07CgogIHZhciBkcmFnRW5kID0gZnVuY3Rpb24gZHJhZ0VuZChlKSB7CiAgICBlLnN0b3BQcm9wYWdhdGlvbigpOwogICAgc2V0RHJhZ2dpbmcodW5kZWZpbmVkKTsKICB9OwoKICB2YXIgZHJhZ092ZXIgPSBmdW5jdGlvbiBkcmFnT3ZlcihlKSB7CiAgICBpZiAoIWRyb3BwYWJsZSkgewogICAgICByZXR1cm47CiAgICB9CgogICAgZS5wcmV2ZW50RGVmYXVsdCgpOyAvLyBBbiBvcHRpbWl6YXRpb24gdG8gcHJldmVudCBhIGJ1bmNoIG9mIFJlYWN0IGNodXJuLgoKICAgIGlmICghc3RhdGUuaXNBY3RpdmUpIHsKICAgICAgc2V0U3RhdGUoX29iamVjdFNwcmVhZCh7fSwgc3RhdGUsIHsKICAgICAgICBpc0FjdGl2ZTogdHJ1ZQogICAgICB9KSk7CiAgICB9CiAgfTsKCiAgdmFyIGRyYWdMZWF2ZSA9IGZ1bmN0aW9uIGRyYWdMZWF2ZSgpIHsKICAgIHNldFN0YXRlKF9vYmplY3RTcHJlYWQoe30sIHN0YXRlLCB7CiAgICAgIGlzQWN0aXZlOiBmYWxzZQogICAgfSkpOwogIH07CgogIHZhciBkcm9wID0gZnVuY3Rpb24gZHJvcChlKSB7CiAgICBlLnByZXZlbnREZWZhdWx0KCk7CiAgICBlLnN0b3BQcm9wYWdhdGlvbigpOwogICAgc2V0U3RhdGUoX29iamVjdFNwcmVhZCh7fSwgc3RhdGUsIHsKICAgICAgaXNBY3RpdmU6IGZhbHNlCiAgICB9KSk7CiAgICBzZXREcmFnZ2luZyh1bmRlZmluZWQpOwoKICAgIGlmIChvbkRyb3AgJiYgZHJvcHBhYmxlKSB7CiAgICAgICgwLCBfbGVuc191aV90ZWxlbWV0cnkudHJhY2tVaUV2ZW50KSgnZHJvcF90b3RhbCcpOwogICAgICBvbkRyb3AoZHJhZ2dpbmcpOwogICAgfQogIH07CgogIHJldHVybiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KCJkaXYiLCB7CiAgICAiZGF0YS10ZXN0LXN1YmoiOiBwcm9wc1snZGF0YS10ZXN0LXN1YmonXSB8fCAnbG5zRHJhZ0Ryb3AnLAogICAgY2xhc3NOYW1lOiBjbGFzc2VzLAogICAgb25EcmFnT3ZlcjogZHJhZ092ZXIsCiAgICBvbkRyYWdMZWF2ZTogZHJhZ0xlYXZlLAogICAgb25Ecm9wOiBkcm9wLAogICAgZHJhZ2dhYmxlOiBkcmFnZ2FibGUsCiAgICBvbkRyYWdFbmQ6IGRyYWdFbmQsCiAgICBvbkRyYWdTdGFydDogZHJhZ1N0YXJ0CiAgfSwgY2hpbGRyZW4pOwp9"},null]}