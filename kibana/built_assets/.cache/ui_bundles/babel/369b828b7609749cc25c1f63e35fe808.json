{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/canvas/public/components/workpad_header/control_settings/custom_interval.js","dependencies":[{"path":"x-pack/legacy/plugins/canvas/public/components/workpad_header/control_settings/custom_interval.js","mtime":1589249552015},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLkN1c3RvbUludGVydmFsID0gdm9pZCAwOwoKdmFyIF9yZWFjdCA9IF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKHJlcXVpcmUoInJlYWN0IikpOwoKdmFyIF9wcm9wVHlwZXMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoInByb3AtdHlwZXMiKSk7Cgp2YXIgX2V1aSA9IHJlcXVpcmUoIkBlbGFzdGljL2V1aSIpOwoKdmFyIF90aW1lX2ludGVydmFsID0gcmVxdWlyZSgiLi4vLi4vLi4vbGliL3RpbWVfaW50ZXJ2YWwiKTsKCnZhciBfaTE4biA9IHJlcXVpcmUoIi4uLy4uLy4uLy4uL2kxOG4iKTsKCmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7CiAgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsKICAgIGRlZmF1bHQ6IG9iagogIH07Cn0KCmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKG9iaikgewogIGlmIChvYmogJiYgb2JqLl9fZXNNb2R1bGUpIHsKICAgIHJldHVybiBvYmo7CiAgfSBlbHNlIHsKICAgIHZhciBuZXdPYmogPSB7fTsKCiAgICBpZiAob2JqICE9IG51bGwpIHsKICAgICAgZm9yICh2YXIga2V5IGluIG9iaikgewogICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBrZXkpKSB7CiAgICAgICAgICB2YXIgZGVzYyA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSAmJiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID8gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmosIGtleSkgOiB7fTsKCiAgICAgICAgICBpZiAoZGVzYy5nZXQgfHwgZGVzYy5zZXQpIHsKICAgICAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG5ld09iaiwga2V5LCBkZXNjKTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIG5ld09ialtrZXldID0gb2JqW2tleV07CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9CgogICAgbmV3T2JqLmRlZmF1bHQgPSBvYmo7CiAgICByZXR1cm4gbmV3T2JqOwogIH0KfQoKZnVuY3Rpb24gX3NsaWNlZFRvQXJyYXkoYXJyLCBpKSB7CiAgcmV0dXJuIF9hcnJheVdpdGhIb2xlcyhhcnIpIHx8IF9pdGVyYWJsZVRvQXJyYXlMaW1pdChhcnIsIGkpIHx8IF9ub25JdGVyYWJsZVJlc3QoKTsKfQoKZnVuY3Rpb24gX25vbkl0ZXJhYmxlUmVzdCgpIHsKICB0aHJvdyBuZXcgVHlwZUVycm9yKCJJbnZhbGlkIGF0dGVtcHQgdG8gZGVzdHJ1Y3R1cmUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlIik7Cn0KCmZ1bmN0aW9uIF9pdGVyYWJsZVRvQXJyYXlMaW1pdChhcnIsIGkpIHsKICB2YXIgX2FyciA9IFtdOwogIHZhciBfbiA9IHRydWU7CiAgdmFyIF9kID0gZmFsc2U7CiAgdmFyIF9lID0gdW5kZWZpbmVkOwoKICB0cnkgewogICAgZm9yICh2YXIgX2kgPSBhcnJbU3ltYm9sLml0ZXJhdG9yXSgpLCBfczsgIShfbiA9IChfcyA9IF9pLm5leHQoKSkuZG9uZSk7IF9uID0gdHJ1ZSkgewogICAgICBfYXJyLnB1c2goX3MudmFsdWUpOwoKICAgICAgaWYgKGkgJiYgX2Fyci5sZW5ndGggPT09IGkpIGJyZWFrOwogICAgfQogIH0gY2F0Y2ggKGVycikgewogICAgX2QgPSB0cnVlOwogICAgX2UgPSBlcnI7CiAgfSBmaW5hbGx5IHsKICAgIHRyeSB7CiAgICAgIGlmICghX24gJiYgX2lbInJldHVybiJdICE9IG51bGwpIF9pWyJyZXR1cm4iXSgpOwogICAgfSBmaW5hbGx5IHsKICAgICAgaWYgKF9kKSB0aHJvdyBfZTsKICAgIH0KICB9CgogIHJldHVybiBfYXJyOwp9CgpmdW5jdGlvbiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB7CiAgaWYgKEFycmF5LmlzQXJyYXkoYXJyKSkgcmV0dXJuIGFycjsKfQoKdmFyIHN0cmluZ3MgPSBfaTE4bi5Db21wb25lbnRTdHJpbmdzLldvcmtwYWRIZWFkZXJDdXN0b21JbnRlcnZhbDsKCnZhciBDdXN0b21JbnRlcnZhbCA9IGZ1bmN0aW9uIEN1c3RvbUludGVydmFsKF9yZWYpIHsKICB2YXIgZ3V0dGVyU2l6ZSA9IF9yZWYuZ3V0dGVyU2l6ZSwKICAgICAgYnV0dG9uU2l6ZSA9IF9yZWYuYnV0dG9uU2l6ZSwKICAgICAgX29uU3VibWl0ID0gX3JlZi5vblN1Ym1pdCwKICAgICAgZGVmYXVsdFZhbHVlID0gX3JlZi5kZWZhdWx0VmFsdWU7CgogIHZhciBfdXNlU3RhdGUgPSAoMCwgX3JlYWN0LnVzZVN0YXRlKShkZWZhdWx0VmFsdWUpLAogICAgICBfdXNlU3RhdGUyID0gX3NsaWNlZFRvQXJyYXkoX3VzZVN0YXRlLCAyKSwKICAgICAgY3VzdG9tSW50ZXJ2YWwgPSBfdXNlU3RhdGUyWzBdLAogICAgICBzZXRDdXN0b21JbnRlcnZhbCA9IF91c2VTdGF0ZTJbMV07CgogIHZhciByZWZyZXNoSW50ZXJ2YWwgPSAoMCwgX3RpbWVfaW50ZXJ2YWwuZ2V0VGltZUludGVydmFsKShjdXN0b21JbnRlcnZhbCk7CiAgdmFyIGlzSW52YWxpZCA9IEJvb2xlYW4oY3VzdG9tSW50ZXJ2YWwubGVuZ3RoICYmICFyZWZyZXNoSW50ZXJ2YWwpOwoKICB2YXIgaGFuZGxlQ2hhbmdlID0gZnVuY3Rpb24gaGFuZGxlQ2hhbmdlKGV2KSB7CiAgICByZXR1cm4gc2V0Q3VzdG9tSW50ZXJ2YWwoZXYudGFyZ2V0LnZhbHVlKTsKICB9OwoKICByZXR1cm4gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudCgiZm9ybSIsIHsKICAgIG9uU3VibWl0OiBmdW5jdGlvbiBvblN1Ym1pdChldikgewogICAgICBldi5wcmV2ZW50RGVmYXVsdCgpOwoKICAgICAgaWYgKCFpc0ludmFsaWQgJiYgcmVmcmVzaEludGVydmFsKSB7CiAgICAgICAgX29uU3VibWl0KHJlZnJlc2hJbnRlcnZhbCk7CiAgICAgIH0KICAgIH0KICB9LCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpRmxleEdyb3VwLCB7CiAgICBndXR0ZXJTaXplOiBndXR0ZXJTaXplCiAgfSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUZsZXhJdGVtLCBudWxsLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpRm9ybVJvdywgewogICAgbGFiZWw6IHN0cmluZ3MuZ2V0Rm9ybUxhYmVsKCksCiAgICBoZWxwVGV4dDogc3RyaW5ncy5nZXRGb3JtRGVzY3JpcHRpb24oKSwKICAgIGNvbXByZXNzZWQ6IHRydWUKICB9LCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpRmllbGRUZXh0LCB7CiAgICBpc0ludmFsaWQ6IGlzSW52YWxpZCwKICAgIHZhbHVlOiBjdXN0b21JbnRlcnZhbCwKICAgIG9uQ2hhbmdlOiBoYW5kbGVDaGFuZ2UsCiAgICBjb21wcmVzc2VkOiB0cnVlCiAgfSkpKSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUZsZXhJdGVtLCB7CiAgICBncm93OiBmYWxzZQogIH0sIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlGb3JtUm93LCB7CiAgICBoYXNFbXB0eUxhYmVsU3BhY2U6IHRydWUsCiAgICBjb21wcmVzc2VkOiB0cnVlCiAgfSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUJ1dHRvbiwgewogICAgZGlzYWJsZWQ6IGlzSW52YWxpZCwKICAgIHNpemU6IGJ1dHRvblNpemUsCiAgICB0eXBlOiAic3VibWl0IiwKICAgIHN0eWxlOiB7CiAgICAgIG1pbldpZHRoOiAnYXV0bycKICAgIH0KICB9LCBzdHJpbmdzLmdldEJ1dHRvbkxhYmVsKCkpKSkpKTsKfTsKCmV4cG9ydHMuQ3VzdG9tSW50ZXJ2YWwgPSBDdXN0b21JbnRlcnZhbDsKQ3VzdG9tSW50ZXJ2YWwucHJvcFR5cGVzID0gewogIGJ1dHRvblNpemU6IF9wcm9wVHlwZXMuZGVmYXVsdC5zdHJpbmcsCiAgZ3V0dGVyU2l6ZTogX3Byb3BUeXBlcy5kZWZhdWx0LnN0cmluZywKICBkZWZhdWx0VmFsdWU6IF9wcm9wVHlwZXMuZGVmYXVsdC5zdHJpbmcsCiAgb25TdWJtaXQ6IF9wcm9wVHlwZXMuZGVmYXVsdC5mdW5jLmlzUmVxdWlyZWQKfTsKQ3VzdG9tSW50ZXJ2YWwuZGVmYXVsdFByb3BzID0gewogIGJ1dHRvblNpemU6ICdzJywKICBndXR0ZXJTaXplOiAncycsCiAgZGVmYXVsdFZhbHVlOiAnJwp9Ow=="},null]}