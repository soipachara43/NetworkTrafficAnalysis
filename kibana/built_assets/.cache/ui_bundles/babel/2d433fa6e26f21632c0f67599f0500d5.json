{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!src/plugins/data/public/ui/search_bar/create_search_bar.js","dependencies":[{"path":"src/plugins/data/public/ui/search_bar/create_search_bar.js","mtime":1589249550695},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmNyZWF0ZVNlYXJjaEJhciA9IGNyZWF0ZVNlYXJjaEJhcjsKCnZhciBfcmVhY3QgPSBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChyZXF1aXJlKCJyZWFjdCIpKTsKCnZhciBfcHVibGljID0gcmVxdWlyZSgiLi4vLi4vLi4vLi4va2liYW5hX3JlYWN0L3B1YmxpYyIpOwoKdmFyIF9zZWFyY2hfYmFyID0gcmVxdWlyZSgiLi9zZWFyY2hfYmFyIik7Cgp2YXIgX3VzZV9maWx0ZXJfbWFuYWdlciA9IHJlcXVpcmUoIi4vbGliL3VzZV9maWx0ZXJfbWFuYWdlciIpOwoKdmFyIF91c2VfdGltZWZpbHRlciA9IHJlcXVpcmUoIi4vbGliL3VzZV90aW1lZmlsdGVyIik7Cgp2YXIgX3VzZV9zYXZlZF9xdWVyeSA9IHJlcXVpcmUoIi4vbGliL3VzZV9zYXZlZF9xdWVyeSIpOwoKZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQob2JqKSB7CiAgaWYgKG9iaiAmJiBvYmouX19lc01vZHVsZSkgewogICAgcmV0dXJuIG9iajsKICB9IGVsc2UgewogICAgdmFyIG5ld09iaiA9IHt9OwoKICAgIGlmIChvYmogIT0gbnVsbCkgewogICAgICBmb3IgKHZhciBrZXkgaW4gb2JqKSB7CiAgICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGtleSkpIHsKICAgICAgICAgIHZhciBkZXNjID0gT2JqZWN0LmRlZmluZVByb3BlcnR5ICYmIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IgPyBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iaiwga2V5KSA6IHt9OwoKICAgICAgICAgIGlmIChkZXNjLmdldCB8fCBkZXNjLnNldCkgewogICAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobmV3T2JqLCBrZXksIGRlc2MpOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgbmV3T2JqW2tleV0gPSBvYmpba2V5XTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgIH0KCiAgICBuZXdPYmouZGVmYXVsdCA9IG9iajsKICAgIHJldHVybiBuZXdPYmo7CiAgfQp9CgpmdW5jdGlvbiBfZXh0ZW5kcygpIHsKICBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgewogICAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsKICAgICAgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsKCiAgICAgIGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsKICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgewogICAgICAgICAgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsKICAgICAgICB9CiAgICAgIH0KICAgIH0KCiAgICByZXR1cm4gdGFyZ2V0OwogIH07CgogIHJldHVybiBfZXh0ZW5kcy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9CgpmdW5jdGlvbiBvd25LZXlzKG9iamVjdCwgZW51bWVyYWJsZU9ubHkpIHsKICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9iamVjdCk7CgogIGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7CiAgICB2YXIgc3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMob2JqZWN0KTsKICAgIGlmIChlbnVtZXJhYmxlT25seSkgc3ltYm9scyA9IHN5bWJvbHMuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHsKICAgICAgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7CiAgICB9KTsKICAgIGtleXMucHVzaC5hcHBseShrZXlzLCBzeW1ib2xzKTsKICB9CgogIHJldHVybiBrZXlzOwp9CgpmdW5jdGlvbiBfb2JqZWN0U3ByZWFkKHRhcmdldCkgewogIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7CiAgICB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldICE9IG51bGwgPyBhcmd1bWVudHNbaV0gOiB7fTsKCiAgICBpZiAoaSAlIDIpIHsKICAgICAgb3duS2V5cyhzb3VyY2UsIHRydWUpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgewogICAgICAgIF9kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgc291cmNlW2tleV0pOwogICAgICB9KTsKICAgIH0gZWxzZSBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMpIHsKICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKTsKICAgIH0gZWxzZSB7CiAgICAgIG93bktleXMoc291cmNlKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsKICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBrZXkpKTsKICAgICAgfSk7CiAgICB9CiAgfQoKICByZXR1cm4gdGFyZ2V0Owp9CgpmdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7CiAgaWYgKGtleSBpbiBvYmopIHsKICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgewogICAgICB2YWx1ZTogdmFsdWUsCiAgICAgIGVudW1lcmFibGU6IHRydWUsCiAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSwKICAgICAgd3JpdGFibGU6IHRydWUKICAgIH0pOwogIH0gZWxzZSB7CiAgICBvYmpba2V5XSA9IHZhbHVlOwogIH0KCiAgcmV0dXJuIG9iajsKfQoKZnVuY3Rpb24gX3NsaWNlZFRvQXJyYXkoYXJyLCBpKSB7CiAgcmV0dXJuIF9hcnJheVdpdGhIb2xlcyhhcnIpIHx8IF9pdGVyYWJsZVRvQXJyYXlMaW1pdChhcnIsIGkpIHx8IF9ub25JdGVyYWJsZVJlc3QoKTsKfQoKZnVuY3Rpb24gX25vbkl0ZXJhYmxlUmVzdCgpIHsKICB0aHJvdyBuZXcgVHlwZUVycm9yKCJJbnZhbGlkIGF0dGVtcHQgdG8gZGVzdHJ1Y3R1cmUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlIik7Cn0KCmZ1bmN0aW9uIF9pdGVyYWJsZVRvQXJyYXlMaW1pdChhcnIsIGkpIHsKICB2YXIgX2FyciA9IFtdOwogIHZhciBfbiA9IHRydWU7CiAgdmFyIF9kID0gZmFsc2U7CiAgdmFyIF9lID0gdW5kZWZpbmVkOwoKICB0cnkgewogICAgZm9yICh2YXIgX2kgPSBhcnJbU3ltYm9sLml0ZXJhdG9yXSgpLCBfczsgIShfbiA9IChfcyA9IF9pLm5leHQoKSkuZG9uZSk7IF9uID0gdHJ1ZSkgewogICAgICBfYXJyLnB1c2goX3MudmFsdWUpOwoKICAgICAgaWYgKGkgJiYgX2Fyci5sZW5ndGggPT09IGkpIGJyZWFrOwogICAgfQogIH0gY2F0Y2ggKGVycikgewogICAgX2QgPSB0cnVlOwogICAgX2UgPSBlcnI7CiAgfSBmaW5hbGx5IHsKICAgIHRyeSB7CiAgICAgIGlmICghX24gJiYgX2lbInJldHVybiJdICE9IG51bGwpIF9pWyJyZXR1cm4iXSgpOwogICAgfSBmaW5hbGx5IHsKICAgICAgaWYgKF9kKSB0aHJvdyBfZTsKICAgIH0KICB9CgogIHJldHVybiBfYXJyOwp9CgpmdW5jdGlvbiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB7CiAgaWYgKEFycmF5LmlzQXJyYXkoYXJyKSkgcmV0dXJuIGFycjsKfSAvLyBSZXNwb25kIHRvIHVzZXIgY2hhbmdpbmcgdGhlIGZpbHRlcnMKCgp2YXIgZGVmYXVsdEZpbHRlcnNVcGRhdGVkID0gZnVuY3Rpb24gZGVmYXVsdEZpbHRlcnNVcGRhdGVkKHF1ZXJ5U2VydmljZSkgewogIHJldHVybiBmdW5jdGlvbiAoZmlsdGVycykgewogICAgcXVlcnlTZXJ2aWNlLmZpbHRlck1hbmFnZXIuc2V0RmlsdGVycyhmaWx0ZXJzKTsKICB9Owp9OyAvLyBSZXNwb25kIHRvIHVzZXIgY2hhbmdpbmcgdGhlIHJlZnJlc2ggc2V0dGluZ3MKCgp2YXIgZGVmYXVsdE9uUmVmcmVzaENoYW5nZSA9IGZ1bmN0aW9uIGRlZmF1bHRPblJlZnJlc2hDaGFuZ2UocXVlcnlTZXJ2aWNlKSB7CiAgdmFyIHRpbWVmaWx0ZXIgPSBxdWVyeVNlcnZpY2UudGltZWZpbHRlci50aW1lZmlsdGVyOwogIHJldHVybiBmdW5jdGlvbiAob3B0aW9ucykgewogICAgdGltZWZpbHRlci5zZXRSZWZyZXNoSW50ZXJ2YWwoewogICAgICB2YWx1ZTogb3B0aW9ucy5yZWZyZXNoSW50ZXJ2YWwsCiAgICAgIHBhdXNlOiBvcHRpb25zLmlzUGF1c2VkCiAgICB9KTsKICB9Owp9OyAvLyBSZXNwb25kIHRvIHVzZXIgY2hhbmdpbmcgdGhlIHF1ZXJ5IHN0cmluZyBvciB0aW1lIHNldHRpbmdzCgoKdmFyIGRlZmF1bHRPblF1ZXJ5U3VibWl0ID0gZnVuY3Rpb24gZGVmYXVsdE9uUXVlcnlTdWJtaXQocHJvcHMsIHF1ZXJ5U2VydmljZSwgY3VycmVudFF1ZXJ5LCBzZXRRdWVyeVN0cmluZ1N0YXRlKSB7CiAgaWYgKCFwcm9wcy51c2VEZWZhdWx0QmVoYXZpb3JzKSByZXR1cm4gcHJvcHMub25RdWVyeVN1Ym1pdDsKICB2YXIgdGltZWZpbHRlciA9IHF1ZXJ5U2VydmljZS50aW1lZmlsdGVyLnRpbWVmaWx0ZXI7CiAgcmV0dXJuIGZ1bmN0aW9uIChwYXlsb2FkKSB7CiAgICB2YXIgaXNVcGRhdGUgPSAhXy5pc0VxdWFsKHRpbWVmaWx0ZXIuZ2V0VGltZSgpLCBwYXlsb2FkLmRhdGVSYW5nZSkgfHwgIV8uaXNFcXVhbChwYXlsb2FkLnF1ZXJ5LCBjdXJyZW50UXVlcnkpOwoKICAgIGlmIChpc1VwZGF0ZSkgewogICAgICB0aW1lZmlsdGVyLnNldFRpbWUocGF5bG9hZC5kYXRlUmFuZ2UpOwogICAgICBzZXRRdWVyeVN0cmluZ1N0YXRlKHBheWxvYWQucXVlcnkpOwogICAgfSBlbHNlIHsKICAgICAgLy8gUmVmcmVzaCBidXR0b24gdHJpZ2dlcmVkIGZvciBhbiB1cGRhdGUKICAgICAgaWYgKHByb3BzLm9uUXVlcnlTdWJtaXQpIHByb3BzLm9uUXVlcnlTdWJtaXQoewogICAgICAgIGRhdGVSYW5nZTogdGltZWZpbHRlci5nZXRUaW1lKCksCiAgICAgICAgcXVlcnk6IGN1cnJlbnRRdWVyeQogICAgICB9LCBmYWxzZSk7CiAgICB9CiAgfTsKfTsgLy8gUmVzcG9uZCB0byB1c2VyIGNsZWFyaW5nIGEgc2F2ZWQgcXVlcnkKCgp2YXIgZGVmYXVsdE9uQ2xlYXJTYXZlZFF1ZXJ5ID0gZnVuY3Rpb24gZGVmYXVsdE9uQ2xlYXJTYXZlZFF1ZXJ5KHByb3BzLCBjbGVhclNhdmVkUXVlcnkpIHsKICBpZiAoIXByb3BzLnVzZURlZmF1bHRCZWhhdmlvcnMpIHJldHVybiBwcm9wcy5vbkNsZWFyU2F2ZWRRdWVyeTsKICByZXR1cm4gZnVuY3Rpb24gKCkgewogICAgY2xlYXJTYXZlZFF1ZXJ5KCk7CiAgICBpZiAocHJvcHMub25TYXZlZFF1ZXJ5SWRDaGFuZ2UpIHByb3BzLm9uU2F2ZWRRdWVyeUlkQ2hhbmdlKCk7CiAgfTsKfTsgLy8gUmVzcG9uZCB0byB1c2VyIHNhdmluZyBvciB1cGRhdGluZyBhIHNhdmVkIHF1ZXJ5CgoKdmFyIGRlZmF1bHRPblNhdmVkUXVlcnlVcGRhdGVkID0gZnVuY3Rpb24gZGVmYXVsdE9uU2F2ZWRRdWVyeVVwZGF0ZWQocHJvcHMsIHNldFNhdmVkUXVlcnkpIHsKICBpZiAoIXByb3BzLnVzZURlZmF1bHRCZWhhdmlvcnMpIHJldHVybiBwcm9wcy5vblNhdmVkUXVlcnlVcGRhdGVkOwogIHJldHVybiBmdW5jdGlvbiAoc2F2ZWRRdWVyeSkgewogICAgc2V0U2F2ZWRRdWVyeShzYXZlZFF1ZXJ5KTsKICAgIGlmIChwcm9wcy5vblNhdmVkUXVlcnlJZENoYW5nZSkgcHJvcHMub25TYXZlZFF1ZXJ5SWRDaGFuZ2Uoc2F2ZWRRdWVyeS5pZCk7CiAgfTsKfTsKCnZhciBvdmVycmlkZURlZmF1bHRCZWhhdmlvcnMgPSBmdW5jdGlvbiBvdmVycmlkZURlZmF1bHRCZWhhdmlvcnMocHJvcHMpIHsKICByZXR1cm4gcHJvcHMudXNlRGVmYXVsdEJlaGF2aW9ycyA/IHt9IDogcHJvcHM7Cn07CgpmdW5jdGlvbiBjcmVhdGVTZWFyY2hCYXIoX3JlZikgewogIHZhciBjb3JlID0gX3JlZi5jb3JlLAogICAgICBzdG9yYWdlID0gX3JlZi5zdG9yYWdlLAogICAgICBkYXRhID0gX3JlZi5kYXRhOyAvLyBBcHAgbmFtZSBzaG91bGQgY29tZSBmcm9tIHRoZSBjb3JlIGFwcGxpY2F0aW9uIHNlcnZpY2UuCiAgLy8gVW50aWwgaXQncyBhdmFpbGFibGUsIHdlJ2xsIGFzayB0aGUgdXNlciB0byBwcm92aWRlIGl0IGZvciB0aGUgcHJlLXdpcmVkIGNvbXBvbmVudC4KCiAgcmV0dXJuIGZ1bmN0aW9uIChwcm9wcykgewogICAgdmFyIHVzZURlZmF1bHRCZWhhdmlvcnMgPSBwcm9wcy51c2VEZWZhdWx0QmVoYXZpb3JzOyAvLyBIYW5kbGUgcXVlcmllcwoKICAgIHZhciBxdWVyeVJlZiA9ICgwLCBfcmVhY3QudXNlUmVmKShwcm9wcy5xdWVyeSk7CiAgICB2YXIgb25RdWVyeVN1Ym1pdFJlZiA9ICgwLCBfcmVhY3QudXNlUmVmKShwcm9wcy5vblF1ZXJ5U3VibWl0KTsKICAgIHZhciBkZWZhdWx0UXVlcnkgPSB7CiAgICAgIHF1ZXJ5OiAnJywKICAgICAgbGFuZ3VhZ2U6IHN0b3JhZ2UuZ2V0KCdraWJhbmEudXNlclF1ZXJ5TGFuZ3VhZ2UnKSB8fCBjb3JlLnVpU2V0dGluZ3MuZ2V0KCdzZWFyY2g6cXVlcnlMYW5ndWFnZScpCiAgICB9OwoKICAgIHZhciBfdXNlU3RhdGUgPSAoMCwgX3JlYWN0LnVzZVN0YXRlKShwcm9wcy5xdWVyeSB8fCBkZWZhdWx0UXVlcnkpLAogICAgICAgIF91c2VTdGF0ZTIgPSBfc2xpY2VkVG9BcnJheShfdXNlU3RhdGUsIDIpLAogICAgICAgIHF1ZXJ5ID0gX3VzZVN0YXRlMlswXSwKICAgICAgICBzZXRRdWVyeSA9IF91c2VTdGF0ZTJbMV07CgogICAgKDAsIF9yZWFjdC51c2VFZmZlY3QpKGZ1bmN0aW9uICgpIHsKICAgICAgaWYgKHByb3BzLnF1ZXJ5ICE9PSBxdWVyeVJlZi5jdXJyZW50KSB7CiAgICAgICAgcXVlcnlSZWYuY3VycmVudCA9IHByb3BzLnF1ZXJ5OwogICAgICAgIHNldFF1ZXJ5KHByb3BzLnF1ZXJ5IHx8IGRlZmF1bHRRdWVyeSk7CiAgICAgIH0KICAgIH0sIFtkZWZhdWx0UXVlcnksIHByb3BzLnF1ZXJ5XSk7CiAgICAoMCwgX3JlYWN0LnVzZUVmZmVjdCkoZnVuY3Rpb24gKCkgewogICAgICBpZiAocHJvcHMub25RdWVyeVN1Ym1pdCAhPT0gb25RdWVyeVN1Ym1pdFJlZi5jdXJyZW50KSB7CiAgICAgICAgb25RdWVyeVN1Ym1pdFJlZi5jdXJyZW50ID0gcHJvcHMub25RdWVyeVN1Ym1pdDsKICAgICAgfQogICAgfSwgW3Byb3BzLm9uUXVlcnlTdWJtaXRdKTsgLy8gaGFuZGxlIHNlcnZpY2Ugc3RhdGUgdXBkYXRlcy4KICAgIC8vIGkuZS4gZmlsdGVycyBiZWluZyBhZGRlZCBmcm9tIGEgdmlzdWFsaXphdGlvbiBkaXJlY3RseSB0byBmaWx0ZXJNYW5hZ2VyLgoKICAgIHZhciBfdXNlRmlsdGVyTWFuYWdlciA9ICgwLCBfdXNlX2ZpbHRlcl9tYW5hZ2VyLnVzZUZpbHRlck1hbmFnZXIpKHsKICAgICAgZmlsdGVyczogcHJvcHMuZmlsdGVycywKICAgICAgZmlsdGVyTWFuYWdlcjogZGF0YS5xdWVyeS5maWx0ZXJNYW5hZ2VyCiAgICB9KSwKICAgICAgICBmaWx0ZXJzID0gX3VzZUZpbHRlck1hbmFnZXIuZmlsdGVyczsKCiAgICB2YXIgX3VzZVRpbWVmaWx0ZXIgPSAoMCwgX3VzZV90aW1lZmlsdGVyLnVzZVRpbWVmaWx0ZXIpKHsKICAgICAgZGF0ZVJhbmdlRnJvbTogcHJvcHMuZGF0ZVJhbmdlRnJvbSwKICAgICAgZGF0ZVJhbmdlVG86IHByb3BzLmRhdGVSYW5nZVRvLAogICAgICByZWZyZXNoSW50ZXJ2YWw6IHByb3BzLnJlZnJlc2hJbnRlcnZhbCwKICAgICAgaXNSZWZyZXNoUGF1c2VkOiBwcm9wcy5pc1JlZnJlc2hQYXVzZWQsCiAgICAgIHRpbWVmaWx0ZXI6IGRhdGEucXVlcnkudGltZWZpbHRlci50aW1lZmlsdGVyCiAgICB9KSwKICAgICAgICB0aW1lUmFuZ2UgPSBfdXNlVGltZWZpbHRlci50aW1lUmFuZ2UsCiAgICAgICAgcmVmcmVzaEludGVydmFsID0gX3VzZVRpbWVmaWx0ZXIucmVmcmVzaEludGVydmFsOyAvLyBGZXRjaCBhbmQgdXBkYXRlIFVJIGZyb20gc2F2ZWQgcXVlcnkKCgogICAgdmFyIF91c2VTYXZlZFF1ZXJ5ID0gKDAsIF91c2Vfc2F2ZWRfcXVlcnkudXNlU2F2ZWRRdWVyeSkoewogICAgICBxdWVyeVNlcnZpY2U6IGRhdGEucXVlcnksCiAgICAgIHNldFF1ZXJ5OiBzZXRRdWVyeSwKICAgICAgc2F2ZWRRdWVyeUlkOiBwcm9wcy5zYXZlZFF1ZXJ5SWQsCiAgICAgIG5vdGlmaWNhdGlvbnM6IGNvcmUubm90aWZpY2F0aW9ucywKICAgICAgZGVmYXVsdExhbmd1YWdlOiBkZWZhdWx0UXVlcnkubGFuZ3VhZ2UKICAgIH0pLAogICAgICAgIHNhdmVkUXVlcnkgPSBfdXNlU2F2ZWRRdWVyeS5zYXZlZFF1ZXJ5LAogICAgICAgIHNldFNhdmVkUXVlcnkgPSBfdXNlU2F2ZWRRdWVyeS5zZXRTYXZlZFF1ZXJ5LAogICAgICAgIGNsZWFyU2F2ZWRRdWVyeSA9IF91c2VTYXZlZFF1ZXJ5LmNsZWFyU2F2ZWRRdWVyeTsgLy8gRmlyZSBvblF1ZXJ5U3VibWl0IG9uIHF1ZXJ5IG9yIHRpbWVyYW5nZSBjaGFuZ2UKCgogICAgKDAsIF9yZWFjdC51c2VFZmZlY3QpKGZ1bmN0aW9uICgpIHsKICAgICAgaWYgKCF1c2VEZWZhdWx0QmVoYXZpb3JzIHx8ICFvblF1ZXJ5U3VibWl0UmVmLmN1cnJlbnQpIHJldHVybjsKICAgICAgb25RdWVyeVN1Ym1pdFJlZi5jdXJyZW50KHsKICAgICAgICBkYXRlUmFuZ2U6IHRpbWVSYW5nZSwKICAgICAgICBxdWVyeTogcXVlcnkKICAgICAgfSwgdHJ1ZSk7CiAgICB9LCBbcXVlcnksIHRpbWVSYW5nZSwgdXNlRGVmYXVsdEJlaGF2aW9yc10pOwogICAgcmV0dXJuIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3B1YmxpYy5LaWJhbmFDb250ZXh0UHJvdmlkZXIsIHsKICAgICAgc2VydmljZXM6IF9vYmplY3RTcHJlYWQoewogICAgICAgIGFwcE5hbWU6IHByb3BzLmFwcE5hbWUsCiAgICAgICAgZGF0YTogZGF0YSwKICAgICAgICBzdG9yYWdlOiBzdG9yYWdlCiAgICAgIH0sIGNvcmUpCiAgICB9LCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9zZWFyY2hfYmFyLlNlYXJjaEJhciwgX2V4dGVuZHMoewogICAgICBzaG93QXV0b1JlZnJlc2hPbmx5OiBwcm9wcy5zaG93QXV0b1JlZnJlc2hPbmx5LAogICAgICBzaG93RGF0ZVBpY2tlcjogcHJvcHMuc2hvd0RhdGVQaWNrZXIsCiAgICAgIHNob3dGaWx0ZXJCYXI6IHByb3BzLnNob3dGaWx0ZXJCYXIsCiAgICAgIHNob3dRdWVyeUJhcjogcHJvcHMuc2hvd1F1ZXJ5QmFyLAogICAgICBzaG93UXVlcnlJbnB1dDogcHJvcHMuc2hvd1F1ZXJ5SW5wdXQsCiAgICAgIHNob3dTYXZlUXVlcnk6IHByb3BzLnNob3dTYXZlUXVlcnksCiAgICAgIHNjcmVlblRpdGxlOiBwcm9wcy5zY3JlZW5UaXRsZSwKICAgICAgaW5kZXhQYXR0ZXJuczogcHJvcHMuaW5kZXhQYXR0ZXJucywKICAgICAgdGltZUhpc3Rvcnk6IGRhdGEucXVlcnkudGltZWZpbHRlci5oaXN0b3J5LAogICAgICBkYXRlUmFuZ2VGcm9tOiB0aW1lUmFuZ2UuZnJvbSwKICAgICAgZGF0ZVJhbmdlVG86IHRpbWVSYW5nZS50bywKICAgICAgcmVmcmVzaEludGVydmFsOiByZWZyZXNoSW50ZXJ2YWwudmFsdWUsCiAgICAgIGlzUmVmcmVzaFBhdXNlZDogcmVmcmVzaEludGVydmFsLnBhdXNlLAogICAgICBmaWx0ZXJzOiBmaWx0ZXJzLAogICAgICBxdWVyeTogcXVlcnksCiAgICAgIG9uRmlsdGVyc1VwZGF0ZWQ6IGRlZmF1bHRGaWx0ZXJzVXBkYXRlZChkYXRhLnF1ZXJ5KSwKICAgICAgb25SZWZyZXNoQ2hhbmdlOiBkZWZhdWx0T25SZWZyZXNoQ2hhbmdlKGRhdGEucXVlcnkpLAogICAgICBzYXZlZFF1ZXJ5OiBzYXZlZFF1ZXJ5LAogICAgICBvblF1ZXJ5U3VibWl0OiBkZWZhdWx0T25RdWVyeVN1Ym1pdChwcm9wcywgZGF0YS5xdWVyeSwgcXVlcnksIHNldFF1ZXJ5KSwKICAgICAgb25DbGVhclNhdmVkUXVlcnk6IGRlZmF1bHRPbkNsZWFyU2F2ZWRRdWVyeShwcm9wcywgY2xlYXJTYXZlZFF1ZXJ5KSwKICAgICAgb25TYXZlZFF1ZXJ5VXBkYXRlZDogZGVmYXVsdE9uU2F2ZWRRdWVyeVVwZGF0ZWQocHJvcHMsIHNldFNhdmVkUXVlcnkpLAogICAgICBvblNhdmVkOiBkZWZhdWx0T25TYXZlZFF1ZXJ5VXBkYXRlZChwcm9wcywgc2V0U2F2ZWRRdWVyeSkKICAgIH0sIG92ZXJyaWRlRGVmYXVsdEJlaGF2aW9ycyhwcm9wcykpKSk7CiAgfTsKfQ=="},null]}