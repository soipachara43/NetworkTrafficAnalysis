{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/canvas/canvas_plugin_src/functions/common/progress.js","dependencies":[{"path":"x-pack/legacy/plugins/canvas/canvas_plugin_src/functions/common/progress.js","mtime":1589249551791},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKZnVuY3Rpb24gb3duS2V5cyhvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7IHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCk7IGlmIChlbnVtZXJhYmxlT25seSkgc3ltYm9scyA9IHN5bWJvbHMuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHsgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7IH0pOyBrZXlzLnB1c2guYXBwbHkoa2V5cywgc3ltYm9scyk7IH0gcmV0dXJuIGtleXM7IH0KCmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV0gIT0gbnVsbCA/IGFyZ3VtZW50c1tpXSA6IHt9OyBpZiAoaSAlIDIpIHsgb3duS2V5cyhzb3VyY2UsIHRydWUpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTsgfSk7IH0gZWxzZSBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMpIHsgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKTsgfSBlbHNlIHsgb3duS2V5cyhzb3VyY2UpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBrZXkpKTsgfSk7IH0gfSByZXR1cm4gdGFyZ2V0OyB9CgpmdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7IGlmIChrZXkgaW4gb2JqKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgeyB2YWx1ZTogdmFsdWUsIGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUgfSk7IH0gZWxzZSB7IG9ialtrZXldID0gdmFsdWU7IH0gcmV0dXJuIG9iajsgfQoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLnByb2dyZXNzID0gcHJvZ3Jlc3M7CmV4cG9ydHMuU2hhcGUgPSB2b2lkIDA7Cgp2YXIgX2xvZGFzaCA9IHJlcXVpcmUoImxvZGFzaCIpOwoKdmFyIF9mb250cyA9IHJlcXVpcmUoIi4uLy4uLy4uL2NvbW1vbi9saWIvZm9udHMiKTsKCnZhciBfaTE4biA9IHJlcXVpcmUoIi4uLy4uLy4uL2kxOG4iKTsKLyoKICogQ29weXJpZ2h0IEVsYXN0aWNzZWFyY2ggQi5WLiBhbmQvb3IgbGljZW5zZWQgdG8gRWxhc3RpY3NlYXJjaCBCLlYuIHVuZGVyIG9uZQogKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gTGljZW5zZWQgdW5kZXIgdGhlIEVsYXN0aWMgTGljZW5zZTsKICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBFbGFzdGljIExpY2Vuc2UuCiAqLwoKCnZhciBTaGFwZTsKZXhwb3J0cy5TaGFwZSA9IFNoYXBlOwoKKGZ1bmN0aW9uIChTaGFwZSkgewogIFNoYXBlWyJHQVVHRSJdID0gImdhdWdlIjsKICBTaGFwZVsiSE9SSVpPTlRBTF9CQVIiXSA9ICJob3Jpem9udGFsQmFyIjsKICBTaGFwZVsiSE9SSVpPTlRBTF9QSUxMIl0gPSAiaG9yaXpvbnRhbFBpbGwiOwogIFNoYXBlWyJTRU1JQ0lSQ0xFIl0gPSAic2VtaWNpcmNsZSI7CiAgU2hhcGVbIlVOSUNPUk4iXSA9ICJ1bmljb3JuIjsKICBTaGFwZVsiVkVSVElDQUxfQkFSIl0gPSAidmVydGljYWxCYXIiOwogIFNoYXBlWyJWRVJUSUNBTF9QSUxMIl0gPSAidmVydGljYWxQaWxsIjsKICBTaGFwZVsiV0hFRUwiXSA9ICJ3aGVlbCI7Cn0pKFNoYXBlIHx8IChleHBvcnRzLlNoYXBlID0gU2hhcGUgPSB7fSkpOwoKZnVuY3Rpb24gcHJvZ3Jlc3MoKSB7CiAgdmFyIF9wcm9ncmVzcyA9ICgwLCBfaTE4bi5nZXRGdW5jdGlvbkhlbHApKCkucHJvZ3Jlc3MsCiAgICAgIGhlbHAgPSBfcHJvZ3Jlc3MuaGVscCwKICAgICAgYXJnSGVscCA9IF9wcm9ncmVzcy5hcmdzOwogIHZhciBlcnJvcnMgPSAoMCwgX2kxOG4uZ2V0RnVuY3Rpb25FcnJvcnMpKCkucHJvZ3Jlc3M7CiAgcmV0dXJuIHsKICAgIG5hbWU6ICdwcm9ncmVzcycsCiAgICBhbGlhc2VzOiBbXSwKICAgIHR5cGU6ICdyZW5kZXInLAogICAgaW5wdXRUeXBlczogWydudW1iZXInXSwKICAgIGhlbHA6IGhlbHAsCiAgICBhcmdzOiB7CiAgICAgIHNoYXBlOiB7CiAgICAgICAgYWxpYXNlczogWydfJ10sCiAgICAgICAgdHlwZXM6IFsnc3RyaW5nJ10sCiAgICAgICAgaGVscDogYXJnSGVscC5zaGFwZSwKICAgICAgICBvcHRpb25zOiBPYmplY3QudmFsdWVzKFNoYXBlKSwKICAgICAgICBkZWZhdWx0OiAnZ2F1Z2UnCiAgICAgIH0sCiAgICAgIGJhckNvbG9yOiB7CiAgICAgICAgdHlwZXM6IFsnc3RyaW5nJ10sCiAgICAgICAgaGVscDogYXJnSGVscC5iYXJDb2xvciwKICAgICAgICBkZWZhdWx0OiAiI2YwZjBmMCIKICAgICAgfSwKICAgICAgYmFyV2VpZ2h0OiB7CiAgICAgICAgdHlwZXM6IFsnbnVtYmVyJ10sCiAgICAgICAgaGVscDogYXJnSGVscC5iYXJXZWlnaHQsCiAgICAgICAgZGVmYXVsdDogMjAKICAgICAgfSwKICAgICAgZm9udDogewogICAgICAgIHR5cGVzOiBbJ3N0eWxlJ10sCiAgICAgICAgaGVscDogYXJnSGVscC5mb250LAogICAgICAgIGRlZmF1bHQ6ICJ7Zm9udCBzaXplPTI0IGZhbWlseT1cIiIuY29uY2F0KF9mb250cy5vcGVuU2Fucy52YWx1ZSwgIlwiIGNvbG9yPVwiIzAwMDAwMFwiIGFsaWduPWNlbnRlcn0iKQogICAgICB9LAogICAgICBsYWJlbDogewogICAgICAgIHR5cGVzOiBbJ2Jvb2xlYW4nLCAnc3RyaW5nJ10sCiAgICAgICAgaGVscDogYXJnSGVscC5sYWJlbCwKICAgICAgICBkZWZhdWx0OiB0cnVlCiAgICAgIH0sCiAgICAgIG1heDogewogICAgICAgIHR5cGVzOiBbJ251bWJlciddLAogICAgICAgIGhlbHA6IGFyZ0hlbHAubWF4LAogICAgICAgIGRlZmF1bHQ6IDEKICAgICAgfSwKICAgICAgdmFsdWVDb2xvcjogewogICAgICAgIHR5cGVzOiBbJ3N0cmluZyddLAogICAgICAgIGhlbHA6IGFyZ0hlbHAudmFsdWVDb2xvciwKICAgICAgICBkZWZhdWx0OiAiIzE3ODViMCIKICAgICAgfSwKICAgICAgdmFsdWVXZWlnaHQ6IHsKICAgICAgICB0eXBlczogWydudW1iZXInXSwKICAgICAgICBoZWxwOiBhcmdIZWxwLnZhbHVlV2VpZ2h0LAogICAgICAgIGRlZmF1bHQ6IDIwCiAgICAgIH0KICAgIH0sCiAgICBmbjogZnVuY3Rpb24gZm4odmFsdWUsIGFyZ3MpIHsKICAgICAgaWYgKGFyZ3MubWF4IDw9IDApIHsKICAgICAgICB0aHJvdyBlcnJvcnMuaW52YWxpZE1heFZhbHVlKGFyZ3MubWF4KTsKICAgICAgfQoKICAgICAgaWYgKHZhbHVlID4gYXJncy5tYXggfHwgdmFsdWUgPCAwKSB7CiAgICAgICAgdGhyb3cgZXJyb3JzLmludmFsaWRWYWx1ZSh2YWx1ZSwgYXJncy5tYXgpOwogICAgICB9CgogICAgICB2YXIgbGFiZWwgPSAnJzsKCiAgICAgIGlmIChhcmdzLmxhYmVsKSB7CiAgICAgICAgbGFiZWwgPSB0eXBlb2YgYXJncy5sYWJlbCA9PT0gJ3N0cmluZycgPyBhcmdzLmxhYmVsIDogIiIuY29uY2F0KHZhbHVlKTsKICAgICAgfQoKICAgICAgdmFyIGZvbnQgPSB7fTsKCiAgICAgIGlmICgoMCwgX2xvZGFzaC5nZXQpKGFyZ3MsICdmb250LnNwZWMnKSkgewogICAgICAgIGZvbnQgPSBfb2JqZWN0U3ByZWFkKHt9LCBhcmdzLmZvbnQpOwogICAgICAgIGZvbnQuc3BlYy5maWxsID0gYXJncy5mb250LnNwZWMuY29sb3I7IC8vIFNWRyA8dGV4dD4gdXNlcyBmaWxsIGZvciBmb250IGNvbG9yCiAgICAgIH0KCiAgICAgIHJldHVybiB7CiAgICAgICAgdHlwZTogJ3JlbmRlcicsCiAgICAgICAgYXM6ICdwcm9ncmVzcycsCiAgICAgICAgdmFsdWU6IF9vYmplY3RTcHJlYWQoewogICAgICAgICAgdmFsdWU6IHZhbHVlCiAgICAgICAgfSwgYXJncywgewogICAgICAgICAgbGFiZWw6IGxhYmVsLAogICAgICAgICAgZm9udDogZm9udAogICAgICAgIH0pCiAgICAgIH07CiAgICB9CiAgfTsKfQ=="},null]}