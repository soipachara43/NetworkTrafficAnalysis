{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/siem/public/components/flyout/index.js","dependencies":[{"path":"x-pack/legacy/plugins/siem/public/components/flyout/index.js","mtime":1589249552984},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLkZseW91dCA9IGV4cG9ydHMuRmx5b3V0Q29tcG9uZW50ID0gZXhwb3J0cy5CYWRnZSA9IHZvaWQgMDsKCnZhciBfZXVpID0gcmVxdWlyZSgiQGVsYXN0aWMvZXVpIik7Cgp2YXIgX3JlYWN0ID0gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQocmVxdWlyZSgicmVhY3QiKSk7Cgp2YXIgX3JlYWN0UmVkdXggPSByZXF1aXJlKCJyZWFjdC1yZWR1eCIpOwoKdmFyIF9zdHlsZWRDb21wb25lbnRzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCJzdHlsZWQtY29tcG9uZW50cyIpKTsKCnZhciBfc3RvcmUgPSByZXF1aXJlKCIuLi8uLi9zdG9yZSIpOwoKdmFyIF9idXR0b24gPSByZXF1aXJlKCIuL2J1dHRvbiIpOwoKdmFyIF9wYW5lID0gcmVxdWlyZSgiLi9wYW5lIik7Cgp2YXIgX2FjdGlvbnMgPSByZXF1aXJlKCIuLi8uLi9zdG9yZS9hY3Rpb25zIik7Cgp2YXIgX2NvbnN0YW50cyA9IHJlcXVpcmUoIi4uL3RpbWVsaW5lL2JvZHkvY29uc3RhbnRzIik7Cgp2YXIgX3RpbWVsaW5lID0gcmVxdWlyZSgiLi4vdGltZWxpbmUiKTsKCmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7CiAgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsKICAgIGRlZmF1bHQ6IG9iagogIH07Cn0KCmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKG9iaikgewogIGlmIChvYmogJiYgb2JqLl9fZXNNb2R1bGUpIHsKICAgIHJldHVybiBvYmo7CiAgfSBlbHNlIHsKICAgIHZhciBuZXdPYmogPSB7fTsKCiAgICBpZiAob2JqICE9IG51bGwpIHsKICAgICAgZm9yICh2YXIga2V5IGluIG9iaikgewogICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBrZXkpKSB7CiAgICAgICAgICB2YXIgZGVzYyA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSAmJiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID8gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmosIGtleSkgOiB7fTsKCiAgICAgICAgICBpZiAoZGVzYy5nZXQgfHwgZGVzYy5zZXQpIHsKICAgICAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG5ld09iaiwga2V5LCBkZXNjKTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIG5ld09ialtrZXldID0gb2JqW2tleV07CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9CgogICAgbmV3T2JqLmRlZmF1bHQgPSBvYmo7CiAgICByZXR1cm4gbmV3T2JqOwogIH0KfQovKgogKiBDb3B5cmlnaHQgRWxhc3RpY3NlYXJjaCBCLlYuIGFuZC9vciBsaWNlbnNlZCB0byBFbGFzdGljc2VhcmNoIEIuVi4gdW5kZXIgb25lCiAqIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiBMaWNlbnNlZCB1bmRlciB0aGUgRWxhc3RpYyBMaWNlbnNlOwogKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIEVsYXN0aWMgTGljZW5zZS4KICovCgoKdmFyIEJhZGdlID0gKDAsIF9zdHlsZWRDb21wb25lbnRzLmRlZmF1bHQpKF9ldWkuRXVpQmFkZ2UpLndpdGhDb25maWcoewogIGRpc3BsYXlOYW1lOiAiQmFkZ2UiLAogIGNvbXBvbmVudElkOiAiZWdpeTc2LTAiCn0pKFsicG9zaXRpb246YWJzb2x1dGU7cGFkZGluZy1sZWZ0OjRweDtwYWRkaW5nLXJpZ2h0OjRweDtyaWdodDowJTt0b3A6MCU7Ym9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czo1cHg7Il0pOwpleHBvcnRzLkJhZGdlID0gQmFkZ2U7CkJhZGdlLmRpc3BsYXlOYW1lID0gJ0JhZGdlJzsKCnZhciBWaXNpYmxlID0gX3N0eWxlZENvbXBvbmVudHMuZGVmYXVsdC5kaXYud2l0aENvbmZpZyh7CiAgZGlzcGxheU5hbWU6ICJWaXNpYmxlIiwKICBjb21wb25lbnRJZDogImVnaXk3Ni0xIgp9KShbInZpc2liaWxpdHk6IiwgIjsiXSwgZnVuY3Rpb24gKF9yZWYpIHsKICB2YXIgc2hvdyA9IF9yZWYuc2hvdzsKICByZXR1cm4gc2hvdyA/ICd2aXNpYmxlJyA6ICdoaWRkZW4nOwp9KTsKClZpc2libGUuZGlzcGxheU5hbWUgPSAnVmlzaWJsZSc7Cgp2YXIgRmx5b3V0Q29tcG9uZW50ID0gX3JlYWN0LmRlZmF1bHQubWVtbyhmdW5jdGlvbiAoX3JlZjIpIHsKICB2YXIgZGF0YVByb3ZpZGVycyA9IF9yZWYyLmRhdGFQcm92aWRlcnMsCiAgICAgIGZseW91dEhlaWdodCA9IF9yZWYyLmZseW91dEhlaWdodCwKICAgICAgc2hvdyA9IF9yZWYyLnNob3csCiAgICAgIHNob3dUaW1lbGluZSA9IF9yZWYyLnNob3dUaW1lbGluZSwKICAgICAgdGltZWxpbmVJZCA9IF9yZWYyLnRpbWVsaW5lSWQsCiAgICAgIHVzZXJzVmlld2luZyA9IF9yZWYyLnVzZXJzVmlld2luZywKICAgICAgd2lkdGggPSBfcmVmMi53aWR0aDsKICB2YXIgaGFuZGxlQ2xvc2UgPSAoMCwgX3JlYWN0LnVzZUNhbGxiYWNrKShmdW5jdGlvbiAoKSB7CiAgICByZXR1cm4gc2hvd1RpbWVsaW5lKHsKICAgICAgaWQ6IHRpbWVsaW5lSWQsCiAgICAgIHNob3c6IGZhbHNlCiAgICB9KTsKICB9LCBbc2hvd1RpbWVsaW5lLCB0aW1lbGluZUlkXSk7CiAgdmFyIGhhbmRsZU9wZW4gPSAoMCwgX3JlYWN0LnVzZUNhbGxiYWNrKShmdW5jdGlvbiAoKSB7CiAgICByZXR1cm4gc2hvd1RpbWVsaW5lKHsKICAgICAgaWQ6IHRpbWVsaW5lSWQsCiAgICAgIHNob3c6IHRydWUKICAgIH0pOwogIH0sIFtzaG93VGltZWxpbmUsIHRpbWVsaW5lSWRdKTsKICByZXR1cm4gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfcmVhY3QuZGVmYXVsdC5GcmFnbWVudCwgbnVsbCwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChWaXNpYmxlLCB7CiAgICBzaG93OiBzaG93CiAgfSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfcGFuZS5QYW5lLCB7CiAgICBmbHlvdXRIZWlnaHQ6IGZseW91dEhlaWdodCwKICAgIG9uQ2xvc2U6IGhhbmRsZUNsb3NlLAogICAgdGltZWxpbmVJZDogdGltZWxpbmVJZCwKICAgIHdpZHRoOiB3aWR0aAogIH0sIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3RpbWVsaW5lLlN0YXRlZnVsVGltZWxpbmUsIHsKICAgIG9uQ2xvc2U6IGhhbmRsZUNsb3NlLAogICAgdXNlcnNWaWV3aW5nOiB1c2Vyc1ZpZXdpbmcsCiAgICBpZDogdGltZWxpbmVJZAogIH0pKSksIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2J1dHRvbi5GbHlvdXRCdXR0b24sIHsKICAgIGRhdGFQcm92aWRlcnM6IGRhdGFQcm92aWRlcnMsCiAgICBzaG93OiAhc2hvdywKICAgIHRpbWVsaW5lSWQ6IHRpbWVsaW5lSWQsCiAgICBvbk9wZW46IGhhbmRsZU9wZW4KICB9KSk7Cn0pOwoKZXhwb3J0cy5GbHlvdXRDb21wb25lbnQgPSBGbHlvdXRDb21wb25lbnQ7CkZseW91dENvbXBvbmVudC5kaXNwbGF5TmFtZSA9ICdGbHlvdXRDb21wb25lbnQnOwp2YXIgREVGQVVMVF9EQVRBX1BST1ZJREVSUyA9IFtdOwp2YXIgREVGQVVMVF9USU1FTElORV9CWV9JRCA9IHt9OwoKdmFyIG1hcFN0YXRlVG9Qcm9wcyA9IGZ1bmN0aW9uIG1hcFN0YXRlVG9Qcm9wcyhzdGF0ZSwgX3JlZjMpIHsKICB2YXIgX3RpbWVsaW5lU2VsZWN0b3JzJHRpLCBfdGltZWxpbmVCeUlkJHRpbWVsaW4sIF90aW1lbGluZUJ5SWQkdGltZWxpbjIsIF9yZWY0LCBfdGltZWxpbmVCeUlkJHRpbWVsaW4zLCBfcmVmNSwgX3RpbWVsaW5lQnlJZCR0aW1lbGluNDsKCiAgdmFyIHRpbWVsaW5lSWQgPSBfcmVmMy50aW1lbGluZUlkOwogIHZhciB0aW1lbGluZUJ5SWQgPSAoX3RpbWVsaW5lU2VsZWN0b3JzJHRpID0gX3N0b3JlLnRpbWVsaW5lU2VsZWN0b3JzLnRpbWVsaW5lQnlJZFNlbGVjdG9yKHN0YXRlKSkgIT09IG51bGwgJiYgX3RpbWVsaW5lU2VsZWN0b3JzJHRpICE9PSB2b2lkIDAgPyBfdGltZWxpbmVTZWxlY3RvcnMkdGkgOiBERUZBVUxUX1RJTUVMSU5FX0JZX0lEOwogIC8qCiAgICBJbiBjYXNlIHRpbWVsaW5lQnlJZFt0aW1lbGluZUlkXT8uZGF0YVByb3ZpZGVycyBpcyBhbiBlbXB0eSBhcnJheSBpdCB3aWxsIGNhdXNlIHVubmVjZXNzYXJ5IHJlcmVuZGVyCiAgICBvZiBTdGF0ZWZ1bFRpbWVsaW5lIHdoaWNoIGNhbiBiZSBleHBlbnNpdmUsIHNvIHRvIGF2b2lkIHRoYXQgcmV0dXJuIERFRkFVTFRfREFUQV9QUk9WSURFUlMKICAqLwoKICB2YXIgZGF0YVByb3ZpZGVycyA9ICgoX3RpbWVsaW5lQnlJZCR0aW1lbGluID0gdGltZWxpbmVCeUlkW3RpbWVsaW5lSWRdKSA9PT0gbnVsbCB8fCBfdGltZWxpbmVCeUlkJHRpbWVsaW4gPT09IHZvaWQgMCA/IHZvaWQgMCA6IF90aW1lbGluZUJ5SWQkdGltZWxpbi5kYXRhUHJvdmlkZXJzLmxlbmd0aCkgPyAoX3RpbWVsaW5lQnlJZCR0aW1lbGluMiA9IHRpbWVsaW5lQnlJZFt0aW1lbGluZUlkXSkgPT09IG51bGwgfHwgX3RpbWVsaW5lQnlJZCR0aW1lbGluMiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3RpbWVsaW5lQnlJZCR0aW1lbGluMi5kYXRhUHJvdmlkZXJzIDogREVGQVVMVF9EQVRBX1BST1ZJREVSUzsKICB2YXIgc2hvdyA9IChfcmVmNCA9IChfdGltZWxpbmVCeUlkJHRpbWVsaW4zID0gdGltZWxpbmVCeUlkW3RpbWVsaW5lSWRdKSA9PT0gbnVsbCB8fCBfdGltZWxpbmVCeUlkJHRpbWVsaW4zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdGltZWxpbmVCeUlkJHRpbWVsaW4zLnNob3cpICE9PSBudWxsICYmIF9yZWY0ICE9PSB2b2lkIDAgPyBfcmVmNCA6IGZhbHNlOwogIHZhciB3aWR0aCA9IChfcmVmNSA9IChfdGltZWxpbmVCeUlkJHRpbWVsaW40ID0gdGltZWxpbmVCeUlkW3RpbWVsaW5lSWRdKSA9PT0gbnVsbCB8fCBfdGltZWxpbmVCeUlkJHRpbWVsaW40ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdGltZWxpbmVCeUlkJHRpbWVsaW40LndpZHRoKSAhPT0gbnVsbCAmJiBfcmVmNSAhPT0gdm9pZCAwID8gX3JlZjUgOiBfY29uc3RhbnRzLkRFRkFVTFRfVElNRUxJTkVfV0lEVEg7CiAgcmV0dXJuIHsKICAgIGRhdGFQcm92aWRlcnM6IGRhdGFQcm92aWRlcnMsCiAgICBzaG93OiBzaG93LAogICAgd2lkdGg6IHdpZHRoCiAgfTsKfTsKCnZhciBtYXBEaXNwYXRjaFRvUHJvcHMgPSB7CiAgc2hvd1RpbWVsaW5lOiBfYWN0aW9ucy50aW1lbGluZUFjdGlvbnMuc2hvd1RpbWVsaW5lCn07CnZhciBjb25uZWN0b3IgPSAoMCwgX3JlYWN0UmVkdXguY29ubmVjdCkobWFwU3RhdGVUb1Byb3BzLCBtYXBEaXNwYXRjaFRvUHJvcHMpOwp2YXIgRmx5b3V0ID0gY29ubmVjdG9yKEZseW91dENvbXBvbmVudCk7CmV4cG9ydHMuRmx5b3V0ID0gRmx5b3V0OwpGbHlvdXQuZGlzcGxheU5hbWUgPSAnRmx5b3V0Jzs="},null]}