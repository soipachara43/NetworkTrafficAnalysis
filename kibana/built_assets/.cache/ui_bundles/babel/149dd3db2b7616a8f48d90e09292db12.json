{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/plugins/infra/public/components/document_title.js","dependencies":[{"path":"x-pack/plugins/infra/public/components/document_title.js","mtime":1589249554225},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKZnVuY3Rpb24gX3R5cGVvZjIob2JqKSB7IGlmICh0eXBlb2YgU3ltYm9sID09PSAiZnVuY3Rpb24iICYmIHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPT09ICJzeW1ib2wiKSB7IF90eXBlb2YyID0gZnVuY3Rpb24gX3R5cGVvZjIob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9OyB9IGVsc2UgeyBfdHlwZW9mMiA9IGZ1bmN0aW9uIF90eXBlb2YyKG9iaikgeyByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09ICJmdW5jdGlvbiIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gInN5bWJvbCIgOiB0eXBlb2Ygb2JqOyB9OyB9IHJldHVybiBfdHlwZW9mMihvYmopOyB9CgpPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgIl9fZXNNb2R1bGUiLCB7CiAgdmFsdWU6IHRydWUKfSk7CmV4cG9ydHMuRG9jdW1lbnRUaXRsZSA9IHZvaWQgMDsKCnZhciBfcmVhY3QgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoInJlYWN0IikpOwoKZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsKICByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogewogICAgZGVmYXVsdDogb2JqCiAgfTsKfQoKZnVuY3Rpb24gX3R5cGVvZihvYmopIHsKICBpZiAodHlwZW9mIFN5bWJvbCA9PT0gImZ1bmN0aW9uIiAmJiBfdHlwZW9mMihTeW1ib2wuaXRlcmF0b3IpID09PSAic3ltYm9sIikgewogICAgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7CiAgICAgIHJldHVybiBfdHlwZW9mMihvYmopOwogICAgfTsKICB9IGVsc2UgewogICAgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7CiAgICAgIHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gImZ1bmN0aW9uIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyAic3ltYm9sIiA6IF90eXBlb2YyKG9iaik7CiAgICB9OwogIH0KCiAgcmV0dXJuIF90eXBlb2Yob2JqKTsKfQoKZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgewogIGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7CiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb24iKTsKICB9Cn0KCmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsKICBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7CiAgICB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOwogICAgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOwogICAgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOwogICAgaWYgKCJ2YWx1ZSIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7CiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7CiAgfQp9CgpmdW5jdGlvbiBfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7CiAgaWYgKHByb3RvUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7CiAgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOwogIHJldHVybiBDb25zdHJ1Y3RvcjsKfQoKZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgewogIGlmIChjYWxsICYmIChfdHlwZW9mKGNhbGwpID09PSAib2JqZWN0IiB8fCB0eXBlb2YgY2FsbCA9PT0gImZ1bmN0aW9uIikpIHsKICAgIHJldHVybiBjYWxsOwogIH0KCiAgcmV0dXJuIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZik7Cn0KCmZ1bmN0aW9uIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZikgewogIGlmIChzZWxmID09PSB2b2lkIDApIHsKICAgIHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcigidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkIik7CiAgfQoKICByZXR1cm4gc2VsZjsKfQoKZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHsKICBfZ2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3QuZ2V0UHJvdG90eXBlT2YgOiBmdW5jdGlvbiBfZ2V0UHJvdG90eXBlT2YobykgewogICAgcmV0dXJuIG8uX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihvKTsKICB9OwogIHJldHVybiBfZ2V0UHJvdG90eXBlT2Yobyk7Cn0KCmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgewogIGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gImZ1bmN0aW9uIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7CiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiIpOwogIH0KCiAgc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7CiAgICBjb25zdHJ1Y3RvcjogewogICAgICB2YWx1ZTogc3ViQ2xhc3MsCiAgICAgIHdyaXRhYmxlOiB0cnVlLAogICAgICBjb25maWd1cmFibGU6IHRydWUKICAgIH0KICB9KTsKICBpZiAoc3VwZXJDbGFzcykgX3NldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKTsKfQoKZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHsKICBfc2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHwgZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHsKICAgIG8uX19wcm90b19fID0gcDsKICAgIHJldHVybiBvOwogIH07CgogIHJldHVybiBfc2V0UHJvdG90eXBlT2YobywgcCk7Cn0KCnZhciB3cmFwV2l0aFNoYXJlZFN0YXRlID0gZnVuY3Rpb24gd3JhcFdpdGhTaGFyZWRTdGF0ZSgpIHsKICB2YXIgdGl0bGVzID0gW107CiAgdmFyIFRJVExFX1NVRkZJWCA9ICcgLSBLaWJhbmEnOwogIHJldHVybiAoCiAgICAvKiNfX1BVUkVfXyovCiAgICBmdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkgewogICAgICBfaW5oZXJpdHMoX2NsYXNzLCBfUmVhY3QkQ29tcG9uZW50KTsKCiAgICAgIGZ1bmN0aW9uIF9jbGFzcygpIHsKICAgICAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgX2NsYXNzKTsKCiAgICAgICAgcmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9nZXRQcm90b3R5cGVPZihfY2xhc3MpLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpOwogICAgICB9CgogICAgICBfY3JlYXRlQ2xhc3MoX2NsYXNzLCBbewogICAgICAgIGtleTogImNvbXBvbmVudERpZE1vdW50IiwKICAgICAgICB2YWx1ZTogZnVuY3Rpb24gY29tcG9uZW50RGlkTW91bnQoKSB7CiAgICAgICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgICAgIHRoaXMuc2V0U3RhdGUoZnVuY3Rpb24gKCkgewogICAgICAgICAgICByZXR1cm4gewogICAgICAgICAgICAgIGluZGV4OiB0aXRsZXMucHVzaCgnJykgLSAxCiAgICAgICAgICAgIH07CiAgICAgICAgICB9LCBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIF90aGlzLnB1c2hUaXRsZShfdGhpcy5nZXRUaXRsZShfdGhpcy5wcm9wcy50aXRsZSkpOwoKICAgICAgICAgICAgX3RoaXMudXBkYXRlRG9jdW1lbnRUaXRsZSgpOwogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICB9LCB7CiAgICAgICAga2V5OiAiY29tcG9uZW50RGlkVXBkYXRlIiwKICAgICAgICB2YWx1ZTogZnVuY3Rpb24gY29tcG9uZW50RGlkVXBkYXRlKCkgewogICAgICAgICAgdGhpcy5wdXNoVGl0bGUodGhpcy5nZXRUaXRsZSh0aGlzLnByb3BzLnRpdGxlKSk7CiAgICAgICAgICB0aGlzLnVwZGF0ZURvY3VtZW50VGl0bGUoKTsKICAgICAgICB9CiAgICAgIH0sIHsKICAgICAgICBrZXk6ICJjb21wb25lbnRXaWxsVW5tb3VudCIsCiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxVbm1vdW50KCkgewogICAgICAgICAgdGhpcy5yZW1vdmVUaXRsZSgpOwogICAgICAgICAgdGhpcy51cGRhdGVEb2N1bWVudFRpdGxlKCk7CiAgICAgICAgfQogICAgICB9LCB7CiAgICAgICAga2V5OiAicmVuZGVyIiwKICAgICAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkgewogICAgICAgICAgcmV0dXJuIG51bGw7CiAgICAgICAgfQogICAgICB9LCB7CiAgICAgICAga2V5OiAiZ2V0VGl0bGUiLAogICAgICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRUaXRsZSh0aXRsZSkgewogICAgICAgICAgcmV0dXJuIHR5cGVvZiB0aXRsZSA9PT0gJ2Z1bmN0aW9uJyA/IHRpdGxlKHRpdGxlc1t0aGlzLnN0YXRlLmluZGV4IC0gMV0pIDogdGl0bGU7CiAgICAgICAgfQogICAgICB9LCB7CiAgICAgICAga2V5OiAicHVzaFRpdGxlIiwKICAgICAgICB2YWx1ZTogZnVuY3Rpb24gcHVzaFRpdGxlKHRpdGxlKSB7CiAgICAgICAgICB0aXRsZXNbdGhpcy5zdGF0ZS5pbmRleF0gPSB0aXRsZTsKICAgICAgICB9CiAgICAgIH0sIHsKICAgICAgICBrZXk6ICJyZW1vdmVUaXRsZSIsCiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIHJlbW92ZVRpdGxlKCkgewogICAgICAgICAgdGl0bGVzLnBvcCgpOwogICAgICAgIH0KICAgICAgfSwgewogICAgICAgIGtleTogInVwZGF0ZURvY3VtZW50VGl0bGUiLAogICAgICAgIHZhbHVlOiBmdW5jdGlvbiB1cGRhdGVEb2N1bWVudFRpdGxlKCkgewogICAgICAgICAgdmFyIHRpdGxlID0gKHRpdGxlc1t0aXRsZXMubGVuZ3RoIC0gMV0gfHwgJycpICsgVElUTEVfU1VGRklYOwoKICAgICAgICAgIGlmICh0aXRsZSAhPT0gZG9jdW1lbnQudGl0bGUpIHsKICAgICAgICAgICAgZG9jdW1lbnQudGl0bGUgPSB0aXRsZTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH1dKTsKCiAgICAgIHJldHVybiBfY2xhc3M7CiAgICB9KF9yZWFjdC5kZWZhdWx0LkNvbXBvbmVudCkKICApOwp9OwoKdmFyIERvY3VtZW50VGl0bGUgPSB3cmFwV2l0aFNoYXJlZFN0YXRlKCk7CmV4cG9ydHMuRG9jdW1lbnRUaXRsZSA9IERvY3VtZW50VGl0bGU7"},null]}