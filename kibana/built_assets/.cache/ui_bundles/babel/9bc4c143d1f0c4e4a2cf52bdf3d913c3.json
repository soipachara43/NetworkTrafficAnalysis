{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!src/plugins/kibana_utils/public/history/ensure_default_index_pattern.js","dependencies":[{"path":"src/plugins/kibana_utils/public/history/ensure_default_index_pattern.js","mtime":1589249550975},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmVuc3VyZURlZmF1bHRJbmRleFBhdHRlcm4gPSBlbnN1cmVEZWZhdWx0SW5kZXhQYXR0ZXJuOwoKdmFyIF9sb2Rhc2ggPSByZXF1aXJlKCJsb2Rhc2giKTsKCnZhciBfcmVhY3QgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoInJlYWN0IikpOwoKdmFyIF9pMThuID0gcmVxdWlyZSgiQGtibi9pMThuIik7Cgp2YXIgX2V1aSA9IHJlcXVpcmUoIkBlbGFzdGljL2V1aSIpOwoKdmFyIF9wdWJsaWMgPSByZXF1aXJlKCIuLi8uLi8uLi9raWJhbmFfcmVhY3QvcHVibGljIik7CgpmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgewogIHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7CiAgICBkZWZhdWx0OiBvYmoKICB9Owp9CgpmdW5jdGlvbiBhc3luY0dlbmVyYXRvclN0ZXAoZ2VuLCByZXNvbHZlLCByZWplY3QsIF9uZXh0LCBfdGhyb3csIGtleSwgYXJnKSB7CiAgdHJ5IHsKICAgIHZhciBpbmZvID0gZ2VuW2tleV0oYXJnKTsKICAgIHZhciB2YWx1ZSA9IGluZm8udmFsdWU7CiAgfSBjYXRjaCAoZXJyb3IpIHsKICAgIHJlamVjdChlcnJvcik7CiAgICByZXR1cm47CiAgfQoKICBpZiAoaW5mby5kb25lKSB7CiAgICByZXNvbHZlKHZhbHVlKTsKICB9IGVsc2UgewogICAgUHJvbWlzZS5yZXNvbHZlKHZhbHVlKS50aGVuKF9uZXh0LCBfdGhyb3cpOwogIH0KfQoKZnVuY3Rpb24gX2FzeW5jVG9HZW5lcmF0b3IoZm4pIHsKICByZXR1cm4gZnVuY3Rpb24gKCkgewogICAgdmFyIHNlbGYgPSB0aGlzLAogICAgICAgIGFyZ3MgPSBhcmd1bWVudHM7CiAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgICB2YXIgZ2VuID0gZm4uYXBwbHkoc2VsZiwgYXJncyk7CgogICAgICBmdW5jdGlvbiBfbmV4dCh2YWx1ZSkgewogICAgICAgIGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywgIm5leHQiLCB2YWx1ZSk7CiAgICAgIH0KCiAgICAgIGZ1bmN0aW9uIF90aHJvdyhlcnIpIHsKICAgICAgICBhc3luY0dlbmVyYXRvclN0ZXAoZ2VuLCByZXNvbHZlLCByZWplY3QsIF9uZXh0LCBfdGhyb3csICJ0aHJvdyIsIGVycik7CiAgICAgIH0KCiAgICAgIF9uZXh0KHVuZGVmaW5lZCk7CiAgICB9KTsKICB9Owp9Cgp2YXIgYmFubmVySWQ7CnZhciB0aW1lb3V0SWQ7Ci8qKgogKiBDaGVja3Mgd2hldGhlciBhIGRlZmF1bHQgaW5kZXggcGF0dGVybiBpcyBzZXQgYW5kIGV4aXN0cyBhbmQgZGVmaW5lcwogKiBvbmUgb3RoZXJ3aXNlLgogKgogKiBJZiB0aGVyZSBhcmUgbm8gaW5kZXggcGF0dGVybnMsIHJlZGlyZWN0IHRvIG1hbmFnZW1lbnQgcGFnZSBhbmQgc2hvdwogKiBiYW5uZXIuIEluIHRoaXMgY2FzZSB0aGUgcHJvbWlzZSByZXR1cm5lZCBmcm9tIHRoaXMgZnVuY3Rpb24gd2lsbCBuZXZlcgogKiByZXNvbHZlIHRvIHdhaXQgZm9yIHRoZSBVUkwgY2hhbmdlIHRvIGhhcHBlbi4KICovCgpmdW5jdGlvbiBlbnN1cmVEZWZhdWx0SW5kZXhQYXR0ZXJuKF94LCBfeDIsIF94MykgewogIHJldHVybiBfZW5zdXJlRGVmYXVsdEluZGV4UGF0dGVybi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9CgpmdW5jdGlvbiBfZW5zdXJlRGVmYXVsdEluZGV4UGF0dGVybigpIHsKICBfZW5zdXJlRGVmYXVsdEluZGV4UGF0dGVybiA9IF9hc3luY1RvR2VuZXJhdG9yKAogIC8qI19fUFVSRV9fKi8KICByZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKGNvcmUsIGRhdGEsIGhpc3RvcnkpIHsKICAgIHZhciBwYXR0ZXJucywgZGVmYXVsdElkLCBkZWZpbmVkLCBleGlzdHMsIGNhbk1hbmFnZUluZGV4UGF0dGVybnMsIHJlZGlyZWN0VGFyZ2V0OwogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgcmV0dXJuIGRhdGEuaW5kZXhQYXR0ZXJucy5nZXRJZHMoKTsKCiAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgIHBhdHRlcm5zID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgZGVmYXVsdElkID0gY29yZS51aVNldHRpbmdzLmdldCgnZGVmYXVsdEluZGV4Jyk7CiAgICAgICAgICAgIGRlZmluZWQgPSAhIWRlZmF1bHRJZDsKICAgICAgICAgICAgZXhpc3RzID0gKDAsIF9sb2Rhc2guY29udGFpbnMpKHBhdHRlcm5zLCBkZWZhdWx0SWQpOwoKICAgICAgICAgICAgaWYgKGRlZmluZWQgJiYgIWV4aXN0cykgewogICAgICAgICAgICAgIGNvcmUudWlTZXR0aW5ncy5yZW1vdmUoJ2RlZmF1bHRJbmRleCcpOwogICAgICAgICAgICAgIGRlZmF1bHRJZCA9IGRlZmluZWQgPSBmYWxzZTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgaWYgKCFkZWZpbmVkKSB7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDk7CiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIpOwoKICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgaWYgKCEocGF0dGVybnMubGVuZ3RoID49IDEpKSB7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE0OwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CgogICAgICAgICAgICBkZWZhdWx0SWQgPSBwYXR0ZXJuc1swXTsKICAgICAgICAgICAgY29yZS51aVNldHRpbmdzLnNldCgnZGVmYXVsdEluZGV4JywgZGVmYXVsdElkKTsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDIxOwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICBjYXNlIDE0OgogICAgICAgICAgICBjYW5NYW5hZ2VJbmRleFBhdHRlcm5zID0gY29yZS5hcHBsaWNhdGlvbi5jYXBhYmlsaXRpZXMubWFuYWdlbWVudC5raWJhbmEuaW5kZXhfcGF0dGVybnM7CiAgICAgICAgICAgIHJlZGlyZWN0VGFyZ2V0ID0gY2FuTWFuYWdlSW5kZXhQYXR0ZXJucyA/ICcvbWFuYWdlbWVudC9raWJhbmEvaW5kZXhfcGF0dGVybicgOiAnL2hvbWUnOwoKICAgICAgICAgICAgaWYgKHRpbWVvdXRJZCkgewogICAgICAgICAgICAgIGNsZWFyVGltZW91dCh0aW1lb3V0SWQpOwogICAgICAgICAgICB9IC8vIEF2b2lkIGJlaW5nIGhvc3RpbGUgdG8gbmV3IHVzZXJzIHdobyBkb24ndCBoYXZlIGFuIGluZGV4IHBhdHRlcm4gc2V0dXAgeWV0CiAgICAgICAgICAgIC8vIGdpdmUgdGhlbSBhIGZyaWVuZGx5IGluZm8gbWVzc2FnZSBpbnN0ZWFkIG9mIGEgdGVyc2UgZXJyb3IgbWVzc2FnZQoKCiAgICAgICAgICAgIGJhbm5lcklkID0gY29yZS5vdmVybGF5cy5iYW5uZXJzLnJlcGxhY2UoYmFubmVySWQsICgwLCBfcHVibGljLnRvTW91bnRQb2ludCkoX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUNhbGxPdXQsIHsKICAgICAgICAgICAgICBjb2xvcjogIndhcm5pbmciLAogICAgICAgICAgICAgIGljb25UeXBlOiAiaUluQ2lyY2xlIiwKICAgICAgICAgICAgICB0aXRsZTogX2kxOG4uaTE4bi50cmFuc2xhdGUoJ2tpYmFuYV91dGlscy5pbmRleFBhdHRlcm4uYmFubmVyTGFiZWwnLCB7CiAgICAgICAgICAgICAgICBkZWZhdWx0TWVzc2FnZTogIkluIG9yZGVyIHRvIHZpc3VhbGl6ZSBhbmQgZXhwbG9yZSBkYXRhIGluIEtpYmFuYSwgeW91J2xsIG5lZWQgdG8gY3JlYXRlIGFuIGluZGV4IHBhdHRlcm4gdG8gcmV0cmlldmUgZGF0YSBmcm9tIEVsYXN0aWNzZWFyY2guIgogICAgICAgICAgICAgIH0pCiAgICAgICAgICAgIH0pKSk7IC8vIGhpZGUgdGhlIG1lc3NhZ2UgYWZ0ZXIgdGhlIHVzZXIgaGFzIGhhZCBhIGNoYW5jZSB0byBhY2tub3dsZWRnZSBpdCAtLSBzbyBpdCBkb2Vzbid0IHBlcm1hbmVudGx5IHN0aWNrIGFyb3VuZAoKICAgICAgICAgICAgdGltZW91dElkID0gc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgY29yZS5vdmVybGF5cy5iYW5uZXJzLnJlbW92ZShiYW5uZXJJZCk7CiAgICAgICAgICAgICAgdGltZW91dElkID0gdW5kZWZpbmVkOwogICAgICAgICAgICB9LCAxNTAwMCk7CiAgICAgICAgICAgIGhpc3RvcnkucHVzaChyZWRpcmVjdFRhcmdldCk7IC8vIHJldHVybiBuZXZlci1yZXNvbHZpbmcgcHJvbWlzZSB0byBzdG9wIHJlc29sdmluZyBhbmQgd2FpdCBmb3IgdGhlIHVybCBjaGFuZ2UKCiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIG5ldyBQcm9taXNlKGZ1bmN0aW9uICgpIHt9KSk7CgogICAgICAgICAgY2FzZSAyMToKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlKTsKICB9KSk7CiAgcmV0dXJuIF9lbnN1cmVEZWZhdWx0SW5kZXhQYXR0ZXJuLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7Cn0="},null]}