{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/apm/public/components/app/Settings/CustomizeUI/CustomLink/index.js","dependencies":[{"path":"x-pack/legacy/plugins/apm/public/components/app/Settings/CustomizeUI/CustomLink/index.js","mtime":1589249551603},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLkN1c3RvbUxpbmtPdmVydmlldyA9IHZvaWQgMDsKCnZhciBfZXVpID0gcmVxdWlyZSgiQGVsYXN0aWMvZXVpIik7Cgp2YXIgX2xvZGFzaCA9IHJlcXVpcmUoImxvZGFzaCIpOwoKdmFyIF9yZWFjdCA9IF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKHJlcXVpcmUoInJlYWN0IikpOwoKdmFyIF9pMThuID0gcmVxdWlyZSgiQGtibi9pMThuIik7Cgp2YXIgX3VzZUxpY2Vuc2UgPSByZXF1aXJlKCIuLi8uLi8uLi8uLi8uLi9ob29rcy91c2VMaWNlbnNlIik7Cgp2YXIgX3VzZUZldGNoZXIyID0gcmVxdWlyZSgiLi4vLi4vLi4vLi4vLi4vaG9va3MvdXNlRmV0Y2hlciIpOwoKdmFyIF9DdXN0b21MaW5rRmx5b3V0ID0gcmVxdWlyZSgiLi9DdXN0b21MaW5rRmx5b3V0Iik7Cgp2YXIgX0N1c3RvbUxpbmtUYWJsZSA9IHJlcXVpcmUoIi4vQ3VzdG9tTGlua1RhYmxlIik7Cgp2YXIgX0VtcHR5UHJvbXB0ID0gcmVxdWlyZSgiLi9FbXB0eVByb21wdCIpOwoKdmFyIF9UaXRsZSA9IHJlcXVpcmUoIi4vVGl0bGUiKTsKCnZhciBfQ3JlYXRlQ3VzdG9tTGlua0J1dHRvbiA9IHJlcXVpcmUoIi4vQ3JlYXRlQ3VzdG9tTGlua0J1dHRvbiIpOwoKdmFyIF9MaWNlbnNlUHJvbXB0ID0gcmVxdWlyZSgiLi4vLi4vLi4vLi4vc2hhcmVkL0xpY2Vuc2VQcm9tcHQiKTsKCmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKG9iaikgewogIGlmIChvYmogJiYgb2JqLl9fZXNNb2R1bGUpIHsKICAgIHJldHVybiBvYmo7CiAgfSBlbHNlIHsKICAgIHZhciBuZXdPYmogPSB7fTsKCiAgICBpZiAob2JqICE9IG51bGwpIHsKICAgICAgZm9yICh2YXIga2V5IGluIG9iaikgewogICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBrZXkpKSB7CiAgICAgICAgICB2YXIgZGVzYyA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSAmJiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID8gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmosIGtleSkgOiB7fTsKCiAgICAgICAgICBpZiAoZGVzYy5nZXQgfHwgZGVzYy5zZXQpIHsKICAgICAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG5ld09iaiwga2V5LCBkZXNjKTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIG5ld09ialtrZXldID0gb2JqW2tleV07CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9CgogICAgbmV3T2JqLmRlZmF1bHQgPSBvYmo7CiAgICByZXR1cm4gbmV3T2JqOwogIH0KfQoKZnVuY3Rpb24gX3NsaWNlZFRvQXJyYXkoYXJyLCBpKSB7CiAgcmV0dXJuIF9hcnJheVdpdGhIb2xlcyhhcnIpIHx8IF9pdGVyYWJsZVRvQXJyYXlMaW1pdChhcnIsIGkpIHx8IF9ub25JdGVyYWJsZVJlc3QoKTsKfQoKZnVuY3Rpb24gX25vbkl0ZXJhYmxlUmVzdCgpIHsKICB0aHJvdyBuZXcgVHlwZUVycm9yKCJJbnZhbGlkIGF0dGVtcHQgdG8gZGVzdHJ1Y3R1cmUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlIik7Cn0KCmZ1bmN0aW9uIF9pdGVyYWJsZVRvQXJyYXlMaW1pdChhcnIsIGkpIHsKICB2YXIgX2FyciA9IFtdOwogIHZhciBfbiA9IHRydWU7CiAgdmFyIF9kID0gZmFsc2U7CiAgdmFyIF9lID0gdW5kZWZpbmVkOwoKICB0cnkgewogICAgZm9yICh2YXIgX2kgPSBhcnJbU3ltYm9sLml0ZXJhdG9yXSgpLCBfczsgIShfbiA9IChfcyA9IF9pLm5leHQoKSkuZG9uZSk7IF9uID0gdHJ1ZSkgewogICAgICBfYXJyLnB1c2goX3MudmFsdWUpOwoKICAgICAgaWYgKGkgJiYgX2Fyci5sZW5ndGggPT09IGkpIGJyZWFrOwogICAgfQogIH0gY2F0Y2ggKGVycikgewogICAgX2QgPSB0cnVlOwogICAgX2UgPSBlcnI7CiAgfSBmaW5hbGx5IHsKICAgIHRyeSB7CiAgICAgIGlmICghX24gJiYgX2lbInJldHVybiJdICE9IG51bGwpIF9pWyJyZXR1cm4iXSgpOwogICAgfSBmaW5hbGx5IHsKICAgICAgaWYgKF9kKSB0aHJvdyBfZTsKICAgIH0KICB9CgogIHJldHVybiBfYXJyOwp9CgpmdW5jdGlvbiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB7CiAgaWYgKEFycmF5LmlzQXJyYXkoYXJyKSkgcmV0dXJuIGFycjsKfQoKdmFyIEN1c3RvbUxpbmtPdmVydmlldyA9IGZ1bmN0aW9uIEN1c3RvbUxpbmtPdmVydmlldygpIHsKICB2YXIgbGljZW5zZSA9ICgwLCBfdXNlTGljZW5zZS51c2VMaWNlbnNlKSgpOwogIHZhciBoYXNWYWxpZExpY2Vuc2UgPSAobGljZW5zZSA9PT0gbnVsbCB8fCBsaWNlbnNlID09PSB2b2lkIDAgPyB2b2lkIDAgOiBsaWNlbnNlLmlzQWN0aXZlKSAmJiAobGljZW5zZSA9PT0gbnVsbCB8fCBsaWNlbnNlID09PSB2b2lkIDAgPyB2b2lkIDAgOiBsaWNlbnNlLmhhc0F0TGVhc3QoJ2dvbGQnKSk7CgogIHZhciBfdXNlU3RhdGUgPSAoMCwgX3JlYWN0LnVzZVN0YXRlKShmYWxzZSksCiAgICAgIF91c2VTdGF0ZTIgPSBfc2xpY2VkVG9BcnJheShfdXNlU3RhdGUsIDIpLAogICAgICBpc0ZseW91dE9wZW4gPSBfdXNlU3RhdGUyWzBdLAogICAgICBzZXRJc0ZseW91dE9wZW4gPSBfdXNlU3RhdGUyWzFdOwoKICB2YXIgX3VzZVN0YXRlMyA9ICgwLCBfcmVhY3QudXNlU3RhdGUpKCksCiAgICAgIF91c2VTdGF0ZTQgPSBfc2xpY2VkVG9BcnJheShfdXNlU3RhdGUzLCAyKSwKICAgICAgY3VzdG9tTGlua1NlbGVjdGVkID0gX3VzZVN0YXRlNFswXSwKICAgICAgc2V0Q3VzdG9tTGlua1NlbGVjdGVkID0gX3VzZVN0YXRlNFsxXTsKCiAgdmFyIF91c2VGZXRjaGVyID0gKDAsIF91c2VGZXRjaGVyMi51c2VGZXRjaGVyKShmdW5jdGlvbiAoY2FsbEFwbUFwaSkgewogICAgcmV0dXJuIGNhbGxBcG1BcGkoewogICAgICBwYXRobmFtZTogJy9hcGkvYXBtL3NldHRpbmdzL2N1c3RvbV9saW5rcycKICAgIH0pOwogIH0sIFtdKSwKICAgICAgY3VzdG9tTGlua3MgPSBfdXNlRmV0Y2hlci5kYXRhLAogICAgICBzdGF0dXMgPSBfdXNlRmV0Y2hlci5zdGF0dXMsCiAgICAgIHJlZmV0Y2ggPSBfdXNlRmV0Y2hlci5yZWZldGNoOwoKICAoMCwgX3JlYWN0LnVzZUVmZmVjdCkoZnVuY3Rpb24gKCkgewogICAgaWYgKGN1c3RvbUxpbmtTZWxlY3RlZCkgewogICAgICBzZXRJc0ZseW91dE9wZW4odHJ1ZSk7CiAgICB9CiAgfSwgW2N1c3RvbUxpbmtTZWxlY3RlZF0pOwoKICB2YXIgb25DbG9zZUZseW91dCA9IGZ1bmN0aW9uIG9uQ2xvc2VGbHlvdXQoKSB7CiAgICBzZXRDdXN0b21MaW5rU2VsZWN0ZWQodW5kZWZpbmVkKTsKICAgIHNldElzRmx5b3V0T3BlbihmYWxzZSk7CiAgfTsKCiAgdmFyIG9uQ3JlYXRlQ3VzdG9tTGlua0NsaWNrID0gZnVuY3Rpb24gb25DcmVhdGVDdXN0b21MaW5rQ2xpY2soKSB7CiAgICBzZXRJc0ZseW91dE9wZW4odHJ1ZSk7CiAgfTsKCiAgdmFyIHNob3dFbXB0eVByb21wdCA9IHN0YXR1cyA9PT0gX3VzZUZldGNoZXIyLkZFVENIX1NUQVRVUy5TVUNDRVNTICYmICgwLCBfbG9kYXNoLmlzRW1wdHkpKGN1c3RvbUxpbmtzKTsKICByZXR1cm4gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfcmVhY3QuZGVmYXVsdC5GcmFnbWVudCwgbnVsbCwgaXNGbHlvdXRPcGVuICYmIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX0N1c3RvbUxpbmtGbHlvdXQuQ3VzdG9tTGlua0ZseW91dCwgewogICAgb25DbG9zZTogb25DbG9zZUZseW91dCwKICAgIGRlZmF1bHRzOiBjdXN0b21MaW5rU2VsZWN0ZWQsCiAgICBjdXN0b21MaW5rSWQ6IGN1c3RvbUxpbmtTZWxlY3RlZCA9PT0gbnVsbCB8fCBjdXN0b21MaW5rU2VsZWN0ZWQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGN1c3RvbUxpbmtTZWxlY3RlZC5pZCwKICAgIG9uU2F2ZTogZnVuY3Rpb24gb25TYXZlKCkgewogICAgICBvbkNsb3NlRmx5b3V0KCk7CiAgICAgIHJlZmV0Y2goKTsKICAgIH0sCiAgICBvbkRlbGV0ZTogZnVuY3Rpb24gb25EZWxldGUoKSB7CiAgICAgIG9uQ2xvc2VGbHlvdXQoKTsKICAgICAgcmVmZXRjaCgpOwogICAgfQogIH0pLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpUGFuZWwsIG51bGwsIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlGbGV4R3JvdXAsIHsKICAgIGFsaWduSXRlbXM6ICJjZW50ZXIiCiAgfSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUZsZXhJdGVtLCB7CiAgICBncm93OiBmYWxzZQogIH0sIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX1RpdGxlLlRpdGxlLCBudWxsKSksIGhhc1ZhbGlkTGljZW5zZSAmJiAhc2hvd0VtcHR5UHJvbXB0ICYmIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlGbGV4SXRlbSwgbnVsbCwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUZsZXhHcm91cCwgewogICAgYWxpZ25JdGVtczogImNlbnRlciIsCiAgICBqdXN0aWZ5Q29udGVudDogImZsZXhFbmQiCiAgfSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUZsZXhJdGVtLCB7CiAgICBncm93OiBmYWxzZQogIH0sIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX0NyZWF0ZUN1c3RvbUxpbmtCdXR0b24uQ3JlYXRlQ3VzdG9tTGlua0J1dHRvbiwgewogICAgb25DbGljazogb25DcmVhdGVDdXN0b21MaW5rQ2xpY2sKICB9KSkpKSksIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlTcGFjZXIsIHsKICAgIHNpemU6ICJtIgogIH0pLCBoYXNWYWxpZExpY2Vuc2UgPyBzaG93RW1wdHlQcm9tcHQgPyBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9FbXB0eVByb21wdC5FbXB0eVByb21wdCwgewogICAgb25DcmVhdGVDdXN0b21MaW5rQ2xpY2s6IG9uQ3JlYXRlQ3VzdG9tTGlua0NsaWNrCiAgfSkgOiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9DdXN0b21MaW5rVGFibGUuQ3VzdG9tTGlua1RhYmxlLCB7CiAgICBpdGVtczogY3VzdG9tTGlua3MsCiAgICBvbkN1c3RvbUxpbmtTZWxlY3RlZDogc2V0Q3VzdG9tTGlua1NlbGVjdGVkCiAgfSkgOiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9MaWNlbnNlUHJvbXB0LkxpY2Vuc2VQcm9tcHQsIHsKICAgIHRleHQ6IF9pMThuLmkxOG4udHJhbnNsYXRlKCd4cGFjay5hcG0uc2V0dGluZ3MuY3VzdG9taXplVUkuY3VzdG9tTGluay5saWNlbnNlLnRleHQnLCB7CiAgICAgIGRlZmF1bHRNZXNzYWdlOiAiVG8gY3JlYXRlIGN1c3RvbSBsaW5rcywgeW91IG11c3QgYmUgc3Vic2NyaWJlZCB0byBhbiBFbGFzdGljIEdvbGQgbGljZW5zZSBvciBhYm92ZS4gV2l0aCBpdCwgeW91J2xsIGhhdmUgdGhlIGFiaWxpdHkgdG8gY3JlYXRlIGN1c3RvbSBsaW5rcyB0byBpbXByb3ZlIHlvdXIgd29ya2Zsb3cgd2hlbiBhbmFseXppbmcgeW91ciBzZXJ2aWNlcy4iCiAgICB9KQogIH0pKSk7Cn07CgpleHBvcnRzLkN1c3RvbUxpbmtPdmVydmlldyA9IEN1c3RvbUxpbmtPdmVydmlldzs="},null]}