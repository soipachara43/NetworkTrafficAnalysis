{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!src/plugins/kibana_utils/public/errors/errors.js","dependencies":[{"path":"src/plugins/kibana_utils/public/errors/errors.js","mtime":1589249550975},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKZnVuY3Rpb24gX3R5cGVvZjIob2JqKSB7IGlmICh0eXBlb2YgU3ltYm9sID09PSAiZnVuY3Rpb24iICYmIHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPT09ICJzeW1ib2wiKSB7IF90eXBlb2YyID0gZnVuY3Rpb24gX3R5cGVvZjIob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9OyB9IGVsc2UgeyBfdHlwZW9mMiA9IGZ1bmN0aW9uIF90eXBlb2YyKG9iaikgeyByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09ICJmdW5jdGlvbiIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gInN5bWJvbCIgOiB0eXBlb2Ygb2JqOyB9OyB9IHJldHVybiBfdHlwZW9mMihvYmopOyB9CgpPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgIl9fZXNNb2R1bGUiLCB7CiAgdmFsdWU6IHRydWUKfSk7CmV4cG9ydHMuSW52YWxpZEpTT05Qcm9wZXJ0eSA9IGV4cG9ydHMuU2F2ZWRPYmplY3ROb3RGb3VuZCA9IGV4cG9ydHMuRHVwbGljYXRlRmllbGQgPSBleHBvcnRzLktibkVycm9yID0gdm9pZCAwOwoKZnVuY3Rpb24gX3R5cGVvZihvYmopIHsKICBpZiAodHlwZW9mIFN5bWJvbCA9PT0gImZ1bmN0aW9uIiAmJiBfdHlwZW9mMihTeW1ib2wuaXRlcmF0b3IpID09PSAic3ltYm9sIikgewogICAgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7CiAgICAgIHJldHVybiBfdHlwZW9mMihvYmopOwogICAgfTsKICB9IGVsc2UgewogICAgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7CiAgICAgIHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gImZ1bmN0aW9uIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyAic3ltYm9sIiA6IF90eXBlb2YyKG9iaik7CiAgICB9OwogIH0KCiAgcmV0dXJuIF90eXBlb2Yob2JqKTsKfQoKZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkgewogIGlmIChrZXkgaW4gb2JqKSB7CiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHsKICAgICAgdmFsdWU6IHZhbHVlLAogICAgICBlbnVtZXJhYmxlOiB0cnVlLAogICAgICBjb25maWd1cmFibGU6IHRydWUsCiAgICAgIHdyaXRhYmxlOiB0cnVlCiAgICB9KTsKICB9IGVsc2UgewogICAgb2JqW2tleV0gPSB2YWx1ZTsKICB9CgogIHJldHVybiBvYmo7Cn0KCmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsKICBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgewogICAgdGhyb3cgbmV3IFR5cGVFcnJvcigiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uIik7CiAgfQp9CgpmdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7CiAgaWYgKGNhbGwgJiYgKF90eXBlb2YoY2FsbCkgPT09ICJvYmplY3QiIHx8IHR5cGVvZiBjYWxsID09PSAiZnVuY3Rpb24iKSkgewogICAgcmV0dXJuIGNhbGw7CiAgfQoKICByZXR1cm4gX2Fzc2VydFRoaXNJbml0aWFsaXplZChzZWxmKTsKfQoKZnVuY3Rpb24gX2Fzc2VydFRoaXNJbml0aWFsaXplZChzZWxmKSB7CiAgaWYgKHNlbGYgPT09IHZvaWQgMCkgewogICAgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWQiKTsKICB9CgogIHJldHVybiBzZWxmOwp9CgpmdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsKICBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09ICJmdW5jdGlvbiIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgewogICAgdGhyb3cgbmV3IFR5cGVFcnJvcigiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24iKTsKICB9CgogIHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgewogICAgY29uc3RydWN0b3I6IHsKICAgICAgdmFsdWU6IHN1YkNsYXNzLAogICAgICB3cml0YWJsZTogdHJ1ZSwKICAgICAgY29uZmlndXJhYmxlOiB0cnVlCiAgICB9CiAgfSk7CiAgaWYgKHN1cGVyQ2xhc3MpIF9zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcyk7Cn0KCmZ1bmN0aW9uIF93cmFwTmF0aXZlU3VwZXIoQ2xhc3MpIHsKICB2YXIgX2NhY2hlID0gdHlwZW9mIE1hcCA9PT0gImZ1bmN0aW9uIiA/IG5ldyBNYXAoKSA6IHVuZGVmaW5lZDsKCiAgX3dyYXBOYXRpdmVTdXBlciA9IGZ1bmN0aW9uIF93cmFwTmF0aXZlU3VwZXIoQ2xhc3MpIHsKICAgIGlmIChDbGFzcyA9PT0gbnVsbCB8fCAhX2lzTmF0aXZlRnVuY3Rpb24oQ2xhc3MpKSByZXR1cm4gQ2xhc3M7CgogICAgaWYgKHR5cGVvZiBDbGFzcyAhPT0gImZ1bmN0aW9uIikgewogICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiIpOwogICAgfQoKICAgIGlmICh0eXBlb2YgX2NhY2hlICE9PSAidW5kZWZpbmVkIikgewogICAgICBpZiAoX2NhY2hlLmhhcyhDbGFzcykpIHJldHVybiBfY2FjaGUuZ2V0KENsYXNzKTsKCiAgICAgIF9jYWNoZS5zZXQoQ2xhc3MsIFdyYXBwZXIpOwogICAgfQoKICAgIGZ1bmN0aW9uIFdyYXBwZXIoKSB7CiAgICAgIHJldHVybiBfY29uc3RydWN0KENsYXNzLCBhcmd1bWVudHMsIF9nZXRQcm90b3R5cGVPZih0aGlzKS5jb25zdHJ1Y3Rvcik7CiAgICB9CgogICAgV3JhcHBlci5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKENsYXNzLnByb3RvdHlwZSwgewogICAgICBjb25zdHJ1Y3RvcjogewogICAgICAgIHZhbHVlOiBXcmFwcGVyLAogICAgICAgIGVudW1lcmFibGU6IGZhbHNlLAogICAgICAgIHdyaXRhYmxlOiB0cnVlLAogICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZQogICAgICB9CiAgICB9KTsKICAgIHJldHVybiBfc2V0UHJvdG90eXBlT2YoV3JhcHBlciwgQ2xhc3MpOwogIH07CgogIHJldHVybiBfd3JhcE5hdGl2ZVN1cGVyKENsYXNzKTsKfQoKZnVuY3Rpb24gaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkgewogIGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gInVuZGVmaW5lZCIgfHwgIVJlZmxlY3QuY29uc3RydWN0KSByZXR1cm4gZmFsc2U7CiAgaWYgKFJlZmxlY3QuY29uc3RydWN0LnNoYW0pIHJldHVybiBmYWxzZTsKICBpZiAodHlwZW9mIFByb3h5ID09PSAiZnVuY3Rpb24iKSByZXR1cm4gdHJ1ZTsKCiAgdHJ5IHsKICAgIERhdGUucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoUmVmbGVjdC5jb25zdHJ1Y3QoRGF0ZSwgW10sIGZ1bmN0aW9uICgpIHt9KSk7CiAgICByZXR1cm4gdHJ1ZTsKICB9IGNhdGNoIChlKSB7CiAgICByZXR1cm4gZmFsc2U7CiAgfQp9CgpmdW5jdGlvbiBfY29uc3RydWN0KFBhcmVudCwgYXJncywgQ2xhc3MpIHsKICBpZiAoaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkpIHsKICAgIF9jb25zdHJ1Y3QgPSBSZWZsZWN0LmNvbnN0cnVjdDsKICB9IGVsc2UgewogICAgX2NvbnN0cnVjdCA9IGZ1bmN0aW9uIF9jb25zdHJ1Y3QoUGFyZW50LCBhcmdzLCBDbGFzcykgewogICAgICB2YXIgYSA9IFtudWxsXTsKICAgICAgYS5wdXNoLmFwcGx5KGEsIGFyZ3MpOwogICAgICB2YXIgQ29uc3RydWN0b3IgPSBGdW5jdGlvbi5iaW5kLmFwcGx5KFBhcmVudCwgYSk7CiAgICAgIHZhciBpbnN0YW5jZSA9IG5ldyBDb25zdHJ1Y3RvcigpOwogICAgICBpZiAoQ2xhc3MpIF9zZXRQcm90b3R5cGVPZihpbnN0YW5jZSwgQ2xhc3MucHJvdG90eXBlKTsKICAgICAgcmV0dXJuIGluc3RhbmNlOwogICAgfTsKICB9CgogIHJldHVybiBfY29uc3RydWN0LmFwcGx5KG51bGwsIGFyZ3VtZW50cyk7Cn0KCmZ1bmN0aW9uIF9pc05hdGl2ZUZ1bmN0aW9uKGZuKSB7CiAgcmV0dXJuIEZ1bmN0aW9uLnRvU3RyaW5nLmNhbGwoZm4pLmluZGV4T2YoIltuYXRpdmUgY29kZV0iKSAhPT0gLTE7Cn0KCmZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7CiAgX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8IGZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7CiAgICBvLl9fcHJvdG9fXyA9IHA7CiAgICByZXR1cm4gbzsKICB9OwoKICByZXR1cm4gX3NldFByb3RvdHlwZU9mKG8sIHApOwp9CgpmdW5jdGlvbiBfZ2V0UHJvdG90eXBlT2YobykgewogIF9nZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5nZXRQcm90b3R5cGVPZiA6IGZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7CiAgICByZXR1cm4gby5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKG8pOwogIH07CiAgcmV0dXJuIF9nZXRQcm90b3R5cGVPZihvKTsKfQovKgogKiBMaWNlbnNlZCB0byBFbGFzdGljc2VhcmNoIEIuVi4gdW5kZXIgb25lIG9yIG1vcmUgY29udHJpYnV0b3IKICogbGljZW5zZSBhZ3JlZW1lbnRzLiBTZWUgdGhlIE5PVElDRSBmaWxlIGRpc3RyaWJ1dGVkIHdpdGgKICogdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uIHJlZ2FyZGluZyBjb3B5cmlnaHQKICogb3duZXJzaGlwLiBFbGFzdGljc2VhcmNoIEIuVi4gbGljZW5zZXMgdGhpcyBmaWxlIHRvIHlvdSB1bmRlcgogKiB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsgeW91IG1heQogKiBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgogKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKICoKICogICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wCiAqCiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywKICogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4KICogIkFTIElTIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZCiAqIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZQogKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zCiAqIHVuZGVyIHRoZSBMaWNlbnNlLgogKi8KCi8qIGVzbGludC1kaXNhYmxlIG1heC1jbGFzc2VzLXBlci1maWxlICovCi8vIGFic3RyYWN0IGVycm9yIGNsYXNzCgoKdmFyIEtibkVycm9yID0KLyojX19QVVJFX18qLwpmdW5jdGlvbiAoX0Vycm9yKSB7CiAgX2luaGVyaXRzKEtibkVycm9yLCBfRXJyb3IpOwoKICBmdW5jdGlvbiBLYm5FcnJvcihtZXNzYWdlKSB7CiAgICB2YXIgX3RoaXM7CgogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEtibkVycm9yKTsKCiAgICBfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9nZXRQcm90b3R5cGVPZihLYm5FcnJvcikuY2FsbCh0aGlzLCBtZXNzYWdlKSk7CiAgICBPYmplY3Quc2V0UHJvdG90eXBlT2YoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksICh0aGlzIGluc3RhbmNlb2YgS2JuRXJyb3IgPyB0aGlzLmNvbnN0cnVjdG9yIDogdm9pZCAwKS5wcm90b3R5cGUpOwogICAgcmV0dXJuIF90aGlzOwogIH0KCiAgcmV0dXJuIEtibkVycm9yOwp9KF93cmFwTmF0aXZlU3VwZXIoRXJyb3IpKTsKLyoqCiAqIHdoZW4gYSBtYXBwaW5nIGFscmVhZHkgZXhpc3RzIGZvciBhIGZpZWxkIHRoZSB1c2VyIGlzIGF0dGVtcHRpbmcgdG8gYWRkCiAqIEBwYXJhbSB7U3RyaW5nfSBuYW1lIC0gdGhlIGZpZWxkIG5hbWUKICovCgoKZXhwb3J0cy5LYm5FcnJvciA9IEtibkVycm9yOwoKdmFyIER1cGxpY2F0ZUZpZWxkID0KLyojX19QVVJFX18qLwpmdW5jdGlvbiAoX0tibkVycm9yKSB7CiAgX2luaGVyaXRzKER1cGxpY2F0ZUZpZWxkLCBfS2JuRXJyb3IpOwoKICBmdW5jdGlvbiBEdXBsaWNhdGVGaWVsZChuYW1lKSB7CiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgRHVwbGljYXRlRmllbGQpOwoKICAgIHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfZ2V0UHJvdG90eXBlT2YoRHVwbGljYXRlRmllbGQpLmNhbGwodGhpcywgIlRoZSBmaWVsZCBcIiIuY29uY2F0KG5hbWUsICJcIiBhbHJlYWR5IGV4aXN0cyBpbiB0aGlzIG1hcHBpbmciKSkpOwogIH0KCiAgcmV0dXJuIER1cGxpY2F0ZUZpZWxkOwp9KEtibkVycm9yKTsKLyoqCiAqIEEgc2F2ZWQgb2JqZWN0IHdhcyBub3QgZm91bmQKICovCgoKZXhwb3J0cy5EdXBsaWNhdGVGaWVsZCA9IER1cGxpY2F0ZUZpZWxkOwoKdmFyIFNhdmVkT2JqZWN0Tm90Rm91bmQgPQovKiNfX1BVUkVfXyovCmZ1bmN0aW9uIChfS2JuRXJyb3IyKSB7CiAgX2luaGVyaXRzKFNhdmVkT2JqZWN0Tm90Rm91bmQsIF9LYm5FcnJvcjIpOwoKICBmdW5jdGlvbiBTYXZlZE9iamVjdE5vdEZvdW5kKHR5cGUsIGlkLCBsaW5rKSB7CiAgICB2YXIgX3RoaXMyOwoKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBTYXZlZE9iamVjdE5vdEZvdW5kKTsKCiAgICB2YXIgaWRNc2cgPSBpZCA/ICIgKGlkOiAiLmNvbmNhdChpZCwgIikiKSA6ICcnOwogICAgdmFyIG1lc3NhZ2UgPSAiQ291bGQgbm90IGxvY2F0ZSB0aGF0ICIuY29uY2F0KHR5cGUpLmNvbmNhdChpZE1zZyk7CgogICAgaWYgKGxpbmspIHsKICAgICAgbWVzc2FnZSArPSAiLCBbY2xpY2sgaGVyZSB0byByZS1jcmVhdGUgaXRdKCIuY29uY2F0KGxpbmssICIpIik7CiAgICB9CgogICAgX3RoaXMyID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgX2dldFByb3RvdHlwZU9mKFNhdmVkT2JqZWN0Tm90Rm91bmQpLmNhbGwodGhpcywgbWVzc2FnZSkpOwoKICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzMiksICJzYXZlZE9iamVjdFR5cGUiLCB2b2lkIDApOwoKICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzMiksICJzYXZlZE9iamVjdElkIiwgdm9pZCAwKTsKCiAgICBfdGhpczIuc2F2ZWRPYmplY3RUeXBlID0gdHlwZTsKICAgIF90aGlzMi5zYXZlZE9iamVjdElkID0gaWQ7CiAgICByZXR1cm4gX3RoaXMyOwogIH0KCiAgcmV0dXJuIFNhdmVkT2JqZWN0Tm90Rm91bmQ7Cn0oS2JuRXJyb3IpOwovKioKICogVGhpcyBlcnJvciBpcyBmb3Igc2NlbmFyaW9zIHdoZXJlIGEgc2F2ZWQgb2JqZWN0IGlzIGRldGVjdGVkIHRoYXQgaGFzIGludmFsaWQgSlNPTiBwcm9wZXJ0aWVzLgogKiBUaGVyZSB3YXMgYSBzY2VuYXJpbyB3aGVyZSB3ZSB3ZXJlIGltcG9ydGluZyBvYmplY3RzIHdpdGggZG91YmxlLWVuY29kZWQgSlNPTiwgYW5kIHRoZSBzeXN0ZW0KICogd2FzIHNpbGVudGx5IGZhaWxpbmcuIFRoaXMgZXJyb3IgaXMgbm93IHRocm93biBpbiB0aG9zZSBzY2VuYXJpb3MuCiAqLwoKCmV4cG9ydHMuU2F2ZWRPYmplY3ROb3RGb3VuZCA9IFNhdmVkT2JqZWN0Tm90Rm91bmQ7Cgp2YXIgSW52YWxpZEpTT05Qcm9wZXJ0eSA9Ci8qI19fUFVSRV9fKi8KZnVuY3Rpb24gKF9LYm5FcnJvcjMpIHsKICBfaW5oZXJpdHMoSW52YWxpZEpTT05Qcm9wZXJ0eSwgX0tibkVycm9yMyk7CgogIGZ1bmN0aW9uIEludmFsaWRKU09OUHJvcGVydHkobWVzc2FnZSkgewogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEludmFsaWRKU09OUHJvcGVydHkpOwoKICAgIHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfZ2V0UHJvdG90eXBlT2YoSW52YWxpZEpTT05Qcm9wZXJ0eSkuY2FsbCh0aGlzLCBtZXNzYWdlKSk7CiAgfQoKICByZXR1cm4gSW52YWxpZEpTT05Qcm9wZXJ0eTsKfShLYm5FcnJvcik7CgpleHBvcnRzLkludmFsaWRKU09OUHJvcGVydHkgPSBJbnZhbGlkSlNPTlByb3BlcnR5Ow=="},null]}