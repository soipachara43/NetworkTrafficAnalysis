{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/siem/public/components/matrix_histogram/utils.js","dependencies":[{"path":"x-pack/legacy/plugins/siem/public/components/matrix_histogram/utils.js","mtime":1589249553020},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmdldEN1c3RvbUNoYXJ0RGF0YSA9IGV4cG9ydHMuZm9ybWF0VG9DaGFydERhdGFJdGVtID0gZXhwb3J0cy5nZXRCYXJjaGFydENvbmZpZ3MgPSBleHBvcnRzLkRFRkFVTFRfWV9USUNLX0ZPUk1BVFRFUiA9IGV4cG9ydHMuREVGQVVMVF9DSEFSVF9IRUlHSFQgPSB2b2lkIDA7Cgp2YXIgX2NoYXJ0cyA9IHJlcXVpcmUoIkBlbGFzdGljL2NoYXJ0cyIpOwoKdmFyIF9mcCA9IHJlcXVpcmUoImxvZGFzaC9mcCIpOwoKdmFyIF91dGlscyA9IHJlcXVpcmUoIi4uL3V0aWxzIik7CgpmdW5jdGlvbiBvd25LZXlzKG9iamVjdCwgZW51bWVyYWJsZU9ubHkpIHsKICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9iamVjdCk7CgogIGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7CiAgICB2YXIgc3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMob2JqZWN0KTsKICAgIGlmIChlbnVtZXJhYmxlT25seSkgc3ltYm9scyA9IHN5bWJvbHMuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHsKICAgICAgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7CiAgICB9KTsKICAgIGtleXMucHVzaC5hcHBseShrZXlzLCBzeW1ib2xzKTsKICB9CgogIHJldHVybiBrZXlzOwp9CgpmdW5jdGlvbiBfb2JqZWN0U3ByZWFkKHRhcmdldCkgewogIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7CiAgICB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldICE9IG51bGwgPyBhcmd1bWVudHNbaV0gOiB7fTsKCiAgICBpZiAoaSAlIDIpIHsKICAgICAgb3duS2V5cyhzb3VyY2UsIHRydWUpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgewogICAgICAgIF9kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgc291cmNlW2tleV0pOwogICAgICB9KTsKICAgIH0gZWxzZSBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMpIHsKICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKTsKICAgIH0gZWxzZSB7CiAgICAgIG93bktleXMoc291cmNlKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsKICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBrZXkpKTsKICAgICAgfSk7CiAgICB9CiAgfQoKICByZXR1cm4gdGFyZ2V0Owp9CgpmdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7CiAgaWYgKGtleSBpbiBvYmopIHsKICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgewogICAgICB2YWx1ZTogdmFsdWUsCiAgICAgIGVudW1lcmFibGU6IHRydWUsCiAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSwKICAgICAgd3JpdGFibGU6IHRydWUKICAgIH0pOwogIH0gZWxzZSB7CiAgICBvYmpba2V5XSA9IHZhbHVlOwogIH0KCiAgcmV0dXJuIG9iajsKfQoKZnVuY3Rpb24gX3NsaWNlZFRvQXJyYXkoYXJyLCBpKSB7CiAgcmV0dXJuIF9hcnJheVdpdGhIb2xlcyhhcnIpIHx8IF9pdGVyYWJsZVRvQXJyYXlMaW1pdChhcnIsIGkpIHx8IF9ub25JdGVyYWJsZVJlc3QoKTsKfQoKZnVuY3Rpb24gX25vbkl0ZXJhYmxlUmVzdCgpIHsKICB0aHJvdyBuZXcgVHlwZUVycm9yKCJJbnZhbGlkIGF0dGVtcHQgdG8gZGVzdHJ1Y3R1cmUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlIik7Cn0KCmZ1bmN0aW9uIF9pdGVyYWJsZVRvQXJyYXlMaW1pdChhcnIsIGkpIHsKICB2YXIgX2FyciA9IFtdOwogIHZhciBfbiA9IHRydWU7CiAgdmFyIF9kID0gZmFsc2U7CiAgdmFyIF9lID0gdW5kZWZpbmVkOwoKICB0cnkgewogICAgZm9yICh2YXIgX2kgPSBhcnJbU3ltYm9sLml0ZXJhdG9yXSgpLCBfczsgIShfbiA9IChfcyA9IF9pLm5leHQoKSkuZG9uZSk7IF9uID0gdHJ1ZSkgewogICAgICBfYXJyLnB1c2goX3MudmFsdWUpOwoKICAgICAgaWYgKGkgJiYgX2Fyci5sZW5ndGggPT09IGkpIGJyZWFrOwogICAgfQogIH0gY2F0Y2ggKGVycikgewogICAgX2QgPSB0cnVlOwogICAgX2UgPSBlcnI7CiAgfSBmaW5hbGx5IHsKICAgIHRyeSB7CiAgICAgIGlmICghX24gJiYgX2lbInJldHVybiJdICE9IG51bGwpIF9pWyJyZXR1cm4iXSgpOwogICAgfSBmaW5hbGx5IHsKICAgICAgaWYgKF9kKSB0aHJvdyBfZTsKICAgIH0KICB9CgogIHJldHVybiBfYXJyOwp9CgpmdW5jdGlvbiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB7CiAgaWYgKEFycmF5LmlzQXJyYXkoYXJyKSkgcmV0dXJuIGFycjsKfQoKdmFyIERFRkFVTFRfQ0hBUlRfSEVJR0hUID0gMTc0OwpleHBvcnRzLkRFRkFVTFRfQ0hBUlRfSEVJR0hUID0gREVGQVVMVF9DSEFSVF9IRUlHSFQ7Cgp2YXIgREVGQVVMVF9ZX1RJQ0tfRk9STUFUVEVSID0gZnVuY3Rpb24gREVGQVVMVF9ZX1RJQ0tfRk9STUFUVEVSKHZhbHVlKSB7CiAgcmV0dXJuIHZhbHVlLnRvTG9jYWxlU3RyaW5nKCk7Cn07CgpleHBvcnRzLkRFRkFVTFRfWV9USUNLX0ZPUk1BVFRFUiA9IERFRkFVTFRfWV9USUNLX0ZPUk1BVFRFUjsKCnZhciBnZXRCYXJjaGFydENvbmZpZ3MgPSBmdW5jdGlvbiBnZXRCYXJjaGFydENvbmZpZ3MoX3JlZikgewogIHZhciBjaGFydEhlaWdodCA9IF9yZWYuY2hhcnRIZWlnaHQsCiAgICAgIGZyb20gPSBfcmVmLmZyb20sCiAgICAgIGxlZ2VuZFBvc2l0aW9uID0gX3JlZi5sZWdlbmRQb3NpdGlvbiwKICAgICAgdG8gPSBfcmVmLnRvLAogICAgICBvbkJydXNoRW5kID0gX3JlZi5vbkJydXNoRW5kLAogICAgICB5VGlja0Zvcm1hdHRlciA9IF9yZWYueVRpY2tGb3JtYXR0ZXIsCiAgICAgIHNob3dMZWdlbmQgPSBfcmVmLnNob3dMZWdlbmQ7CiAgcmV0dXJuIHsKICAgIHNlcmllczogewogICAgICB4U2NhbGVUeXBlOiBfY2hhcnRzLlNjYWxlVHlwZS5UaW1lLAogICAgICB5U2NhbGVUeXBlOiBfY2hhcnRzLlNjYWxlVHlwZS5MaW5lYXIsCiAgICAgIHN0YWNrQWNjZXNzb3JzOiBbJ2cnXQogICAgfSwKICAgIGF4aXM6IHsKICAgICAgeFRpY2tGb3JtYXR0ZXI6ICgwLCBfdXRpbHMuaGlzdG9ncmFtRGF0ZVRpbWVGb3JtYXR0ZXIpKFtmcm9tLCB0b10pLAogICAgICB5VGlja0Zvcm1hdHRlcjogeVRpY2tGb3JtYXR0ZXIgIT0gbnVsbCA/IHlUaWNrRm9ybWF0dGVyIDogREVGQVVMVF9ZX1RJQ0tfRk9STUFUVEVSLAogICAgICB0aWNrU2l6ZTogOAogICAgfSwKICAgIHNldHRpbmdzOiB7CiAgICAgIGxlZ2VuZFBvc2l0aW9uOiBsZWdlbmRQb3NpdGlvbiAhPT0gbnVsbCAmJiBsZWdlbmRQb3NpdGlvbiAhPT0gdm9pZCAwID8gbGVnZW5kUG9zaXRpb24gOiBfY2hhcnRzLlBvc2l0aW9uLlJpZ2h0LAogICAgICBvbkJydXNoRW5kOiBvbkJydXNoRW5kLAogICAgICBzaG93TGVnZW5kOiBzaG93TGVnZW5kICE9PSBudWxsICYmIHNob3dMZWdlbmQgIT09IHZvaWQgMCA/IHNob3dMZWdlbmQgOiB0cnVlLAogICAgICBzaG93TGVnZW5kRXh0cmE6IHRydWUsCiAgICAgIHRoZW1lOiB7CiAgICAgICAgc2NhbGVzOiB7CiAgICAgICAgICBiYXJzUGFkZGluZzogMC4wOAogICAgICAgIH0sCiAgICAgICAgY2hhcnRNYXJnaW5zOiB7CiAgICAgICAgICBsZWZ0OiAwLAogICAgICAgICAgcmlnaHQ6IDAsCiAgICAgICAgICB0b3A6IDAsCiAgICAgICAgICBib3R0b206IDAKICAgICAgICB9LAogICAgICAgIGNoYXJ0UGFkZGluZ3M6IHsKICAgICAgICAgIGxlZnQ6IDAsCiAgICAgICAgICByaWdodDogMCwKICAgICAgICAgIHRvcDogMCwKICAgICAgICAgIGJvdHRvbTogMAogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgIGN1c3RvbUhlaWdodDogY2hhcnRIZWlnaHQgIT09IG51bGwgJiYgY2hhcnRIZWlnaHQgIT09IHZvaWQgMCA/IGNoYXJ0SGVpZ2h0IDogREVGQVVMVF9DSEFSVF9IRUlHSFQKICB9Owp9OwoKZXhwb3J0cy5nZXRCYXJjaGFydENvbmZpZ3MgPSBnZXRCYXJjaGFydENvbmZpZ3M7Cgp2YXIgZm9ybWF0VG9DaGFydERhdGFJdGVtID0gZnVuY3Rpb24gZm9ybWF0VG9DaGFydERhdGFJdGVtKF9yZWYyKSB7CiAgdmFyIF9yZWYzID0gX3NsaWNlZFRvQXJyYXkoX3JlZjIsIDIpLAogICAgICBrZXkgPSBfcmVmM1swXSwKICAgICAgdmFsdWUgPSBfcmVmM1sxXTsKCiAgcmV0dXJuIHsKICAgIGtleToga2V5LAogICAgdmFsdWU6IHZhbHVlCiAgfTsKfTsKCmV4cG9ydHMuZm9ybWF0VG9DaGFydERhdGFJdGVtID0gZm9ybWF0VG9DaGFydERhdGFJdGVtOwoKdmFyIGdldEN1c3RvbUNoYXJ0RGF0YSA9IGZ1bmN0aW9uIGdldEN1c3RvbUNoYXJ0RGF0YShkYXRhLCBtYXBwaW5nKSB7CiAgaWYgKCFkYXRhKSByZXR1cm4gW107CiAgdmFyIGRhdGFHcm91cGVkQnlFdmVudCA9ICgwLCBfZnAuZ3JvdXBCeSkoJ2cnLCBkYXRhKTsKICB2YXIgZGF0YUdyb3VwZWRFbnRyaWVzID0gKDAsIF9mcC50b1BhaXJzKShkYXRhR3JvdXBlZEJ5RXZlbnQpOwogIHZhciBmb3JtYXR0ZWRDaGFydERhdGEgPSAoMCwgX2ZwLm1hcCkoZm9ybWF0VG9DaGFydERhdGFJdGVtLCBkYXRhR3JvdXBlZEVudHJpZXMpOwogIGlmIChtYXBwaW5nKSByZXR1cm4gKDAsIF9mcC5tYXApKGZ1bmN0aW9uIChpdGVtKSB7CiAgICB2YXIgbWFwSXRlbSA9ICgwLCBfZnAuZ2V0KShpdGVtLmtleSwgbWFwcGluZyk7CiAgICByZXR1cm4gX29iamVjdFNwcmVhZCh7fSwgaXRlbSwgewogICAgICBjb2xvcjogbWFwSXRlbSA9PT0gbnVsbCB8fCBtYXBJdGVtID09PSB2b2lkIDAgPyB2b2lkIDAgOiBtYXBJdGVtLmNvbG9yCiAgICB9KTsKICB9LCBmb3JtYXR0ZWRDaGFydERhdGEpO2Vsc2UgcmV0dXJuIGZvcm1hdHRlZENoYXJ0RGF0YTsKfTsKCmV4cG9ydHMuZ2V0Q3VzdG9tQ2hhcnREYXRhID0gZ2V0Q3VzdG9tQ2hhcnREYXRhOw=="},null]}