{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!src/plugins/embeddable/public/lib/panel/panel_header/panel_actions/remove_panel_action.js","dependencies":[{"path":"src/plugins/embeddable/public/lib/panel/panel_header/panel_actions/remove_panel_action.js","mtime":1589249550763},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLlJlbW92ZVBhbmVsQWN0aW9uID0gZXhwb3J0cy5SRU1PVkVfUEFORUxfQUNUSU9OID0gdm9pZCAwOwoKdmFyIF9pMThuID0gcmVxdWlyZSgiQGtibi9pMThuIik7Cgp2YXIgX3VpX2FjdGlvbnMgPSByZXF1aXJlKCIuLi8uLi8uLi91aV9hY3Rpb25zIik7Cgp2YXIgX3R5cGVzID0gcmVxdWlyZSgiLi4vLi4vLi4vdHlwZXMiKTsKCmZ1bmN0aW9uIGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywga2V5LCBhcmcpIHsKICB0cnkgewogICAgdmFyIGluZm8gPSBnZW5ba2V5XShhcmcpOwogICAgdmFyIHZhbHVlID0gaW5mby52YWx1ZTsKICB9IGNhdGNoIChlcnJvcikgewogICAgcmVqZWN0KGVycm9yKTsKICAgIHJldHVybjsKICB9CgogIGlmIChpbmZvLmRvbmUpIHsKICAgIHJlc29sdmUodmFsdWUpOwogIH0gZWxzZSB7CiAgICBQcm9taXNlLnJlc29sdmUodmFsdWUpLnRoZW4oX25leHQsIF90aHJvdyk7CiAgfQp9CgpmdW5jdGlvbiBfYXN5bmNUb0dlbmVyYXRvcihmbikgewogIHJldHVybiBmdW5jdGlvbiAoKSB7CiAgICB2YXIgc2VsZiA9IHRoaXMsCiAgICAgICAgYXJncyA9IGFyZ3VtZW50czsKICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICAgIHZhciBnZW4gPSBmbi5hcHBseShzZWxmLCBhcmdzKTsKCiAgICAgIGZ1bmN0aW9uIF9uZXh0KHZhbHVlKSB7CiAgICAgICAgYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCAibmV4dCIsIHZhbHVlKTsKICAgICAgfQoKICAgICAgZnVuY3Rpb24gX3Rocm93KGVycikgewogICAgICAgIGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywgInRocm93IiwgZXJyKTsKICAgICAgfQoKICAgICAgX25leHQodW5kZWZpbmVkKTsKICAgIH0pOwogIH07Cn0KCmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsKICBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgewogICAgdGhyb3cgbmV3IFR5cGVFcnJvcigiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uIik7CiAgfQp9CgpmdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7CiAgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgewogICAgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsKICAgIGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsKICAgIGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsKICAgIGlmICgidmFsdWUiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOwogICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOwogIH0KfQoKZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgewogIGlmIChwcm90b1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOwogIGlmIChzdGF0aWNQcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsKICByZXR1cm4gQ29uc3RydWN0b3I7Cn0KCmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHsKICBpZiAoa2V5IGluIG9iaikgewogICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7CiAgICAgIHZhbHVlOiB2YWx1ZSwKICAgICAgZW51bWVyYWJsZTogdHJ1ZSwKICAgICAgY29uZmlndXJhYmxlOiB0cnVlLAogICAgICB3cml0YWJsZTogdHJ1ZQogICAgfSk7CiAgfSBlbHNlIHsKICAgIG9ialtrZXldID0gdmFsdWU7CiAgfQoKICByZXR1cm4gb2JqOwp9Cgp2YXIgUkVNT1ZFX1BBTkVMX0FDVElPTiA9ICdkZWxldGVQYW5lbCc7CmV4cG9ydHMuUkVNT1ZFX1BBTkVMX0FDVElPTiA9IFJFTU9WRV9QQU5FTF9BQ1RJT047CgpmdW5jdGlvbiBoYXNFeHBhbmRlZFBhbmVsSW5wdXQoY29udGFpbmVyKSB7CiAgcmV0dXJuIGNvbnRhaW5lci5nZXRJbnB1dCgpLmV4cGFuZGVkUGFuZWxJZCAhPT0gdW5kZWZpbmVkOwp9Cgp2YXIgUmVtb3ZlUGFuZWxBY3Rpb24gPQovKiNfX1BVUkVfXyovCmZ1bmN0aW9uICgpIHsKICBmdW5jdGlvbiBSZW1vdmVQYW5lbEFjdGlvbigpIHsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBSZW1vdmVQYW5lbEFjdGlvbik7CgogICAgX2RlZmluZVByb3BlcnR5KHRoaXMsICJ0eXBlIiwgUkVNT1ZFX1BBTkVMX0FDVElPTik7CgogICAgX2RlZmluZVByb3BlcnR5KHRoaXMsICJpZCIsIFJFTU9WRV9QQU5FTF9BQ1RJT04pOwoKICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCAib3JkZXIiLCA1KTsKICB9CgogIF9jcmVhdGVDbGFzcyhSZW1vdmVQYW5lbEFjdGlvbiwgW3sKICAgIGtleTogImdldERpc3BsYXlOYW1lIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBnZXREaXNwbGF5TmFtZSgpIHsKICAgICAgcmV0dXJuIF9pMThuLmkxOG4udHJhbnNsYXRlKCdlbWJlZGRhYmxlQXBpLnBhbmVsLnJlbW92ZVBhbmVsLmRpc3BsYXlOYW1lJywgewogICAgICAgIGRlZmF1bHRNZXNzYWdlOiAnRGVsZXRlIGZyb20gZGFzaGJvYXJkJwogICAgICB9KTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJnZXRJY29uVHlwZSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0SWNvblR5cGUoKSB7CiAgICAgIHJldHVybiAndHJhc2gnOwogICAgfQogIH0sIHsKICAgIGtleTogImlzQ29tcGF0aWJsZSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gKCkgewogICAgICB2YXIgX2lzQ29tcGF0aWJsZSA9IF9hc3luY1RvR2VuZXJhdG9yKAogICAgICAvKiNfX1BVUkVfXyovCiAgICAgIHJlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoX3JlZikgewogICAgICAgIHZhciBlbWJlZGRhYmxlLCBpc1BhbmVsRXhwYW5kZWQ7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgZW1iZWRkYWJsZSA9IF9yZWYuZW1iZWRkYWJsZTsKICAgICAgICAgICAgICAgIGlzUGFuZWxFeHBhbmRlZCA9IGVtYmVkZGFibGUucGFyZW50ICYmIGhhc0V4cGFuZGVkUGFuZWxJbnB1dChlbWJlZGRhYmxlLnBhcmVudCkgJiYgZW1iZWRkYWJsZS5wYXJlbnQuZ2V0SW5wdXQoKS5leHBhbmRlZFBhbmVsSWQgPT09IGVtYmVkZGFibGUuaWQ7CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBCb29sZWFuKGVtYmVkZGFibGUucGFyZW50ICYmIGVtYmVkZGFibGUuZ2V0SW5wdXQoKS52aWV3TW9kZSA9PT0gX3R5cGVzLlZpZXdNb2RlLkVESVQgJiYgIWlzUGFuZWxFeHBhbmRlZCkpOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gaXNDb21wYXRpYmxlKF94KSB7CiAgICAgICAgcmV0dXJuIF9pc0NvbXBhdGlibGUuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgfQoKICAgICAgcmV0dXJuIGlzQ29tcGF0aWJsZTsKICAgIH0oKQogIH0sIHsKICAgIGtleTogImV4ZWN1dGUiLAogICAgdmFsdWU6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF9leGVjdXRlID0gX2FzeW5jVG9HZW5lcmF0b3IoCiAgICAgIC8qI19fUFVSRV9fKi8KICAgICAgcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoX3JlZjIpIHsKICAgICAgICB2YXIgZW1iZWRkYWJsZTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgZW1iZWRkYWJsZSA9IF9yZWYyLmVtYmVkZGFibGU7CiAgICAgICAgICAgICAgICBfY29udGV4dDIudDAgPSAhZW1iZWRkYWJsZS5wYXJlbnQ7CgogICAgICAgICAgICAgICAgaWYgKF9jb250ZXh0Mi50MCkgewogICAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDY7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNTsKICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmlzQ29tcGF0aWJsZSh7CiAgICAgICAgICAgICAgICAgIGVtYmVkZGFibGU6IGVtYmVkZGFibGUKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICBfY29udGV4dDIudDAgPSAhX2NvbnRleHQyLnNlbnQ7CgogICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICAgIGlmICghX2NvbnRleHQyLnQwKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gODsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgdGhyb3cgbmV3IF91aV9hY3Rpb25zLkluY29tcGF0aWJsZUFjdGlvbkVycm9yKCk7CgogICAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgICAgIGVtYmVkZGFibGUucGFyZW50LnJlbW92ZUVtYmVkZGFibGUoZW1iZWRkYWJsZS5pZCk7CgogICAgICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMiwgdGhpcyk7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIGV4ZWN1dGUoX3gyKSB7CiAgICAgICAgcmV0dXJuIF9leGVjdXRlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KCiAgICAgIHJldHVybiBleGVjdXRlOwogICAgfSgpCiAgfV0pOwoKICByZXR1cm4gUmVtb3ZlUGFuZWxBY3Rpb247Cn0oKTsKCmV4cG9ydHMuUmVtb3ZlUGFuZWxBY3Rpb24gPSBSZW1vdmVQYW5lbEFjdGlvbjs="},null]}