{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/siem/public/components/markdown_editor/index.js","dependencies":[{"path":"x-pack/legacy/plugins/siem/public/components/markdown_editor/index.js","mtime":1589249553012},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLk1hcmtkb3duRWRpdG9yID0gdm9pZCAwOwoKdmFyIF9ldWkgPSByZXF1aXJlKCJAZWxhc3RpYy9ldWkiKTsKCnZhciBfcmVhY3QgPSBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChyZXF1aXJlKCJyZWFjdCIpKTsKCnZhciBfc3R5bGVkQ29tcG9uZW50cyA9IF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKHJlcXVpcmUoInN0eWxlZC1jb21wb25lbnRzIikpOwoKdmFyIF9tYXJrZG93biA9IHJlcXVpcmUoIi4uL21hcmtkb3duIik7Cgp2YXIgaTE4biA9IF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKHJlcXVpcmUoIi4vdHJhbnNsYXRpb25zIikpOwoKdmFyIF9jb25zdGFudHMgPSByZXF1aXJlKCIuL2NvbnN0YW50cyIpOwoKZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQob2JqKSB7CiAgaWYgKG9iaiAmJiBvYmouX19lc01vZHVsZSkgewogICAgcmV0dXJuIG9iajsKICB9IGVsc2UgewogICAgdmFyIG5ld09iaiA9IHt9OwoKICAgIGlmIChvYmogIT0gbnVsbCkgewogICAgICBmb3IgKHZhciBrZXkgaW4gb2JqKSB7CiAgICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGtleSkpIHsKICAgICAgICAgIHZhciBkZXNjID0gT2JqZWN0LmRlZmluZVByb3BlcnR5ICYmIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IgPyBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iaiwga2V5KSA6IHt9OwoKICAgICAgICAgIGlmIChkZXNjLmdldCB8fCBkZXNjLnNldCkgewogICAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobmV3T2JqLCBrZXksIGRlc2MpOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgbmV3T2JqW2tleV0gPSBvYmpba2V5XTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgIH0KCiAgICBuZXdPYmouZGVmYXVsdCA9IG9iajsKICAgIHJldHVybiBuZXdPYmo7CiAgfQp9Ci8qCiAqIENvcHlyaWdodCBFbGFzdGljc2VhcmNoIEIuVi4gYW5kL29yIGxpY2Vuc2VkIHRvIEVsYXN0aWNzZWFyY2ggQi5WLiB1bmRlciBvbmUKICogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuIExpY2Vuc2VkIHVuZGVyIHRoZSBFbGFzdGljIExpY2Vuc2U7CiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgRWxhc3RpYyBMaWNlbnNlLgogKi8KCgp2YXIgVGV4dEFyZWEgPSAoMCwgX3N0eWxlZENvbXBvbmVudHMuZGVmYXVsdCkoX2V1aS5FdWlUZXh0QXJlYSkud2l0aENvbmZpZyh7CiAgZGlzcGxheU5hbWU6ICJUZXh0QXJlYSIsCiAgY29tcG9uZW50SWQ6ICJnOGFldmItMCIKfSkoWyJ3aWR0aDoxMDAlOyJdKTsKdmFyIENvbnRhaW5lciA9ICgwLCBfc3R5bGVkQ29tcG9uZW50cy5kZWZhdWx0KShfZXVpLkV1aVBhbmVsKS53aXRoQ29uZmlnKHsKICBkaXNwbGF5TmFtZTogIkNvbnRhaW5lciIsCiAgY29tcG9uZW50SWQ6ICJnOGFldmItMSIKfSkoWyIiLCAiIl0sIGZ1bmN0aW9uIChfcmVmKSB7CiAgdmFyIHRoZW1lID0gX3JlZi50aGVtZTsKICByZXR1cm4gKDAsIF9zdHlsZWRDb21wb25lbnRzLmNzcykoWyJwYWRkaW5nOjA7YmFja2dyb3VuZDoiLCAiO3Bvc2l0aW9uOnJlbGF0aXZlOy5tYXJrZG93bi10YWJzLWhlYWRlcntwb3NpdGlvbjphYnNvbHV0ZTt0b3A6IiwgIjtyaWdodDoiLCAiO3otaW5kZXg6IiwgIjt9LmV1aVRhYntwYWRkaW5nOjEwcHg7fS5tYXJrZG93bi10YWJze3dpZHRoOjEwMCU7fS5tYXJrZG93bi10YWJzLWZvb3RlcntoZWlnaHQ6NDFweDtwYWRkaW5nOjAgIiwgIjsuZXVpTGlua3tmb250LXNpemU6IiwgIjt9fS5ldWlGb3JtUm93X19sYWJlbFdyYXBwZXJ7cG9zaXRpb246YWJzb2x1dGU7dG9wOi0iLCAiO30uZXVpRm9ybUVycm9yVGV4dHtwYWRkaW5nOjAgIiwgIjt9Il0sIHRoZW1lLmV1aS5ldWlDb2xvckxpZ2h0ZXN0U2hhZGUsIHRoZW1lLmV1aS5ldWlTaXplUywgdGhlbWUuZXVpLmV1aVNpemVTLCB0aGVtZS5ldWkuZXVpWkNvbnRlbnRNZW51LCB0aGVtZS5ldWkuZXVpU2l6ZU0sIHRoZW1lLmV1aS5ldWlTaXplTSwgdGhlbWUuZXVpLmV1aVNpemVMLCB0aGVtZS5ldWkuZXVpU2l6ZU0pOwp9KTsKdmFyIE1hcmtkb3duQ29udGFpbmVyID0gKDAsIF9zdHlsZWRDb21wb25lbnRzLmRlZmF1bHQpKF9ldWkuRXVpUGFuZWwpLndpdGhDb25maWcoewogIGRpc3BsYXlOYW1lOiAiTWFya2Rvd25Db250YWluZXIiLAogIGNvbXBvbmVudElkOiAiZzhhZXZiLTIiCn0pKFsibWluLWhlaWdodDoxNTBweDtvdmVyZmxvdzphdXRvOyJdKTsKLyoqIEFuIGlucHV0IGZvciBlbnRlcmluZyBhIG5ldyBjYXNlIGRlc2NyaXB0aW9uICAqLwoKdmFyIE1hcmtkb3duRWRpdG9yID0gX3JlYWN0LmRlZmF1bHQubWVtbyhmdW5jdGlvbiAoX3JlZjIpIHsKICB2YXIgYm90dG9tUmlnaHRDb250ZW50ID0gX3JlZjIuYm90dG9tUmlnaHRDb250ZW50LAogICAgICB0b3BSaWdodENvbnRlbnQgPSBfcmVmMi50b3BSaWdodENvbnRlbnQsCiAgICAgIGNvbnRlbnQgPSBfcmVmMi5jb250ZW50LAogICAgICBfcmVmMiRpc0Rpc2FibGVkID0gX3JlZjIuaXNEaXNhYmxlZCwKICAgICAgaXNEaXNhYmxlZCA9IF9yZWYyJGlzRGlzYWJsZWQgPT09IHZvaWQgMCA/IGZhbHNlIDogX3JlZjIkaXNEaXNhYmxlZCwKICAgICAgb25DaGFuZ2UgPSBfcmVmMi5vbkNoYW5nZSwKICAgICAgcGxhY2Vob2xkZXIgPSBfcmVmMi5wbGFjZWhvbGRlciwKICAgICAgb25DdXJzb3JQb3NpdGlvblVwZGF0ZSA9IF9yZWYyLm9uQ3Vyc29yUG9zaXRpb25VcGRhdGU7CiAgdmFyIGhhbmRsZU9uQ2hhbmdlID0gKDAsIF9yZWFjdC51c2VDYWxsYmFjaykoZnVuY3Rpb24gKGV2dCkgewogICAgb25DaGFuZ2UoZXZ0LnRhcmdldC52YWx1ZSk7CiAgfSwgW29uQ2hhbmdlXSk7CgogIHZhciBzZXRDdXJzb3JQb3NpdGlvbiA9IGZ1bmN0aW9uIHNldEN1cnNvclBvc2l0aW9uKGUpIHsKICAgIGlmIChvbkN1cnNvclBvc2l0aW9uVXBkYXRlKSB7CiAgICAgIHZhciBfc2VsZWN0aW9uU3RhcnQsIF9zZWxlY3Rpb25FbmQ7CgogICAgICBvbkN1cnNvclBvc2l0aW9uVXBkYXRlKHsKICAgICAgICBzdGFydDogKF9zZWxlY3Rpb25TdGFydCA9IGUudGFyZ2V0LnNlbGVjdGlvblN0YXJ0KSAhPT0gbnVsbCAmJiBfc2VsZWN0aW9uU3RhcnQgIT09IHZvaWQgMCA/IF9zZWxlY3Rpb25TdGFydCA6IDAsCiAgICAgICAgZW5kOiAoX3NlbGVjdGlvbkVuZCA9IGUudGFyZ2V0LnNlbGVjdGlvbkVuZCkgIT09IG51bGwgJiYgX3NlbGVjdGlvbkVuZCAhPT0gdm9pZCAwID8gX3NlbGVjdGlvbkVuZCA6IDAKICAgICAgfSk7CiAgICB9CgogICAgcmV0dXJuIGZhbHNlOwogIH07CgogIHZhciB0YWJzID0gKDAsIF9yZWFjdC51c2VNZW1vKShmdW5jdGlvbiAoKSB7CiAgICByZXR1cm4gW3sKICAgICAgaWQ6ICdjb21tZW50JywKICAgICAgbmFtZTogaTE4bi5NQVJLRE9XTiwKICAgICAgY29udGVudDogX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChUZXh0QXJlYSwgewogICAgICAgIG9uQ2hhbmdlOiBoYW5kbGVPbkNoYW5nZSwKICAgICAgICBvbkJsdXI6IHNldEN1cnNvclBvc2l0aW9uLAogICAgICAgICJhcmlhLWxhYmVsIjogIm1hcmtkb3duLWVkaXRvci1jb21tZW50IiwKICAgICAgICBmdWxsV2lkdGg6IHRydWUsCiAgICAgICAgZGlzYWJsZWQ6IGlzRGlzYWJsZWQsCiAgICAgICAgcGxhY2Vob2xkZXI6IHBsYWNlaG9sZGVyICE9PSBudWxsICYmIHBsYWNlaG9sZGVyICE9PSB2b2lkIDAgPyBwbGFjZWhvbGRlciA6ICcnLAogICAgICAgIHNwZWxsQ2hlY2s6IGZhbHNlLAogICAgICAgIHZhbHVlOiBjb250ZW50CiAgICAgIH0pCiAgICB9LCB7CiAgICAgIGlkOiAncHJldmlldycsCiAgICAgIG5hbWU6IGkxOG4uUFJFVklFVywKICAgICAgY29udGVudDogX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChNYXJrZG93bkNvbnRhaW5lciwgewogICAgICAgICJkYXRhLXRlc3Qtc3ViaiI6ICJtYXJrZG93bi1jb250YWluZXIiLAogICAgICAgIHBhZGRpbmdTaXplOiAicyIKICAgICAgfSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfbWFya2Rvd24uTWFya2Rvd24sIHsKICAgICAgICByYXc6IGNvbnRlbnQKICAgICAgfSkpCiAgICB9XTsKICB9LCBbY29udGVudCwgaXNEaXNhYmxlZCwgcGxhY2Vob2xkZXJdKTsKICByZXR1cm4gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChDb250YWluZXIsIG51bGwsIHRvcFJpZ2h0Q29udGVudCAmJiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KCJkaXYiLCB7CiAgICBjbGFzc05hbWU6ICJtYXJrZG93bi10YWJzLWhlYWRlciIKICB9LCB0b3BSaWdodENvbnRlbnQpLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpVGFiYmVkQ29udGVudCwgewogICAgY2xhc3NOYW1lOiAibWFya2Rvd24tdGFicyIsCiAgICAiZGF0YS10ZXN0LXN1YmoiOiAibWFya2Rvd24tdGFicyIsCiAgICBzaXplOiAicyIsCiAgICB0YWJzOiB0YWJzLAogICAgaW5pdGlhbFNlbGVjdGVkVGFiOiB0YWJzWzBdCiAgfSksIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlGbGV4R3JvdXAsIHsKICAgIGNsYXNzTmFtZTogIm1hcmtkb3duLXRhYnMtZm9vdGVyIiwKICAgIGFsaWduSXRlbXM6ICJjZW50ZXIiLAogICAgZ3V0dGVyU2l6ZTogIm5vbmUiLAogICAganVzdGlmeUNvbnRlbnQ6ICJzcGFjZUJldHdlZW4iCiAgfSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUZsZXhJdGVtLCB7CiAgICBncm93OiBmYWxzZQogIH0sIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlMaW5rLCB7CiAgICBocmVmOiBfY29uc3RhbnRzLk1BUktET1dOX0hFTFBfTElOSywKICAgIGV4dGVybmFsOiB0cnVlLAogICAgdGFyZ2V0OiAiX2JsYW5rIgogIH0sIGkxOG4uTUFSS0RPV05fU1lOVEFYX0hFTFApKSwgYm90dG9tUmlnaHRDb250ZW50ICYmIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlGbGV4SXRlbSwgewogICAgZ3JvdzogZmFsc2UKICB9LCBib3R0b21SaWdodENvbnRlbnQpKSk7Cn0pOwoKZXhwb3J0cy5NYXJrZG93bkVkaXRvciA9IE1hcmtkb3duRWRpdG9yOwpNYXJrZG93bkVkaXRvci5kaXNwbGF5TmFtZSA9ICdNYXJrZG93bkVkaXRvcic7"},null]}