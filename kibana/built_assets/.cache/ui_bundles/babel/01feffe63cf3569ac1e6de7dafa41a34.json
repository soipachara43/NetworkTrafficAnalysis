{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/plugins/infra/common/http_api/snapshot_api.js","dependencies":[{"path":"x-pack/plugins/infra/common/http_api/snapshot_api.js","mtime":1589249554172},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKZnVuY3Rpb24gb3duS2V5cyhvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7IHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCk7IGlmIChlbnVtZXJhYmxlT25seSkgc3ltYm9scyA9IHN5bWJvbHMuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHsgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7IH0pOyBrZXlzLnB1c2guYXBwbHkoa2V5cywgc3ltYm9scyk7IH0gcmV0dXJuIGtleXM7IH0KCmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV0gIT0gbnVsbCA/IGFyZ3VtZW50c1tpXSA6IHt9OyBpZiAoaSAlIDIpIHsgb3duS2V5cyhzb3VyY2UsIHRydWUpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTsgfSk7IH0gZWxzZSBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMpIHsgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKTsgfSBlbHNlIHsgb3duS2V5cyhzb3VyY2UpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBrZXkpKTsgfSk7IH0gfSByZXR1cm4gdGFyZ2V0OyB9CgpmdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7IGlmIChrZXkgaW4gb2JqKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgeyB2YWx1ZTogdmFsdWUsIGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUgfSk7IH0gZWxzZSB7IG9ialtrZXldID0gdmFsdWU7IH0gcmV0dXJuIG9iajsgfQoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLlNuYXBzaG90UmVxdWVzdFJUID0gZXhwb3J0cy5TbmFwc2hvdE1ldHJpY0lucHV0UlQgPSBleHBvcnRzLlNuYXBzaG90Q3VzdG9tTWV0cmljSW5wdXRSVCA9IGV4cG9ydHMuU25hcHNob3RDdXN0b21BZ2dyZWdhdGlvblJUID0gZXhwb3J0cy5TTkFQU0hPVF9DVVNUT01fQUdHUkVHQVRJT05TID0gZXhwb3J0cy5TbmFwc2hvdE5hbWVkTWV0cmljSW5wdXRSVCA9IGV4cG9ydHMuU25hcHNob3RHcm91cEJ5UlQgPSBleHBvcnRzLkluZnJhVGltZXJhbmdlSW5wdXRSVCA9IGV4cG9ydHMuU25hcHNob3ROb2RlUmVzcG9uc2VSVCA9IGV4cG9ydHMuU25hcHNob3ROb2RlUlQgPSBleHBvcnRzLlNuYXBzaG90Tm9kZU1ldHJpY1JUID0gZXhwb3J0cy5TbmFwc2hvdE5vZGVQYXRoUlQgPSB2b2lkIDA7Cgp2YXIgcnQgPSBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChyZXF1aXJlKCJpby10cyIpKTsKCnZhciBfdHlwZXMgPSByZXF1aXJlKCIuLi9pbnZlbnRvcnlfbW9kZWxzL3R5cGVzIik7CgpmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChvYmopIHsKICBpZiAob2JqICYmIG9iai5fX2VzTW9kdWxlKSB7CiAgICByZXR1cm4gb2JqOwogIH0gZWxzZSB7CiAgICB2YXIgbmV3T2JqID0ge307CgogICAgaWYgKG9iaiAhPSBudWxsKSB7CiAgICAgIGZvciAodmFyIGtleSBpbiBvYmopIHsKICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwga2V5KSkgewogICAgICAgICAgdmFyIGRlc2MgPSBPYmplY3QuZGVmaW5lUHJvcGVydHkgJiYgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvciA/IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqLCBrZXkpIDoge307CgogICAgICAgICAgaWYgKGRlc2MuZ2V0IHx8IGRlc2Muc2V0KSB7CiAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShuZXdPYmosIGtleSwgZGVzYyk7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBuZXdPYmpba2V5XSA9IG9ialtrZXldOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfQoKICAgIG5ld09iai5kZWZhdWx0ID0gb2JqOwogICAgcmV0dXJuIG5ld09iajsKICB9Cn0KLyoKICogQ29weXJpZ2h0IEVsYXN0aWNzZWFyY2ggQi5WLiBhbmQvb3IgbGljZW5zZWQgdG8gRWxhc3RpY3NlYXJjaCBCLlYuIHVuZGVyIG9uZQogKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gTGljZW5zZWQgdW5kZXIgdGhlIEVsYXN0aWMgTGljZW5zZTsKICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBFbGFzdGljIExpY2Vuc2UuCiAqLwoKCnZhciBTbmFwc2hvdE5vZGVQYXRoUlQgPSBydC5pbnRlcnNlY3Rpb24oW3J0LnR5cGUoewogIHZhbHVlOiBydC5zdHJpbmcsCiAgbGFiZWw6IHJ0LnN0cmluZwp9KSwgcnQucGFydGlhbCh7CiAgaXA6IHJ0LnVuaW9uKFtydC5zdHJpbmcsIHJ0Lm51bGxdKQp9KV0pOwpleHBvcnRzLlNuYXBzaG90Tm9kZVBhdGhSVCA9IFNuYXBzaG90Tm9kZVBhdGhSVDsKdmFyIFNuYXBzaG90Tm9kZU1ldHJpY09wdGlvbmFsUlQgPSBydC5wYXJ0aWFsKHsKICB2YWx1ZTogcnQudW5pb24oW3J0Lm51bWJlciwgcnQubnVsbF0pLAogIGF2ZzogcnQudW5pb24oW3J0Lm51bWJlciwgcnQubnVsbF0pLAogIG1heDogcnQudW5pb24oW3J0Lm51bWJlciwgcnQubnVsbF0pCn0pOwp2YXIgU25hcHNob3ROb2RlTWV0cmljUmVxdWlyZWRSVCA9IHJ0LnR5cGUoewogIG5hbWU6IF90eXBlcy5TbmFwc2hvdE1ldHJpY1R5cGVSVAp9KTsKdmFyIFNuYXBzaG90Tm9kZU1ldHJpY1JUID0gcnQuaW50ZXJzZWN0aW9uKFtTbmFwc2hvdE5vZGVNZXRyaWNSZXF1aXJlZFJULCBTbmFwc2hvdE5vZGVNZXRyaWNPcHRpb25hbFJUXSk7CmV4cG9ydHMuU25hcHNob3ROb2RlTWV0cmljUlQgPSBTbmFwc2hvdE5vZGVNZXRyaWNSVDsKdmFyIFNuYXBzaG90Tm9kZVJUID0gcnQudHlwZSh7CiAgbWV0cmljOiBTbmFwc2hvdE5vZGVNZXRyaWNSVCwKICBwYXRoOiBydC5hcnJheShTbmFwc2hvdE5vZGVQYXRoUlQpCn0pOwpleHBvcnRzLlNuYXBzaG90Tm9kZVJUID0gU25hcHNob3ROb2RlUlQ7CnZhciBTbmFwc2hvdE5vZGVSZXNwb25zZVJUID0gcnQudHlwZSh7CiAgbm9kZXM6IHJ0LmFycmF5KFNuYXBzaG90Tm9kZVJUKSwKICBpbnRlcnZhbDogcnQuc3RyaW5nCn0pOwpleHBvcnRzLlNuYXBzaG90Tm9kZVJlc3BvbnNlUlQgPSBTbmFwc2hvdE5vZGVSZXNwb25zZVJUOwp2YXIgSW5mcmFUaW1lcmFuZ2VJbnB1dFJUID0gcnQudHlwZSh7CiAgaW50ZXJ2YWw6IHJ0LnN0cmluZywKICB0bzogcnQubnVtYmVyLAogIGZyb206IHJ0Lm51bWJlcgp9KTsKZXhwb3J0cy5JbmZyYVRpbWVyYW5nZUlucHV0UlQgPSBJbmZyYVRpbWVyYW5nZUlucHV0UlQ7CnZhciBTbmFwc2hvdEdyb3VwQnlSVCA9IHJ0LmFycmF5KHJ0LnBhcnRpYWwoewogIGxhYmVsOiBydC51bmlvbihbcnQuc3RyaW5nLCBydC5udWxsXSksCiAgZmllbGQ6IHJ0LnVuaW9uKFtydC5zdHJpbmcsIHJ0Lm51bGxdKQp9KSk7CmV4cG9ydHMuU25hcHNob3RHcm91cEJ5UlQgPSBTbmFwc2hvdEdyb3VwQnlSVDsKdmFyIFNuYXBzaG90TmFtZWRNZXRyaWNJbnB1dFJUID0gcnQudHlwZSh7CiAgdHlwZTogX3R5cGVzLlNuYXBzaG90TWV0cmljVHlwZVJUCn0pOwpleHBvcnRzLlNuYXBzaG90TmFtZWRNZXRyaWNJbnB1dFJUID0gU25hcHNob3ROYW1lZE1ldHJpY0lucHV0UlQ7CnZhciBTTkFQU0hPVF9DVVNUT01fQUdHUkVHQVRJT05TID0gWydhdmcnLCAnbWF4JywgJ21pbicsICdyYXRlJ107CmV4cG9ydHMuU05BUFNIT1RfQ1VTVE9NX0FHR1JFR0FUSU9OUyA9IFNOQVBTSE9UX0NVU1RPTV9BR0dSRUdBVElPTlM7CnZhciBzbmFwc2hvdEN1c3RvbUFnZ3JlZ2F0aW9uS2V5cyA9IFNOQVBTSE9UX0NVU1RPTV9BR0dSRUdBVElPTlMucmVkdWNlKGZ1bmN0aW9uIChhY2MsIGFnZykgewogIHJldHVybiBfb2JqZWN0U3ByZWFkKHt9LCBhY2MsIF9kZWZpbmVQcm9wZXJ0eSh7fSwgYWdnLCBudWxsKSk7Cn0sIHt9KTsKdmFyIFNuYXBzaG90Q3VzdG9tQWdncmVnYXRpb25SVCA9IHJ0LmtleW9mKHNuYXBzaG90Q3VzdG9tQWdncmVnYXRpb25LZXlzKTsKZXhwb3J0cy5TbmFwc2hvdEN1c3RvbUFnZ3JlZ2F0aW9uUlQgPSBTbmFwc2hvdEN1c3RvbUFnZ3JlZ2F0aW9uUlQ7CnZhciBTbmFwc2hvdEN1c3RvbU1ldHJpY0lucHV0UlQgPSBydC5pbnRlcnNlY3Rpb24oW3J0LnR5cGUoewogIHR5cGU6IHJ0LmxpdGVyYWwoJ2N1c3RvbScpLAogIGZpZWxkOiBydC5zdHJpbmcsCiAgYWdncmVnYXRpb246IFNuYXBzaG90Q3VzdG9tQWdncmVnYXRpb25SVCwKICBpZDogcnQuc3RyaW5nCn0pLCBydC5wYXJ0aWFsKHsKICBsYWJlbDogcnQuc3RyaW5nCn0pXSk7CmV4cG9ydHMuU25hcHNob3RDdXN0b21NZXRyaWNJbnB1dFJUID0gU25hcHNob3RDdXN0b21NZXRyaWNJbnB1dFJUOwp2YXIgU25hcHNob3RNZXRyaWNJbnB1dFJUID0gcnQudW5pb24oW1NuYXBzaG90TmFtZWRNZXRyaWNJbnB1dFJULCBTbmFwc2hvdEN1c3RvbU1ldHJpY0lucHV0UlRdKTsKZXhwb3J0cy5TbmFwc2hvdE1ldHJpY0lucHV0UlQgPSBTbmFwc2hvdE1ldHJpY0lucHV0UlQ7CnZhciBTbmFwc2hvdFJlcXVlc3RSVCA9IHJ0LmludGVyc2VjdGlvbihbcnQudHlwZSh7CiAgdGltZXJhbmdlOiBJbmZyYVRpbWVyYW5nZUlucHV0UlQsCiAgbWV0cmljOiBTbmFwc2hvdE1ldHJpY0lucHV0UlQsCiAgZ3JvdXBCeTogU25hcHNob3RHcm91cEJ5UlQsCiAgbm9kZVR5cGU6IF90eXBlcy5JdGVtVHlwZVJULAogIHNvdXJjZUlkOiBydC5zdHJpbmcKfSksIHJ0LnBhcnRpYWwoewogIGFjY291bnRJZDogcnQuc3RyaW5nLAogIHJlZ2lvbjogcnQuc3RyaW5nLAogIGZpbHRlclF1ZXJ5OiBydC51bmlvbihbcnQuc3RyaW5nLCBydC5udWxsXSkKfSldKTsKZXhwb3J0cy5TbmFwc2hvdFJlcXVlc3RSVCA9IFNuYXBzaG90UmVxdWVzdFJUOw=="},null]}