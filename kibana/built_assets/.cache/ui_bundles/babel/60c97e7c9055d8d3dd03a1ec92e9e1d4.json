{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/siem/public/components/embeddables/index_patterns_missing_prompt.js","dependencies":[{"path":"x-pack/legacy/plugins/siem/public/components/embeddables/index_patterns_missing_prompt.js","mtime":1589249552912},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLkluZGV4UGF0dGVybnNNaXNzaW5nUHJvbXB0ID0gZXhwb3J0cy5JbmRleFBhdHRlcm5zTWlzc2luZ1Byb21wdENvbXBvbmVudCA9IHZvaWQgMDsKCnZhciBfZXVpID0gcmVxdWlyZSgiQGVsYXN0aWMvZXVpIik7Cgp2YXIgX3JlYWN0ID0gcmVxdWlyZSgiQGtibi9pMThuL3JlYWN0Iik7Cgp2YXIgX3JlYWN0MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgicmVhY3QiKSk7Cgp2YXIgX2tpYmFuYSA9IHJlcXVpcmUoIi4uLy4uL2xpYi9raWJhbmEiKTsKCnZhciBpMThuID0gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQocmVxdWlyZSgiLi90cmFuc2xhdGlvbnMiKSk7CgpmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChvYmopIHsKICBpZiAob2JqICYmIG9iai5fX2VzTW9kdWxlKSB7CiAgICByZXR1cm4gb2JqOwogIH0gZWxzZSB7CiAgICB2YXIgbmV3T2JqID0ge307CgogICAgaWYgKG9iaiAhPSBudWxsKSB7CiAgICAgIGZvciAodmFyIGtleSBpbiBvYmopIHsKICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwga2V5KSkgewogICAgICAgICAgdmFyIGRlc2MgPSBPYmplY3QuZGVmaW5lUHJvcGVydHkgJiYgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvciA/IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqLCBrZXkpIDoge307CgogICAgICAgICAgaWYgKGRlc2MuZ2V0IHx8IGRlc2Muc2V0KSB7CiAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShuZXdPYmosIGtleSwgZGVzYyk7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBuZXdPYmpba2V5XSA9IG9ialtrZXldOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfQoKICAgIG5ld09iai5kZWZhdWx0ID0gb2JqOwogICAgcmV0dXJuIG5ld09iajsKICB9Cn0KCmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7CiAgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsKICAgIGRlZmF1bHQ6IG9iagogIH07Cn0KLyoKICogQ29weXJpZ2h0IEVsYXN0aWNzZWFyY2ggQi5WLiBhbmQvb3IgbGljZW5zZWQgdG8gRWxhc3RpY3NlYXJjaCBCLlYuIHVuZGVyIG9uZQogKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gTGljZW5zZWQgdW5kZXIgdGhlIEVsYXN0aWMgTGljZW5zZTsKICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBFbGFzdGljIExpY2Vuc2UuCiAqLwoKCnZhciBJbmRleFBhdHRlcm5zTWlzc2luZ1Byb21wdENvbXBvbmVudCA9IGZ1bmN0aW9uIEluZGV4UGF0dGVybnNNaXNzaW5nUHJvbXB0Q29tcG9uZW50KCkgewogIHZhciBkb2NMaW5rcyA9ICgwLCBfa2liYW5hLnVzZUtpYmFuYSkoKS5zZXJ2aWNlcy5kb2NMaW5rczsKICB2YXIga2liYW5hQmFzZVBhdGggPSAiIi5jb25jYXQoKDAsIF9raWJhbmEudXNlQmFzZVBhdGgpKCksICIvYXBwL2tpYmFuYSIpOwogIHJldHVybiBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUVtcHR5UHJvbXB0LCB7CiAgICBpY29uVHlwZTogImdpc0FwcCIsCiAgICB0aXRsZTogX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoImgyIiwgbnVsbCwgaTE4bi5FUlJPUl9USVRMRSksCiAgICB0aXRsZVNpemU6ICJ4cyIsCiAgICBib2R5OiBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChfcmVhY3QyLmRlZmF1bHQuRnJhZ21lbnQsIG51bGwsIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KCJwIiwgbnVsbCwgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3JlYWN0LkZvcm1hdHRlZE1lc3NhZ2UsIHsKICAgICAgZGVmYXVsdE1lc3NhZ2U6ICJUbyBkaXNwbGF5IG1hcCBkYXRhLCB5b3UgbXVzdCBkZWZpbmUgU0lFTSBpbmRpY2VzICh7ZGVmYXVsdEluZGV4fSkgYW5kIEtpYmFuYSBpbmRleCBwYXR0ZXJucyB3aXRoIG1hdGNoaW5nIGdsb2IgcGF0dGVybnMuIFdoZW4gdXNpbmcge2JlYXRzfSwgeW91IGNhbiBydW4gdGhlIHtzZXR1cH0gY29tbWFuZCBvbiB5b3VyIGhvc3RzIHRvIGF1dG9tYXRpY2FsbHkgY3JlYXRlIHRoZSBpbmRleCBwYXR0ZXJucy4gRm9yIGV4YW1wbGU6IHtleGFtcGxlfS4iLAogICAgICBpZDogInhwYWNrLnNpZW0uY29tcG9uZW50cy5lbWJlZGRhYmxlcy5pbmRleFBhdHRlcm5zTWlzc2luZ1Byb21wdC5lcnJvckRlc2NyaXB0aW9uMSIsCiAgICAgIHZhbHVlczogewogICAgICAgIGRlZmF1bHRJbmRleDogX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoImEiLCB7CiAgICAgICAgICBocmVmOiAiIi5jb25jYXQoa2liYW5hQmFzZVBhdGgsICIjL21hbmFnZW1lbnQva2liYW5hL3NldHRpbmdzIiksCiAgICAgICAgICByZWw6ICJub29wZW5lciBub3JlZmVycmVyIiwKICAgICAgICAgIHRhcmdldDogIl9ibGFuayIKICAgICAgICB9LCAnc2llbTpkZWZhdWx0SW5kZXgnKSwKICAgICAgICBiZWF0czogX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoImEiLCB7CiAgICAgICAgICBocmVmOiAiIi5jb25jYXQoZG9jTGlua3MuRUxBU1RJQ19XRUJTSVRFX1VSTCwgImd1aWRlL2VuL2JlYXRzL2xpYmJlYXQvIikuY29uY2F0KGRvY0xpbmtzLkRPQ19MSU5LX1ZFUlNJT04sICIvZ2V0dGluZy1zdGFydGVkLmh0bWwiKSwKICAgICAgICAgIHJlbDogIm5vb3BlbmVyIG5vcmVmZXJyZXIiLAogICAgICAgICAgdGFyZ2V0OiAiX2JsYW5rIgogICAgICAgIH0sICdiZWF0cycpLAogICAgICAgIHNldHVwOiBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUNvZGUsIG51bGwsICdzZXR1cCcpLAogICAgICAgIGV4YW1wbGU6IF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpQ29kZSwgbnVsbCwgJy4vcGFja2V0YmVhdCBzZXR1cCcpCiAgICAgIH0KICAgIH0pKSwgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoInAiLCBudWxsLCBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChfcmVhY3QuRm9ybWF0dGVkTWVzc2FnZSwgewogICAgICBkZWZhdWx0TWVzc2FnZTogIllvdSBjYW4gYWxzbyBjb25maWd1cmUgaW5kZXggcGF0dGVybnMgbWFudWFsbHkgaW4gS2liYW5hLiIsCiAgICAgIGlkOiAieHBhY2suc2llbS5jb21wb25lbnRzLmVtYmVkZGFibGVzLmluZGV4UGF0dGVybnNNaXNzaW5nUHJvbXB0LmVycm9yRGVzY3JpcHRpb24yIgogICAgfSkpKSwKICAgIGFjdGlvbnM6IF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpQnV0dG9uLCB7CiAgICAgIGhyZWY6ICIiLmNvbmNhdChraWJhbmFCYXNlUGF0aCwgIiMvbWFuYWdlbWVudC9raWJhbmEvaW5kZXhfcGF0dGVybnMiKSwKICAgICAgY29sb3I6ICJwcmltYXJ5IiwKICAgICAgdGFyZ2V0OiAiX2JsYW5rIiwKICAgICAgZmlsbDogdHJ1ZQogICAgfSwgaTE4bi5FUlJPUl9CVVRUT04pCiAgfSk7Cn07CgpleHBvcnRzLkluZGV4UGF0dGVybnNNaXNzaW5nUHJvbXB0Q29tcG9uZW50ID0gSW5kZXhQYXR0ZXJuc01pc3NpbmdQcm9tcHRDb21wb25lbnQ7CkluZGV4UGF0dGVybnNNaXNzaW5nUHJvbXB0Q29tcG9uZW50LmRpc3BsYXlOYW1lID0gJ0luZGV4UGF0dGVybnNNaXNzaW5nUHJvbXB0Q29tcG9uZW50JzsKCnZhciBJbmRleFBhdHRlcm5zTWlzc2luZ1Byb21wdCA9IF9yZWFjdDIuZGVmYXVsdC5tZW1vKEluZGV4UGF0dGVybnNNaXNzaW5nUHJvbXB0Q29tcG9uZW50KTsKCmV4cG9ydHMuSW5kZXhQYXR0ZXJuc01pc3NpbmdQcm9tcHQgPSBJbmRleFBhdHRlcm5zTWlzc2luZ1Byb21wdDsKSW5kZXhQYXR0ZXJuc01pc3NpbmdQcm9tcHQuZGlzcGxheU5hbWUgPSAnSW5kZXhQYXR0ZXJuc01pc3NpbmdQcm9tcHQnOw=="},null]}