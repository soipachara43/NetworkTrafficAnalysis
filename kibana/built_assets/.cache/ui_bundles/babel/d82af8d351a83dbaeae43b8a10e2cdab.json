{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/monitoring/public/views/elasticsearch/node/index.js","dependencies":[{"path":"x-pack/legacy/plugins/monitoring/public/views/elasticsearch/node/index.js","mtime":1589249552628},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9yZWFjdCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgicmVhY3QiKSk7Cgp2YXIgX2kxOG4gPSByZXF1aXJlKCJAa2JuL2kxOG4iKTsKCnZhciBfbG9kYXNoID0gcmVxdWlyZSgibG9kYXNoIik7Cgp2YXIgX3JvdXRlcyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgicGx1Z2lucy9tb25pdG9yaW5nL25wX2ltcG9ydHMvdWkvcm91dGVzIikpOwoKdmFyIF9yb3V0ZV9pbml0ID0gcmVxdWlyZSgicGx1Z2lucy9tb25pdG9yaW5nL2xpYi9yb3V0ZV9pbml0Iik7Cgp2YXIgX2dldF9wYWdlX2RhdGEgPSByZXF1aXJlKCIuL2dldF9wYWdlX2RhdGEiKTsKCnZhciBfaW5kZXggPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoIi4vaW5kZXguaHRtbCIpKTsKCnZhciBfbm9kZSA9IHJlcXVpcmUoIi4uLy4uLy4uL2NvbXBvbmVudHMvZWxhc3RpY3NlYXJjaC9ub2RlL25vZGUiKTsKCnZhciBfaTE4bjIgPSByZXF1aXJlKCJ1aS9pMThuIik7Cgp2YXIgX2xhYmVscyA9IHJlcXVpcmUoIi4uLy4uLy4uL2NvbXBvbmVudHMvZWxhc3RpY3NlYXJjaC9zaGFyZF9hbGxvY2F0aW9uL2xpYi9sYWJlbHMiKTsKCnZhciBfbm9kZXNfYnlfaW5kaWNlcyA9IHJlcXVpcmUoIi4uLy4uLy4uL2NvbXBvbmVudHMvZWxhc3RpY3NlYXJjaC9zaGFyZF9hbGxvY2F0aW9uL3RyYW5zZm9ybWVycy9ub2Rlc19ieV9pbmRpY2VzIik7Cgp2YXIgX2Jhc2VfY29udHJvbGxlciA9IHJlcXVpcmUoIi4uLy4uL2Jhc2VfY29udHJvbGxlciIpOwoKdmFyIF9jb25zdGFudHMgPSByZXF1aXJlKCIuLi8uLi8uLi8uLi9jb21tb24vY29uc3RhbnRzIik7CgpmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfQoKZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgaWYgKHR5cGVvZiBTeW1ib2wgPT09ICJmdW5jdGlvbiIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gInN5bWJvbCIpIHsgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9OyB9IGVsc2UgeyBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSAiZnVuY3Rpb24iICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/ICJzeW1ib2wiIDogdHlwZW9mIG9iajsgfTsgfSByZXR1cm4gX3R5cGVvZihvYmopOyB9CgpmdW5jdGlvbiBfZXh0ZW5kcygpIHsgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gfSByZXR1cm4gdGFyZ2V0OyB9OyByZXR1cm4gX2V4dGVuZHMuYXBwbHkodGhpcywgYXJndW1lbnRzKTsgfQoKZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb24iKTsgfSB9CgpmdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmIChjYWxsICYmIChfdHlwZW9mKGNhbGwpID09PSAib2JqZWN0IiB8fCB0eXBlb2YgY2FsbCA9PT0gImZ1bmN0aW9uIikpIHsgcmV0dXJuIGNhbGw7IH0gcmV0dXJuIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZik7IH0KCmZ1bmN0aW9uIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZikgeyBpZiAoc2VsZiA9PT0gdm9pZCAwKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcigidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkIik7IH0gcmV0dXJuIHNlbGY7IH0KCmZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7IF9nZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5nZXRQcm90b3R5cGVPZiA6IGZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7IHJldHVybiBvLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2Yobyk7IH07IHJldHVybiBfZ2V0UHJvdG90eXBlT2Yobyk7IH0KCmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09ICJmdW5jdGlvbiIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiIpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIF9zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcyk7IH0KCmZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7IF9zZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fCBmdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkgeyBvLl9fcHJvdG9fXyA9IHA7IHJldHVybiBvOyB9OyByZXR1cm4gX3NldFByb3RvdHlwZU9mKG8sIHApOyB9Cgpfcm91dGVzLmRlZmF1bHQud2hlbignL2VsYXN0aWNzZWFyY2gvbm9kZXMvOm5vZGUnLCB7CiAgdGVtcGxhdGU6IF9pbmRleC5kZWZhdWx0LAogIHJlc29sdmU6IHsKICAgIGNsdXN0ZXJzOiBmdW5jdGlvbiBjbHVzdGVycyhQcml2YXRlKSB7CiAgICAgIHZhciByb3V0ZUluaXQgPSBQcml2YXRlKF9yb3V0ZV9pbml0LnJvdXRlSW5pdFByb3ZpZGVyKTsKICAgICAgcmV0dXJuIHJvdXRlSW5pdCh7CiAgICAgICAgY29kZVBhdGhzOiBbX2NvbnN0YW50cy5DT0RFX1BBVEhfRUxBU1RJQ1NFQVJDSF0KICAgICAgfSk7CiAgICB9LAogICAgcGFnZURhdGE6IF9nZXRfcGFnZV9kYXRhLmdldFBhZ2VEYXRhCiAgfSwKICBjb250cm9sbGVyQXM6ICdtb25pdG9yaW5nRWxhc3RpY3NlYXJjaE5vZGVBcHAnLAogIGNvbnRyb2xsZXI6CiAgLyojX19QVVJFX18qLwogIGZ1bmN0aW9uIChfTW9uaXRvcmluZ1ZpZXdCYXNlQ28pIHsKICAgIF9pbmhlcml0cyhjb250cm9sbGVyLCBfTW9uaXRvcmluZ1ZpZXdCYXNlQ28pOwoKICAgIGZ1bmN0aW9uIGNvbnRyb2xsZXIoJGluamVjdG9yLCAkc2NvcGUpIHsKICAgICAgdmFyIF90aGlzOwoKICAgICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIGNvbnRyb2xsZXIpOwoKICAgICAgdmFyICRyb3V0ZSA9ICRpbmplY3Rvci5nZXQoJyRyb3V0ZScpOwogICAgICB2YXIga2JuVXJsID0gJGluamVjdG9yLmdldCgna2JuVXJsJyk7CiAgICAgIHZhciBub2RlTmFtZSA9ICRyb3V0ZS5jdXJyZW50LnBhcmFtcy5ub2RlOwogICAgICBfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9nZXRQcm90b3R5cGVPZihjb250cm9sbGVyKS5jYWxsKHRoaXMsIHsKICAgICAgICB0aXRsZTogX2kxOG4uaTE4bi50cmFuc2xhdGUoJ3hwYWNrLm1vbml0b3JpbmcuZWxhc3RpY3NlYXJjaC5ub2RlLm92ZXJ2aWV3LnJvdXRlVGl0bGUnLCB7CiAgICAgICAgICBkZWZhdWx0TWVzc2FnZTogJ0VsYXN0aWNzZWFyY2ggLSBOb2RlcyAtIHtub2RlTmFtZX0gLSBPdmVydmlldycsCiAgICAgICAgICB2YWx1ZXM6IHsKICAgICAgICAgICAgbm9kZU5hbWU6IG5vZGVOYW1lCiAgICAgICAgICB9CiAgICAgICAgfSksCiAgICAgICAgZGVmYXVsdERhdGE6IHt9LAogICAgICAgIGdldFBhZ2VEYXRhOiBfZ2V0X3BhZ2VfZGF0YS5nZXRQYWdlRGF0YSwKICAgICAgICByZWFjdE5vZGVJZDogJ21vbml0b3JpbmdFbGFzdGljc2VhcmNoTm9kZUFwcCcsCiAgICAgICAgJHNjb3BlOiAkc2NvcGUsCiAgICAgICAgJGluamVjdG9yOiAkaW5qZWN0b3IKICAgICAgfSkpOwogICAgICBfdGhpcy5ub2RlTmFtZSA9IG5vZGVOYW1lOwogICAgICB2YXIgZmVhdHVyZXMgPSAkaW5qZWN0b3IuZ2V0KCdmZWF0dXJlcycpOwogICAgICB2YXIgY2FsbFBhZ2VEYXRhID0gKDAsIF9sb2Rhc2gucGFydGlhbCkoX2dldF9wYWdlX2RhdGEuZ2V0UGFnZURhdGEsICRpbmplY3Rvcik7IC8vIHNob3cvaGlkZSBzeXN0ZW0gaW5kaWNlcyBpbiBzaGFyZCBhbGxvY2F0aW9uIHZpZXcKCiAgICAgICRzY29wZS5zaG93U3lzdGVtSW5kaWNlcyA9IGZlYXR1cmVzLmlzRW5hYmxlZCgnc2hvd1N5c3RlbUluZGljZXMnLCBmYWxzZSk7CgogICAgICAkc2NvcGUudG9nZ2xlU2hvd1N5c3RlbUluZGljZXMgPSBmdW5jdGlvbiAoaXNDaGVja2VkKSB7CiAgICAgICAgJHNjb3BlLnNob3dTeXN0ZW1JbmRpY2VzID0gaXNDaGVja2VkOyAvLyBwcmVzZXJ2ZSBzZXR0aW5nIGluIGxvY2FsU3RvcmFnZQoKICAgICAgICBmZWF0dXJlcy51cGRhdGUoJ3Nob3dTeXN0ZW1JbmRpY2VzJywgaXNDaGVja2VkKTsgLy8gdXBkYXRlIHRoZSBwYWdlCgogICAgICAgIGNhbGxQYWdlRGF0YSgpLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICAgIHJldHVybiBfdGhpcy5kYXRhID0gZGF0YTsKICAgICAgICB9KTsKICAgICAgfTsKCiAgICAgIHZhciB0cmFuc2Zvcm1lciA9ICgwLCBfbm9kZXNfYnlfaW5kaWNlcy5ub2Rlc0J5SW5kaWNlcykoKTsKICAgICAgJHNjb3BlLiR3YXRjaChmdW5jdGlvbiAoKSB7CiAgICAgICAgcmV0dXJuIF90aGlzLmRhdGE7CiAgICAgIH0sIGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgICAgaWYgKCFkYXRhIHx8ICFkYXRhLnNoYXJkcykgewogICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KCiAgICAgICAgdmFyIHNoYXJkcyA9IGRhdGEuc2hhcmRzOwogICAgICAgICRzY29wZS50b3RhbENvdW50ID0gc2hhcmRzLmxlbmd0aDsKICAgICAgICAkc2NvcGUuc2hvd2luZyA9IHRyYW5zZm9ybWVyKHNoYXJkcywgZGF0YS5ub2Rlcyk7CiAgICAgICAgJHNjb3BlLmxhYmVscyA9IF9sYWJlbHMubGFiZWxzLm5vZGU7CgogICAgICAgIF90aGlzLnJlbmRlclJlYWN0KF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2kxOG4yLkkxOG5Db250ZXh0LCBudWxsLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ub2RlLk5vZGUsIF9leHRlbmRzKHsKICAgICAgICAgIHNjb3BlOiAkc2NvcGUsCiAgICAgICAgICBrYm5Vcmw6IGtiblVybCwKICAgICAgICAgIG5vZGVJZDogX3RoaXMubm9kZU5hbWUsCiAgICAgICAgICBjbHVzdGVyVXVpZDogJHNjb3BlLmNsdXN0ZXIuY2x1c3Rlcl91dWlkLAogICAgICAgICAgb25CcnVzaDogX3RoaXMub25CcnVzaCwKICAgICAgICAgIHpvb21JbmZvOiBfdGhpcy56b29tSW5mbwogICAgICAgIH0sIGRhdGEpKSkpOwogICAgICB9KTsKICAgICAgcmV0dXJuIF90aGlzOwogICAgfQoKICAgIHJldHVybiBjb250cm9sbGVyOwogIH0oX2Jhc2VfY29udHJvbGxlci5Nb25pdG9yaW5nVmlld0Jhc2VDb250cm9sbGVyKQp9KTs="},null]}