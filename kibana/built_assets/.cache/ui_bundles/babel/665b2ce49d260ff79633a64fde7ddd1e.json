{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/siem/public/components/drag_and_drop/drag_drop_context_wrapper.js","dependencies":[{"path":"x-pack/legacy/plugins/siem/public/components/drag_and_drop/drag_drop_context_wrapper.js","mtime":1589249552900},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLkRyYWdEcm9wQ29udGV4dFdyYXBwZXIgPSBleHBvcnRzLkRyYWdEcm9wQ29udGV4dFdyYXBwZXJDb21wb25lbnQgPSB2b2lkIDA7Cgp2YXIgX2ZwID0gcmVxdWlyZSgibG9kYXNoL2ZwIik7Cgp2YXIgX3JlYWN0ID0gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQocmVxdWlyZSgicmVhY3QiKSk7Cgp2YXIgX3JlYWN0QmVhdXRpZnVsRG5kID0gcmVxdWlyZSgicmVhY3QtYmVhdXRpZnVsLWRuZCIpOwoKdmFyIF9yZWFjdFJlZHV4ID0gcmVxdWlyZSgicmVhY3QtcmVkdXgiKTsKCnZhciBfc3RvcmUgPSByZXF1aXJlKCIuLi8uLi9zdG9yZSIpOwoKdmFyIF9oZWxwZXJzID0gcmVxdWlyZSgiLi9oZWxwZXJzIik7CgpmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChvYmopIHsKICBpZiAob2JqICYmIG9iai5fX2VzTW9kdWxlKSB7CiAgICByZXR1cm4gb2JqOwogIH0gZWxzZSB7CiAgICB2YXIgbmV3T2JqID0ge307CgogICAgaWYgKG9iaiAhPSBudWxsKSB7CiAgICAgIGZvciAodmFyIGtleSBpbiBvYmopIHsKICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwga2V5KSkgewogICAgICAgICAgdmFyIGRlc2MgPSBPYmplY3QuZGVmaW5lUHJvcGVydHkgJiYgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvciA/IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqLCBrZXkpIDoge307CgogICAgICAgICAgaWYgKGRlc2MuZ2V0IHx8IGRlc2Muc2V0KSB7CiAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShuZXdPYmosIGtleSwgZGVzYyk7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBuZXdPYmpba2V5XSA9IG9ialtrZXldOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfQoKICAgIG5ld09iai5kZWZhdWx0ID0gb2JqOwogICAgcmV0dXJuIG5ld09iajsKICB9Cn0KLyoKICogQ29weXJpZ2h0IEVsYXN0aWNzZWFyY2ggQi5WLiBhbmQvb3IgbGljZW5zZWQgdG8gRWxhc3RpY3NlYXJjaCBCLlYuIHVuZGVyIG9uZQogKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gTGljZW5zZWQgdW5kZXIgdGhlIEVsYXN0aWMgTGljZW5zZTsKICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBFbGFzdGljIExpY2Vuc2UuCiAqLwoKCnZhciBvbkRyYWdFbmRIYW5kbGVyID0gZnVuY3Rpb24gb25EcmFnRW5kSGFuZGxlcihfcmVmKSB7CiAgdmFyIGJyb3dzZXJGaWVsZHMgPSBfcmVmLmJyb3dzZXJGaWVsZHMsCiAgICAgIGRhdGFQcm92aWRlcnMgPSBfcmVmLmRhdGFQcm92aWRlcnMsCiAgICAgIGRpc3BhdGNoID0gX3JlZi5kaXNwYXRjaCwKICAgICAgcmVzdWx0ID0gX3JlZi5yZXN1bHQ7CgogIGlmICgoMCwgX2hlbHBlcnMucHJvdmlkZXJXYXNEcm9wcGVkT25UaW1lbGluZSkocmVzdWx0KSkgewogICAgKDAsIF9oZWxwZXJzLmFkZFByb3ZpZGVyVG9UaW1lbGluZSkoewogICAgICBkYXRhUHJvdmlkZXJzOiBkYXRhUHJvdmlkZXJzLAogICAgICByZXN1bHQ6IHJlc3VsdCwKICAgICAgZGlzcGF0Y2g6IGRpc3BhdGNoCiAgICB9KTsKICB9IGVsc2UgaWYgKCgwLCBfaGVscGVycy5wcm92aWRlcldhc0Ryb3BwZWRPblRpbWVsaW5lQnV0dG9uKShyZXN1bHQpKSB7CiAgICAoMCwgX2hlbHBlcnMuYWRkUHJvdmlkZXJUb1RpbWVsaW5lKSh7CiAgICAgIGRhdGFQcm92aWRlcnM6IGRhdGFQcm92aWRlcnMsCiAgICAgIHJlc3VsdDogcmVzdWx0LAogICAgICBkaXNwYXRjaDogZGlzcGF0Y2gKICAgIH0pOwogIH0gZWxzZSBpZiAoKDAsIF9oZWxwZXJzLmZpZWxkV2FzRHJvcHBlZE9uVGltZWxpbmVDb2x1bW5zKShyZXN1bHQpKSB7CiAgICAoMCwgX2hlbHBlcnMuYWRkRmllbGRUb1RpbWVsaW5lQ29sdW1ucykoewogICAgICBicm93c2VyRmllbGRzOiBicm93c2VyRmllbGRzLAogICAgICBkaXNwYXRjaDogZGlzcGF0Y2gsCiAgICAgIHJlc3VsdDogcmVzdWx0CiAgICB9KTsKICB9Cn07Ci8qKgogKiBEcmFnRHJvcENvbnRleHRXcmFwcGVyQ29tcG9uZW50IGhhbmRsZXMgYWxsIGRyYWcgZW5kIGV2ZW50cwogKi8KCgp2YXIgRHJhZ0Ryb3BDb250ZXh0V3JhcHBlckNvbXBvbmVudCA9IF9yZWFjdC5kZWZhdWx0Lm1lbW8oZnVuY3Rpb24gKF9yZWYyKSB7CiAgdmFyIGJyb3dzZXJGaWVsZHMgPSBfcmVmMi5icm93c2VyRmllbGRzLAogICAgICBjaGlsZHJlbiA9IF9yZWYyLmNoaWxkcmVuLAogICAgICBkYXRhUHJvdmlkZXJzID0gX3JlZjIuZGF0YVByb3ZpZGVycywKICAgICAgZGlzcGF0Y2ggPSBfcmVmMi5kaXNwYXRjaDsKICB2YXIgb25EcmFnRW5kID0gKDAsIF9yZWFjdC51c2VDYWxsYmFjaykoZnVuY3Rpb24gKHJlc3VsdCkgewogICAgZW5hYmxlU2Nyb2xsaW5nKCk7CgogICAgaWYgKGRhdGFQcm92aWRlcnMgIT0gbnVsbCkgewogICAgICBvbkRyYWdFbmRIYW5kbGVyKHsKICAgICAgICBicm93c2VyRmllbGRzOiBicm93c2VyRmllbGRzLAogICAgICAgIHJlc3VsdDogcmVzdWx0LAogICAgICAgIGRhdGFQcm92aWRlcnM6IGRhdGFQcm92aWRlcnMsCiAgICAgICAgZGlzcGF0Y2g6IGRpc3BhdGNoCiAgICAgIH0pOwogICAgfQoKICAgIGlmICghKDAsIF9oZWxwZXJzLmRyYWdnYWJsZUlzRmllbGQpKHJlc3VsdCkpIHsKICAgICAgZG9jdW1lbnQuYm9keS5jbGFzc0xpc3QucmVtb3ZlKF9oZWxwZXJzLklTX0RSQUdHSU5HX0NMQVNTX05BTUUpOwogICAgfQoKICAgIGlmICgoMCwgX2hlbHBlcnMuZHJhZ2dhYmxlSXNGaWVsZCkocmVzdWx0KSkgewogICAgICBkb2N1bWVudC5ib2R5LmNsYXNzTGlzdC5yZW1vdmUoX2hlbHBlcnMuSVNfVElNRUxJTkVfRklFTERfRFJBR0dJTkdfQ0xBU1NfTkFNRSk7CiAgICB9CiAgfSwgW2Jyb3dzZXJGaWVsZHMsIGRhdGFQcm92aWRlcnNdKTsKICByZXR1cm4gKC8vIEB0cy1pZ25vcmUKICAgIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3JlYWN0QmVhdXRpZnVsRG5kLkRyYWdEcm9wQ29udGV4dCwgewogICAgICBvbkRyYWdFbmQ6IG9uRHJhZ0VuZCwKICAgICAgb25CZWZvcmVDYXB0dXJlOiBvbkJlZm9yZUNhcHR1cmUKICAgIH0sIGNoaWxkcmVuKQogICk7Cn0sIGZ1bmN0aW9uIChwcmV2UHJvcHMsIG5leHRQcm9wcykgewogIHJldHVybiBwcmV2UHJvcHMuY2hpbGRyZW4gPT09IG5leHRQcm9wcy5jaGlsZHJlbiAmJiBwcmV2UHJvcHMuZGF0YVByb3ZpZGVycyA9PT0gbmV4dFByb3BzLmRhdGFQcm92aWRlcnM7IC8vIHByZXZlbnQgcmUtcmVuZGVycyB3aGVuIGRhdGEgcHJvdmlkZXJzIGFyZSBhZGRlZCBvciByZW1vdmVkLCBidXQgYWxsIG90aGVyIHByb3BzIGFyZSB0aGUgc2FtZQp9KTsKCmV4cG9ydHMuRHJhZ0Ryb3BDb250ZXh0V3JhcHBlckNvbXBvbmVudCA9IERyYWdEcm9wQ29udGV4dFdyYXBwZXJDb21wb25lbnQ7CkRyYWdEcm9wQ29udGV4dFdyYXBwZXJDb21wb25lbnQuZGlzcGxheU5hbWUgPSAnRHJhZ0Ryb3BDb250ZXh0V3JhcHBlckNvbXBvbmVudCc7CnZhciBlbXB0eURhdGFQcm92aWRlcnMgPSB7fTsgLy8gc3RhYmxlIHJlZmVyZW5jZQoKdmFyIG1hcFN0YXRlVG9Qcm9wcyA9IGZ1bmN0aW9uIG1hcFN0YXRlVG9Qcm9wcyhzdGF0ZSkgewogIHZhciBfZHJhZ0FuZERyb3BTZWxlY3RvcnM7CgogIHZhciBkYXRhUHJvdmlkZXJzID0gKF9kcmFnQW5kRHJvcFNlbGVjdG9ycyA9IF9zdG9yZS5kcmFnQW5kRHJvcFNlbGVjdG9ycy5kYXRhUHJvdmlkZXJzU2VsZWN0b3Ioc3RhdGUpKSAhPT0gbnVsbCAmJiBfZHJhZ0FuZERyb3BTZWxlY3RvcnMgIT09IHZvaWQgMCA/IF9kcmFnQW5kRHJvcFNlbGVjdG9ycyA6IGVtcHR5RGF0YVByb3ZpZGVyczsKICByZXR1cm4gewogICAgZGF0YVByb3ZpZGVyczogZGF0YVByb3ZpZGVycwogIH07Cn07Cgp2YXIgY29ubmVjdG9yID0gKDAsIF9yZWFjdFJlZHV4LmNvbm5lY3QpKG1hcFN0YXRlVG9Qcm9wcyk7CnZhciBEcmFnRHJvcENvbnRleHRXcmFwcGVyID0gY29ubmVjdG9yKERyYWdEcm9wQ29udGV4dFdyYXBwZXJDb21wb25lbnQpOwpleHBvcnRzLkRyYWdEcm9wQ29udGV4dFdyYXBwZXIgPSBEcmFnRHJvcENvbnRleHRXcmFwcGVyOwpEcmFnRHJvcENvbnRleHRXcmFwcGVyLmRpc3BsYXlOYW1lID0gJ0RyYWdEcm9wQ29udGV4dFdyYXBwZXInOwoKdmFyIG9uQmVmb3JlQ2FwdHVyZSA9IGZ1bmN0aW9uIG9uQmVmb3JlQ2FwdHVyZShiZWZvcmUpIHsKICB2YXIgeCA9IHdpbmRvdy5wYWdlWE9mZnNldCAhPT0gdW5kZWZpbmVkID8gd2luZG93LnBhZ2VYT2Zmc2V0IDogKGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCB8fCBkb2N1bWVudC5ib2R5LnBhcmVudE5vZGUgfHwgZG9jdW1lbnQuYm9keSkuc2Nyb2xsTGVmdDsKICB2YXIgeSA9IHdpbmRvdy5wYWdlWU9mZnNldCAhPT0gdW5kZWZpbmVkID8gd2luZG93LnBhZ2VZT2Zmc2V0IDogKGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCB8fCBkb2N1bWVudC5ib2R5LnBhcmVudE5vZGUgfHwgZG9jdW1lbnQuYm9keSkuc2Nyb2xsVG9wOwoKICB3aW5kb3cub25zY3JvbGwgPSBmdW5jdGlvbiAoKSB7CiAgICByZXR1cm4gd2luZG93LnNjcm9sbFRvKHgsIHkpOwogIH07CgogIGlmICghKDAsIF9oZWxwZXJzLmRyYWdnYWJsZUlzRmllbGQpKGJlZm9yZSkpIHsKICAgIGRvY3VtZW50LmJvZHkuY2xhc3NMaXN0LmFkZChfaGVscGVycy5JU19EUkFHR0lOR19DTEFTU19OQU1FKTsKICB9CgogIGlmICgoMCwgX2hlbHBlcnMuZHJhZ2dhYmxlSXNGaWVsZCkoYmVmb3JlKSkgewogICAgZG9jdW1lbnQuYm9keS5jbGFzc0xpc3QuYWRkKF9oZWxwZXJzLklTX1RJTUVMSU5FX0ZJRUxEX0RSQUdHSU5HX0NMQVNTX05BTUUpOwogIH0KfTsKCnZhciBlbmFibGVTY3JvbGxpbmcgPSBmdW5jdGlvbiBlbmFibGVTY3JvbGxpbmcoKSB7CiAgcmV0dXJuIHdpbmRvdy5vbnNjcm9sbCA9IGZ1bmN0aW9uICgpIHsKICAgIHJldHVybiBfZnAubm9vcDsKICB9Owp9Ow=="},null]}