{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!src/legacy/ui/public/chrome/api/theme.js","dependencies":[{"path":"src/legacy/ui/public/chrome/api/theme.js","mtime":1589249550283},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmluaXRDaHJvbWVUaGVtZUFwaSA9IGluaXRDaHJvbWVUaGVtZUFwaTsKCnZhciBSeCA9IF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKHJlcXVpcmUoInJ4anMiKSk7Cgp2YXIgX25ld19wbGF0Zm9ybSA9IHJlcXVpcmUoInVpL25ld19wbGF0Zm9ybSIpOwoKZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQob2JqKSB7CiAgaWYgKG9iaiAmJiBvYmouX19lc01vZHVsZSkgewogICAgcmV0dXJuIG9iajsKICB9IGVsc2UgewogICAgdmFyIG5ld09iaiA9IHt9OwoKICAgIGlmIChvYmogIT0gbnVsbCkgewogICAgICBmb3IgKHZhciBrZXkgaW4gb2JqKSB7CiAgICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGtleSkpIHsKICAgICAgICAgIHZhciBkZXNjID0gT2JqZWN0LmRlZmluZVByb3BlcnR5ICYmIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IgPyBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iaiwga2V5KSA6IHt9OwoKICAgICAgICAgIGlmIChkZXNjLmdldCB8fCBkZXNjLnNldCkgewogICAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobmV3T2JqLCBrZXksIGRlc2MpOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgbmV3T2JqW2tleV0gPSBvYmpba2V5XTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgIH0KCiAgICBuZXdPYmouZGVmYXVsdCA9IG9iajsKICAgIHJldHVybiBuZXdPYmo7CiAgfQp9Ci8qCiAqIExpY2Vuc2VkIHRvIEVsYXN0aWNzZWFyY2ggQi5WLiB1bmRlciBvbmUgb3IgbW9yZSBjb250cmlidXRvcgogKiBsaWNlbnNlIGFncmVlbWVudHMuIFNlZSB0aGUgTk9USUNFIGZpbGUgZGlzdHJpYnV0ZWQgd2l0aAogKiB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24gcmVnYXJkaW5nIGNvcHlyaWdodAogKiBvd25lcnNoaXAuIEVsYXN0aWNzZWFyY2ggQi5WLiBsaWNlbnNlcyB0aGlzIGZpbGUgdG8geW91IHVuZGVyCiAqIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSAiTGljZW5zZSIpOyB5b3UgbWF5CiAqIG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuCiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdAogKgogKiAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKICoKICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLAogKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbgogKiAiQVMgSVMiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkKICogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlCiAqIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnMKICogdW5kZXIgdGhlIExpY2Vuc2UuCiAqLwoKCnZhciBuZXdQbGF0Zm9ybUNocm9tZSA9IF9uZXdfcGxhdGZvcm0ubnBTdGFydC5jb3JlLmNocm9tZTsKCmZ1bmN0aW9uIGluaXRDaHJvbWVUaGVtZUFwaShjaHJvbWUpIHsKICB2YXIgYnJhbmRDYWNoZSQgPSBuZXcgUnguQmVoYXZpb3JTdWJqZWN0KHt9KTsKICBuZXdQbGF0Zm9ybUNocm9tZS5nZXRCcmFuZCQoKS5zdWJzY3JpYmUoYnJhbmRDYWNoZSQpOwogIHZhciBhcHBsaWNhdGlvbkNsYXNzZXNDYWNoZSQgPSBuZXcgUnguQmVoYXZpb3JTdWJqZWN0KFtdKTsKICBuZXdQbGF0Zm9ybUNocm9tZS5nZXRBcHBsaWNhdGlvbkNsYXNzZXMkKCkuc3Vic2NyaWJlKGFwcGxpY2F0aW9uQ2xhc3Nlc0NhY2hlJCk7CgogIGNocm9tZS5zZXRCcmFuZCA9IGZ1bmN0aW9uIChicmFuZCkgewogICAgbmV3UGxhdGZvcm1DaHJvbWUuc2V0QnJhbmQoYnJhbmQpOwogICAgcmV0dXJuIGNocm9tZTsKICB9OwoKICBjaHJvbWUuZ2V0QnJhbmQgPSBmdW5jdGlvbiAoa2V5KSB7CiAgICByZXR1cm4gYnJhbmRDYWNoZSQuZ2V0VmFsdWUoKVtrZXldOwogIH07CgogIGNocm9tZS5hZGRBcHBsaWNhdGlvbkNsYXNzID0gZnVuY3Rpb24gKCkgewogICAgdmFyIGNsYXNzTmFtZXMgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IFtdOwoKICAgIGlmICh0eXBlb2YgY2xhc3NOYW1lcyA9PT0gJ3N0cmluZycpIHsKICAgICAgY2xhc3NOYW1lcyA9IFtjbGFzc05hbWVzXTsKICAgIH0KCiAgICB2YXIgX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbiA9IHRydWU7CiAgICB2YXIgX2RpZEl0ZXJhdG9yRXJyb3IgPSBmYWxzZTsKICAgIHZhciBfaXRlcmF0b3JFcnJvciA9IHVuZGVmaW5lZDsKCiAgICB0cnkgewogICAgICBmb3IgKHZhciBfaXRlcmF0b3IgPSBjbGFzc05hbWVzW1N5bWJvbC5pdGVyYXRvcl0oKSwgX3N0ZXA7ICEoX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbiA9IChfc3RlcCA9IF9pdGVyYXRvci5uZXh0KCkpLmRvbmUpOyBfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uID0gdHJ1ZSkgewogICAgICAgIHZhciBjbGFzc05hbWUgPSBfc3RlcC52YWx1ZTsKICAgICAgICBuZXdQbGF0Zm9ybUNocm9tZS5hZGRBcHBsaWNhdGlvbkNsYXNzKGNsYXNzTmFtZSk7CiAgICAgIH0KICAgIH0gY2F0Y2ggKGVycikgewogICAgICBfZGlkSXRlcmF0b3JFcnJvciA9IHRydWU7CiAgICAgIF9pdGVyYXRvckVycm9yID0gZXJyOwogICAgfSBmaW5hbGx5IHsKICAgICAgdHJ5IHsKICAgICAgICBpZiAoIV9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24gJiYgX2l0ZXJhdG9yLnJldHVybiAhPSBudWxsKSB7CiAgICAgICAgICBfaXRlcmF0b3IucmV0dXJuKCk7CiAgICAgICAgfQogICAgICB9IGZpbmFsbHkgewogICAgICAgIGlmIChfZGlkSXRlcmF0b3JFcnJvcikgewogICAgICAgICAgdGhyb3cgX2l0ZXJhdG9yRXJyb3I7CiAgICAgICAgfQogICAgICB9CiAgICB9CgogICAgcmV0dXJuIGNocm9tZTsKICB9OwoKICBjaHJvbWUucmVtb3ZlQXBwbGljYXRpb25DbGFzcyA9IGZ1bmN0aW9uIChjbGFzc05hbWVzKSB7CiAgICBpZiAodHlwZW9mIGNsYXNzTmFtZXMgPT09ICdzdHJpbmcnKSB7CiAgICAgIGNsYXNzTmFtZXMgPSBbY2xhc3NOYW1lc107CiAgICB9CgogICAgdmFyIF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24yID0gdHJ1ZTsKICAgIHZhciBfZGlkSXRlcmF0b3JFcnJvcjIgPSBmYWxzZTsKICAgIHZhciBfaXRlcmF0b3JFcnJvcjIgPSB1bmRlZmluZWQ7CgogICAgdHJ5IHsKICAgICAgZm9yICh2YXIgX2l0ZXJhdG9yMiA9IGNsYXNzTmFtZXNbU3ltYm9sLml0ZXJhdG9yXSgpLCBfc3RlcDI7ICEoX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjIgPSAoX3N0ZXAyID0gX2l0ZXJhdG9yMi5uZXh0KCkpLmRvbmUpOyBfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uMiA9IHRydWUpIHsKICAgICAgICB2YXIgY2xhc3NOYW1lID0gX3N0ZXAyLnZhbHVlOwogICAgICAgIG5ld1BsYXRmb3JtQ2hyb21lLnJlbW92ZUFwcGxpY2F0aW9uQ2xhc3MoY2xhc3NOYW1lKTsKICAgICAgfQogICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgIF9kaWRJdGVyYXRvckVycm9yMiA9IHRydWU7CiAgICAgIF9pdGVyYXRvckVycm9yMiA9IGVycjsKICAgIH0gZmluYWxseSB7CiAgICAgIHRyeSB7CiAgICAgICAgaWYgKCFfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uMiAmJiBfaXRlcmF0b3IyLnJldHVybiAhPSBudWxsKSB7CiAgICAgICAgICBfaXRlcmF0b3IyLnJldHVybigpOwogICAgICAgIH0KICAgICAgfSBmaW5hbGx5IHsKICAgICAgICBpZiAoX2RpZEl0ZXJhdG9yRXJyb3IyKSB7CiAgICAgICAgICB0aHJvdyBfaXRlcmF0b3JFcnJvcjI7CiAgICAgICAgfQogICAgICB9CiAgICB9CgogICAgcmV0dXJuIGNocm9tZTsKICB9OwoKICBjaHJvbWUuZ2V0QXBwbGljYXRpb25DbGFzc2VzID0gZnVuY3Rpb24gKCkgewogICAgcmV0dXJuIGFwcGxpY2F0aW9uQ2xhc3Nlc0NhY2hlJC5nZXRWYWx1ZSgpLmpvaW4oJyAnKTsKICB9Owp9"},null]}