{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/monitoring/public/components/setup_mode/badge.js","dependencies":[{"path":"x-pack/legacy/plugins/monitoring/public/components/setup_mode/badge.js","mtime":1589249552584},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLlNldHVwTW9kZUJhZGdlID0gU2V0dXBNb2RlQmFkZ2U7Cgp2YXIgX3JlYWN0ID0gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQocmVxdWlyZSgicmVhY3QiKSk7Cgp2YXIgX2V1aSA9IHJlcXVpcmUoIkBlbGFzdGljL2V1aSIpOwoKdmFyIF9pMThuID0gcmVxdWlyZSgiQGtibi9pMThuIik7Cgp2YXIgX2NvbnN0YW50cyA9IHJlcXVpcmUoIi4uLy4uLy4uL2NvbW1vbi9jb25zdGFudHMiKTsKCmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKG9iaikgeyBpZiAob2JqICYmIG9iai5fX2VzTW9kdWxlKSB7IHJldHVybiBvYmo7IH0gZWxzZSB7IHZhciBuZXdPYmogPSB7fTsgaWYgKG9iaiAhPSBudWxsKSB7IGZvciAodmFyIGtleSBpbiBvYmopIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGtleSkpIHsgdmFyIGRlc2MgPSBPYmplY3QuZGVmaW5lUHJvcGVydHkgJiYgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvciA/IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqLCBrZXkpIDoge307IGlmIChkZXNjLmdldCB8fCBkZXNjLnNldCkgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkobmV3T2JqLCBrZXksIGRlc2MpOyB9IGVsc2UgeyBuZXdPYmpba2V5XSA9IG9ialtrZXldOyB9IH0gfSB9IG5ld09iai5kZWZhdWx0ID0gb2JqOyByZXR1cm4gbmV3T2JqOyB9IH0KCmZ1bmN0aW9uIF9leHRlbmRzKCkgeyBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07IHJldHVybiBfZXh0ZW5kcy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyB9Cgp2YXIgY2xpY2tUb01vbml0b3JXaXRoTWV0cmljYmVhdCA9IF9pMThuLmkxOG4udHJhbnNsYXRlKCd4cGFjay5tb25pdG9yaW5nLnNldHVwTW9kZS5jbGlja1RvTW9uaXRvcldpdGhNZXRyaWNiZWF0JywgewogIGRlZmF1bHRNZXNzYWdlOiAnTW9uaXRvciB3aXRoIE1ldHJpY2JlYXQnCn0pOwoKdmFyIGNsaWNrVG9EaXNhYmxlSW50ZXJuYWxDb2xsZWN0aW9uID0gX2kxOG4uaTE4bi50cmFuc2xhdGUoJ3hwYWNrLm1vbml0b3Jpbmcuc2V0dXBNb2RlLmNsaWNrVG9EaXNhYmxlSW50ZXJuYWxDb2xsZWN0aW9uJywgewogIGRlZmF1bHRNZXNzYWdlOiAnRGlzYWJsZSBzZWxmIG1vbml0b3JpbmcnCn0pOwoKdmFyIG1vbml0b3JlZFdpdGhNZXRyaWNiZWF0ID0gX2kxOG4uaTE4bi50cmFuc2xhdGUoJ3hwYWNrLm1vbml0b3Jpbmcuc2V0dXBNb2RlLnVzaW5nTWV0cmljYmVhdENvbGxlY3Rpb24nLCB7CiAgZGVmYXVsdE1lc3NhZ2U6ICdNb25pdG9yZWQgd2l0aCBNZXRyaWNiZWF0Jwp9KTsKCnZhciB1bmtub3duID0gX2kxOG4uaTE4bi50cmFuc2xhdGUoJ3hwYWNrLm1vbml0b3Jpbmcuc2V0dXBNb2RlLnVua25vd24nLCB7CiAgZGVmYXVsdE1lc3NhZ2U6ICdOL0EnCn0pOwoKZnVuY3Rpb24gU2V0dXBNb2RlQmFkZ2UoX3JlZikgewogIHZhciBzZXR1cE1vZGUgPSBfcmVmLnNldHVwTW9kZSwKICAgICAgcHJvZHVjdE5hbWUgPSBfcmVmLnByb2R1Y3ROYW1lLAogICAgICBzdGF0dXMgPSBfcmVmLnN0YXR1cywKICAgICAgaW5zdGFuY2UgPSBfcmVmLmluc3RhbmNlLAogICAgICBjbHVzdGVyVXVpZCA9IF9yZWYuY2x1c3RlclV1aWQ7CiAgdmFyIGN1c3RvbUFjdGlvbiA9IG51bGw7CiAgdmFyIGN1c3RvbVRleHQgPSBudWxsOwogIHZhciBzZXR1cE1vZGVEYXRhID0gc2V0dXBNb2RlLmRhdGEgfHwge307CiAgdmFyIHNldHVwTW9kZU1ldGEgPSBzZXR1cE1vZGUubWV0YSB8fCB7fTsgLy8gTWlncmF0aW5nIGZyb20gcGFydGlhbGx5IHRvIGZ1bGx5IGZvciBFbGFzdGljc2VhcmNoIGludm9sdmVzIGNoYW5naW5nIGEgY2x1c3RlcgogIC8vIHNldHRpbmcgd2hpY2ggaW1wYWN0cyBhbGwgbm9kZXMgaW4gdGhlIGNsdXN0ZXIgc28gdGhlIGFjdGlvbiB0ZXh0IG5lZWRzIHRvIHJlZmxlY3QgdGhhdAoKICB2YXIgYWxsUGFydGlhbGx5TWlncmF0ZWQgPSBzZXR1cE1vZGVEYXRhLnRvdGFsVW5pcXVlUGFydGlhbGx5TWlncmF0ZWRDb3VudCA9PT0gc2V0dXBNb2RlRGF0YS50b3RhbFVuaXF1ZUluc3RhbmNlQ291bnQ7CgogIGlmIChzdGF0dXMuaXNQYXJ0aWFsbHlNaWdyYXRlZCAmJiBwcm9kdWN0TmFtZSA9PT0gX2NvbnN0YW50cy5FTEFTVElDU0VBUkNIX1NZU1RFTV9JRCkgewogICAgaWYgKGFsbFBhcnRpYWxseU1pZ3JhdGVkKSB7CiAgICAgIGN1c3RvbVRleHQgPSBjbGlja1RvRGlzYWJsZUludGVybmFsQ29sbGVjdGlvbjsKCiAgICAgIGlmIChzZXR1cE1vZGVNZXRhLmxpdmVDbHVzdGVyVXVpZCA9PT0gY2x1c3RlclV1aWQpIHsKICAgICAgICBjdXN0b21BY3Rpb24gPSBzZXR1cE1vZGUuc2hvcnRjdXRUb0ZpbmlzaE1pZ3JhdGlvbjsKICAgICAgfQogICAgfSBlbHNlIHsKICAgICAgcmV0dXJuIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3JlYWN0LkZyYWdtZW50LCBudWxsLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpSWNvbiwgewogICAgICAgIHR5cGU6ICJmbGFnIgogICAgICB9KSwgIlx4QTAiLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpVGV4dENvbG9yLCB7CiAgICAgICAgY29sb3I6ICJ3YXJuaW5nIiwKICAgICAgICBzaXplOiAieHMiCiAgICAgIH0sIF9pMThuLmkxOG4udHJhbnNsYXRlKCd4cGFjay5tb25pdG9yaW5nLnNldHVwTW9kZS5tb25pdG9yQWxsTm9kZXMnLCB7CiAgICAgICAgZGVmYXVsdE1lc3NhZ2U6ICdTb21lIG5vZGVzIHVzZSBvbmx5IHNlbGYgbW9uaXRvcmluZycKICAgICAgfSkpKTsKICAgIH0KICB9CgogIHZhciBiYWRnZVByb3BzID0ge307CgogIGlmIChzdGF0dXMuaXNJbnRlcm5hbENvbGxlY3RvciB8fCBzdGF0dXMuaXNQYXJ0aWFsbHlNaWdyYXRlZCB8fCBzdGF0dXMuaXNOZXROZXdVc2VyKSB7CiAgICBiYWRnZVByb3BzLm9uQ2xpY2sgPSBjdXN0b21BY3Rpb24gPyBjdXN0b21BY3Rpb24gOiBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiBzZXR1cE1vZGUub3BlbkZseW91dChpbnN0YW5jZSk7CiAgICB9OwogIH0KCiAgdmFyIHN0YXR1c1RleHQgPSBudWxsOwoKICBpZiAoc3RhdHVzLmlzSW50ZXJuYWxDb2xsZWN0b3IpIHsKICAgIGlmIChiYWRnZVByb3BzLm9uQ2xpY2spIHsKICAgICAgYmFkZ2VQcm9wcy5vbkNsaWNrQXJpYUxhYmVsID0gY3VzdG9tVGV4dCB8fCBjbGlja1RvTW9uaXRvcldpdGhNZXRyaWNiZWF0OwogICAgfQoKICAgIHN0YXR1c1RleHQgPSBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpQmFkZ2UsIF9leHRlbmRzKHsKICAgICAgY29sb3I6ICJkYW5nZXIiLAogICAgICBpY29uVHlwZTogImZsYWciCiAgICB9LCBiYWRnZVByb3BzKSwgY3VzdG9tVGV4dCB8fCBjbGlja1RvTW9uaXRvcldpdGhNZXRyaWNiZWF0KTsKICB9IGVsc2UgaWYgKHN0YXR1cy5pc1BhcnRpYWxseU1pZ3JhdGVkKSB7CiAgICBpZiAoYmFkZ2VQcm9wcy5vbkNsaWNrKSB7CiAgICAgIGJhZGdlUHJvcHMub25DbGlja0FyaWFMYWJlbCA9IGN1c3RvbVRleHQgfHwgY2xpY2tUb0Rpc2FibGVJbnRlcm5hbENvbGxlY3Rpb247CiAgICB9CgogICAgc3RhdHVzVGV4dCA9IF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlCYWRnZSwgX2V4dGVuZHMoewogICAgICBjb2xvcjogIndhcm5pbmciLAogICAgICBpY29uVHlwZTogImZsYWciCiAgICB9LCBiYWRnZVByb3BzKSwgY3VzdG9tVGV4dCB8fCBjbGlja1RvRGlzYWJsZUludGVybmFsQ29sbGVjdGlvbik7CiAgfSBlbHNlIGlmIChzdGF0dXMuaXNGdWxseU1pZ3JhdGVkKSB7CiAgICBpZiAoYmFkZ2VQcm9wcy5vbkNsaWNrKSB7CiAgICAgIGJhZGdlUHJvcHMub25DbGlja0FyaWFMYWJlbCA9IGN1c3RvbVRleHQgfHwgbW9uaXRvcmVkV2l0aE1ldHJpY2JlYXQ7CiAgICB9CgogICAgc3RhdHVzVGV4dCA9IF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlCYWRnZSwgX2V4dGVuZHMoewogICAgICBjb2xvcjogInByaW1hcnkiLAogICAgICBpY29uVHlwZTogImZsYWciCiAgICB9LCBiYWRnZVByb3BzKSwgY3VzdG9tVGV4dCB8fCBtb25pdG9yZWRXaXRoTWV0cmljYmVhdCk7CiAgfSBlbHNlIGlmIChzdGF0dXMuaXNOZXROZXdVc2VyKSB7CiAgICBpZiAoYmFkZ2VQcm9wcy5vbkNsaWNrKSB7CiAgICAgIGJhZGdlUHJvcHMub25DbGlja0FyaWFMYWJlbCA9IGN1c3RvbVRleHQgfHwgY2xpY2tUb01vbml0b3JXaXRoTWV0cmljYmVhdDsKICAgIH0KCiAgICBzdGF0dXNUZXh0ID0gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUJhZGdlLCBfZXh0ZW5kcyh7CiAgICAgIGNvbG9yOiAiZGFuZ2VyIiwKICAgICAgaWNvblR5cGU6ICJmbGFnIgogICAgfSwgYmFkZ2VQcm9wcyksIGN1c3RvbVRleHQgfHwgY2xpY2tUb01vbml0b3JXaXRoTWV0cmljYmVhdCk7CiAgfSBlbHNlIHsKICAgIGlmIChiYWRnZVByb3BzLm9uQ2xpY2spIHsKICAgICAgYmFkZ2VQcm9wcy5vbkNsaWNrQXJpYUxhYmVsID0gY3VzdG9tVGV4dCB8fCB1bmtub3duOwogICAgfQoKICAgIHN0YXR1c1RleHQgPSBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpQmFkZ2UsIF9leHRlbmRzKHsKICAgICAgY29sb3I6ICJkYW5nZXIiLAogICAgICBpY29uVHlwZTogImZsYWciCiAgICB9LCBiYWRnZVByb3BzKSwgY3VzdG9tVGV4dCB8fCB1bmtub3duKTsKICB9CgogIHJldHVybiBzdGF0dXNUZXh0Owp9"},null]}