{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/siem/public/pages/detection_engine/rules/all/rules_table_filters/tags_filter_popover.js","dependencies":[{"path":"x-pack/legacy/plugins/siem/public/pages/detection_engine/rules/all/rules_table_filters/tags_filter_popover.js","mtime":1589249553300},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLlRhZ3NGaWx0ZXJQb3BvdmVyID0gZXhwb3J0cy5UYWdzRmlsdGVyUG9wb3ZlckNvbXBvbmVudCA9IHZvaWQgMDsKCnZhciBfcmVhY3QgPSBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChyZXF1aXJlKCJyZWFjdCIpKTsKCnZhciBfZXVpID0gcmVxdWlyZSgiQGVsYXN0aWMvZXVpIik7Cgp2YXIgX3N0eWxlZENvbXBvbmVudHMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoInN0eWxlZC1jb21wb25lbnRzIikpOwoKdmFyIGkxOG4gPSBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChyZXF1aXJlKCIuLi8uLi90cmFuc2xhdGlvbnMiKSk7Cgp2YXIgX3RvZ2dsZV9zZWxlY3RlZF9ncm91cCA9IHJlcXVpcmUoIi4uLy4uLy4uLy4uLy4uL2NvbXBvbmVudHMvbWxfcG9wb3Zlci9qb2JzX3RhYmxlL2ZpbHRlcnMvdG9nZ2xlX3NlbGVjdGVkX2dyb3VwIik7CgpmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgewogIHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7CiAgICBkZWZhdWx0OiBvYmoKICB9Owp9CgpmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChvYmopIHsKICBpZiAob2JqICYmIG9iai5fX2VzTW9kdWxlKSB7CiAgICByZXR1cm4gb2JqOwogIH0gZWxzZSB7CiAgICB2YXIgbmV3T2JqID0ge307CgogICAgaWYgKG9iaiAhPSBudWxsKSB7CiAgICAgIGZvciAodmFyIGtleSBpbiBvYmopIHsKICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwga2V5KSkgewogICAgICAgICAgdmFyIGRlc2MgPSBPYmplY3QuZGVmaW5lUHJvcGVydHkgJiYgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvciA/IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqLCBrZXkpIDoge307CgogICAgICAgICAgaWYgKGRlc2MuZ2V0IHx8IGRlc2Muc2V0KSB7CiAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShuZXdPYmosIGtleSwgZGVzYyk7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBuZXdPYmpba2V5XSA9IG9ialtrZXldOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfQoKICAgIG5ld09iai5kZWZhdWx0ID0gb2JqOwogICAgcmV0dXJuIG5ld09iajsKICB9Cn0KCmZ1bmN0aW9uIF9zbGljZWRUb0FycmF5KGFyciwgaSkgewogIHJldHVybiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB8fCBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB8fCBfbm9uSXRlcmFibGVSZXN0KCk7Cn0KCmZ1bmN0aW9uIF9ub25JdGVyYWJsZVJlc3QoKSB7CiAgdGhyb3cgbmV3IFR5cGVFcnJvcigiSW52YWxpZCBhdHRlbXB0IHRvIGRlc3RydWN0dXJlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZSIpOwp9CgpmdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB7CiAgdmFyIF9hcnIgPSBbXTsKICB2YXIgX24gPSB0cnVlOwogIHZhciBfZCA9IGZhbHNlOwogIHZhciBfZSA9IHVuZGVmaW5lZDsKCiAgdHJ5IHsKICAgIGZvciAodmFyIF9pID0gYXJyW1N5bWJvbC5pdGVyYXRvcl0oKSwgX3M7ICEoX24gPSAoX3MgPSBfaS5uZXh0KCkpLmRvbmUpOyBfbiA9IHRydWUpIHsKICAgICAgX2Fyci5wdXNoKF9zLnZhbHVlKTsKCiAgICAgIGlmIChpICYmIF9hcnIubGVuZ3RoID09PSBpKSBicmVhazsKICAgIH0KICB9IGNhdGNoIChlcnIpIHsKICAgIF9kID0gdHJ1ZTsKICAgIF9lID0gZXJyOwogIH0gZmluYWxseSB7CiAgICB0cnkgewogICAgICBpZiAoIV9uICYmIF9pWyJyZXR1cm4iXSAhPSBudWxsKSBfaVsicmV0dXJuIl0oKTsKICAgIH0gZmluYWxseSB7CiAgICAgIGlmIChfZCkgdGhyb3cgX2U7CiAgICB9CiAgfQoKICByZXR1cm4gX2FycjsKfQoKZnVuY3Rpb24gX2FycmF5V2l0aEhvbGVzKGFycikgewogIGlmIChBcnJheS5pc0FycmF5KGFycikpIHJldHVybiBhcnI7Cn0KCnZhciBTY3JvbGxhYmxlRGl2ID0gX3N0eWxlZENvbXBvbmVudHMuZGVmYXVsdC5kaXYud2l0aENvbmZpZyh7CiAgZGlzcGxheU5hbWU6ICJTY3JvbGxhYmxlRGl2IiwKICBjb21wb25lbnRJZDogInkzYzI2aC0wIgp9KShbIm1heC1oZWlnaHQ6MjUwcHg7b3ZlcmZsb3c6YXV0bzsiXSk7Ci8qKgogKiBQb3BvdmVyIGZvciBzZWxlY3RpbmcgdGFncyB0byBmaWx0ZXIgb24KICoKICogQHBhcmFtIHRhZ3MgdG8gZGlzcGxheSBmb3IgZmlsdGVyaW5nCiAqIEBwYXJhbSBvblNlbGVjdGVkVGFnc0NoYW5nZWQgY2hhbmdlIGxpc3RlbmVyIHRvIGJlIG5vdGlmaWVkIHdoZW4gdGFnIHNlbGVjdGlvbiBjaGFuZ2VzCiAqLwoKCnZhciBUYWdzRmlsdGVyUG9wb3ZlckNvbXBvbmVudCA9IGZ1bmN0aW9uIFRhZ3NGaWx0ZXJQb3BvdmVyQ29tcG9uZW50KF9yZWYpIHsKICB2YXIgdGFncyA9IF9yZWYudGFncywKICAgICAgc2VsZWN0ZWRUYWdzID0gX3JlZi5zZWxlY3RlZFRhZ3MsCiAgICAgIG9uU2VsZWN0ZWRUYWdzQ2hhbmdlZCA9IF9yZWYub25TZWxlY3RlZFRhZ3NDaGFuZ2VkOwoKICB2YXIgX3VzZVN0YXRlID0gKDAsIF9yZWFjdC51c2VTdGF0ZSkoZmFsc2UpLAogICAgICBfdXNlU3RhdGUyID0gX3NsaWNlZFRvQXJyYXkoX3VzZVN0YXRlLCAyKSwKICAgICAgaXNUYWdQb3BvdmVyT3BlbiA9IF91c2VTdGF0ZTJbMF0sCiAgICAgIHNldElzVGFnUG9wb3Zlck9wZW4gPSBfdXNlU3RhdGUyWzFdOwoKICByZXR1cm4gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aVBvcG92ZXIsIHsKICAgIG93bkZvY3VzOiB0cnVlLAogICAgYnV0dG9uOiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpRmlsdGVyQnV0dG9uLCB7CiAgICAgICJkYXRhLXRlc3Qtc3ViaiI6ICd0YWdzLWZpbHRlci1wb3BvdmVyLWJ1dHRvbicsCiAgICAgIGljb25UeXBlOiAiYXJyb3dEb3duIiwKICAgICAgb25DbGljazogZnVuY3Rpb24gb25DbGljaygpIHsKICAgICAgICByZXR1cm4gc2V0SXNUYWdQb3BvdmVyT3BlbighaXNUYWdQb3BvdmVyT3Blbik7CiAgICAgIH0sCiAgICAgIGlzU2VsZWN0ZWQ6IGlzVGFnUG9wb3Zlck9wZW4sCiAgICAgIGhhc0FjdGl2ZUZpbHRlcnM6IHNlbGVjdGVkVGFncy5sZW5ndGggPiAwLAogICAgICBudW1BY3RpdmVGaWx0ZXJzOiBzZWxlY3RlZFRhZ3MubGVuZ3RoCiAgICB9LCBpMThuLlRBR1MpLAogICAgaXNPcGVuOiBpc1RhZ1BvcG92ZXJPcGVuLAogICAgY2xvc2VQb3BvdmVyOiBmdW5jdGlvbiBjbG9zZVBvcG92ZXIoKSB7CiAgICAgIHJldHVybiBzZXRJc1RhZ1BvcG92ZXJPcGVuKCFpc1RhZ1BvcG92ZXJPcGVuKTsKICAgIH0sCiAgICBwYW5lbFBhZGRpbmdTaXplOiAibm9uZSIKICB9LCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFNjcm9sbGFibGVEaXYsIG51bGwsIHRhZ3MubWFwKGZ1bmN0aW9uICh0YWcsIGluZGV4KSB7CiAgICByZXR1cm4gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUZpbHRlclNlbGVjdEl0ZW0sIHsKICAgICAgY2hlY2tlZDogc2VsZWN0ZWRUYWdzLmluY2x1ZGVzKHRhZykgPyAnb24nIDogdW5kZWZpbmVkLAogICAgICBrZXk6ICIiLmNvbmNhdChpbmRleCwgIi0iKS5jb25jYXQodGFnKSwKICAgICAgb25DbGljazogZnVuY3Rpb24gb25DbGljaygpIHsKICAgICAgICByZXR1cm4gKDAsIF90b2dnbGVfc2VsZWN0ZWRfZ3JvdXAudG9nZ2xlU2VsZWN0ZWRHcm91cCkodGFnLCBzZWxlY3RlZFRhZ3MsIG9uU2VsZWN0ZWRUYWdzQ2hhbmdlZCk7CiAgICAgIH0KICAgIH0sICIiLmNvbmNhdCh0YWcpKTsKICB9KSksIHRhZ3MubGVuZ3RoID09PSAwICYmIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlGbGV4R3JvdXAsIHsKICAgIGd1dHRlclNpemU6ICJtIiwKICAgIGp1c3RpZnlDb250ZW50OiAic3BhY2VBcm91bmQiCiAgfSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUZsZXhJdGVtLCB7CiAgICBncm93OiB0cnVlCiAgfSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aVBhbmVsLCBudWxsLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpVGV4dCwgbnVsbCwgaTE4bi5OT19UQUdTX0FWQUlMQUJMRSkpKSkpOwp9OwoKZXhwb3J0cy5UYWdzRmlsdGVyUG9wb3ZlckNvbXBvbmVudCA9IFRhZ3NGaWx0ZXJQb3BvdmVyQ29tcG9uZW50OwpUYWdzRmlsdGVyUG9wb3ZlckNvbXBvbmVudC5kaXNwbGF5TmFtZSA9ICdUYWdzRmlsdGVyUG9wb3ZlckNvbXBvbmVudCc7Cgp2YXIgVGFnc0ZpbHRlclBvcG92ZXIgPSBfcmVhY3QuZGVmYXVsdC5tZW1vKFRhZ3NGaWx0ZXJQb3BvdmVyQ29tcG9uZW50KTsKCmV4cG9ydHMuVGFnc0ZpbHRlclBvcG92ZXIgPSBUYWdzRmlsdGVyUG9wb3ZlcjsKVGFnc0ZpbHRlclBvcG92ZXIuZGlzcGxheU5hbWUgPSAnVGFnc0ZpbHRlclBvcG92ZXInOw=="},null]}