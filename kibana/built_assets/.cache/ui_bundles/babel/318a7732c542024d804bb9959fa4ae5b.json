{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!src/legacy/core_plugins/vis_default_editor/public/default_editor.js","dependencies":[{"path":"src/legacy/core_plugins/vis_default_editor/public/default_editor.js","mtime":1589249549938},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLkRlZmF1bHRFZGl0b3IgPSBEZWZhdWx0RWRpdG9yOwoKdmFyIF9yZWFjdCA9IF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKHJlcXVpcmUoInJlYWN0IikpOwoKdmFyIF9wdWJsaWMgPSByZXF1aXJlKCIuLi8uLi8uLi8uLi9wbHVnaW5zL2tpYmFuYV9yZWFjdC9wdWJsaWMiKTsKCnJlcXVpcmUoIi4vdmlzX3R5cGVfYWdnX2ZpbHRlciIpOwoKdmFyIF9zaWRlYmFyID0gcmVxdWlyZSgiLi9jb21wb25lbnRzL3NpZGViYXIiKTsKCnZhciBfZWRpdG9yX3NpemUgPSByZXF1aXJlKCIuL2VkaXRvcl9zaXplIik7CgpmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChvYmopIHsKICBpZiAob2JqICYmIG9iai5fX2VzTW9kdWxlKSB7CiAgICByZXR1cm4gb2JqOwogIH0gZWxzZSB7CiAgICB2YXIgbmV3T2JqID0ge307CgogICAgaWYgKG9iaiAhPSBudWxsKSB7CiAgICAgIGZvciAodmFyIGtleSBpbiBvYmopIHsKICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwga2V5KSkgewogICAgICAgICAgdmFyIGRlc2MgPSBPYmplY3QuZGVmaW5lUHJvcGVydHkgJiYgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvciA/IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqLCBrZXkpIDoge307CgogICAgICAgICAgaWYgKGRlc2MuZ2V0IHx8IGRlc2Muc2V0KSB7CiAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShuZXdPYmosIGtleSwgZGVzYyk7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBuZXdPYmpba2V5XSA9IG9ialtrZXldOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfQoKICAgIG5ld09iai5kZWZhdWx0ID0gb2JqOwogICAgcmV0dXJuIG5ld09iajsKICB9Cn0KCmZ1bmN0aW9uIF9zbGljZWRUb0FycmF5KGFyciwgaSkgewogIHJldHVybiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB8fCBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB8fCBfbm9uSXRlcmFibGVSZXN0KCk7Cn0KCmZ1bmN0aW9uIF9ub25JdGVyYWJsZVJlc3QoKSB7CiAgdGhyb3cgbmV3IFR5cGVFcnJvcigiSW52YWxpZCBhdHRlbXB0IHRvIGRlc3RydWN0dXJlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZSIpOwp9CgpmdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB7CiAgdmFyIF9hcnIgPSBbXTsKICB2YXIgX24gPSB0cnVlOwogIHZhciBfZCA9IGZhbHNlOwogIHZhciBfZSA9IHVuZGVmaW5lZDsKCiAgdHJ5IHsKICAgIGZvciAodmFyIF9pID0gYXJyW1N5bWJvbC5pdGVyYXRvcl0oKSwgX3M7ICEoX24gPSAoX3MgPSBfaS5uZXh0KCkpLmRvbmUpOyBfbiA9IHRydWUpIHsKICAgICAgX2Fyci5wdXNoKF9zLnZhbHVlKTsKCiAgICAgIGlmIChpICYmIF9hcnIubGVuZ3RoID09PSBpKSBicmVhazsKICAgIH0KICB9IGNhdGNoIChlcnIpIHsKICAgIF9kID0gdHJ1ZTsKICAgIF9lID0gZXJyOwogIH0gZmluYWxseSB7CiAgICB0cnkgewogICAgICBpZiAoIV9uICYmIF9pWyJyZXR1cm4iXSAhPSBudWxsKSBfaVsicmV0dXJuIl0oKTsKICAgIH0gZmluYWxseSB7CiAgICAgIGlmIChfZCkgdGhyb3cgX2U7CiAgICB9CiAgfQoKICByZXR1cm4gX2FycjsKfQoKZnVuY3Rpb24gX2FycmF5V2l0aEhvbGVzKGFycikgewogIGlmIChBcnJheS5pc0FycmF5KGFycikpIHJldHVybiBhcnI7Cn0KCmZ1bmN0aW9uIERlZmF1bHRFZGl0b3IoX3JlZikgewogIHZhciB2aXMgPSBfcmVmLnZpcywKICAgICAgdWlTdGF0ZSA9IF9yZWYudWlTdGF0ZSwKICAgICAgdGltZVJhbmdlID0gX3JlZi50aW1lUmFuZ2UsCiAgICAgIGZpbHRlcnMgPSBfcmVmLmZpbHRlcnMsCiAgICAgIG9wdGlvblRhYnMgPSBfcmVmLm9wdGlvblRhYnMsCiAgICAgIHF1ZXJ5ID0gX3JlZi5xdWVyeSwKICAgICAgZW1iZWRkYWJsZUhhbmRsZXIgPSBfcmVmLmVtYmVkZGFibGVIYW5kbGVyLAogICAgICBldmVudEVtaXR0ZXIgPSBfcmVmLmV2ZW50RW1pdHRlciwKICAgICAgbGlua2VkID0gX3JlZi5saW5rZWQsCiAgICAgIHNhdmVkU2VhcmNoID0gX3JlZi5zYXZlZFNlYXJjaDsKICB2YXIgdmlzUmVmID0gKDAsIF9yZWFjdC51c2VSZWYpKG51bGwpOwoKICB2YXIgX3VzZVN0YXRlID0gKDAsIF9yZWFjdC51c2VTdGF0ZSkoZmFsc2UpLAogICAgICBfdXNlU3RhdGUyID0gX3NsaWNlZFRvQXJyYXkoX3VzZVN0YXRlLCAyKSwKICAgICAgaXNDb2xsYXBzZWQgPSBfdXNlU3RhdGUyWzBdLAogICAgICBzZXRJc0NvbGxhcHNlZCA9IF91c2VTdGF0ZTJbMV07CgogIHZhciBvbkNsaWNrQ29sbGFwc2UgPSAoMCwgX3JlYWN0LnVzZUNhbGxiYWNrKShmdW5jdGlvbiAoKSB7CiAgICBzZXRJc0NvbGxhcHNlZChmdW5jdGlvbiAodmFsdWUpIHsKICAgICAgcmV0dXJuICF2YWx1ZTsKICAgIH0pOwogIH0sIFtdKTsKICAoMCwgX3JlYWN0LnVzZUVmZmVjdCkoZnVuY3Rpb24gKCkgewogICAgaWYgKCF2aXNSZWYuY3VycmVudCkgewogICAgICByZXR1cm47CiAgICB9CgogICAgZW1iZWRkYWJsZUhhbmRsZXIucmVuZGVyKHZpc1JlZi5jdXJyZW50KTsKICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICBldmVudEVtaXR0ZXIuZW1pdCgnYXBwbHknKTsKICAgIH0pOwogICAgcmV0dXJuIGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIGVtYmVkZGFibGVIYW5kbGVyLmRlc3Ryb3koKTsKICAgIH07CiAgfSwgW2VtYmVkZGFibGVIYW5kbGVyLCBldmVudEVtaXR0ZXJdKTsKICAoMCwgX3JlYWN0LnVzZUVmZmVjdCkoZnVuY3Rpb24gKCkgewogICAgZW1iZWRkYWJsZUhhbmRsZXIudXBkYXRlSW5wdXQoewogICAgICB0aW1lUmFuZ2U6IHRpbWVSYW5nZSwKICAgICAgZmlsdGVyczogZmlsdGVycywKICAgICAgcXVlcnk6IHF1ZXJ5CiAgICB9KTsKICB9LCBbZW1iZWRkYWJsZUhhbmRsZXIsIHRpbWVSYW5nZSwgZmlsdGVycywgcXVlcnldKTsKICB2YXIgZWRpdG9ySW5pdGlhbFdpZHRoID0gKDAsIF9lZGl0b3Jfc2l6ZS5nZXRJbml0aWFsV2lkdGgpKHZpcy50eXBlLmVkaXRvckNvbmZpZy5kZWZhdWx0U2l6ZSk7CiAgcmV0dXJuIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3B1YmxpYy5QYW5lbHNDb250YWluZXIsIHsKICAgIGNsYXNzTmFtZTogInZpc0VkaXRvci0tZGVmYXVsdCIsCiAgICByZXNpemVyQ2xhc3NOYW1lOiAidmlzRWRpdG9yX19yZXNpemVyICIuY29uY2F0KGlzQ29sbGFwc2VkID8gJ3Zpc0VkaXRvcl9fcmVzaXplci1pc0hpZGRlbicgOiAnJykKICB9LCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9wdWJsaWMuUGFuZWwsIHsKICAgIGNsYXNzTmFtZTogInZpc0VkaXRvcl9fdmlzdWFsaXphdGlvbiIsCiAgICBpbml0aWFsV2lkdGg6IDEwMCAtIGVkaXRvckluaXRpYWxXaWR0aAogIH0sIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoImRpdiIsIHsKICAgIGNsYXNzTmFtZTogInZpc0VkaXRvcl9fY2FudmFzIiwKICAgIHJlZjogdmlzUmVmLAogICAgImRhdGEtc2hhcmVkLWl0ZW1zLWNvbnRhaW5lciI6IHRydWUKICB9KSksIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3B1YmxpYy5QYW5lbCwgewogICAgY2xhc3NOYW1lOiAidmlzRWRpdG9yX19jb2xsYXBzaWJsZVNpZGViYXIgIi5jb25jYXQoaXNDb2xsYXBzZWQgPyAndmlzRWRpdG9yX19jb2xsYXBzaWJsZVNpZGViYXItaXNDbG9zZWQnIDogJycpLAogICAgaW5pdGlhbFdpZHRoOiBlZGl0b3JJbml0aWFsV2lkdGgKICB9LCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9zaWRlYmFyLkRlZmF1bHRFZGl0b3JTaWRlQmFyLCB7CiAgICBpc0NvbGxhcHNlZDogaXNDb2xsYXBzZWQsCiAgICBvbkNsaWNrQ29sbGFwc2U6IG9uQ2xpY2tDb2xsYXBzZSwKICAgIG9wdGlvblRhYnM6IG9wdGlvblRhYnMsCiAgICB2aXM6IHZpcywKICAgIHVpU3RhdGU6IHVpU3RhdGUsCiAgICBpc0xpbmtlZFNlYXJjaDogbGlua2VkLAogICAgc2F2ZWRTZWFyY2g6IHNhdmVkU2VhcmNoLAogICAgZXZlbnRFbWl0dGVyOiBldmVudEVtaXR0ZXIKICB9KSkpOwp9"},null]}