{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/siem/public/components/notes/add_note/index.js","dependencies":[{"path":"x-pack/legacy/plugins/siem/public/components/notes/add_note/index.js","mtime":1589249553060},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLkFkZE5vdGUgPSBleHBvcnRzLkNhbmNlbEJ1dHRvbiA9IHZvaWQgMDsKCnZhciBfZXVpID0gcmVxdWlyZSgiQGVsYXN0aWMvZXVpIik7Cgp2YXIgX3JlYWN0ID0gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQocmVxdWlyZSgicmVhY3QiKSk7Cgp2YXIgX3N0eWxlZENvbXBvbmVudHMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoInN0eWxlZC1jb21wb25lbnRzIikpOwoKdmFyIF9tYXJrZG93bl9oaW50ID0gcmVxdWlyZSgiLi4vLi4vbWFya2Rvd24vbWFya2Rvd25faGludCIpOwoKdmFyIF9oZWxwZXJzID0gcmVxdWlyZSgiLi4vaGVscGVycyIpOwoKdmFyIGkxOG4gPSBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChyZXF1aXJlKCIuLi90cmFuc2xhdGlvbnMiKSk7Cgp2YXIgX25ld19ub3RlID0gcmVxdWlyZSgiLi9uZXdfbm90ZSIpOwoKZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsKICByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogewogICAgZGVmYXVsdDogb2JqCiAgfTsKfQoKZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQob2JqKSB7CiAgaWYgKG9iaiAmJiBvYmouX19lc01vZHVsZSkgewogICAgcmV0dXJuIG9iajsKICB9IGVsc2UgewogICAgdmFyIG5ld09iaiA9IHt9OwoKICAgIGlmIChvYmogIT0gbnVsbCkgewogICAgICBmb3IgKHZhciBrZXkgaW4gb2JqKSB7CiAgICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGtleSkpIHsKICAgICAgICAgIHZhciBkZXNjID0gT2JqZWN0LmRlZmluZVByb3BlcnR5ICYmIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IgPyBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iaiwga2V5KSA6IHt9OwoKICAgICAgICAgIGlmIChkZXNjLmdldCB8fCBkZXNjLnNldCkgewogICAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobmV3T2JqLCBrZXksIGRlc2MpOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgbmV3T2JqW2tleV0gPSBvYmpba2V5XTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgIH0KCiAgICBuZXdPYmouZGVmYXVsdCA9IG9iajsKICAgIHJldHVybiBuZXdPYmo7CiAgfQp9Ci8qCiAqIENvcHlyaWdodCBFbGFzdGljc2VhcmNoIEIuVi4gYW5kL29yIGxpY2Vuc2VkIHRvIEVsYXN0aWNzZWFyY2ggQi5WLiB1bmRlciBvbmUKICogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuIExpY2Vuc2VkIHVuZGVyIHRoZSBFbGFzdGljIExpY2Vuc2U7CiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgRWxhc3RpYyBMaWNlbnNlLgogKi8KCgp2YXIgQWRkTm90ZXNDb250YWluZXIgPSAoMCwgX3N0eWxlZENvbXBvbmVudHMuZGVmYXVsdCkoX2V1aS5FdWlGbGV4R3JvdXApLndpdGhDb25maWcoewogIGRpc3BsYXlOYW1lOiAiQWRkTm90ZXNDb250YWluZXIiLAogIGNvbXBvbmVudElkOiAiYWtzYTJ0LTAiCn0pKFsibWFyZ2luLWJvdHRvbTo1cHg7dXNlci1zZWxlY3Q6bm9uZTsiXSk7CkFkZE5vdGVzQ29udGFpbmVyLmRpc3BsYXlOYW1lID0gJ0FkZE5vdGVzQ29udGFpbmVyJzsKdmFyIEJ1dHRvbnNDb250YWluZXIgPSAoMCwgX3N0eWxlZENvbXBvbmVudHMuZGVmYXVsdCkoX2V1aS5FdWlGbGV4R3JvdXApLndpdGhDb25maWcoewogIGRpc3BsYXlOYW1lOiAiQnV0dG9uc0NvbnRhaW5lciIsCiAgY29tcG9uZW50SWQ6ICJha3NhMnQtMSIKfSkoWyJtYXJnaW4tdG9wOjVweDsiXSk7CkJ1dHRvbnNDb250YWluZXIuZGlzcGxheU5hbWUgPSAnQnV0dG9uc0NvbnRhaW5lcic7Cgp2YXIgQ2FuY2VsQnV0dG9uID0gX3JlYWN0LmRlZmF1bHQubWVtbyhmdW5jdGlvbiAoX3JlZikgewogIHZhciBvbkNhbmNlbEFkZE5vdGUgPSBfcmVmLm9uQ2FuY2VsQWRkTm90ZTsKICByZXR1cm4gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUJ1dHRvbkVtcHR5LCB7CiAgICAiZGF0YS10ZXN0LXN1YmoiOiAiY2FuY2VsIiwKICAgIG9uQ2xpY2s6IG9uQ2FuY2VsQWRkTm90ZQogIH0sIGkxOG4uQ0FOQ0VMKTsKfSk7CgpleHBvcnRzLkNhbmNlbEJ1dHRvbiA9IENhbmNlbEJ1dHRvbjsKQ2FuY2VsQnV0dG9uLmRpc3BsYXlOYW1lID0gJ0NhbmNlbEJ1dHRvbic7Ci8qKiBEaXNwbGF5cyBhbiBpbnB1dCBmb3IgZW50ZXJpbmcgYSBuZXcgbm90ZSwgd2l0aCBhbiBhZGphY2VudCAiQWRkIiBidXR0b24gKi8KCnZhciBBZGROb3RlID0gX3JlYWN0LmRlZmF1bHQubWVtbyhmdW5jdGlvbiAoX3JlZjIpIHsKICB2YXIgYXNzb2NpYXRlTm90ZSA9IF9yZWYyLmFzc29jaWF0ZU5vdGUsCiAgICAgIGdldE5ld05vdGVJZCA9IF9yZWYyLmdldE5ld05vdGVJZCwKICAgICAgbmV3Tm90ZSA9IF9yZWYyLm5ld05vdGUsCiAgICAgIG9uQ2FuY2VsQWRkTm90ZSA9IF9yZWYyLm9uQ2FuY2VsQWRkTm90ZSwKICAgICAgdXBkYXRlTmV3Tm90ZSA9IF9yZWYyLnVwZGF0ZU5ld05vdGUsCiAgICAgIHVwZGF0ZU5vdGUgPSBfcmVmMi51cGRhdGVOb3RlOwogIHZhciBoYW5kbGVDbGljayA9ICgwLCBfcmVhY3QudXNlQ2FsbGJhY2spKGZ1bmN0aW9uICgpIHsKICAgIHJldHVybiAoMCwgX2hlbHBlcnMudXBkYXRlQW5kQXNzb2NpYXRlTm9kZSkoewogICAgICBhc3NvY2lhdGVOb3RlOiBhc3NvY2lhdGVOb3RlLAogICAgICBnZXROZXdOb3RlSWQ6IGdldE5ld05vdGVJZCwKICAgICAgbmV3Tm90ZTogbmV3Tm90ZSwKICAgICAgdXBkYXRlTmV3Tm90ZTogdXBkYXRlTmV3Tm90ZSwKICAgICAgdXBkYXRlTm90ZTogdXBkYXRlTm90ZQogICAgfSk7CiAgfSwgW2Fzc29jaWF0ZU5vdGUsIGdldE5ld05vdGVJZCwgbmV3Tm90ZSwgdXBkYXRlTmV3Tm90ZSwgdXBkYXRlTm90ZV0pOwogIHJldHVybiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KEFkZE5vdGVzQ29udGFpbmVyLCB7CiAgICBhbGlnbkl0ZW1zOiAiZmxleEVuZCIsCiAgICBkaXJlY3Rpb246ICJjb2x1bW4iLAogICAgZ3V0dGVyU2l6ZTogIm5vbmUiCiAgfSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfbmV3X25vdGUuTmV3Tm90ZSwgewogICAgbm90ZTogbmV3Tm90ZSwKICAgIG5vdGVJbnB1dEhlaWdodDogMjAwLAogICAgdXBkYXRlTmV3Tm90ZTogdXBkYXRlTmV3Tm90ZQogIH0pLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpRmxleEl0ZW0sIHsKICAgIGdyb3c6IHRydWUKICB9LCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9tYXJrZG93bl9oaW50Lk1hcmtkb3duSGludCwgewogICAgc2hvdzogbmV3Tm90ZS50cmltKCkubGVuZ3RoID4gMAogIH0pKSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChCdXR0b25zQ29udGFpbmVyLCB7CiAgICBndXR0ZXJTaXplOiAibm9uZSIKICB9LCBvbkNhbmNlbEFkZE5vdGUgIT0gbnVsbCA/IF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlGbGV4SXRlbSwgewogICAgZ3JvdzogZmFsc2UKICB9LCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KENhbmNlbEJ1dHRvbiwgewogICAgb25DYW5jZWxBZGROb3RlOiBvbkNhbmNlbEFkZE5vdGUKICB9KSkgOiBudWxsLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpRmxleEl0ZW0sIHsKICAgIGdyb3c6IGZhbHNlCiAgfSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUJ1dHRvbiwgewogICAgImRhdGEtdGVzdC1zdWJqIjogImFkZC1ub3RlIiwKICAgIGlzRGlzYWJsZWQ6IG5ld05vdGUudHJpbSgpLmxlbmd0aCA9PT0gMCwKICAgIGZpbGw6IHRydWUsCiAgICBvbkNsaWNrOiBoYW5kbGVDbGljawogIH0sIGkxOG4uQUREX05PVEUpKSkpOwp9KTsKCmV4cG9ydHMuQWRkTm90ZSA9IEFkZE5vdGU7CkFkZE5vdGUuZGlzcGxheU5hbWUgPSAnQWRkTm90ZSc7"},null]}