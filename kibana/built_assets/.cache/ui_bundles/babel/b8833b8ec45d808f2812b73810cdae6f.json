{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/canvas/public/expression_types/arg_types/container_style/border_form.js","dependencies":[{"path":"x-pack/legacy/plugins/canvas/public/expression_types/arg_types/container_style/border_form.js","mtime":1589249552035},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgIkJvcmRlclN0eWxlIiwgewogIGVudW1lcmFibGU6IHRydWUsCiAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7CiAgICByZXR1cm4gX3R5cGVzLkJvcmRlclN0eWxlOwogIH0KfSk7CmV4cG9ydHMuQm9yZGVyRm9ybSA9IHZvaWQgMDsKCnZhciBfcmVhY3QgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoInJlYWN0IikpOwoKdmFyIF9wcm9wVHlwZXMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoInByb3AtdHlwZXMiKSk7Cgp2YXIgX2V1aSA9IHJlcXVpcmUoIkBlbGFzdGljL2V1aSIpOwoKdmFyIF9jb2xvcl9waWNrZXJfcG9wb3ZlciA9IHJlcXVpcmUoIi4uLy4uLy4uL2NvbXBvbmVudHMvY29sb3JfcGlja2VyX3BvcG92ZXIiKTsKCnZhciBfdHlwZXMgPSByZXF1aXJlKCIuLi8uLi8uLi8uLi90eXBlcyIpOwoKdmFyIF9pMThuID0gcmVxdWlyZSgiLi4vLi4vLi4vLi4vaTE4biIpOwoKZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsKICByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogewogICAgZGVmYXVsdDogb2JqCiAgfTsKfQoKZnVuY3Rpb24gX3NsaWNlZFRvQXJyYXkoYXJyLCBpKSB7CiAgcmV0dXJuIF9hcnJheVdpdGhIb2xlcyhhcnIpIHx8IF9pdGVyYWJsZVRvQXJyYXlMaW1pdChhcnIsIGkpIHx8IF9ub25JdGVyYWJsZVJlc3QoKTsKfQoKZnVuY3Rpb24gX25vbkl0ZXJhYmxlUmVzdCgpIHsKICB0aHJvdyBuZXcgVHlwZUVycm9yKCJJbnZhbGlkIGF0dGVtcHQgdG8gZGVzdHJ1Y3R1cmUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlIik7Cn0KCmZ1bmN0aW9uIF9pdGVyYWJsZVRvQXJyYXlMaW1pdChhcnIsIGkpIHsKICB2YXIgX2FyciA9IFtdOwogIHZhciBfbiA9IHRydWU7CiAgdmFyIF9kID0gZmFsc2U7CiAgdmFyIF9lID0gdW5kZWZpbmVkOwoKICB0cnkgewogICAgZm9yICh2YXIgX2kgPSBhcnJbU3ltYm9sLml0ZXJhdG9yXSgpLCBfczsgIShfbiA9IChfcyA9IF9pLm5leHQoKSkuZG9uZSk7IF9uID0gdHJ1ZSkgewogICAgICBfYXJyLnB1c2goX3MudmFsdWUpOwoKICAgICAgaWYgKGkgJiYgX2Fyci5sZW5ndGggPT09IGkpIGJyZWFrOwogICAgfQogIH0gY2F0Y2ggKGVycikgewogICAgX2QgPSB0cnVlOwogICAgX2UgPSBlcnI7CiAgfSBmaW5hbGx5IHsKICAgIHRyeSB7CiAgICAgIGlmICghX24gJiYgX2lbInJldHVybiJdICE9IG51bGwpIF9pWyJyZXR1cm4iXSgpOwogICAgfSBmaW5hbGx5IHsKICAgICAgaWYgKF9kKSB0aHJvdyBfZTsKICAgIH0KICB9CgogIHJldHVybiBfYXJyOwp9CgpmdW5jdGlvbiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB7CiAgaWYgKEFycmF5LmlzQXJyYXkoYXJyKSkgcmV0dXJuIGFycjsKfQoKdmFyIHN0cmluZ3MgPSBfaTE4bi5BcmdUeXBlc1N0cmluZ3MuQ29udGFpbmVyU3R5bGU7Cgp2YXIgQm9yZGVyRm9ybSA9IGZ1bmN0aW9uIEJvcmRlckZvcm0oX3JlZikgewogIHZhciBfcmVmJHZhbHVlID0gX3JlZi52YWx1ZSwKICAgICAgdmFsdWUgPSBfcmVmJHZhbHVlID09PSB2b2lkIDAgPyAnJyA6IF9yZWYkdmFsdWUsCiAgICAgIF9yZWYkcmFkaXVzID0gX3JlZi5yYWRpdXMsCiAgICAgIHJhZGl1cyA9IF9yZWYkcmFkaXVzID09PSB2b2lkIDAgPyAnJyA6IF9yZWYkcmFkaXVzLAogICAgICBvbkNoYW5nZSA9IF9yZWYub25DaGFuZ2UsCiAgICAgIGNvbG9ycyA9IF9yZWYuY29sb3JzOwoKICB2YXIgX3ZhbHVlJHNwbGl0ID0gdmFsdWUuc3BsaXQoJyAnKSwKICAgICAgX3ZhbHVlJHNwbGl0MiA9IF9zbGljZWRUb0FycmF5KF92YWx1ZSRzcGxpdCwgMyksCiAgICAgIF92YWx1ZSRzcGxpdDIkID0gX3ZhbHVlJHNwbGl0MlswXSwKICAgICAgYm9yZGVyV2lkdGggPSBfdmFsdWUkc3BsaXQyJCA9PT0gdm9pZCAwID8gJycgOiBfdmFsdWUkc3BsaXQyJCwKICAgICAgX3ZhbHVlJHNwbGl0MiQyID0gX3ZhbHVlJHNwbGl0MlsxXSwKICAgICAgYm9yZGVyU3R5bGUgPSBfdmFsdWUkc3BsaXQyJDIgPT09IHZvaWQgMCA/ICcnIDogX3ZhbHVlJHNwbGl0MiQyLAogICAgICBfdmFsdWUkc3BsaXQyJDMgPSBfdmFsdWUkc3BsaXQyWzJdLAogICAgICBib3JkZXJDb2xvciA9IF92YWx1ZSRzcGxpdDIkMyA9PT0gdm9pZCAwID8gJycgOiBfdmFsdWUkc3BsaXQyJDM7CgogIHZhciBib3JkZXJTdHlsZVZhbCA9ICgwLCBfdHlwZXMuaXNCb3JkZXJTdHlsZSkoYm9yZGVyU3R5bGUpID8gYm9yZGVyU3R5bGUgOiBfdHlwZXMuQm9yZGVyU3R5bGUuTk9ORTsKICB2YXIgYm9yZGVyV2lkdGhWYWwgPSBib3JkZXJXaWR0aCA/IGJvcmRlcldpZHRoLnJlcGxhY2UoJ3B4JywgJycpIDogJyc7CiAgdmFyIHJhZGl1c1ZhbCA9IHR5cGVvZiByYWRpdXMgPT09ICdzdHJpbmcnID8gcmFkaXVzLnJlcGxhY2UoJ3B4JywgJycpIDogcmFkaXVzOwoKICB2YXIgbmFtZWRDaGFuZ2UgPSBmdW5jdGlvbiBuYW1lZENoYW5nZShuYW1lKSB7CiAgICByZXR1cm4gZnVuY3Rpb24gKHZhbCkgewogICAgICBpZiAobmFtZSA9PT0gJ2JvcmRlcldpZHRoJykgewogICAgICAgIHJldHVybiBvbkNoYW5nZSgnYm9yZGVyJywgIiIuY29uY2F0KHZhbCwgInB4ICIpLmNvbmNhdChib3JkZXJTdHlsZSwgIiAiKS5jb25jYXQoYm9yZGVyQ29sb3IpKTsKICAgICAgfQoKICAgICAgaWYgKG5hbWUgPT09ICdib3JkZXJTdHlsZScpIHsKICAgICAgICBpZiAodmFsID09PSAnJykgewogICAgICAgICAgcmV0dXJuIG9uQ2hhbmdlKCdib3JkZXInLCAiMHB4Iik7CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gb25DaGFuZ2UoJ2JvcmRlcicsICIiLmNvbmNhdChib3JkZXJXaWR0aCwgIiAiKS5jb25jYXQodmFsLCAiICIpLmNvbmNhdChib3JkZXJDb2xvcikpOwogICAgICB9CgogICAgICBpZiAobmFtZSA9PT0gJ2JvcmRlclJhZGl1cycpIHsKICAgICAgICBpZiAodmFsID09PSAnJykgewogICAgICAgICAgcmV0dXJuIG9uQ2hhbmdlKCdib3JkZXJSYWRpdXMnLCAiMHB4Iik7CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gb25DaGFuZ2UoJ2JvcmRlclJhZGl1cycsICIiLmNvbmNhdCh2YWwsICJweCIpKTsKICAgICAgfQoKICAgICAgb25DaGFuZ2UobmFtZSwgdmFsKTsKICAgIH07CiAgfTsKCiAgdmFyIGJvcmRlckNvbG9yQ2hhbmdlID0gZnVuY3Rpb24gYm9yZGVyQ29sb3JDaGFuZ2UoY29sb3IpIHsKICAgIHJldHVybiBvbkNoYW5nZSgnYm9yZGVyJywgIiIuY29uY2F0KGJvcmRlcldpZHRoLCAiICIpLmNvbmNhdChib3JkZXJTdHlsZSwgIiAiKS5jb25jYXQoY29sb3IpKTsKICB9OwoKICByZXR1cm4gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUZsZXhHcm91cCwgewogICAgZ3V0dGVyU2l6ZTogInMiCiAgfSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUZsZXhJdGVtLCB7CiAgICBncm93OiAyCiAgfSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUZvcm1Sb3csIHsKICAgIGxhYmVsOiBzdHJpbmdzLmdldFRoaWNrbmVzc0xhYmVsKCksCiAgICBkaXNwbGF5OiAicm93Q29tcHJlc3NlZCIKICB9LCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpRmllbGROdW1iZXIsIHsKICAgIGNvbXByZXNzZWQ6IHRydWUsCiAgICB2YWx1ZTogTnVtYmVyKGJvcmRlcldpZHRoVmFsKSwKICAgIG9uQ2hhbmdlOiBmdW5jdGlvbiBvbkNoYW5nZShlKSB7CiAgICAgIHJldHVybiBuYW1lZENoYW5nZSgnYm9yZGVyV2lkdGgnKShOdW1iZXIoZS50YXJnZXQudmFsdWUpKTsKICAgIH0KICB9KSkpLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpRmxleEl0ZW0sIHsKICAgIGdyb3c6IDMKICB9LCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpRm9ybVJvdywgewogICAgbGFiZWw6IHN0cmluZ3MuZ2V0U3R5bGVMYWJlbCgpLAogICAgZGlzcGxheTogInJvd0NvbXByZXNzZWQiCiAgfSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aVN1cGVyU2VsZWN0LCB7CiAgICBjb21wcmVzc2VkOiB0cnVlLAogICAgdmFsdWVPZlNlbGVjdGVkOiBib3JkZXJTdHlsZVZhbCB8fCAnbm9uZScsCiAgICBvcHRpb25zOiBPYmplY3QudmFsdWVzKF90eXBlcy5Cb3JkZXJTdHlsZSkubWFwKGZ1bmN0aW9uIChzdHlsZSkgewogICAgICByZXR1cm4gewogICAgICAgIHZhbHVlOiBzdHlsZSwKICAgICAgICBpbnB1dERpc3BsYXk6IF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoImRpdiIsIHsKICAgICAgICAgIHN0eWxlOiB7CiAgICAgICAgICAgIGhlaWdodDogMTYsCiAgICAgICAgICAgIGJvcmRlcjogIjRweCAiLmNvbmNhdChzdHlsZSkKICAgICAgICAgIH0KICAgICAgICB9KQogICAgICB9OwogICAgfSksCiAgICBvbkNoYW5nZTogbmFtZWRDaGFuZ2UoJ2JvcmRlclN0eWxlJykKICB9KSkpLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpRmxleEl0ZW0sIHsKICAgIGdyb3c6IDIKICB9LCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpRm9ybVJvdywgewogICAgbGFiZWw6IHN0cmluZ3MuZ2V0UmFkaXVzTGFiZWwoKSwKICAgIGRpc3BsYXk6ICJyb3dDb21wcmVzc2VkIgogIH0sIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlGaWVsZE51bWJlciwgewogICAgY29tcHJlc3NlZDogdHJ1ZSwKICAgIHZhbHVlOiBOdW1iZXIocmFkaXVzVmFsKSwKICAgIG9uQ2hhbmdlOiBmdW5jdGlvbiBvbkNoYW5nZShlKSB7CiAgICAgIHJldHVybiBuYW1lZENoYW5nZSgnYm9yZGVyUmFkaXVzJykoZS50YXJnZXQudmFsdWUpOwogICAgfQogIH0pKSksIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlGbGV4SXRlbSwgewogICAgZ3JvdzogMQogIH0sIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlGb3JtUm93LCB7CiAgICBkaXNwbGF5OiAicm93Q29tcHJlc3NlZCIsCiAgICBsYWJlbDogc3RyaW5ncy5nZXRDb2xvckxhYmVsKCksCiAgICBzdHlsZTogewogICAgICBmb250U2l6ZTogMAogICAgfQogIH0sIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2NvbG9yX3BpY2tlcl9wb3BvdmVyLkNvbG9yUGlja2VyUG9wb3ZlciwgewogICAgdmFsdWU6IGJvcmRlckNvbG9yLAogICAgb25DaGFuZ2U6IGJvcmRlckNvbG9yQ2hhbmdlLAogICAgY29sb3JzOiBjb2xvcnMsCiAgICBhbmNob3JQb3NpdGlvbjogInVwQ2VudGVyIiwKICAgIGFyaWFMYWJlbDogc3RyaW5ncy5nZXRCb3JkZXJUaXRsZSgpCiAgfSkpKSk7Cn07CgpleHBvcnRzLkJvcmRlckZvcm0gPSBCb3JkZXJGb3JtOwpCb3JkZXJGb3JtLnByb3BUeXBlcyA9IHsKICB2YWx1ZTogX3Byb3BUeXBlcy5kZWZhdWx0LnN0cmluZywKICByYWRpdXM6IF9wcm9wVHlwZXMuZGVmYXVsdC5vbmVPZlR5cGUoW19wcm9wVHlwZXMuZGVmYXVsdC5zdHJpbmcsIF9wcm9wVHlwZXMuZGVmYXVsdC5udW1iZXJdKSwKICBvbkNoYW5nZTogX3Byb3BUeXBlcy5kZWZhdWx0LmZ1bmMuaXNSZXF1aXJlZCwKICBjb2xvcnM6IF9wcm9wVHlwZXMuZGVmYXVsdC5hcnJheS5pc1JlcXVpcmVkCn07"},null]}