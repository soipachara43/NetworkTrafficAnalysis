{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!src/plugins/inspector/public/plugin.js","dependencies":[{"path":"src/plugins/inspector/public/plugin.js","mtime":1589249550919},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLkluc3BlY3RvclB1YmxpY1BsdWdpbiA9IHZvaWQgMDsKCnZhciBfaTE4biA9IHJlcXVpcmUoIkBrYm4vaTE4biIpOwoKdmFyIFJlYWN0ID0gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQocmVxdWlyZSgicmVhY3QiKSk7Cgp2YXIgX3B1YmxpYyA9IHJlcXVpcmUoIi4uLy4uL2tpYmFuYV9yZWFjdC9wdWJsaWMiKTsKCnZhciBfdmlld19yZWdpc3RyeSA9IHJlcXVpcmUoIi4vdmlld19yZWdpc3RyeSIpOwoKdmFyIF9pbnNwZWN0b3JfcGFuZWwgPSByZXF1aXJlKCIuL3VpL2luc3BlY3Rvcl9wYW5lbCIpOwoKdmFyIF92aWV3cyA9IHJlcXVpcmUoIi4vdmlld3MiKTsKCmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKG9iaikgewogIGlmIChvYmogJiYgb2JqLl9fZXNNb2R1bGUpIHsKICAgIHJldHVybiBvYmo7CiAgfSBlbHNlIHsKICAgIHZhciBuZXdPYmogPSB7fTsKCiAgICBpZiAob2JqICE9IG51bGwpIHsKICAgICAgZm9yICh2YXIga2V5IGluIG9iaikgewogICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBrZXkpKSB7CiAgICAgICAgICB2YXIgZGVzYyA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSAmJiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID8gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmosIGtleSkgOiB7fTsKCiAgICAgICAgICBpZiAoZGVzYy5nZXQgfHwgZGVzYy5zZXQpIHsKICAgICAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG5ld09iaiwga2V5LCBkZXNjKTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIG5ld09ialtrZXldID0gb2JqW2tleV07CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9CgogICAgbmV3T2JqLmRlZmF1bHQgPSBvYmo7CiAgICByZXR1cm4gbmV3T2JqOwogIH0KfQoKZnVuY3Rpb24gYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCBrZXksIGFyZykgewogIHRyeSB7CiAgICB2YXIgaW5mbyA9IGdlbltrZXldKGFyZyk7CiAgICB2YXIgdmFsdWUgPSBpbmZvLnZhbHVlOwogIH0gY2F0Y2ggKGVycm9yKSB7CiAgICByZWplY3QoZXJyb3IpOwogICAgcmV0dXJuOwogIH0KCiAgaWYgKGluZm8uZG9uZSkgewogICAgcmVzb2x2ZSh2YWx1ZSk7CiAgfSBlbHNlIHsKICAgIFByb21pc2UucmVzb2x2ZSh2YWx1ZSkudGhlbihfbmV4dCwgX3Rocm93KTsKICB9Cn0KCmZ1bmN0aW9uIF9hc3luY1RvR2VuZXJhdG9yKGZuKSB7CiAgcmV0dXJuIGZ1bmN0aW9uICgpIHsKICAgIHZhciBzZWxmID0gdGhpcywKICAgICAgICBhcmdzID0gYXJndW1lbnRzOwogICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgICAgdmFyIGdlbiA9IGZuLmFwcGx5KHNlbGYsIGFyZ3MpOwoKICAgICAgZnVuY3Rpb24gX25leHQodmFsdWUpIHsKICAgICAgICBhc3luY0dlbmVyYXRvclN0ZXAoZ2VuLCByZXNvbHZlLCByZWplY3QsIF9uZXh0LCBfdGhyb3csICJuZXh0IiwgdmFsdWUpOwogICAgICB9CgogICAgICBmdW5jdGlvbiBfdGhyb3coZXJyKSB7CiAgICAgICAgYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCAidGhyb3ciLCBlcnIpOwogICAgICB9CgogICAgICBfbmV4dCh1bmRlZmluZWQpOwogICAgfSk7CiAgfTsKfQoKZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgewogIGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7CiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb24iKTsKICB9Cn0KCmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsKICBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7CiAgICB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOwogICAgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOwogICAgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOwogICAgaWYgKCJ2YWx1ZSIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7CiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7CiAgfQp9CgpmdW5jdGlvbiBfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7CiAgaWYgKHByb3RvUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7CiAgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOwogIHJldHVybiBDb25zdHJ1Y3RvcjsKfQoKZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkgewogIGlmIChrZXkgaW4gb2JqKSB7CiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHsKICAgICAgdmFsdWU6IHZhbHVlLAogICAgICBlbnVtZXJhYmxlOiB0cnVlLAogICAgICBjb25maWd1cmFibGU6IHRydWUsCiAgICAgIHdyaXRhYmxlOiB0cnVlCiAgICB9KTsKICB9IGVsc2UgewogICAgb2JqW2tleV0gPSB2YWx1ZTsKICB9CgogIHJldHVybiBvYmo7Cn0KCnZhciBJbnNwZWN0b3JQdWJsaWNQbHVnaW4gPQovKiNfX1BVUkVfXyovCmZ1bmN0aW9uICgpIHsKICBmdW5jdGlvbiBJbnNwZWN0b3JQdWJsaWNQbHVnaW4oaW5pdGlhbGl6ZXJDb250ZXh0KSB7CiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgSW5zcGVjdG9yUHVibGljUGx1Z2luKTsKCiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgInZpZXdzIiwgdm9pZCAwKTsKICB9CgogIF9jcmVhdGVDbGFzcyhJbnNwZWN0b3JQdWJsaWNQbHVnaW4sIFt7CiAgICBrZXk6ICJzZXR1cCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gKCkgewogICAgICB2YXIgX3NldHVwID0gX2FzeW5jVG9HZW5lcmF0b3IoCiAgICAgIC8qI19fUFVSRV9fKi8KICAgICAgcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShjb3JlKSB7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgdGhpcy52aWV3cyA9IG5ldyBfdmlld19yZWdpc3RyeS5JbnNwZWN0b3JWaWV3UmVnaXN0cnkoKTsKICAgICAgICAgICAgICAgIHRoaXMudmlld3MucmVnaXN0ZXIoKDAsIF92aWV3cy5nZXREYXRhVmlld0Rlc2NyaXB0aW9uKShjb3JlLnVpU2V0dGluZ3MpKTsKICAgICAgICAgICAgICAgIHRoaXMudmlld3MucmVnaXN0ZXIoKDAsIF92aWV3cy5nZXRSZXF1ZXN0c1ZpZXdEZXNjcmlwdGlvbikoKSk7CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCB7CiAgICAgICAgICAgICAgICAgIHJlZ2lzdGVyVmlldzogdGhpcy52aWV3cy5yZWdpc3Rlci5iaW5kKHRoaXMudmlld3MpLAogICAgICAgICAgICAgICAgICBfX0xFR0FDWTogewogICAgICAgICAgICAgICAgICAgIHZpZXdzOiB0aGlzLnZpZXdzCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlLCB0aGlzKTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gc2V0dXAoX3gpIHsKICAgICAgICByZXR1cm4gX3NldHVwLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KCiAgICAgIHJldHVybiBzZXR1cDsKICAgIH0oKQogIH0sIHsKICAgIGtleTogInN0YXJ0IiwKICAgIHZhbHVlOiBmdW5jdGlvbiBzdGFydChjb3JlKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB2YXIgaXNBdmFpbGFibGUgPSBmdW5jdGlvbiBpc0F2YWlsYWJsZShhZGFwdGVycykgewogICAgICAgIHJldHVybiBfdGhpcy52aWV3cy5nZXRWaXNpYmxlKGFkYXB0ZXJzKS5sZW5ndGggPiAwOwogICAgICB9OwoKICAgICAgdmFyIGNsb3NlQnV0dG9uTGFiZWwgPSBfaTE4bi5pMThuLnRyYW5zbGF0ZSgnaW5zcGVjdG9yLmNsb3NlQnV0dG9uJywgewogICAgICAgIGRlZmF1bHRNZXNzYWdlOiAnQ2xvc2UgSW5zcGVjdG9yJwogICAgICB9KTsKCiAgICAgIHZhciBvcGVuID0gZnVuY3Rpb24gb3BlbihhZGFwdGVycykgewogICAgICAgIHZhciBvcHRpb25zID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiB7fTsKCiAgICAgICAgdmFyIHZpZXdzID0gX3RoaXMudmlld3MuZ2V0VmlzaWJsZShhZGFwdGVycyk7IC8vIERvbid0IG9wZW4gaW5zcGVjdG9yIGlmIHRoZXJlIGFyZSBubyB2aWV3cyBhdmFpbGFibGUgZm9yIHRoZSBwYXNzZWQgYWRhcHRlcnMKCgogICAgICAgIGlmICghdmlld3MgfHwgdmlld3MubGVuZ3RoID09PSAwKSB7CiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoIlRyaWVkIHRvIG9wZW4gYW4gaW5zcGVjdG9yIHdpdGhvdXQgdmlld3MgYmVpbmcgYXZhaWxhYmxlLlxuICAgICAgICAgIE1ha2Ugc3VyZSB0byBjYWxsIEluc3BlY3Rvci5pc0F2YWlsYWJsZSgpIHdpdGggdGhlIHNhbWUgYWRhcHRlcnMgYmVmb3JlIHRvIGNoZWNrXG4gICAgICAgICAgaWYgYW4gaW5zcGVjdG9yIGNhbiBiZSBzaG93bi4iKTsKICAgICAgICB9CgogICAgICAgIHJldHVybiBjb3JlLm92ZXJsYXlzLm9wZW5GbHlvdXQoKDAsIF9wdWJsaWMudG9Nb3VudFBvaW50KShSZWFjdC5jcmVhdGVFbGVtZW50KF9pbnNwZWN0b3JfcGFuZWwuSW5zcGVjdG9yUGFuZWwsIHsKICAgICAgICAgIHZpZXdzOiB2aWV3cywKICAgICAgICAgIGFkYXB0ZXJzOiBhZGFwdGVycywKICAgICAgICAgIHRpdGxlOiBvcHRpb25zLnRpdGxlCiAgICAgICAgfSkpLCB7CiAgICAgICAgICAnZGF0YS10ZXN0LXN1YmonOiAnaW5zcGVjdG9yUGFuZWwnLAogICAgICAgICAgY2xvc2VCdXR0b25BcmlhTGFiZWw6IGNsb3NlQnV0dG9uTGFiZWwKICAgICAgICB9KTsKICAgICAgfTsKCiAgICAgIHJldHVybiB7CiAgICAgICAgaXNBdmFpbGFibGU6IGlzQXZhaWxhYmxlLAogICAgICAgIG9wZW46IG9wZW4KICAgICAgfTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJzdG9wIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBzdG9wKCkge30KICB9XSk7CgogIHJldHVybiBJbnNwZWN0b3JQdWJsaWNQbHVnaW47Cn0oKTsKCmV4cG9ydHMuSW5zcGVjdG9yUHVibGljUGx1Z2luID0gSW5zcGVjdG9yUHVibGljUGx1Z2luOw=="},null]}