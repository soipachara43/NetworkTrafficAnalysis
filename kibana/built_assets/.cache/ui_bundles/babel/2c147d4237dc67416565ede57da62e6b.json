{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/lens/public/indexpattern_datasource/rename_columns.js","dependencies":[{"path":"x-pack/legacy/plugins/lens/public/indexpattern_datasource/rename_columns.js","mtime":1589249552308},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLnJlbmFtZUNvbHVtbnMgPSB2b2lkIDA7Cgp2YXIgX2kxOG4gPSByZXF1aXJlKCJAa2JuL2kxOG4iKTsKCmZ1bmN0aW9uIG93bktleXMob2JqZWN0LCBlbnVtZXJhYmxlT25seSkgewogIHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTsKCiAgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsKICAgIHZhciBzeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvYmplY3QpOwogICAgaWYgKGVudW1lcmFibGVPbmx5KSBzeW1ib2xzID0gc3ltYm9scy5maWx0ZXIoZnVuY3Rpb24gKHN5bSkgewogICAgICByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHN5bSkuZW51bWVyYWJsZTsKICAgIH0pOwogICAga2V5cy5wdXNoLmFwcGx5KGtleXMsIHN5bWJvbHMpOwogIH0KCiAgcmV0dXJuIGtleXM7Cn0KCmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7CiAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsKICAgIHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV0gIT0gbnVsbCA/IGFyZ3VtZW50c1tpXSA6IHt9OwoKICAgIGlmIChpICUgMikgewogICAgICBvd25LZXlzKHNvdXJjZSwgdHJ1ZSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7CiAgICAgICAgX2RlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBzb3VyY2Vba2V5XSk7CiAgICAgIH0pOwogICAgfSBlbHNlIGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycykgewogICAgICBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHNvdXJjZSkpOwogICAgfSBlbHNlIHsKICAgICAgb3duS2V5cyhzb3VyY2UpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgewogICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpOwogICAgICB9KTsKICAgIH0KICB9CgogIHJldHVybiB0YXJnZXQ7Cn0KCmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHsKICBpZiAoa2V5IGluIG9iaikgewogICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7CiAgICAgIHZhbHVlOiB2YWx1ZSwKICAgICAgZW51bWVyYWJsZTogdHJ1ZSwKICAgICAgY29uZmlndXJhYmxlOiB0cnVlLAogICAgICB3cml0YWJsZTogdHJ1ZQogICAgfSk7CiAgfSBlbHNlIHsKICAgIG9ialtrZXldID0gdmFsdWU7CiAgfQoKICByZXR1cm4gb2JqOwp9CgpmdW5jdGlvbiBfc2xpY2VkVG9BcnJheShhcnIsIGkpIHsKICByZXR1cm4gX2FycmF5V2l0aEhvbGVzKGFycikgfHwgX2l0ZXJhYmxlVG9BcnJheUxpbWl0KGFyciwgaSkgfHwgX25vbkl0ZXJhYmxlUmVzdCgpOwp9CgpmdW5jdGlvbiBfbm9uSXRlcmFibGVSZXN0KCkgewogIHRocm93IG5ldyBUeXBlRXJyb3IoIkludmFsaWQgYXR0ZW1wdCB0byBkZXN0cnVjdHVyZSBub24taXRlcmFibGUgaW5zdGFuY2UiKTsKfQoKZnVuY3Rpb24gX2l0ZXJhYmxlVG9BcnJheUxpbWl0KGFyciwgaSkgewogIHZhciBfYXJyID0gW107CiAgdmFyIF9uID0gdHJ1ZTsKICB2YXIgX2QgPSBmYWxzZTsKICB2YXIgX2UgPSB1bmRlZmluZWQ7CgogIHRyeSB7CiAgICBmb3IgKHZhciBfaSA9IGFycltTeW1ib2wuaXRlcmF0b3JdKCksIF9zOyAhKF9uID0gKF9zID0gX2kubmV4dCgpKS5kb25lKTsgX24gPSB0cnVlKSB7CiAgICAgIF9hcnIucHVzaChfcy52YWx1ZSk7CgogICAgICBpZiAoaSAmJiBfYXJyLmxlbmd0aCA9PT0gaSkgYnJlYWs7CiAgICB9CiAgfSBjYXRjaCAoZXJyKSB7CiAgICBfZCA9IHRydWU7CiAgICBfZSA9IGVycjsKICB9IGZpbmFsbHkgewogICAgdHJ5IHsKICAgICAgaWYgKCFfbiAmJiBfaVsicmV0dXJuIl0gIT0gbnVsbCkgX2lbInJldHVybiJdKCk7CiAgICB9IGZpbmFsbHkgewogICAgICBpZiAoX2QpIHRocm93IF9lOwogICAgfQogIH0KCiAgcmV0dXJuIF9hcnI7Cn0KCmZ1bmN0aW9uIF9hcnJheVdpdGhIb2xlcyhhcnIpIHsKICBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSByZXR1cm4gYXJyOwp9Cgp2YXIgcmVuYW1lQ29sdW1ucyA9IHsKICBuYW1lOiAnbGVuc19yZW5hbWVfY29sdW1ucycsCiAgdHlwZTogJ2tpYmFuYV9kYXRhdGFibGUnLAogIGhlbHA6IF9pMThuLmkxOG4udHJhbnNsYXRlKCd4cGFjay5sZW5zLmZ1bmN0aW9ucy5yZW5hbWVDb2x1bW5zLmhlbHAnLCB7CiAgICBkZWZhdWx0TWVzc2FnZTogJ0EgaGVscGVyIHRvIHJlbmFtZSB0aGUgY29sdW1ucyBvZiBhIGRhdGF0YWJsZScKICB9KSwKICBhcmdzOiB7CiAgICBpZE1hcDogewogICAgICB0eXBlczogWydzdHJpbmcnXSwKICAgICAgaGVscDogX2kxOG4uaTE4bi50cmFuc2xhdGUoJ3hwYWNrLmxlbnMuZnVuY3Rpb25zLnJlbmFtZUNvbHVtbnMuaWRNYXAuaGVscCcsIHsKICAgICAgICBkZWZhdWx0TWVzc2FnZTogJ0EgSlNPTiBlbmNvZGVkIG9iamVjdCBpbiB3aGljaCBrZXlzIGFyZSB0aGUgb2xkIGNvbHVtbiBpZHMgYW5kIHZhbHVlcyBhcmUgdGhlIGNvcnJlc3BvbmRpbmcgbmV3IG9uZXMuIEFsbCBvdGhlciBjb2x1bW5zIGlkcyBhcmUga2VwdC4nCiAgICAgIH0pCiAgICB9CiAgfSwKICBpbnB1dFR5cGVzOiBbJ2tpYmFuYV9kYXRhdGFibGUnXSwKICBmbjogZnVuY3Rpb24gZm4oZGF0YSwgX3JlZikgewogICAgdmFyIGVuY29kZWRJZE1hcCA9IF9yZWYuaWRNYXA7CiAgICB2YXIgaWRNYXAgPSBKU09OLnBhcnNlKGVuY29kZWRJZE1hcCk7CiAgICByZXR1cm4gewogICAgICB0eXBlOiAna2liYW5hX2RhdGF0YWJsZScsCiAgICAgIHJvd3M6IGRhdGEucm93cy5tYXAoZnVuY3Rpb24gKHJvdykgewogICAgICAgIHZhciBtYXBwZWRSb3cgPSB7fTsKICAgICAgICBPYmplY3QuZW50cmllcyhpZE1hcCkuZm9yRWFjaChmdW5jdGlvbiAoX3JlZjIpIHsKICAgICAgICAgIHZhciBfcmVmMyA9IF9zbGljZWRUb0FycmF5KF9yZWYyLCAyKSwKICAgICAgICAgICAgICBmcm9tSWQgPSBfcmVmM1swXSwKICAgICAgICAgICAgICB0b0lkID0gX3JlZjNbMV07CgogICAgICAgICAgbWFwcGVkUm93W3RvSWQuaWRdID0gcm93W2Zyb21JZF07CiAgICAgICAgfSk7CiAgICAgICAgT2JqZWN0LmVudHJpZXMocm93KS5mb3JFYWNoKGZ1bmN0aW9uIChfcmVmNCkgewogICAgICAgICAgdmFyIF9yZWY1ID0gX3NsaWNlZFRvQXJyYXkoX3JlZjQsIDIpLAogICAgICAgICAgICAgIGlkID0gX3JlZjVbMF0sCiAgICAgICAgICAgICAgdmFsdWUgPSBfcmVmNVsxXTsKCiAgICAgICAgICBpZiAoaWQgaW4gaWRNYXApIHsKICAgICAgICAgICAgbWFwcGVkUm93W2lkTWFwW2lkXS5pZF0gPSBzYW5pdGl6ZVZhbHVlKHZhbHVlKTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIG1hcHBlZFJvd1tpZF0gPSBzYW5pdGl6ZVZhbHVlKHZhbHVlKTsKICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgICByZXR1cm4gbWFwcGVkUm93OwogICAgICB9KSwKICAgICAgY29sdW1uczogZGF0YS5jb2x1bW5zLm1hcChmdW5jdGlvbiAoY29sdW1uKSB7CiAgICAgICAgdmFyIG1hcHBlZEl0ZW0gPSBpZE1hcFtjb2x1bW4uaWRdOwoKICAgICAgICBpZiAoIW1hcHBlZEl0ZW0pIHsKICAgICAgICAgIHJldHVybiBjb2x1bW47CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gX29iamVjdFNwcmVhZCh7fSwgY29sdW1uLCB7CiAgICAgICAgICBpZDogbWFwcGVkSXRlbS5pZCwKICAgICAgICAgIG5hbWU6IGdldENvbHVtbk5hbWUobWFwcGVkSXRlbSwgY29sdW1uKQogICAgICAgIH0pOwogICAgICB9KQogICAgfTsKICB9Cn07CmV4cG9ydHMucmVuYW1lQ29sdW1ucyA9IHJlbmFtZUNvbHVtbnM7CgpmdW5jdGlvbiBnZXRDb2x1bW5OYW1lKG9yaWdpbmFsQ29sdW1uLCBuZXdDb2x1bW4pIHsKICBpZiAob3JpZ2luYWxDb2x1bW4gJiYgb3JpZ2luYWxDb2x1bW4ub3BlcmF0aW9uVHlwZSA9PT0gJ2RhdGVfaGlzdG9ncmFtJykgewogICAgdmFyIGZpZWxkTmFtZSA9IG9yaWdpbmFsQ29sdW1uLnNvdXJjZUZpZWxkOyAvLyBIQUNLOiBUaGlzIGlzIGEgaGFjaywgYW5kIGludHJvZHVjZXMgc29tZSBmcmFnaWxpdHkgaW50bwogICAgLy8gY29sdW1uIG5hbWluZy4gRXZlbnR1YWxseSwgdGhpcyBzaG91bGQgYmUgY2FsY3VsYXRlZCBhbmQKICAgIC8vIGJ1aWx0IG1vcmUgc3lzdGVtYXRpY2FsbHkuCgogICAgcmV0dXJuIG5ld0NvbHVtbi5uYW1lLnJlcGxhY2UoZmllbGROYW1lLCBvcmlnaW5hbENvbHVtbi5sYWJlbCk7CiAgfQoKICByZXR1cm4gb3JpZ2luYWxDb2x1bW4ubGFiZWw7Cn0KCmZ1bmN0aW9uIHNhbml0aXplVmFsdWUodmFsdWUpIHsKICBpZiAodmFsdWUgPT09ICcnKSB7CiAgICByZXR1cm4gX2kxOG4uaTE4bi50cmFuc2xhdGUoJ3hwYWNrLmxlbnMuaW5kZXhwYXR0ZXJuLmVtcHR5VGV4dENvbHVtblZhbHVlJywgewogICAgICBkZWZhdWx0TWVzc2FnZTogJyhlbXB0eSknCiAgICB9KTsKICB9CgogIHJldHVybiB2YWx1ZTsKfQ=="},null]}