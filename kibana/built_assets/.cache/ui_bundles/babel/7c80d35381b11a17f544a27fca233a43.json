{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!src/plugins/data/common/es_query/kuery/ast/_generated_/kuery.js","dependencies":[{"path":"src/plugins/data/common/es_query/kuery/ast/_generated_/kuery.js","mtime":1589249550563},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKZnVuY3Rpb24gb3duS2V5cyhvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7IHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCk7IGlmIChlbnVtZXJhYmxlT25seSkgc3ltYm9scyA9IHN5bWJvbHMuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHsgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7IH0pOyBrZXlzLnB1c2guYXBwbHkoa2V5cywgc3ltYm9scyk7IH0gcmV0dXJuIGtleXM7IH0KCmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV0gIT0gbnVsbCA/IGFyZ3VtZW50c1tpXSA6IHt9OyBpZiAoaSAlIDIpIHsgb3duS2V5cyhzb3VyY2UsIHRydWUpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTsgfSk7IH0gZWxzZSBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMpIHsgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKTsgfSBlbHNlIHsgb3duS2V5cyhzb3VyY2UpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBrZXkpKTsgfSk7IH0gfSByZXR1cm4gdGFyZ2V0OyB9CgpmdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7IGlmIChrZXkgaW4gb2JqKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgeyB2YWx1ZTogdmFsdWUsIGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUgfSk7IH0gZWxzZSB7IG9ialtrZXldID0gdmFsdWU7IH0gcmV0dXJuIG9iajsgfQoKbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoKSB7CiAgInVzZSBzdHJpY3QiOwogIC8qCiAgICogR2VuZXJhdGVkIGJ5IFBFRy5qcyAwLjkuMC4KICAgKgogICAqIGh0dHA6Ly9wZWdqcy5vcmcvCiAgICovCgogIGZ1bmN0aW9uIHBlZyRzdWJjbGFzcyhjaGlsZCwgcGFyZW50KSB7CiAgICBmdW5jdGlvbiBjdG9yKCkgewogICAgICB0aGlzLmNvbnN0cnVjdG9yID0gY2hpbGQ7CiAgICB9CgogICAgY3Rvci5wcm90b3R5cGUgPSBwYXJlbnQucHJvdG90eXBlOwogICAgY2hpbGQucHJvdG90eXBlID0gbmV3IGN0b3IoKTsKICB9CgogIGZ1bmN0aW9uIHBlZyRTeW50YXhFcnJvcihtZXNzYWdlLCBleHBlY3RlZCwgZm91bmQsIGxvY2F0aW9uKSB7CiAgICB0aGlzLm1lc3NhZ2UgPSBtZXNzYWdlOwogICAgdGhpcy5leHBlY3RlZCA9IGV4cGVjdGVkOwogICAgdGhpcy5mb3VuZCA9IGZvdW5kOwogICAgdGhpcy5sb2NhdGlvbiA9IGxvY2F0aW9uOwogICAgdGhpcy5uYW1lID0gIlN5bnRheEVycm9yIjsKCiAgICBpZiAodHlwZW9mIEVycm9yLmNhcHR1cmVTdGFja1RyYWNlID09PSAiZnVuY3Rpb24iKSB7CiAgICAgIEVycm9yLmNhcHR1cmVTdGFja1RyYWNlKHRoaXMsIHBlZyRTeW50YXhFcnJvcik7CiAgICB9CiAgfQoKICBwZWckc3ViY2xhc3MocGVnJFN5bnRheEVycm9yLCBFcnJvcik7CgogIGZ1bmN0aW9uIHBlZyRwYXJzZShpbnB1dCkgewogICAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMSA/IGFyZ3VtZW50c1sxXSA6IHt9LAogICAgICAgIHBhcnNlciA9IHRoaXMsCiAgICAgICAgcGVnJEZBSUxFRCA9IHt9LAogICAgICAgIHBlZyRzdGFydFJ1bGVGdW5jdGlvbnMgPSB7CiAgICAgIHN0YXJ0OiBwZWckcGFyc2VzdGFydCwKICAgICAgTGl0ZXJhbDogcGVnJHBhcnNlTGl0ZXJhbAogICAgfSwKICAgICAgICBwZWckc3RhcnRSdWxlRnVuY3Rpb24gPSBwZWckcGFyc2VzdGFydCwKICAgICAgICBwZWckYzAgPSBmdW5jdGlvbiBwZWckYzAocXVlcnksIHRyYWlsaW5nKSB7CiAgICAgIGlmICh0cmFpbGluZy50eXBlID09PSAnY3Vyc29yJykgewogICAgICAgIHJldHVybiBfb2JqZWN0U3ByZWFkKHt9LCB0cmFpbGluZywgewogICAgICAgICAgc3VnZ2VzdGlvblR5cGVzOiBbJ2Nvbmp1bmN0aW9uJ10KICAgICAgICB9KTsKICAgICAgfQoKICAgICAgaWYgKHF1ZXJ5ICE9PSBudWxsKSByZXR1cm4gcXVlcnk7CiAgICAgIHJldHVybiBub2RlVHlwZXMuZnVuY3Rpb24uYnVpbGROb2RlKCdpcycsICcqJywgJyonKTsKICAgIH0sCiAgICAgICAgcGVnJGMxID0gZnVuY3Rpb24gcGVnJGMxKCkgewogICAgICByZXR1cm4gZXJyb3JPbkx1Y2VuZVN5bnRheDsKICAgIH0sCiAgICAgICAgcGVnJGMyID0gZnVuY3Rpb24gcGVnJGMyKGxlZnQsIHJpZ2h0KSB7CiAgICAgIHZhciBjdXJzb3IgPSBbbGVmdCwgcmlnaHRdLmZpbmQoZnVuY3Rpb24gKG5vZGUpIHsKICAgICAgICByZXR1cm4gbm9kZS50eXBlID09PSAnY3Vyc29yJzsKICAgICAgfSk7CiAgICAgIGlmIChjdXJzb3IpIHJldHVybiBjdXJzb3I7CiAgICAgIHJldHVybiBidWlsZEZ1bmN0aW9uTm9kZSgnb3InLCBbbGVmdCwgcmlnaHRdKTsKICAgIH0sCiAgICAgICAgcGVnJGMzID0gZnVuY3Rpb24gcGVnJGMzKGxlZnQsIHJpZ2h0KSB7CiAgICAgIHZhciBjdXJzb3IgPSBbbGVmdCwgcmlnaHRdLmZpbmQoZnVuY3Rpb24gKG5vZGUpIHsKICAgICAgICByZXR1cm4gbm9kZS50eXBlID09PSAnY3Vyc29yJzsKICAgICAgfSk7CiAgICAgIGlmIChjdXJzb3IpIHJldHVybiBjdXJzb3I7CiAgICAgIHJldHVybiBidWlsZEZ1bmN0aW9uTm9kZSgnYW5kJywgW2xlZnQsIHJpZ2h0XSk7CiAgICB9LAogICAgICAgIHBlZyRjNCA9IGZ1bmN0aW9uIHBlZyRjNChxdWVyeSkgewogICAgICBpZiAocXVlcnkudHlwZSA9PT0gJ2N1cnNvcicpIHJldHVybiBxdWVyeTsKICAgICAgcmV0dXJuIGJ1aWxkRnVuY3Rpb25Ob2RlKCdub3QnLCBbcXVlcnldKTsKICAgIH0sCiAgICAgICAgcGVnJGM1ID0gIigiLAogICAgICAgIHBlZyRjNiA9IHsKICAgICAgdHlwZTogImxpdGVyYWwiLAogICAgICB2YWx1ZTogIigiLAogICAgICBkZXNjcmlwdGlvbjogIlwiKFwiIgogICAgfSwKICAgICAgICBwZWckYzcgPSAiKSIsCiAgICAgICAgcGVnJGM4ID0gewogICAgICB0eXBlOiAibGl0ZXJhbCIsCiAgICAgIHZhbHVlOiAiKSIsCiAgICAgIGRlc2NyaXB0aW9uOiAiXCIpXCIiCiAgICB9LAogICAgICAgIHBlZyRjOSA9IGZ1bmN0aW9uIHBlZyRjOShxdWVyeSwgdHJhaWxpbmcpIHsKICAgICAgaWYgKHRyYWlsaW5nLnR5cGUgPT09ICdjdXJzb3InKSB7CiAgICAgICAgcmV0dXJuIF9vYmplY3RTcHJlYWQoe30sIHRyYWlsaW5nLCB7CiAgICAgICAgICBzdWdnZXN0aW9uVHlwZXM6IFsnY29uanVuY3Rpb24nXQogICAgICAgIH0pOwogICAgICB9CgogICAgICByZXR1cm4gcXVlcnk7CiAgICB9LAogICAgICAgIHBlZyRjMTAgPSAiOiIsCiAgICAgICAgcGVnJGMxMSA9IHsKICAgICAgdHlwZTogImxpdGVyYWwiLAogICAgICB2YWx1ZTogIjoiLAogICAgICBkZXNjcmlwdGlvbjogIlwiOlwiIgogICAgfSwKICAgICAgICBwZWckYzEyID0gInsiLAogICAgICAgIHBlZyRjMTMgPSB7CiAgICAgIHR5cGU6ICJsaXRlcmFsIiwKICAgICAgdmFsdWU6ICJ7IiwKICAgICAgZGVzY3JpcHRpb246ICJcIntcIiIKICAgIH0sCiAgICAgICAgcGVnJGMxNCA9ICJ9IiwKICAgICAgICBwZWckYzE1ID0gewogICAgICB0eXBlOiAibGl0ZXJhbCIsCiAgICAgIHZhbHVlOiAifSIsCiAgICAgIGRlc2NyaXB0aW9uOiAiXCJ9XCIiCiAgICB9LAogICAgICAgIHBlZyRjMTYgPSBmdW5jdGlvbiBwZWckYzE2KGZpZWxkLCBxdWVyeSwgdHJhaWxpbmcpIHsKICAgICAgaWYgKHF1ZXJ5LnR5cGUgPT09ICdjdXJzb3InKSB7CiAgICAgICAgcmV0dXJuIF9vYmplY3RTcHJlYWQoe30sIHF1ZXJ5LCB7CiAgICAgICAgICBuZXN0ZWRQYXRoOiBxdWVyeS5uZXN0ZWRQYXRoID8gIiIuY29uY2F0KGZpZWxkLnZhbHVlLCAiLiIpLmNvbmNhdChxdWVyeS5uZXN0ZWRQYXRoKSA6IGZpZWxkLnZhbHVlCiAgICAgICAgfSk7CiAgICAgIH0KCiAgICAgIDsKCiAgICAgIGlmICh0cmFpbGluZy50eXBlID09PSAnY3Vyc29yJykgewogICAgICAgIHJldHVybiBfb2JqZWN0U3ByZWFkKHt9LCB0cmFpbGluZywgewogICAgICAgICAgc3VnZ2VzdGlvblR5cGVzOiBbJ2Nvbmp1bmN0aW9uJ10KICAgICAgICB9KTsKICAgICAgfQoKICAgICAgcmV0dXJuIGJ1aWxkRnVuY3Rpb25Ob2RlKCduZXN0ZWQnLCBbZmllbGQsIHF1ZXJ5XSk7CiAgICB9LAogICAgICAgIHBlZyRjMTcgPSB7CiAgICAgIHR5cGU6ICJvdGhlciIsCiAgICAgIGRlc2NyaXB0aW9uOiAiZmllbGROYW1lIgogICAgfSwKICAgICAgICBwZWckYzE4ID0gZnVuY3Rpb24gcGVnJGMxOChmaWVsZCwgb3BlcmF0b3IsIHZhbHVlKSB7CiAgICAgIGlmICh2YWx1ZS50eXBlID09PSAnY3Vyc29yJykgewogICAgICAgIHJldHVybiBfb2JqZWN0U3ByZWFkKHt9LCB2YWx1ZSwgewogICAgICAgICAgc3VnZ2VzdGlvblR5cGVzOiBbJ2Nvbmp1bmN0aW9uJ10KICAgICAgICB9KTsKICAgICAgfQoKICAgICAgdmFyIHJhbmdlID0gYnVpbGROYW1lZEFyZ05vZGUob3BlcmF0b3IsIHZhbHVlKTsKICAgICAgcmV0dXJuIGJ1aWxkRnVuY3Rpb25Ob2RlKCdyYW5nZScsIFtmaWVsZCwgcmFuZ2VdKTsKICAgIH0sCiAgICAgICAgcGVnJGMxOSA9IGZ1bmN0aW9uIHBlZyRjMTkoZmllbGQsIHBhcnRpYWwpIHsKICAgICAgaWYgKHBhcnRpYWwudHlwZSA9PT0gJ2N1cnNvcicpIHsKICAgICAgICByZXR1cm4gX29iamVjdFNwcmVhZCh7fSwgcGFydGlhbCwgewogICAgICAgICAgZmllbGROYW1lOiBmaWVsZC52YWx1ZSwKICAgICAgICAgIHN1Z2dlc3Rpb25UeXBlczogWyd2YWx1ZScsICdjb25qdW5jdGlvbiddCiAgICAgICAgfSk7CiAgICAgIH0KCiAgICAgIHJldHVybiBwYXJ0aWFsKGZpZWxkKTsKICAgIH0sCiAgICAgICAgcGVnJGMyMCA9IGZ1bmN0aW9uIHBlZyRjMjAocGFydGlhbCkgewogICAgICBpZiAocGFydGlhbC50eXBlID09PSAnY3Vyc29yJykgewogICAgICAgIHZhciBmaWVsZE5hbWUgPSAiIi5jb25jYXQocGFydGlhbC5wcmVmaXgpLmNvbmNhdChwYXJ0aWFsLnN1ZmZpeCkudHJpbSgpOwogICAgICAgIHJldHVybiBfb2JqZWN0U3ByZWFkKHt9LCBwYXJ0aWFsLCB7CiAgICAgICAgICBmaWVsZE5hbWU6IGZpZWxkTmFtZSwKICAgICAgICAgIHN1Z2dlc3Rpb25UeXBlczogWydmaWVsZCcsICdvcGVyYXRvcicsICdjb25qdW5jdGlvbiddCiAgICAgICAgfSk7CiAgICAgIH0KCiAgICAgIHZhciBmaWVsZCA9IGJ1aWxkTGl0ZXJhbE5vZGUobnVsbCk7CiAgICAgIHJldHVybiBwYXJ0aWFsKGZpZWxkKTsKICAgIH0sCiAgICAgICAgcGVnJGMyMSA9IGZ1bmN0aW9uIHBlZyRjMjEocGFydGlhbCwgdHJhaWxpbmcpIHsKICAgICAgaWYgKHRyYWlsaW5nLnR5cGUgPT09ICdjdXJzb3InKSB7CiAgICAgICAgcmV0dXJuIF9vYmplY3RTcHJlYWQoe30sIHRyYWlsaW5nLCB7CiAgICAgICAgICBzdWdnZXN0aW9uVHlwZXM6IFsnY29uanVuY3Rpb24nXQogICAgICAgIH0pOwogICAgICB9CgogICAgICByZXR1cm4gcGFydGlhbDsKICAgIH0sCiAgICAgICAgcGVnJGMyMiA9IGZ1bmN0aW9uIHBlZyRjMjIocGFydGlhbExlZnQsIHBhcnRpYWxSaWdodCkgewogICAgICB2YXIgY3Vyc29yID0gW3BhcnRpYWxMZWZ0LCBwYXJ0aWFsUmlnaHRdLmZpbmQoZnVuY3Rpb24gKG5vZGUpIHsKICAgICAgICByZXR1cm4gbm9kZS50eXBlID09PSAnY3Vyc29yJzsKICAgICAgfSk7CgogICAgICBpZiAoY3Vyc29yKSB7CiAgICAgICAgcmV0dXJuIF9vYmplY3RTcHJlYWQoe30sIGN1cnNvciwgewogICAgICAgICAgc3VnZ2VzdGlvblR5cGVzOiBbJ3ZhbHVlJ10KICAgICAgICB9KTsKICAgICAgfQoKICAgICAgcmV0dXJuIGZ1bmN0aW9uIChmaWVsZCkgewogICAgICAgIHJldHVybiBidWlsZEZ1bmN0aW9uTm9kZSgnb3InLCBbcGFydGlhbExlZnQoZmllbGQpLCBwYXJ0aWFsUmlnaHQoZmllbGQpXSk7CiAgICAgIH07CiAgICB9LAogICAgICAgIHBlZyRjMjMgPSBmdW5jdGlvbiBwZWckYzIzKHBhcnRpYWxMZWZ0LCBwYXJ0aWFsUmlnaHQpIHsKICAgICAgdmFyIGN1cnNvciA9IFtwYXJ0aWFsTGVmdCwgcGFydGlhbFJpZ2h0XS5maW5kKGZ1bmN0aW9uIChub2RlKSB7CiAgICAgICAgcmV0dXJuIG5vZGUudHlwZSA9PT0gJ2N1cnNvcic7CiAgICAgIH0pOwoKICAgICAgaWYgKGN1cnNvcikgewogICAgICAgIHJldHVybiBfb2JqZWN0U3ByZWFkKHt9LCBjdXJzb3IsIHsKICAgICAgICAgIHN1Z2dlc3Rpb25UeXBlczogWyd2YWx1ZSddCiAgICAgICAgfSk7CiAgICAgIH0KCiAgICAgIHJldHVybiBmdW5jdGlvbiAoZmllbGQpIHsKICAgICAgICByZXR1cm4gYnVpbGRGdW5jdGlvbk5vZGUoJ2FuZCcsIFtwYXJ0aWFsTGVmdChmaWVsZCksIHBhcnRpYWxSaWdodChmaWVsZCldKTsKICAgICAgfTsKICAgIH0sCiAgICAgICAgcGVnJGMyNCA9IGZ1bmN0aW9uIHBlZyRjMjQocGFydGlhbCkgewogICAgICBpZiAocGFydGlhbC50eXBlID09PSAnY3Vyc29yJykgewogICAgICAgIHJldHVybiBfb2JqZWN0U3ByZWFkKHt9LCBsaXN0LCB7CiAgICAgICAgICBzdWdnZXN0aW9uVHlwZXM6IFsndmFsdWUnXQogICAgICAgIH0pOwogICAgICB9CgogICAgICByZXR1cm4gZnVuY3Rpb24gKGZpZWxkKSB7CiAgICAgICAgcmV0dXJuIGJ1aWxkRnVuY3Rpb25Ob2RlKCdub3QnLCBbcGFydGlhbChmaWVsZCldKTsKICAgICAgfTsKICAgIH0sCiAgICAgICAgcGVnJGMyNSA9IHsKICAgICAgdHlwZTogIm90aGVyIiwKICAgICAgZGVzY3JpcHRpb246ICJ2YWx1ZSIKICAgIH0sCiAgICAgICAgcGVnJGMyNiA9IGZ1bmN0aW9uIHBlZyRjMjYodmFsdWUpIHsKICAgICAgaWYgKHZhbHVlLnR5cGUgPT09ICdjdXJzb3InKSByZXR1cm4gdmFsdWU7CiAgICAgIHZhciBpc1BocmFzZSA9IGJ1aWxkTGl0ZXJhbE5vZGUodHJ1ZSk7CiAgICAgIHJldHVybiBmdW5jdGlvbiAoZmllbGQpIHsKICAgICAgICByZXR1cm4gYnVpbGRGdW5jdGlvbk5vZGUoJ2lzJywgW2ZpZWxkLCB2YWx1ZSwgaXNQaHJhc2VdKTsKICAgICAgfTsKICAgIH0sCiAgICAgICAgcGVnJGMyNyA9IGZ1bmN0aW9uIHBlZyRjMjcodmFsdWUpIHsKICAgICAgaWYgKHZhbHVlLnR5cGUgPT09ICdjdXJzb3InKSByZXR1cm4gdmFsdWU7CgogICAgICBpZiAoIWFsbG93TGVhZGluZ1dpbGRjYXJkcyAmJiB2YWx1ZS50eXBlID09PSAnd2lsZGNhcmQnICYmIG5vZGVUeXBlcy53aWxkY2FyZC5oYXNMZWFkaW5nV2lsZGNhcmQodmFsdWUpKSB7CiAgICAgICAgZXJyb3IoJ0xlYWRpbmcgd2lsZGNhcmRzIGFyZSBkaXNhYmxlZC4gU2VlIHF1ZXJ5OmFsbG93TGVhZGluZ1dpbGRjYXJkcyBpbiBBZHZhbmNlZCBTZXR0aW5ncy4nKTsKICAgICAgfQoKICAgICAgdmFyIGlzUGhyYXNlID0gYnVpbGRMaXRlcmFsTm9kZShmYWxzZSk7CiAgICAgIHJldHVybiBmdW5jdGlvbiAoZmllbGQpIHsKICAgICAgICByZXR1cm4gYnVpbGRGdW5jdGlvbk5vZGUoJ2lzJywgW2ZpZWxkLCB2YWx1ZSwgaXNQaHJhc2VdKTsKICAgICAgfTsKICAgIH0sCiAgICAgICAgcGVnJGMyOCA9IHsKICAgICAgdHlwZTogIm90aGVyIiwKICAgICAgZGVzY3JpcHRpb246ICJPUiIKICAgIH0sCiAgICAgICAgcGVnJGMyOSA9ICJvciIsCiAgICAgICAgcGVnJGMzMCA9IHsKICAgICAgdHlwZTogImxpdGVyYWwiLAogICAgICB2YWx1ZTogIm9yIiwKICAgICAgZGVzY3JpcHRpb246ICJcIm9yXCIiCiAgICB9LAogICAgICAgIHBlZyRjMzEgPSB7CiAgICAgIHR5cGU6ICJvdGhlciIsCiAgICAgIGRlc2NyaXB0aW9uOiAiQU5EIgogICAgfSwKICAgICAgICBwZWckYzMyID0gImFuZCIsCiAgICAgICAgcGVnJGMzMyA9IHsKICAgICAgdHlwZTogImxpdGVyYWwiLAogICAgICB2YWx1ZTogImFuZCIsCiAgICAgIGRlc2NyaXB0aW9uOiAiXCJhbmRcIiIKICAgIH0sCiAgICAgICAgcGVnJGMzNCA9IHsKICAgICAgdHlwZTogIm90aGVyIiwKICAgICAgZGVzY3JpcHRpb246ICJOT1QiCiAgICB9LAogICAgICAgIHBlZyRjMzUgPSAibm90IiwKICAgICAgICBwZWckYzM2ID0gewogICAgICB0eXBlOiAibGl0ZXJhbCIsCiAgICAgIHZhbHVlOiAibm90IiwKICAgICAgZGVzY3JpcHRpb246ICJcIm5vdFwiIgogICAgfSwKICAgICAgICBwZWckYzM3ID0gewogICAgICB0eXBlOiAib3RoZXIiLAogICAgICBkZXNjcmlwdGlvbjogImxpdGVyYWwiCiAgICB9LAogICAgICAgIHBlZyRjMzggPSAiXCIiLAogICAgICAgIHBlZyRjMzkgPSB7CiAgICAgIHR5cGU6ICJsaXRlcmFsIiwKICAgICAgdmFsdWU6ICJcIiIsCiAgICAgIGRlc2NyaXB0aW9uOiAiXCJcXFwiXCIiCiAgICB9LAogICAgICAgIHBlZyRjNDAgPSBmdW5jdGlvbiBwZWckYzQwKHByZWZpeCwgY3Vyc29yLCBzdWZmaXgpIHsKICAgICAgdmFyIF9sb2NhdGlvbiA9IGxvY2F0aW9uKCksCiAgICAgICAgICBzdGFydCA9IF9sb2NhdGlvbi5zdGFydCwKICAgICAgICAgIGVuZCA9IF9sb2NhdGlvbi5lbmQ7CgogICAgICByZXR1cm4gewogICAgICAgIHR5cGU6ICdjdXJzb3InLAogICAgICAgIHN0YXJ0OiBzdGFydC5vZmZzZXQsCiAgICAgICAgZW5kOiBlbmQub2Zmc2V0IC0gY3Vyc29yLmxlbmd0aCwKICAgICAgICBwcmVmaXg6IHByZWZpeC5qb2luKCcnKSwKICAgICAgICBzdWZmaXg6IHN1ZmZpeC5qb2luKCcnKSwKICAgICAgICB0ZXh0OiB0ZXh0KCkucmVwbGFjZShjdXJzb3IsICcnKQogICAgICB9OwogICAgfSwKICAgICAgICBwZWckYzQxID0gZnVuY3Rpb24gcGVnJGM0MShjaGFycykgewogICAgICByZXR1cm4gYnVpbGRMaXRlcmFsTm9kZShjaGFycy5qb2luKCcnKSk7CiAgICB9LAogICAgICAgIHBlZyRjNDIgPSAiXFwiLAogICAgICAgIHBlZyRjNDMgPSB7CiAgICAgIHR5cGU6ICJsaXRlcmFsIiwKICAgICAgdmFsdWU6ICJcXCIsCiAgICAgIGRlc2NyaXB0aW9uOiAiXCJcXFxcXCIiCiAgICB9LAogICAgICAgIHBlZyRjNDQgPSAvXltcXCJdLywKICAgICAgICBwZWckYzQ1ID0gewogICAgICB0eXBlOiAiY2xhc3MiLAogICAgICB2YWx1ZTogIltcXFxcXCJdIiwKICAgICAgZGVzY3JpcHRpb246ICJbXFxcXFwiXSIKICAgIH0sCiAgICAgICAgcGVnJGM0NiA9IGZ1bmN0aW9uIHBlZyRjNDYoY2hhcikgewogICAgICByZXR1cm4gY2hhcjsKICAgIH0sCiAgICAgICAgcGVnJGM0NyA9IC9eW14iXS8sCiAgICAgICAgcGVnJGM0OCA9IHsKICAgICAgdHlwZTogImNsYXNzIiwKICAgICAgdmFsdWU6ICJbXlwiXSIsCiAgICAgIGRlc2NyaXB0aW9uOiAiW15cIl0iCiAgICB9LAogICAgICAgIHBlZyRjNDkgPSBmdW5jdGlvbiBwZWckYzQ5KGNoYXJzKSB7CiAgICAgIHZhciBzZXF1ZW5jZSA9IGNoYXJzLmpvaW4oJycpLnRyaW0oKTsKICAgICAgaWYgKHNlcXVlbmNlID09PSAnbnVsbCcpIHJldHVybiBidWlsZExpdGVyYWxOb2RlKG51bGwpOwogICAgICBpZiAoc2VxdWVuY2UgPT09ICd0cnVlJykgcmV0dXJuIGJ1aWxkTGl0ZXJhbE5vZGUodHJ1ZSk7CiAgICAgIGlmIChzZXF1ZW5jZSA9PT0gJ2ZhbHNlJykgcmV0dXJuIGJ1aWxkTGl0ZXJhbE5vZGUoZmFsc2UpOwogICAgICBpZiAoY2hhcnMuaW5jbHVkZXMod2lsZGNhcmRTeW1ib2wpKSByZXR1cm4gYnVpbGRXaWxkY2FyZE5vZGUoc2VxdWVuY2UpOwogICAgICB2YXIgbnVtYmVyID0gTnVtYmVyKHNlcXVlbmNlKTsKICAgICAgdmFyIHZhbHVlID0gaXNOYU4obnVtYmVyKSA/IHNlcXVlbmNlIDogbnVtYmVyOwogICAgICByZXR1cm4gYnVpbGRMaXRlcmFsTm9kZSh2YWx1ZSk7CiAgICB9LAogICAgICAgIHBlZyRjNTAgPSB7CiAgICAgIHR5cGU6ICJhbnkiLAogICAgICBkZXNjcmlwdGlvbjogImFueSBjaGFyYWN0ZXIiCiAgICB9LAogICAgICAgIHBlZyRjNTEgPSAiKiIsCiAgICAgICAgcGVnJGM1MiA9IHsKICAgICAgdHlwZTogImxpdGVyYWwiLAogICAgICB2YWx1ZTogIioiLAogICAgICBkZXNjcmlwdGlvbjogIlwiKlwiIgogICAgfSwKICAgICAgICBwZWckYzUzID0gZnVuY3Rpb24gcGVnJGM1MygpIHsKICAgICAgcmV0dXJuIHdpbGRjYXJkU3ltYm9sOwogICAgfSwKICAgICAgICBwZWckYzU0ID0gIlxcdCIsCiAgICAgICAgcGVnJGM1NSA9IHsKICAgICAgdHlwZTogImxpdGVyYWwiLAogICAgICB2YWx1ZTogIlxcdCIsCiAgICAgIGRlc2NyaXB0aW9uOiAiXCJcXFxcdFwiIgogICAgfSwKICAgICAgICBwZWckYzU2ID0gZnVuY3Rpb24gcGVnJGM1NigpIHsKICAgICAgcmV0dXJuICdcdCc7CiAgICB9LAogICAgICAgIHBlZyRjNTcgPSAiXFxyIiwKICAgICAgICBwZWckYzU4ID0gewogICAgICB0eXBlOiAibGl0ZXJhbCIsCiAgICAgIHZhbHVlOiAiXFxyIiwKICAgICAgZGVzY3JpcHRpb246ICJcIlxcXFxyXCIiCiAgICB9LAogICAgICAgIHBlZyRjNTkgPSBmdW5jdGlvbiBwZWckYzU5KCkgewogICAgICByZXR1cm4gJ1xyJzsKICAgIH0sCiAgICAgICAgcGVnJGM2MCA9ICJcXG4iLAogICAgICAgIHBlZyRjNjEgPSB7CiAgICAgIHR5cGU6ICJsaXRlcmFsIiwKICAgICAgdmFsdWU6ICJcXG4iLAogICAgICBkZXNjcmlwdGlvbjogIlwiXFxcXG5cIiIKICAgIH0sCiAgICAgICAgcGVnJGM2MiA9IGZ1bmN0aW9uIHBlZyRjNjIoKSB7CiAgICAgIHJldHVybiAnXG4nOwogICAgfSwKICAgICAgICBwZWckYzYzID0gZnVuY3Rpb24gcGVnJGM2MyhrZXl3b3JkKSB7CiAgICAgIHJldHVybiBrZXl3b3JkOwogICAgfSwKICAgICAgICBwZWckYzY0ID0gL15bXFwoKTo8PiIqe31dLywKICAgICAgICBwZWckYzY1ID0gewogICAgICB0eXBlOiAiY2xhc3MiLAogICAgICB2YWx1ZTogIltcXFxcKCk6PD5cIip7fV0iLAogICAgICBkZXNjcmlwdGlvbjogIltcXFxcKCk6PD5cIip7fV0iCiAgICB9LAogICAgICAgIHBlZyRjNjYgPSAiPD0iLAogICAgICAgIHBlZyRjNjcgPSB7CiAgICAgIHR5cGU6ICJsaXRlcmFsIiwKICAgICAgdmFsdWU6ICI8PSIsCiAgICAgIGRlc2NyaXB0aW9uOiAiXCI8PVwiIgogICAgfSwKICAgICAgICBwZWckYzY4ID0gZnVuY3Rpb24gcGVnJGM2OCgpIHsKICAgICAgcmV0dXJuICdsdGUnOwogICAgfSwKICAgICAgICBwZWckYzY5ID0gIj49IiwKICAgICAgICBwZWckYzcwID0gewogICAgICB0eXBlOiAibGl0ZXJhbCIsCiAgICAgIHZhbHVlOiAiPj0iLAogICAgICBkZXNjcmlwdGlvbjogIlwiPj1cIiIKICAgIH0sCiAgICAgICAgcGVnJGM3MSA9IGZ1bmN0aW9uIHBlZyRjNzEoKSB7CiAgICAgIHJldHVybiAnZ3RlJzsKICAgIH0sCiAgICAgICAgcGVnJGM3MiA9ICI8IiwKICAgICAgICBwZWckYzczID0gewogICAgICB0eXBlOiAibGl0ZXJhbCIsCiAgICAgIHZhbHVlOiAiPCIsCiAgICAgIGRlc2NyaXB0aW9uOiAiXCI8XCIiCiAgICB9LAogICAgICAgIHBlZyRjNzQgPSBmdW5jdGlvbiBwZWckYzc0KCkgewogICAgICByZXR1cm4gJ2x0JzsKICAgIH0sCiAgICAgICAgcGVnJGM3NSA9ICI+IiwKICAgICAgICBwZWckYzc2ID0gewogICAgICB0eXBlOiAibGl0ZXJhbCIsCiAgICAgIHZhbHVlOiAiPiIsCiAgICAgIGRlc2NyaXB0aW9uOiAiXCI+XCIiCiAgICB9LAogICAgICAgIHBlZyRjNzcgPSBmdW5jdGlvbiBwZWckYzc3KCkgewogICAgICByZXR1cm4gJ2d0JzsKICAgIH0sCiAgICAgICAgcGVnJGM3OCA9IHsKICAgICAgdHlwZTogIm90aGVyIiwKICAgICAgZGVzY3JpcHRpb246ICJ3aGl0ZXNwYWNlIgogICAgfSwKICAgICAgICBwZWckYzc5ID0gL15bIFx0XHJcbl0vLAogICAgICAgIHBlZyRjODAgPSB7CiAgICAgIHR5cGU6ICJjbGFzcyIsCiAgICAgIHZhbHVlOiAiW1xcIFxcdFxcclxcbl0iLAogICAgICBkZXNjcmlwdGlvbjogIltcXCBcXHRcXHJcXG5dIgogICAgfSwKICAgICAgICBwZWckYzgxID0gZnVuY3Rpb24gcGVnJGM4MSgpIHsKICAgICAgcmV0dXJuIHBhcnNlQ3Vyc29yOwogICAgfSwKICAgICAgICBwZWckYzgyID0gIkBrdWVyeS1jdXJzb3JAIiwKICAgICAgICBwZWckYzgzID0gewogICAgICB0eXBlOiAibGl0ZXJhbCIsCiAgICAgIHZhbHVlOiAiQGt1ZXJ5LWN1cnNvckAiLAogICAgICBkZXNjcmlwdGlvbjogIlwiQGt1ZXJ5LWN1cnNvckBcIiIKICAgIH0sCiAgICAgICAgcGVnJGM4NCA9IGZ1bmN0aW9uIHBlZyRjODQoKSB7CiAgICAgIHJldHVybiBjdXJzb3JTeW1ib2w7CiAgICB9LAogICAgICAgIHBlZyRjODUgPSAifHwiLAogICAgICAgIHBlZyRjODYgPSB7CiAgICAgIHR5cGU6ICJsaXRlcmFsIiwKICAgICAgdmFsdWU6ICJ8fCIsCiAgICAgIGRlc2NyaXB0aW9uOiAiXCJ8fFwiIgogICAgfSwKICAgICAgICBwZWckYzg3ID0gZnVuY3Rpb24gcGVnJGM4NygpIHsKICAgICAgZXJyb3IoJ0x1Y2VuZU9yJyk7CiAgICB9LAogICAgICAgIHBlZyRjODggPSAiJiYiLAogICAgICAgIHBlZyRjODkgPSB7CiAgICAgIHR5cGU6ICJsaXRlcmFsIiwKICAgICAgdmFsdWU6ICImJiIsCiAgICAgIGRlc2NyaXB0aW9uOiAiXCImJlwiIgogICAgfSwKICAgICAgICBwZWckYzkwID0gZnVuY3Rpb24gcGVnJGM5MCgpIHsKICAgICAgZXJyb3IoJ0x1Y2VuZUFuZCcpOwogICAgfSwKICAgICAgICBwZWckYzkxID0gIisiLAogICAgICAgIHBlZyRjOTIgPSB7CiAgICAgIHR5cGU6ICJsaXRlcmFsIiwKICAgICAgdmFsdWU6ICIrIiwKICAgICAgZGVzY3JpcHRpb246ICJcIitcIiIKICAgIH0sCiAgICAgICAgcGVnJGM5MyA9ICItIiwKICAgICAgICBwZWckYzk0ID0gewogICAgICB0eXBlOiAibGl0ZXJhbCIsCiAgICAgIHZhbHVlOiAiLSIsCiAgICAgIGRlc2NyaXB0aW9uOiAiXCItXCIiCiAgICB9LAogICAgICAgIHBlZyRjOTUgPSBmdW5jdGlvbiBwZWckYzk1KCkgewogICAgICBlcnJvcignTHVjZW5lTm90Jyk7CiAgICB9LAogICAgICAgIHBlZyRjOTYgPSAiISIsCiAgICAgICAgcGVnJGM5NyA9IHsKICAgICAgdHlwZTogImxpdGVyYWwiLAogICAgICB2YWx1ZTogIiEiLAogICAgICBkZXNjcmlwdGlvbjogIlwiIVwiIgogICAgfSwKICAgICAgICBwZWckYzk4ID0gIl9leGlzdHNfIiwKICAgICAgICBwZWckYzk5ID0gewogICAgICB0eXBlOiAibGl0ZXJhbCIsCiAgICAgIHZhbHVlOiAiX2V4aXN0c18iLAogICAgICBkZXNjcmlwdGlvbjogIlwiX2V4aXN0c19cIiIKICAgIH0sCiAgICAgICAgcGVnJGMxMDAgPSBmdW5jdGlvbiBwZWckYzEwMCgpIHsKICAgICAgZXJyb3IoJ0x1Y2VuZUV4aXN0cycpOwogICAgfSwKICAgICAgICBwZWckYzEwMSA9IGZ1bmN0aW9uIHBlZyRjMTAxKCkgewogICAgICBlcnJvcignTHVjZW5lUmFuZ2UnKTsKICAgIH0sCiAgICAgICAgcGVnJGMxMDIgPSAiPyIsCiAgICAgICAgcGVnJGMxMDMgPSB7CiAgICAgIHR5cGU6ICJsaXRlcmFsIiwKICAgICAgdmFsdWU6ICI/IiwKICAgICAgZGVzY3JpcHRpb246ICJcIj9cIiIKICAgIH0sCiAgICAgICAgcGVnJGMxMDQgPSBmdW5jdGlvbiBwZWckYzEwNCgpIHsKICAgICAgZXJyb3IoJ0x1Y2VuZVdpbGRjYXJkJyk7CiAgICB9LAogICAgICAgIHBlZyRjMTA1ID0gIi8iLAogICAgICAgIHBlZyRjMTA2ID0gewogICAgICB0eXBlOiAibGl0ZXJhbCIsCiAgICAgIHZhbHVlOiAiLyIsCiAgICAgIGRlc2NyaXB0aW9uOiAiXCIvXCIiCiAgICB9LAogICAgICAgIHBlZyRjMTA3ID0gL15bXlwvXS8sCiAgICAgICAgcGVnJGMxMDggPSB7CiAgICAgIHR5cGU6ICJjbGFzcyIsCiAgICAgIHZhbHVlOiAiW14vXSIsCiAgICAgIGRlc2NyaXB0aW9uOiAiW14vXSIKICAgIH0sCiAgICAgICAgcGVnJGMxMDkgPSBmdW5jdGlvbiBwZWckYzEwOSgpIHsKICAgICAgZXJyb3IoJ0x1Y2VuZVJlZ2V4Jyk7CiAgICB9LAogICAgICAgIHBlZyRjMTEwID0gIn4iLAogICAgICAgIHBlZyRjMTExID0gewogICAgICB0eXBlOiAibGl0ZXJhbCIsCiAgICAgIHZhbHVlOiAifiIsCiAgICAgIGRlc2NyaXB0aW9uOiAiXCJ+XCIiCiAgICB9LAogICAgICAgIHBlZyRjMTEyID0gL15bMC05XS8sCiAgICAgICAgcGVnJGMxMTMgPSB7CiAgICAgIHR5cGU6ICJjbGFzcyIsCiAgICAgIHZhbHVlOiAiWzAtOV0iLAogICAgICBkZXNjcmlwdGlvbjogIlswLTldIgogICAgfSwKICAgICAgICBwZWckYzExNCA9IGZ1bmN0aW9uIHBlZyRjMTE0KCkgewogICAgICBlcnJvcignTHVjZW5lRnV6enknKTsKICAgIH0sCiAgICAgICAgcGVnJGMxMTUgPSBmdW5jdGlvbiBwZWckYzExNSgpIHsKICAgICAgZXJyb3IoJ0x1Y2VuZVByb3hpbWl0eScpOwogICAgfSwKICAgICAgICBwZWckYzExNiA9ICJeIiwKICAgICAgICBwZWckYzExNyA9IHsKICAgICAgdHlwZTogImxpdGVyYWwiLAogICAgICB2YWx1ZTogIl4iLAogICAgICBkZXNjcmlwdGlvbjogIlwiXlwiIgogICAgfSwKICAgICAgICBwZWckYzExOCA9IGZ1bmN0aW9uIHBlZyRjMTE4KCkgewogICAgICBlcnJvcignTHVjZW5lQm9vc3QnKTsKICAgIH0sCiAgICAgICAgcGVnJGMxMTkgPSBmdW5jdGlvbiBwZWckYzExOSgpIHsKICAgICAgcmV0dXJuIGNoYXI7CiAgICB9LAogICAgICAgIHBlZyRjMTIwID0gIj0iLAogICAgICAgIHBlZyRjMTIxID0gewogICAgICB0eXBlOiAibGl0ZXJhbCIsCiAgICAgIHZhbHVlOiAiPSIsCiAgICAgIGRlc2NyaXB0aW9uOiAiXCI9XCIiCiAgICB9LAogICAgICAgIHBlZyRjMTIyID0gIlsiLAogICAgICAgIHBlZyRjMTIzID0gewogICAgICB0eXBlOiAibGl0ZXJhbCIsCiAgICAgIHZhbHVlOiAiWyIsCiAgICAgIGRlc2NyaXB0aW9uOiAiXCJbXCIiCiAgICB9LAogICAgICAgIHBlZyRjMTI0ID0gIl0iLAogICAgICAgIHBlZyRjMTI1ID0gewogICAgICB0eXBlOiAibGl0ZXJhbCIsCiAgICAgIHZhbHVlOiAiXSIsCiAgICAgIGRlc2NyaXB0aW9uOiAiXCJdXCIiCiAgICB9LAogICAgICAgIHBlZyRjMTI2ID0gIlRPIiwKICAgICAgICBwZWckYzEyNyA9IHsKICAgICAgdHlwZTogImxpdGVyYWwiLAogICAgICB2YWx1ZTogIlRPIiwKICAgICAgZGVzY3JpcHRpb246ICJcIlRPXCIiCiAgICB9LAogICAgICAgIHBlZyRjdXJyUG9zID0gMCwKICAgICAgICBwZWckc2F2ZWRQb3MgPSAwLAogICAgICAgIHBlZyRwb3NEZXRhaWxzQ2FjaGUgPSBbewogICAgICBsaW5lOiAxLAogICAgICBjb2x1bW46IDEsCiAgICAgIHNlZW5DUjogZmFsc2UKICAgIH1dLAogICAgICAgIHBlZyRtYXhGYWlsUG9zID0gMCwKICAgICAgICBwZWckbWF4RmFpbEV4cGVjdGVkID0gW10sCiAgICAgICAgcGVnJHNpbGVudEZhaWxzID0gMCwKICAgICAgICBwZWckcmVzdWx0OwoKICAgIGlmICgic3RhcnRSdWxlIiBpbiBvcHRpb25zKSB7CiAgICAgIGlmICghKG9wdGlvbnMuc3RhcnRSdWxlIGluIHBlZyRzdGFydFJ1bGVGdW5jdGlvbnMpKSB7CiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCJDYW4ndCBzdGFydCBwYXJzaW5nIGZyb20gcnVsZSBcIiIgKyBvcHRpb25zLnN0YXJ0UnVsZSArICJcIi4iKTsKICAgICAgfQoKICAgICAgcGVnJHN0YXJ0UnVsZUZ1bmN0aW9uID0gcGVnJHN0YXJ0UnVsZUZ1bmN0aW9uc1tvcHRpb25zLnN0YXJ0UnVsZV07CiAgICB9CgogICAgZnVuY3Rpb24gdGV4dCgpIHsKICAgICAgcmV0dXJuIGlucHV0LnN1YnN0cmluZyhwZWckc2F2ZWRQb3MsIHBlZyRjdXJyUG9zKTsKICAgIH0KCiAgICBmdW5jdGlvbiBsb2NhdGlvbigpIHsKICAgICAgcmV0dXJuIHBlZyRjb21wdXRlTG9jYXRpb24ocGVnJHNhdmVkUG9zLCBwZWckY3VyclBvcyk7CiAgICB9CgogICAgZnVuY3Rpb24gZXhwZWN0ZWQoZGVzY3JpcHRpb24pIHsKICAgICAgdGhyb3cgcGVnJGJ1aWxkRXhjZXB0aW9uKG51bGwsIFt7CiAgICAgICAgdHlwZTogIm90aGVyIiwKICAgICAgICBkZXNjcmlwdGlvbjogZGVzY3JpcHRpb24KICAgICAgfV0sIGlucHV0LnN1YnN0cmluZyhwZWckc2F2ZWRQb3MsIHBlZyRjdXJyUG9zKSwgcGVnJGNvbXB1dGVMb2NhdGlvbihwZWckc2F2ZWRQb3MsIHBlZyRjdXJyUG9zKSk7CiAgICB9CgogICAgZnVuY3Rpb24gZXJyb3IobWVzc2FnZSkgewogICAgICB0aHJvdyBwZWckYnVpbGRFeGNlcHRpb24obWVzc2FnZSwgbnVsbCwgaW5wdXQuc3Vic3RyaW5nKHBlZyRzYXZlZFBvcywgcGVnJGN1cnJQb3MpLCBwZWckY29tcHV0ZUxvY2F0aW9uKHBlZyRzYXZlZFBvcywgcGVnJGN1cnJQb3MpKTsKICAgIH0KCiAgICBmdW5jdGlvbiBwZWckY29tcHV0ZVBvc0RldGFpbHMocG9zKSB7CiAgICAgIHZhciBkZXRhaWxzID0gcGVnJHBvc0RldGFpbHNDYWNoZVtwb3NdLAogICAgICAgICAgcCwKICAgICAgICAgIGNoOwoKICAgICAgaWYgKGRldGFpbHMpIHsKICAgICAgICByZXR1cm4gZGV0YWlsczsKICAgICAgfSBlbHNlIHsKICAgICAgICBwID0gcG9zIC0gMTsKCiAgICAgICAgd2hpbGUgKCFwZWckcG9zRGV0YWlsc0NhY2hlW3BdKSB7CiAgICAgICAgICBwLS07CiAgICAgICAgfQoKICAgICAgICBkZXRhaWxzID0gcGVnJHBvc0RldGFpbHNDYWNoZVtwXTsKICAgICAgICBkZXRhaWxzID0gewogICAgICAgICAgbGluZTogZGV0YWlscy5saW5lLAogICAgICAgICAgY29sdW1uOiBkZXRhaWxzLmNvbHVtbiwKICAgICAgICAgIHNlZW5DUjogZGV0YWlscy5zZWVuQ1IKICAgICAgICB9OwoKICAgICAgICB3aGlsZSAocCA8IHBvcykgewogICAgICAgICAgY2ggPSBpbnB1dC5jaGFyQXQocCk7CgogICAgICAgICAgaWYgKGNoID09PSAiXG4iKSB7CiAgICAgICAgICAgIGlmICghZGV0YWlscy5zZWVuQ1IpIHsKICAgICAgICAgICAgICBkZXRhaWxzLmxpbmUrKzsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgZGV0YWlscy5jb2x1bW4gPSAxOwogICAgICAgICAgICBkZXRhaWxzLnNlZW5DUiA9IGZhbHNlOwogICAgICAgICAgfSBlbHNlIGlmIChjaCA9PT0gIlxyIiB8fCBjaCA9PT0gIlx1MjAyOCIgfHwgY2ggPT09ICJcdTIwMjkiKSB7CiAgICAgICAgICAgIGRldGFpbHMubGluZSsrOwogICAgICAgICAgICBkZXRhaWxzLmNvbHVtbiA9IDE7CiAgICAgICAgICAgIGRldGFpbHMuc2VlbkNSID0gdHJ1ZTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGRldGFpbHMuY29sdW1uKys7CiAgICAgICAgICAgIGRldGFpbHMuc2VlbkNSID0gZmFsc2U7CiAgICAgICAgICB9CgogICAgICAgICAgcCsrOwogICAgICAgIH0KCiAgICAgICAgcGVnJHBvc0RldGFpbHNDYWNoZVtwb3NdID0gZGV0YWlsczsKICAgICAgICByZXR1cm4gZGV0YWlsczsKICAgICAgfQogICAgfQoKICAgIGZ1bmN0aW9uIHBlZyRjb21wdXRlTG9jYXRpb24oc3RhcnRQb3MsIGVuZFBvcykgewogICAgICB2YXIgc3RhcnRQb3NEZXRhaWxzID0gcGVnJGNvbXB1dGVQb3NEZXRhaWxzKHN0YXJ0UG9zKSwKICAgICAgICAgIGVuZFBvc0RldGFpbHMgPSBwZWckY29tcHV0ZVBvc0RldGFpbHMoZW5kUG9zKTsKICAgICAgcmV0dXJuIHsKICAgICAgICBzdGFydDogewogICAgICAgICAgb2Zmc2V0OiBzdGFydFBvcywKICAgICAgICAgIGxpbmU6IHN0YXJ0UG9zRGV0YWlscy5saW5lLAogICAgICAgICAgY29sdW1uOiBzdGFydFBvc0RldGFpbHMuY29sdW1uCiAgICAgICAgfSwKICAgICAgICBlbmQ6IHsKICAgICAgICAgIG9mZnNldDogZW5kUG9zLAogICAgICAgICAgbGluZTogZW5kUG9zRGV0YWlscy5saW5lLAogICAgICAgICAgY29sdW1uOiBlbmRQb3NEZXRhaWxzLmNvbHVtbgogICAgICAgIH0KICAgICAgfTsKICAgIH0KCiAgICBmdW5jdGlvbiBwZWckZmFpbChleHBlY3RlZCkgewogICAgICBpZiAocGVnJGN1cnJQb3MgPCBwZWckbWF4RmFpbFBvcykgewogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgaWYgKHBlZyRjdXJyUG9zID4gcGVnJG1heEZhaWxQb3MpIHsKICAgICAgICBwZWckbWF4RmFpbFBvcyA9IHBlZyRjdXJyUG9zOwogICAgICAgIHBlZyRtYXhGYWlsRXhwZWN0ZWQgPSBbXTsKICAgICAgfQoKICAgICAgcGVnJG1heEZhaWxFeHBlY3RlZC5wdXNoKGV4cGVjdGVkKTsKICAgIH0KCiAgICBmdW5jdGlvbiBwZWckYnVpbGRFeGNlcHRpb24obWVzc2FnZSwgZXhwZWN0ZWQsIGZvdW5kLCBsb2NhdGlvbikgewogICAgICBmdW5jdGlvbiBjbGVhbnVwRXhwZWN0ZWQoZXhwZWN0ZWQpIHsKICAgICAgICB2YXIgaSA9IDE7CiAgICAgICAgZXhwZWN0ZWQuc29ydChmdW5jdGlvbiAoYSwgYikgewogICAgICAgICAgaWYgKGEuZGVzY3JpcHRpb24gPCBiLmRlc2NyaXB0aW9uKSB7CiAgICAgICAgICAgIHJldHVybiAtMTsKICAgICAgICAgIH0gZWxzZSBpZiAoYS5kZXNjcmlwdGlvbiA+IGIuZGVzY3JpcHRpb24pIHsKICAgICAgICAgICAgcmV0dXJuIDE7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICByZXR1cm4gMDsKICAgICAgICAgIH0KICAgICAgICB9KTsKCiAgICAgICAgd2hpbGUgKGkgPCBleHBlY3RlZC5sZW5ndGgpIHsKICAgICAgICAgIGlmIChleHBlY3RlZFtpIC0gMV0gPT09IGV4cGVjdGVkW2ldKSB7CiAgICAgICAgICAgIGV4cGVjdGVkLnNwbGljZShpLCAxKTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGkrKzsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KCiAgICAgIGZ1bmN0aW9uIGJ1aWxkTWVzc2FnZShleHBlY3RlZCwgZm91bmQpIHsKICAgICAgICBmdW5jdGlvbiBzdHJpbmdFc2NhcGUocykgewogICAgICAgICAgZnVuY3Rpb24gaGV4KGNoKSB7CiAgICAgICAgICAgIHJldHVybiBjaC5jaGFyQ29kZUF0KDApLnRvU3RyaW5nKDE2KS50b1VwcGVyQ2FzZSgpOwogICAgICAgICAgfQoKICAgICAgICAgIHJldHVybiBzLnJlcGxhY2UoL1xcL2csICdcXFxcJykucmVwbGFjZSgvIi9nLCAnXFwiJykucmVwbGFjZSgvXHgwOC9nLCAnXFxiJykucmVwbGFjZSgvXHQvZywgJ1xcdCcpLnJlcGxhY2UoL1xuL2csICdcXG4nKS5yZXBsYWNlKC9cZi9nLCAnXFxmJykucmVwbGFjZSgvXHIvZywgJ1xccicpLnJlcGxhY2UoL1tceDAwLVx4MDdceDBCXHgwRVx4MEZdL2csIGZ1bmN0aW9uIChjaCkgewogICAgICAgICAgICByZXR1cm4gJ1xceDAnICsgaGV4KGNoKTsKICAgICAgICAgIH0pLnJlcGxhY2UoL1tceDEwLVx4MUZceDgwLVx4RkZdL2csIGZ1bmN0aW9uIChjaCkgewogICAgICAgICAgICByZXR1cm4gJ1xceCcgKyBoZXgoY2gpOwogICAgICAgICAgfSkucmVwbGFjZSgvW1x1MDEwMC1cdTBGRkZdL2csIGZ1bmN0aW9uIChjaCkgewogICAgICAgICAgICByZXR1cm4gIlxcdTAiICsgaGV4KGNoKTsKICAgICAgICAgIH0pLnJlcGxhY2UoL1tcdTEwMDAtXHVGRkZGXS9nLCBmdW5jdGlvbiAoY2gpIHsKICAgICAgICAgICAgcmV0dXJuICJcXHUiICsgaGV4KGNoKTsKICAgICAgICAgIH0pOwogICAgICAgIH0KCiAgICAgICAgdmFyIGV4cGVjdGVkRGVzY3MgPSBuZXcgQXJyYXkoZXhwZWN0ZWQubGVuZ3RoKSwKICAgICAgICAgICAgZXhwZWN0ZWREZXNjLAogICAgICAgICAgICBmb3VuZERlc2MsCiAgICAgICAgICAgIGk7CgogICAgICAgIGZvciAoaSA9IDA7IGkgPCBleHBlY3RlZC5sZW5ndGg7IGkrKykgewogICAgICAgICAgZXhwZWN0ZWREZXNjc1tpXSA9IGV4cGVjdGVkW2ldLmRlc2NyaXB0aW9uOwogICAgICAgIH0KCiAgICAgICAgZXhwZWN0ZWREZXNjID0gZXhwZWN0ZWQubGVuZ3RoID4gMSA/IGV4cGVjdGVkRGVzY3Muc2xpY2UoMCwgLTEpLmpvaW4oIiwgIikgKyAiIG9yICIgKyBleHBlY3RlZERlc2NzW2V4cGVjdGVkLmxlbmd0aCAtIDFdIDogZXhwZWN0ZWREZXNjc1swXTsKICAgICAgICBmb3VuZERlc2MgPSBmb3VuZCA/ICJcIiIgKyBzdHJpbmdFc2NhcGUoZm91bmQpICsgIlwiIiA6ICJlbmQgb2YgaW5wdXQiOwogICAgICAgIHJldHVybiAiRXhwZWN0ZWQgIiArIGV4cGVjdGVkRGVzYyArICIgYnV0ICIgKyBmb3VuZERlc2MgKyAiIGZvdW5kLiI7CiAgICAgIH0KCiAgICAgIGlmIChleHBlY3RlZCAhPT0gbnVsbCkgewogICAgICAgIGNsZWFudXBFeHBlY3RlZChleHBlY3RlZCk7CiAgICAgIH0KCiAgICAgIHJldHVybiBuZXcgcGVnJFN5bnRheEVycm9yKG1lc3NhZ2UgIT09IG51bGwgPyBtZXNzYWdlIDogYnVpbGRNZXNzYWdlKGV4cGVjdGVkLCBmb3VuZCksIGV4cGVjdGVkLCBmb3VuZCwgbG9jYXRpb24pOwogICAgfQoKICAgIGZ1bmN0aW9uIHBlZyRwYXJzZXN0YXJ0KCkgewogICAgICB2YXIgczAsIHMxLCBzMiwgczM7CiAgICAgIHMwID0gcGVnJGN1cnJQb3M7CiAgICAgIHMxID0gW107CiAgICAgIHMyID0gcGVnJHBhcnNlU3BhY2UoKTsKCiAgICAgIHdoaWxlIChzMiAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgIHMxLnB1c2goczIpOwogICAgICAgIHMyID0gcGVnJHBhcnNlU3BhY2UoKTsKICAgICAgfQoKICAgICAgaWYgKHMxICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgczIgPSBwZWckcGFyc2VPclF1ZXJ5KCk7CgogICAgICAgIGlmIChzMiA9PT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgczIgPSBudWxsOwogICAgICAgIH0KCiAgICAgICAgaWYgKHMyICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICBzMyA9IHBlZyRwYXJzZU9wdGlvbmFsU3BhY2UoKTsKCiAgICAgICAgICBpZiAoczMgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgcGVnJHNhdmVkUG9zID0gczA7CiAgICAgICAgICAgIHMxID0gcGVnJGMwKHMyLCBzMyk7CiAgICAgICAgICAgIHMwID0gczE7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CiAgICAgICAgICB9CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHBlZyRjdXJyUG9zID0gczA7CiAgICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CiAgICAgICAgfQogICAgICB9IGVsc2UgewogICAgICAgIHBlZyRjdXJyUG9zID0gczA7CiAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICB9CgogICAgICByZXR1cm4gczA7CiAgICB9CgogICAgZnVuY3Rpb24gcGVnJHBhcnNlT3JRdWVyeSgpIHsKICAgICAgdmFyIHMwLCBzMSwgczIsIHMzOwogICAgICBzMCA9IHBlZyRjdXJyUG9zOwogICAgICBwZWckc2F2ZWRQb3MgPSBwZWckY3VyclBvczsKICAgICAgczEgPSBwZWckYzEoKTsKCiAgICAgIGlmIChzMSkgewogICAgICAgIHMxID0gdm9pZCAwOwogICAgICB9IGVsc2UgewogICAgICAgIHMxID0gcGVnJEZBSUxFRDsKICAgICAgfQoKICAgICAgaWYgKHMxICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgczIgPSBwZWckcGFyc2VMdWNlbmVRdWVyeSgpOwoKICAgICAgICBpZiAoczIgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgIHMxID0gW3MxLCBzMl07CiAgICAgICAgICBzMCA9IHMxOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICAgIH0KICAgICAgfSBlbHNlIHsKICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgfQoKICAgICAgaWYgKHMwID09PSBwZWckRkFJTEVEKSB7CiAgICAgICAgczAgPSBwZWckY3VyclBvczsKICAgICAgICBzMSA9IHBlZyRwYXJzZUFuZFF1ZXJ5KCk7CgogICAgICAgIGlmIChzMSAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgczIgPSBwZWckcGFyc2VPcigpOwoKICAgICAgICAgIGlmIChzMiAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgICBzMyA9IHBlZyRwYXJzZU9yUXVlcnkoKTsKCiAgICAgICAgICAgIGlmIChzMyAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgICAgIHBlZyRzYXZlZFBvcyA9IHMwOwogICAgICAgICAgICAgIHMxID0gcGVnJGMyKHMxLCBzMyk7CiAgICAgICAgICAgICAgczAgPSBzMTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgICAgICAgfQogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDsKICAgICAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICAgICAgfQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICAgIH0KCiAgICAgICAgaWYgKHMwID09PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICBzMCA9IHBlZyRwYXJzZUFuZFF1ZXJ5KCk7CiAgICAgICAgfQogICAgICB9CgogICAgICByZXR1cm4gczA7CiAgICB9CgogICAgZnVuY3Rpb24gcGVnJHBhcnNlQW5kUXVlcnkoKSB7CiAgICAgIHZhciBzMCwgczEsIHMyLCBzMzsKICAgICAgczAgPSBwZWckY3VyclBvczsKICAgICAgczEgPSBwZWckcGFyc2VOb3RRdWVyeSgpOwoKICAgICAgaWYgKHMxICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgczIgPSBwZWckcGFyc2VBbmQoKTsKCiAgICAgICAgaWYgKHMyICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICBzMyA9IHBlZyRwYXJzZUFuZFF1ZXJ5KCk7CgogICAgICAgICAgaWYgKHMzICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgIHBlZyRzYXZlZFBvcyA9IHMwOwogICAgICAgICAgICBzMSA9IHBlZyRjMyhzMSwgczMpOwogICAgICAgICAgICBzMCA9IHMxOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDsKICAgICAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICAgICAgfQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICAgIH0KICAgICAgfSBlbHNlIHsKICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgfQoKICAgICAgaWYgKHMwID09PSBwZWckRkFJTEVEKSB7CiAgICAgICAgczAgPSBwZWckcGFyc2VOb3RRdWVyeSgpOwogICAgICB9CgogICAgICByZXR1cm4gczA7CiAgICB9CgogICAgZnVuY3Rpb24gcGVnJHBhcnNlTm90UXVlcnkoKSB7CiAgICAgIHZhciBzMCwgczEsIHMyOwogICAgICBzMCA9IHBlZyRjdXJyUG9zOwogICAgICBzMSA9IHBlZyRwYXJzZU5vdCgpOwoKICAgICAgaWYgKHMxICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgczIgPSBwZWckcGFyc2VTdWJRdWVyeSgpOwoKICAgICAgICBpZiAoczIgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgIHBlZyRzYXZlZFBvcyA9IHMwOwogICAgICAgICAgczEgPSBwZWckYzQoczIpOwogICAgICAgICAgczAgPSBzMTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDsKICAgICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgICB9CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDsKICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CiAgICAgIH0KCiAgICAgIGlmIChzMCA9PT0gcGVnJEZBSUxFRCkgewogICAgICAgIHMwID0gcGVnJHBhcnNlU3ViUXVlcnkoKTsKICAgICAgfQoKICAgICAgcmV0dXJuIHMwOwogICAgfQoKICAgIGZ1bmN0aW9uIHBlZyRwYXJzZVN1YlF1ZXJ5KCkgewogICAgICB2YXIgczAsIHMxLCBzMiwgczMsIHM0LCBzNTsKICAgICAgczAgPSBwZWckY3VyclBvczsKCiAgICAgIGlmIChpbnB1dC5jaGFyQ29kZUF0KHBlZyRjdXJyUG9zKSA9PT0gNDApIHsKICAgICAgICBzMSA9IHBlZyRjNTsKICAgICAgICBwZWckY3VyclBvcysrOwogICAgICB9IGVsc2UgewogICAgICAgIHMxID0gcGVnJEZBSUxFRDsKCiAgICAgICAgaWYgKHBlZyRzaWxlbnRGYWlscyA9PT0gMCkgewogICAgICAgICAgcGVnJGZhaWwocGVnJGM2KTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIGlmIChzMSAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgIHMyID0gW107CiAgICAgICAgczMgPSBwZWckcGFyc2VTcGFjZSgpOwoKICAgICAgICB3aGlsZSAoczMgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgIHMyLnB1c2goczMpOwogICAgICAgICAgczMgPSBwZWckcGFyc2VTcGFjZSgpOwogICAgICAgIH0KCiAgICAgICAgaWYgKHMyICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICBzMyA9IHBlZyRwYXJzZU9yUXVlcnkoKTsKCiAgICAgICAgICBpZiAoczMgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgczQgPSBwZWckcGFyc2VPcHRpb25hbFNwYWNlKCk7CgogICAgICAgICAgICBpZiAoczQgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgICBpZiAoaW5wdXQuY2hhckNvZGVBdChwZWckY3VyclBvcykgPT09IDQxKSB7CiAgICAgICAgICAgICAgICBzNSA9IHBlZyRjNzsKICAgICAgICAgICAgICAgIHBlZyRjdXJyUG9zKys7CiAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHM1ID0gcGVnJEZBSUxFRDsKCiAgICAgICAgICAgICAgICBpZiAocGVnJHNpbGVudEZhaWxzID09PSAwKSB7CiAgICAgICAgICAgICAgICAgIHBlZyRmYWlsKHBlZyRjOCk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBpZiAoczUgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgICAgIHBlZyRzYXZlZFBvcyA9IHMwOwogICAgICAgICAgICAgICAgczEgPSBwZWckYzkoczMsIHM0KTsKICAgICAgICAgICAgICAgIHMwID0gczE7CiAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHBlZyRjdXJyUG9zID0gczA7CiAgICAgICAgICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIHBlZyRjdXJyUG9zID0gczA7CiAgICAgICAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICAgICAgICB9CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CiAgICAgICAgICB9CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHBlZyRjdXJyUG9zID0gczA7CiAgICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CiAgICAgICAgfQogICAgICB9IGVsc2UgewogICAgICAgIHBlZyRjdXJyUG9zID0gczA7CiAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICB9CgogICAgICBpZiAoczAgPT09IHBlZyRGQUlMRUQpIHsKICAgICAgICBzMCA9IHBlZyRwYXJzZU5lc3RlZFF1ZXJ5KCk7CiAgICAgIH0KCiAgICAgIHJldHVybiBzMDsKICAgIH0KCiAgICBmdW5jdGlvbiBwZWckcGFyc2VOZXN0ZWRRdWVyeSgpIHsKICAgICAgdmFyIHMwLCBzMSwgczIsIHMzLCBzNCwgczUsIHM2LCBzNywgczgsIHM5OwogICAgICBzMCA9IHBlZyRjdXJyUG9zOwogICAgICBzMSA9IHBlZyRwYXJzZUZpZWxkKCk7CgogICAgICBpZiAoczEgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICBzMiA9IFtdOwogICAgICAgIHMzID0gcGVnJHBhcnNlU3BhY2UoKTsKCiAgICAgICAgd2hpbGUgKHMzICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICBzMi5wdXNoKHMzKTsKICAgICAgICAgIHMzID0gcGVnJHBhcnNlU3BhY2UoKTsKICAgICAgICB9CgogICAgICAgIGlmIChzMiAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgaWYgKGlucHV0LmNoYXJDb2RlQXQocGVnJGN1cnJQb3MpID09PSA1OCkgewogICAgICAgICAgICBzMyA9IHBlZyRjMTA7CiAgICAgICAgICAgIHBlZyRjdXJyUG9zKys7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBzMyA9IHBlZyRGQUlMRUQ7CgogICAgICAgICAgICBpZiAocGVnJHNpbGVudEZhaWxzID09PSAwKSB7CiAgICAgICAgICAgICAgcGVnJGZhaWwocGVnJGMxMSk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KCiAgICAgICAgICBpZiAoczMgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgczQgPSBbXTsKICAgICAgICAgICAgczUgPSBwZWckcGFyc2VTcGFjZSgpOwoKICAgICAgICAgICAgd2hpbGUgKHM1ICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgICAgczQucHVzaChzNSk7CiAgICAgICAgICAgICAgczUgPSBwZWckcGFyc2VTcGFjZSgpOwogICAgICAgICAgICB9CgogICAgICAgICAgICBpZiAoczQgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgICBpZiAoaW5wdXQuY2hhckNvZGVBdChwZWckY3VyclBvcykgPT09IDEyMykgewogICAgICAgICAgICAgICAgczUgPSBwZWckYzEyOwogICAgICAgICAgICAgICAgcGVnJGN1cnJQb3MrKzsKICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgczUgPSBwZWckRkFJTEVEOwoKICAgICAgICAgICAgICAgIGlmIChwZWckc2lsZW50RmFpbHMgPT09IDApIHsKICAgICAgICAgICAgICAgICAgcGVnJGZhaWwocGVnJGMxMyk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBpZiAoczUgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgICAgIHM2ID0gW107CiAgICAgICAgICAgICAgICBzNyA9IHBlZyRwYXJzZVNwYWNlKCk7CgogICAgICAgICAgICAgICAgd2hpbGUgKHM3ICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgICAgICAgIHM2LnB1c2goczcpOwogICAgICAgICAgICAgICAgICBzNyA9IHBlZyRwYXJzZVNwYWNlKCk7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgaWYgKHM2ICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgICAgICAgIHM3ID0gcGVnJHBhcnNlT3JRdWVyeSgpOwoKICAgICAgICAgICAgICAgICAgaWYgKHM3ICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgICAgICAgICAgczggPSBwZWckcGFyc2VPcHRpb25hbFNwYWNlKCk7CgogICAgICAgICAgICAgICAgICAgIGlmIChzOCAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgICAgICAgICAgICAgaWYgKGlucHV0LmNoYXJDb2RlQXQocGVnJGN1cnJQb3MpID09PSAxMjUpIHsKICAgICAgICAgICAgICAgICAgICAgICAgczkgPSBwZWckYzE0OwogICAgICAgICAgICAgICAgICAgICAgICBwZWckY3VyclBvcysrOwogICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgczkgPSBwZWckRkFJTEVEOwoKICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHBlZyRzaWxlbnRGYWlscyA9PT0gMCkgewogICAgICAgICAgICAgICAgICAgICAgICAgIHBlZyRmYWlsKHBlZyRjMTUpOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgaWYgKHM5ICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHBlZyRzYXZlZFBvcyA9IHMwOwogICAgICAgICAgICAgICAgICAgICAgICBzMSA9IHBlZyRjMTYoczEsIHM3LCBzOCk7CiAgICAgICAgICAgICAgICAgICAgICAgIHMwID0gczE7CiAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgICAgICAgICAgICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgIHBlZyRjdXJyUG9zID0gczA7CiAgICAgICAgICAgICAgICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgIHBlZyRjdXJyUG9zID0gczA7CiAgICAgICAgICAgICAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgICAgICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHBlZyRjdXJyUG9zID0gczA7CiAgICAgICAgICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIHBlZyRjdXJyUG9zID0gczA7CiAgICAgICAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICAgICAgICB9CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CiAgICAgICAgICB9CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHBlZyRjdXJyUG9zID0gczA7CiAgICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CiAgICAgICAgfQogICAgICB9IGVsc2UgewogICAgICAgIHBlZyRjdXJyUG9zID0gczA7CiAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICB9CgogICAgICBpZiAoczAgPT09IHBlZyRGQUlMRUQpIHsKICAgICAgICBzMCA9IHBlZyRwYXJzZUV4cHJlc3Npb24oKTsKICAgICAgfQoKICAgICAgcmV0dXJuIHMwOwogICAgfQoKICAgIGZ1bmN0aW9uIHBlZyRwYXJzZUV4cHJlc3Npb24oKSB7CiAgICAgIHZhciBzMDsKICAgICAgczAgPSBwZWckcGFyc2VGaWVsZFJhbmdlRXhwcmVzc2lvbigpOwoKICAgICAgaWYgKHMwID09PSBwZWckRkFJTEVEKSB7CiAgICAgICAgczAgPSBwZWckcGFyc2VGaWVsZFZhbHVlRXhwcmVzc2lvbigpOwoKICAgICAgICBpZiAoczAgPT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgIHMwID0gcGVnJHBhcnNlVmFsdWVFeHByZXNzaW9uKCk7CiAgICAgICAgfQogICAgICB9CgogICAgICByZXR1cm4gczA7CiAgICB9CgogICAgZnVuY3Rpb24gcGVnJHBhcnNlRmllbGQoKSB7CiAgICAgIHZhciBzMCwgczE7CiAgICAgIHBlZyRzaWxlbnRGYWlscysrOwogICAgICBzMCA9IHBlZyRwYXJzZUxpdGVyYWwoKTsKICAgICAgcGVnJHNpbGVudEZhaWxzLS07CgogICAgICBpZiAoczAgPT09IHBlZyRGQUlMRUQpIHsKICAgICAgICBzMSA9IHBlZyRGQUlMRUQ7CgogICAgICAgIGlmIChwZWckc2lsZW50RmFpbHMgPT09IDApIHsKICAgICAgICAgIHBlZyRmYWlsKHBlZyRjMTcpOwogICAgICAgIH0KICAgICAgfQoKICAgICAgcmV0dXJuIHMwOwogICAgfQoKICAgIGZ1bmN0aW9uIHBlZyRwYXJzZUZpZWxkUmFuZ2VFeHByZXNzaW9uKCkgewogICAgICB2YXIgczAsIHMxLCBzMiwgczMsIHM0LCBzNTsKICAgICAgczAgPSBwZWckY3VyclBvczsKICAgICAgczEgPSBwZWckcGFyc2VGaWVsZCgpOwoKICAgICAgaWYgKHMxICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgczIgPSBbXTsKICAgICAgICBzMyA9IHBlZyRwYXJzZVNwYWNlKCk7CgogICAgICAgIHdoaWxlIChzMyAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgczIucHVzaChzMyk7CiAgICAgICAgICBzMyA9IHBlZyRwYXJzZVNwYWNlKCk7CiAgICAgICAgfQoKICAgICAgICBpZiAoczIgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgIHMzID0gcGVnJHBhcnNlUmFuZ2VPcGVyYXRvcigpOwoKICAgICAgICAgIGlmIChzMyAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgICBzNCA9IFtdOwogICAgICAgICAgICBzNSA9IHBlZyRwYXJzZVNwYWNlKCk7CgogICAgICAgICAgICB3aGlsZSAoczUgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgICBzNC5wdXNoKHM1KTsKICAgICAgICAgICAgICBzNSA9IHBlZyRwYXJzZVNwYWNlKCk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmIChzNCAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgICAgIHM1ID0gcGVnJHBhcnNlTGl0ZXJhbCgpOwoKICAgICAgICAgICAgICBpZiAoczUgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgICAgIHBlZyRzYXZlZFBvcyA9IHMwOwogICAgICAgICAgICAgICAgczEgPSBwZWckYzE4KHMxLCBzMywgczUpOwogICAgICAgICAgICAgICAgczAgPSBzMTsKICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDsKICAgICAgICAgICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDsKICAgICAgICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHBlZyRjdXJyUG9zID0gczA7CiAgICAgICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgICAgIH0KICAgICAgICB9IGVsc2UgewogICAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDsKICAgICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgICB9CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDsKICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CiAgICAgIH0KCiAgICAgIHJldHVybiBzMDsKICAgIH0KCiAgICBmdW5jdGlvbiBwZWckcGFyc2VGaWVsZFZhbHVlRXhwcmVzc2lvbigpIHsKICAgICAgdmFyIHMwLCBzMSwgczIsIHMzLCBzNCwgczU7CiAgICAgIHMwID0gcGVnJGN1cnJQb3M7CiAgICAgIHMxID0gcGVnJHBhcnNlRmllbGQoKTsKCiAgICAgIGlmIChzMSAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgIHMyID0gW107CiAgICAgICAgczMgPSBwZWckcGFyc2VTcGFjZSgpOwoKICAgICAgICB3aGlsZSAoczMgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgIHMyLnB1c2goczMpOwogICAgICAgICAgczMgPSBwZWckcGFyc2VTcGFjZSgpOwogICAgICAgIH0KCiAgICAgICAgaWYgKHMyICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICBpZiAoaW5wdXQuY2hhckNvZGVBdChwZWckY3VyclBvcykgPT09IDU4KSB7CiAgICAgICAgICAgIHMzID0gcGVnJGMxMDsKICAgICAgICAgICAgcGVnJGN1cnJQb3MrKzsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHMzID0gcGVnJEZBSUxFRDsKCiAgICAgICAgICAgIGlmIChwZWckc2lsZW50RmFpbHMgPT09IDApIHsKICAgICAgICAgICAgICBwZWckZmFpbChwZWckYzExKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQoKICAgICAgICAgIGlmIChzMyAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgICBzNCA9IFtdOwogICAgICAgICAgICBzNSA9IHBlZyRwYXJzZVNwYWNlKCk7CgogICAgICAgICAgICB3aGlsZSAoczUgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgICBzNC5wdXNoKHM1KTsKICAgICAgICAgICAgICBzNSA9IHBlZyRwYXJzZVNwYWNlKCk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmIChzNCAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgICAgIHM1ID0gcGVnJHBhcnNlTGlzdE9mVmFsdWVzKCk7CgogICAgICAgICAgICAgIGlmIChzNSAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgICAgICAgcGVnJHNhdmVkUG9zID0gczA7CiAgICAgICAgICAgICAgICBzMSA9IHBlZyRjMTkoczEsIHM1KTsKICAgICAgICAgICAgICAgIHMwID0gczE7CiAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHBlZyRjdXJyUG9zID0gczA7CiAgICAgICAgICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIHBlZyRjdXJyUG9zID0gczA7CiAgICAgICAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICAgICAgICB9CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CiAgICAgICAgICB9CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHBlZyRjdXJyUG9zID0gczA7CiAgICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CiAgICAgICAgfQogICAgICB9IGVsc2UgewogICAgICAgIHBlZyRjdXJyUG9zID0gczA7CiAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICB9CgogICAgICByZXR1cm4gczA7CiAgICB9CgogICAgZnVuY3Rpb24gcGVnJHBhcnNlVmFsdWVFeHByZXNzaW9uKCkgewogICAgICB2YXIgczAsIHMxOwogICAgICBzMCA9IHBlZyRjdXJyUG9zOwogICAgICBzMSA9IHBlZyRwYXJzZVZhbHVlKCk7CgogICAgICBpZiAoczEgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICBwZWckc2F2ZWRQb3MgPSBzMDsKICAgICAgICBzMSA9IHBlZyRjMjAoczEpOwogICAgICB9CgogICAgICBzMCA9IHMxOwogICAgICByZXR1cm4gczA7CiAgICB9CgogICAgZnVuY3Rpb24gcGVnJHBhcnNlTGlzdE9mVmFsdWVzKCkgewogICAgICB2YXIgczAsIHMxLCBzMiwgczMsIHM0LCBzNTsKICAgICAgczAgPSBwZWckY3VyclBvczsKCiAgICAgIGlmIChpbnB1dC5jaGFyQ29kZUF0KHBlZyRjdXJyUG9zKSA9PT0gNDApIHsKICAgICAgICBzMSA9IHBlZyRjNTsKICAgICAgICBwZWckY3VyclBvcysrOwogICAgICB9IGVsc2UgewogICAgICAgIHMxID0gcGVnJEZBSUxFRDsKCiAgICAgICAgaWYgKHBlZyRzaWxlbnRGYWlscyA9PT0gMCkgewogICAgICAgICAgcGVnJGZhaWwocGVnJGM2KTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIGlmIChzMSAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgIHMyID0gW107CiAgICAgICAgczMgPSBwZWckcGFyc2VTcGFjZSgpOwoKICAgICAgICB3aGlsZSAoczMgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgIHMyLnB1c2goczMpOwogICAgICAgICAgczMgPSBwZWckcGFyc2VTcGFjZSgpOwogICAgICAgIH0KCiAgICAgICAgaWYgKHMyICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICBzMyA9IHBlZyRwYXJzZU9yTGlzdE9mVmFsdWVzKCk7CgogICAgICAgICAgaWYgKHMzICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgIHM0ID0gcGVnJHBhcnNlT3B0aW9uYWxTcGFjZSgpOwoKICAgICAgICAgICAgaWYgKHM0ICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgICAgaWYgKGlucHV0LmNoYXJDb2RlQXQocGVnJGN1cnJQb3MpID09PSA0MSkgewogICAgICAgICAgICAgICAgczUgPSBwZWckYzc7CiAgICAgICAgICAgICAgICBwZWckY3VyclBvcysrOwogICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBzNSA9IHBlZyRGQUlMRUQ7CgogICAgICAgICAgICAgICAgaWYgKHBlZyRzaWxlbnRGYWlscyA9PT0gMCkgewogICAgICAgICAgICAgICAgICBwZWckZmFpbChwZWckYzgpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgaWYgKHM1ICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgICAgICBwZWckc2F2ZWRQb3MgPSBzMDsKICAgICAgICAgICAgICAgIHMxID0gcGVnJGMyMShzMywgczQpOwogICAgICAgICAgICAgICAgczAgPSBzMTsKICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDsKICAgICAgICAgICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDsKICAgICAgICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHBlZyRjdXJyUG9zID0gczA7CiAgICAgICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgICAgIH0KICAgICAgICB9IGVsc2UgewogICAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDsKICAgICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgICB9CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDsKICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CiAgICAgIH0KCiAgICAgIGlmIChzMCA9PT0gcGVnJEZBSUxFRCkgewogICAgICAgIHMwID0gcGVnJHBhcnNlVmFsdWUoKTsKICAgICAgfQoKICAgICAgcmV0dXJuIHMwOwogICAgfQoKICAgIGZ1bmN0aW9uIHBlZyRwYXJzZU9yTGlzdE9mVmFsdWVzKCkgewogICAgICB2YXIgczAsIHMxLCBzMiwgczM7CiAgICAgIHMwID0gcGVnJGN1cnJQb3M7CiAgICAgIHMxID0gcGVnJHBhcnNlQW5kTGlzdE9mVmFsdWVzKCk7CgogICAgICBpZiAoczEgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICBzMiA9IHBlZyRwYXJzZU9yKCk7CgogICAgICAgIGlmIChzMiAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgczMgPSBwZWckcGFyc2VPckxpc3RPZlZhbHVlcygpOwoKICAgICAgICAgIGlmIChzMyAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgICBwZWckc2F2ZWRQb3MgPSBzMDsKICAgICAgICAgICAgczEgPSBwZWckYzIyKHMxLCBzMyk7CiAgICAgICAgICAgIHMwID0gczE7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CiAgICAgICAgICB9CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHBlZyRjdXJyUG9zID0gczA7CiAgICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CiAgICAgICAgfQogICAgICB9IGVsc2UgewogICAgICAgIHBlZyRjdXJyUG9zID0gczA7CiAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICB9CgogICAgICBpZiAoczAgPT09IHBlZyRGQUlMRUQpIHsKICAgICAgICBzMCA9IHBlZyRwYXJzZUFuZExpc3RPZlZhbHVlcygpOwogICAgICB9CgogICAgICByZXR1cm4gczA7CiAgICB9CgogICAgZnVuY3Rpb24gcGVnJHBhcnNlQW5kTGlzdE9mVmFsdWVzKCkgewogICAgICB2YXIgczAsIHMxLCBzMiwgczM7CiAgICAgIHMwID0gcGVnJGN1cnJQb3M7CiAgICAgIHMxID0gcGVnJHBhcnNlTm90TGlzdE9mVmFsdWVzKCk7CgogICAgICBpZiAoczEgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICBzMiA9IHBlZyRwYXJzZUFuZCgpOwoKICAgICAgICBpZiAoczIgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgIHMzID0gcGVnJHBhcnNlQW5kTGlzdE9mVmFsdWVzKCk7CgogICAgICAgICAgaWYgKHMzICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgIHBlZyRzYXZlZFBvcyA9IHMwOwogICAgICAgICAgICBzMSA9IHBlZyRjMjMoczEsIHMzKTsKICAgICAgICAgICAgczAgPSBzMTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHBlZyRjdXJyUG9zID0gczA7CiAgICAgICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgICAgIH0KICAgICAgICB9IGVsc2UgewogICAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDsKICAgICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgICB9CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDsKICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CiAgICAgIH0KCiAgICAgIGlmIChzMCA9PT0gcGVnJEZBSUxFRCkgewogICAgICAgIHMwID0gcGVnJHBhcnNlTm90TGlzdE9mVmFsdWVzKCk7CiAgICAgIH0KCiAgICAgIHJldHVybiBzMDsKICAgIH0KCiAgICBmdW5jdGlvbiBwZWckcGFyc2VOb3RMaXN0T2ZWYWx1ZXMoKSB7CiAgICAgIHZhciBzMCwgczEsIHMyOwogICAgICBzMCA9IHBlZyRjdXJyUG9zOwogICAgICBzMSA9IHBlZyRwYXJzZU5vdCgpOwoKICAgICAgaWYgKHMxICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgczIgPSBwZWckcGFyc2VMaXN0T2ZWYWx1ZXMoKTsKCiAgICAgICAgaWYgKHMyICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICBwZWckc2F2ZWRQb3MgPSBzMDsKICAgICAgICAgIHMxID0gcGVnJGMyNChzMik7CiAgICAgICAgICBzMCA9IHMxOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICAgIH0KICAgICAgfSBlbHNlIHsKICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgfQoKICAgICAgaWYgKHMwID09PSBwZWckRkFJTEVEKSB7CiAgICAgICAgczAgPSBwZWckcGFyc2VMaXN0T2ZWYWx1ZXMoKTsKICAgICAgfQoKICAgICAgcmV0dXJuIHMwOwogICAgfQoKICAgIGZ1bmN0aW9uIHBlZyRwYXJzZVZhbHVlKCkgewogICAgICB2YXIgczAsIHMxOwogICAgICBwZWckc2lsZW50RmFpbHMrKzsKICAgICAgczAgPSBwZWckY3VyclBvczsKICAgICAgczEgPSBwZWckcGFyc2VRdW90ZWRTdHJpbmcoKTsKCiAgICAgIGlmIChzMSAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgIHBlZyRzYXZlZFBvcyA9IHMwOwogICAgICAgIHMxID0gcGVnJGMyNihzMSk7CiAgICAgIH0KCiAgICAgIHMwID0gczE7CgogICAgICBpZiAoczAgPT09IHBlZyRGQUlMRUQpIHsKICAgICAgICBzMCA9IHBlZyRjdXJyUG9zOwogICAgICAgIHMxID0gcGVnJHBhcnNlVW5xdW90ZWRMaXRlcmFsKCk7CgogICAgICAgIGlmIChzMSAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgcGVnJHNhdmVkUG9zID0gczA7CiAgICAgICAgICBzMSA9IHBlZyRjMjcoczEpOwogICAgICAgIH0KCiAgICAgICAgczAgPSBzMTsKICAgICAgfQoKICAgICAgcGVnJHNpbGVudEZhaWxzLS07CgogICAgICBpZiAoczAgPT09IHBlZyRGQUlMRUQpIHsKICAgICAgICBzMSA9IHBlZyRGQUlMRUQ7CgogICAgICAgIGlmIChwZWckc2lsZW50RmFpbHMgPT09IDApIHsKICAgICAgICAgIHBlZyRmYWlsKHBlZyRjMjUpOwogICAgICAgIH0KICAgICAgfQoKICAgICAgcmV0dXJuIHMwOwogICAgfQoKICAgIGZ1bmN0aW9uIHBlZyRwYXJzZU9yKCkgewogICAgICB2YXIgczAsIHMxLCBzMiwgczMsIHM0OwogICAgICBwZWckc2lsZW50RmFpbHMrKzsKICAgICAgczAgPSBwZWckY3VyclBvczsKICAgICAgczEgPSBbXTsKICAgICAgczIgPSBwZWckcGFyc2VTcGFjZSgpOwoKICAgICAgaWYgKHMyICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgd2hpbGUgKHMyICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICBzMS5wdXNoKHMyKTsKICAgICAgICAgIHMyID0gcGVnJHBhcnNlU3BhY2UoKTsKICAgICAgICB9CiAgICAgIH0gZWxzZSB7CiAgICAgICAgczEgPSBwZWckRkFJTEVEOwogICAgICB9CgogICAgICBpZiAoczEgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICBpZiAoaW5wdXQuc3Vic3RyKHBlZyRjdXJyUG9zLCAyKS50b0xvd2VyQ2FzZSgpID09PSBwZWckYzI5KSB7CiAgICAgICAgICBzMiA9IGlucHV0LnN1YnN0cihwZWckY3VyclBvcywgMik7CiAgICAgICAgICBwZWckY3VyclBvcyArPSAyOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBzMiA9IHBlZyRGQUlMRUQ7CgogICAgICAgICAgaWYgKHBlZyRzaWxlbnRGYWlscyA9PT0gMCkgewogICAgICAgICAgICBwZWckZmFpbChwZWckYzMwKTsKICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIGlmIChzMiAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgczMgPSBbXTsKICAgICAgICAgIHM0ID0gcGVnJHBhcnNlU3BhY2UoKTsKCiAgICAgICAgICBpZiAoczQgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgd2hpbGUgKHM0ICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgICAgczMucHVzaChzNCk7CiAgICAgICAgICAgICAgczQgPSBwZWckcGFyc2VTcGFjZSgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBzMyA9IHBlZyRGQUlMRUQ7CiAgICAgICAgICB9CgogICAgICAgICAgaWYgKHMzICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgIHMxID0gW3MxLCBzMiwgczNdOwogICAgICAgICAgICBzMCA9IHMxOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDsKICAgICAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICAgICAgfQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICAgIH0KICAgICAgfSBlbHNlIHsKICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgfQoKICAgICAgaWYgKHMwID09PSBwZWckRkFJTEVEKSB7CiAgICAgICAgczAgPSBwZWckY3VyclBvczsKICAgICAgICBwZWckc2F2ZWRQb3MgPSBwZWckY3VyclBvczsKICAgICAgICBzMSA9IHBlZyRjMSgpOwoKICAgICAgICBpZiAoczEpIHsKICAgICAgICAgIHMxID0gdm9pZCAwOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBzMSA9IHBlZyRGQUlMRUQ7CiAgICAgICAgfQoKICAgICAgICBpZiAoczEgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgIHMyID0gcGVnJHBhcnNlTHVjZW5lT3IoKTsKCiAgICAgICAgICBpZiAoczIgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgczEgPSBbczEsIHMyXTsKICAgICAgICAgICAgczAgPSBzMTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHBlZyRjdXJyUG9zID0gczA7CiAgICAgICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgICAgIH0KICAgICAgICB9IGVsc2UgewogICAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDsKICAgICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIHBlZyRzaWxlbnRGYWlscy0tOwoKICAgICAgaWYgKHMwID09PSBwZWckRkFJTEVEKSB7CiAgICAgICAgczEgPSBwZWckRkFJTEVEOwoKICAgICAgICBpZiAocGVnJHNpbGVudEZhaWxzID09PSAwKSB7CiAgICAgICAgICBwZWckZmFpbChwZWckYzI4KTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIHJldHVybiBzMDsKICAgIH0KCiAgICBmdW5jdGlvbiBwZWckcGFyc2VBbmQoKSB7CiAgICAgIHZhciBzMCwgczEsIHMyLCBzMywgczQ7CiAgICAgIHBlZyRzaWxlbnRGYWlscysrOwogICAgICBzMCA9IHBlZyRjdXJyUG9zOwogICAgICBzMSA9IFtdOwogICAgICBzMiA9IHBlZyRwYXJzZVNwYWNlKCk7CgogICAgICBpZiAoczIgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICB3aGlsZSAoczIgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgIHMxLnB1c2goczIpOwogICAgICAgICAgczIgPSBwZWckcGFyc2VTcGFjZSgpOwogICAgICAgIH0KICAgICAgfSBlbHNlIHsKICAgICAgICBzMSA9IHBlZyRGQUlMRUQ7CiAgICAgIH0KCiAgICAgIGlmIChzMSAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgIGlmIChpbnB1dC5zdWJzdHIocGVnJGN1cnJQb3MsIDMpLnRvTG93ZXJDYXNlKCkgPT09IHBlZyRjMzIpIHsKICAgICAgICAgIHMyID0gaW5wdXQuc3Vic3RyKHBlZyRjdXJyUG9zLCAzKTsKICAgICAgICAgIHBlZyRjdXJyUG9zICs9IDM7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHMyID0gcGVnJEZBSUxFRDsKCiAgICAgICAgICBpZiAocGVnJHNpbGVudEZhaWxzID09PSAwKSB7CiAgICAgICAgICAgIHBlZyRmYWlsKHBlZyRjMzMpOwogICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgaWYgKHMyICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICBzMyA9IFtdOwogICAgICAgICAgczQgPSBwZWckcGFyc2VTcGFjZSgpOwoKICAgICAgICAgIGlmIChzNCAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgICB3aGlsZSAoczQgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgICBzMy5wdXNoKHM0KTsKICAgICAgICAgICAgICBzNCA9IHBlZyRwYXJzZVNwYWNlKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHMzID0gcGVnJEZBSUxFRDsKICAgICAgICAgIH0KCiAgICAgICAgICBpZiAoczMgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgczEgPSBbczEsIHMyLCBzM107CiAgICAgICAgICAgIHMwID0gczE7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CiAgICAgICAgICB9CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHBlZyRjdXJyUG9zID0gczA7CiAgICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CiAgICAgICAgfQogICAgICB9IGVsc2UgewogICAgICAgIHBlZyRjdXJyUG9zID0gczA7CiAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICB9CgogICAgICBpZiAoczAgPT09IHBlZyRGQUlMRUQpIHsKICAgICAgICBzMCA9IHBlZyRjdXJyUG9zOwogICAgICAgIHBlZyRzYXZlZFBvcyA9IHBlZyRjdXJyUG9zOwogICAgICAgIHMxID0gcGVnJGMxKCk7CgogICAgICAgIGlmIChzMSkgewogICAgICAgICAgczEgPSB2b2lkIDA7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHMxID0gcGVnJEZBSUxFRDsKICAgICAgICB9CgogICAgICAgIGlmIChzMSAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgczIgPSBwZWckcGFyc2VMdWNlbmVBbmQoKTsKCiAgICAgICAgICBpZiAoczIgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgczEgPSBbczEsIHMyXTsKICAgICAgICAgICAgczAgPSBzMTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHBlZyRjdXJyUG9zID0gczA7CiAgICAgICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgICAgIH0KICAgICAgICB9IGVsc2UgewogICAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDsKICAgICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIHBlZyRzaWxlbnRGYWlscy0tOwoKICAgICAgaWYgKHMwID09PSBwZWckRkFJTEVEKSB7CiAgICAgICAgczEgPSBwZWckRkFJTEVEOwoKICAgICAgICBpZiAocGVnJHNpbGVudEZhaWxzID09PSAwKSB7CiAgICAgICAgICBwZWckZmFpbChwZWckYzMxKTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIHJldHVybiBzMDsKICAgIH0KCiAgICBmdW5jdGlvbiBwZWckcGFyc2VOb3QoKSB7CiAgICAgIHZhciBzMCwgczEsIHMyLCBzMzsKICAgICAgcGVnJHNpbGVudEZhaWxzKys7CiAgICAgIHMwID0gcGVnJGN1cnJQb3M7CgogICAgICBpZiAoaW5wdXQuc3Vic3RyKHBlZyRjdXJyUG9zLCAzKS50b0xvd2VyQ2FzZSgpID09PSBwZWckYzM1KSB7CiAgICAgICAgczEgPSBpbnB1dC5zdWJzdHIocGVnJGN1cnJQb3MsIDMpOwogICAgICAgIHBlZyRjdXJyUG9zICs9IDM7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgczEgPSBwZWckRkFJTEVEOwoKICAgICAgICBpZiAocGVnJHNpbGVudEZhaWxzID09PSAwKSB7CiAgICAgICAgICBwZWckZmFpbChwZWckYzM2KTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIGlmIChzMSAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgIHMyID0gW107CiAgICAgICAgczMgPSBwZWckcGFyc2VTcGFjZSgpOwoKICAgICAgICBpZiAoczMgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgIHdoaWxlIChzMyAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgICBzMi5wdXNoKHMzKTsKICAgICAgICAgICAgczMgPSBwZWckcGFyc2VTcGFjZSgpOwogICAgICAgICAgfQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBzMiA9IHBlZyRGQUlMRUQ7CiAgICAgICAgfQoKICAgICAgICBpZiAoczIgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgIHMxID0gW3MxLCBzMl07CiAgICAgICAgICBzMCA9IHMxOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICAgIH0KICAgICAgfSBlbHNlIHsKICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgfQoKICAgICAgaWYgKHMwID09PSBwZWckRkFJTEVEKSB7CiAgICAgICAgczAgPSBwZWckY3VyclBvczsKICAgICAgICBwZWckc2F2ZWRQb3MgPSBwZWckY3VyclBvczsKICAgICAgICBzMSA9IHBlZyRjMSgpOwoKICAgICAgICBpZiAoczEpIHsKICAgICAgICAgIHMxID0gdm9pZCAwOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBzMSA9IHBlZyRGQUlMRUQ7CiAgICAgICAgfQoKICAgICAgICBpZiAoczEgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgIHMyID0gcGVnJHBhcnNlTHVjZW5lTm90KCk7CgogICAgICAgICAgaWYgKHMyICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgIHMxID0gW3MxLCBzMl07CiAgICAgICAgICAgIHMwID0gczE7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CiAgICAgICAgICB9CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHBlZyRjdXJyUG9zID0gczA7CiAgICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CiAgICAgICAgfQogICAgICB9CgogICAgICBwZWckc2lsZW50RmFpbHMtLTsKCiAgICAgIGlmIChzMCA9PT0gcGVnJEZBSUxFRCkgewogICAgICAgIHMxID0gcGVnJEZBSUxFRDsKCiAgICAgICAgaWYgKHBlZyRzaWxlbnRGYWlscyA9PT0gMCkgewogICAgICAgICAgcGVnJGZhaWwocGVnJGMzNCk7CiAgICAgICAgfQogICAgICB9CgogICAgICByZXR1cm4gczA7CiAgICB9CgogICAgZnVuY3Rpb24gcGVnJHBhcnNlTGl0ZXJhbCgpIHsKICAgICAgdmFyIHMwLCBzMTsKICAgICAgcGVnJHNpbGVudEZhaWxzKys7CiAgICAgIHMwID0gcGVnJHBhcnNlUXVvdGVkU3RyaW5nKCk7CgogICAgICBpZiAoczAgPT09IHBlZyRGQUlMRUQpIHsKICAgICAgICBzMCA9IHBlZyRwYXJzZVVucXVvdGVkTGl0ZXJhbCgpOwogICAgICB9CgogICAgICBwZWckc2lsZW50RmFpbHMtLTsKCiAgICAgIGlmIChzMCA9PT0gcGVnJEZBSUxFRCkgewogICAgICAgIHMxID0gcGVnJEZBSUxFRDsKCiAgICAgICAgaWYgKHBlZyRzaWxlbnRGYWlscyA9PT0gMCkgewogICAgICAgICAgcGVnJGZhaWwocGVnJGMzNyk7CiAgICAgICAgfQogICAgICB9CgogICAgICByZXR1cm4gczA7CiAgICB9CgogICAgZnVuY3Rpb24gcGVnJHBhcnNlUXVvdGVkU3RyaW5nKCkgewogICAgICB2YXIgczAsIHMxLCBzMiwgczMsIHM0LCBzNTsKICAgICAgczAgPSBwZWckY3VyclBvczsKCiAgICAgIGlmIChpbnB1dC5jaGFyQ29kZUF0KHBlZyRjdXJyUG9zKSA9PT0gMzQpIHsKICAgICAgICBzMSA9IHBlZyRjMzg7CiAgICAgICAgcGVnJGN1cnJQb3MrKzsKICAgICAgfSBlbHNlIHsKICAgICAgICBzMSA9IHBlZyRGQUlMRUQ7CgogICAgICAgIGlmIChwZWckc2lsZW50RmFpbHMgPT09IDApIHsKICAgICAgICAgIHBlZyRmYWlsKHBlZyRjMzkpOwogICAgICAgIH0KICAgICAgfQoKICAgICAgaWYgKHMxICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgczIgPSBbXTsKICAgICAgICBzMyA9IHBlZyRwYXJzZVF1b3RlZENoYXJhY3RlcigpOwoKICAgICAgICB3aGlsZSAoczMgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgIHMyLnB1c2goczMpOwogICAgICAgICAgczMgPSBwZWckcGFyc2VRdW90ZWRDaGFyYWN0ZXIoKTsKICAgICAgICB9CgogICAgICAgIGlmIChzMiAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgczMgPSBwZWckcGFyc2VDdXJzb3IoKTsKCiAgICAgICAgICBpZiAoczMgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgczQgPSBbXTsKICAgICAgICAgICAgczUgPSBwZWckcGFyc2VRdW90ZWRDaGFyYWN0ZXIoKTsKCiAgICAgICAgICAgIHdoaWxlIChzNSAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgICAgIHM0LnB1c2goczUpOwogICAgICAgICAgICAgIHM1ID0gcGVnJHBhcnNlUXVvdGVkQ2hhcmFjdGVyKCk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmIChzNCAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgICAgIGlmIChpbnB1dC5jaGFyQ29kZUF0KHBlZyRjdXJyUG9zKSA9PT0gMzQpIHsKICAgICAgICAgICAgICAgIHM1ID0gcGVnJGMzODsKICAgICAgICAgICAgICAgIHBlZyRjdXJyUG9zKys7CiAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHM1ID0gcGVnJEZBSUxFRDsKCiAgICAgICAgICAgICAgICBpZiAocGVnJHNpbGVudEZhaWxzID09PSAwKSB7CiAgICAgICAgICAgICAgICAgIHBlZyRmYWlsKHBlZyRjMzkpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgaWYgKHM1ICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgICAgICBwZWckc2F2ZWRQb3MgPSBzMDsKICAgICAgICAgICAgICAgIHMxID0gcGVnJGM0MChzMiwgczMsIHM0KTsKICAgICAgICAgICAgICAgIHMwID0gczE7CiAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHBlZyRjdXJyUG9zID0gczA7CiAgICAgICAgICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIHBlZyRjdXJyUG9zID0gczA7CiAgICAgICAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICAgICAgICB9CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CiAgICAgICAgICB9CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHBlZyRjdXJyUG9zID0gczA7CiAgICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CiAgICAgICAgfQogICAgICB9IGVsc2UgewogICAgICAgIHBlZyRjdXJyUG9zID0gczA7CiAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICB9CgogICAgICBpZiAoczAgPT09IHBlZyRGQUlMRUQpIHsKICAgICAgICBzMCA9IHBlZyRjdXJyUG9zOwoKICAgICAgICBpZiAoaW5wdXQuY2hhckNvZGVBdChwZWckY3VyclBvcykgPT09IDM0KSB7CiAgICAgICAgICBzMSA9IHBlZyRjMzg7CiAgICAgICAgICBwZWckY3VyclBvcysrOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBzMSA9IHBlZyRGQUlMRUQ7CgogICAgICAgICAgaWYgKHBlZyRzaWxlbnRGYWlscyA9PT0gMCkgewogICAgICAgICAgICBwZWckZmFpbChwZWckYzM5KTsKICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIGlmIChzMSAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgczIgPSBbXTsKICAgICAgICAgIHMzID0gcGVnJHBhcnNlUXVvdGVkQ2hhcmFjdGVyKCk7CgogICAgICAgICAgd2hpbGUgKHMzICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgIHMyLnB1c2goczMpOwogICAgICAgICAgICBzMyA9IHBlZyRwYXJzZVF1b3RlZENoYXJhY3RlcigpOwogICAgICAgICAgfQoKICAgICAgICAgIGlmIChzMiAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgICBpZiAoaW5wdXQuY2hhckNvZGVBdChwZWckY3VyclBvcykgPT09IDM0KSB7CiAgICAgICAgICAgICAgczMgPSBwZWckYzM4OwogICAgICAgICAgICAgIHBlZyRjdXJyUG9zKys7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgczMgPSBwZWckRkFJTEVEOwoKICAgICAgICAgICAgICBpZiAocGVnJHNpbGVudEZhaWxzID09PSAwKSB7CiAgICAgICAgICAgICAgICBwZWckZmFpbChwZWckYzM5KTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmIChzMyAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgICAgIHBlZyRzYXZlZFBvcyA9IHMwOwogICAgICAgICAgICAgIHMxID0gcGVnJGM0MShzMik7CiAgICAgICAgICAgICAgczAgPSBzMTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgICAgICAgfQogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDsKICAgICAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICAgICAgfQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICAgIH0KICAgICAgfQoKICAgICAgcmV0dXJuIHMwOwogICAgfQoKICAgIGZ1bmN0aW9uIHBlZyRwYXJzZVF1b3RlZENoYXJhY3RlcigpIHsKICAgICAgdmFyIHMwLCBzMSwgczI7CiAgICAgIHMwID0gcGVnJHBhcnNlRXNjYXBlZFdoaXRlc3BhY2UoKTsKCiAgICAgIGlmIChzMCA9PT0gcGVnJEZBSUxFRCkgewogICAgICAgIHMwID0gcGVnJGN1cnJQb3M7CgogICAgICAgIGlmIChpbnB1dC5jaGFyQ29kZUF0KHBlZyRjdXJyUG9zKSA9PT0gOTIpIHsKICAgICAgICAgIHMxID0gcGVnJGM0MjsKICAgICAgICAgIHBlZyRjdXJyUG9zKys7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHMxID0gcGVnJEZBSUxFRDsKCiAgICAgICAgICBpZiAocGVnJHNpbGVudEZhaWxzID09PSAwKSB7CiAgICAgICAgICAgIHBlZyRmYWlsKHBlZyRjNDMpOwogICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgaWYgKHMxICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICBpZiAocGVnJGM0NC50ZXN0KGlucHV0LmNoYXJBdChwZWckY3VyclBvcykpKSB7CiAgICAgICAgICAgIHMyID0gaW5wdXQuY2hhckF0KHBlZyRjdXJyUG9zKTsKICAgICAgICAgICAgcGVnJGN1cnJQb3MrKzsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHMyID0gcGVnJEZBSUxFRDsKCiAgICAgICAgICAgIGlmIChwZWckc2lsZW50RmFpbHMgPT09IDApIHsKICAgICAgICAgICAgICBwZWckZmFpbChwZWckYzQ1KTsKICAgICAgICAgICAgfQogICAgICAgICAgfQoKICAgICAgICAgIGlmIChzMiAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgICBwZWckc2F2ZWRQb3MgPSBzMDsKICAgICAgICAgICAgczEgPSBwZWckYzQ2KHMyKTsKICAgICAgICAgICAgczAgPSBzMTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHBlZyRjdXJyUG9zID0gczA7CiAgICAgICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgICAgIH0KICAgICAgICB9IGVsc2UgewogICAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDsKICAgICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgICB9CgogICAgICAgIGlmIChzMCA9PT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgczAgPSBwZWckY3VyclBvczsKICAgICAgICAgIHMxID0gcGVnJGN1cnJQb3M7CiAgICAgICAgICBwZWckc2lsZW50RmFpbHMrKzsKICAgICAgICAgIHMyID0gcGVnJHBhcnNlQ3Vyc29yKCk7CiAgICAgICAgICBwZWckc2lsZW50RmFpbHMtLTsKCiAgICAgICAgICBpZiAoczIgPT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgczEgPSB2b2lkIDA7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBwZWckY3VyclBvcyA9IHMxOwogICAgICAgICAgICBzMSA9IHBlZyRGQUlMRUQ7CiAgICAgICAgICB9CgogICAgICAgICAgaWYgKHMxICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgIGlmIChwZWckYzQ3LnRlc3QoaW5wdXQuY2hhckF0KHBlZyRjdXJyUG9zKSkpIHsKICAgICAgICAgICAgICBzMiA9IGlucHV0LmNoYXJBdChwZWckY3VyclBvcyk7CiAgICAgICAgICAgICAgcGVnJGN1cnJQb3MrKzsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICBzMiA9IHBlZyRGQUlMRUQ7CgogICAgICAgICAgICAgIGlmIChwZWckc2lsZW50RmFpbHMgPT09IDApIHsKICAgICAgICAgICAgICAgIHBlZyRmYWlsKHBlZyRjNDgpOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQoKICAgICAgICAgICAgaWYgKHMyICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgICAgcGVnJHNhdmVkUG9zID0gczA7CiAgICAgICAgICAgICAgczEgPSBwZWckYzQ2KHMyKTsKICAgICAgICAgICAgICBzMCA9IHMxOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIHBlZyRjdXJyUG9zID0gczA7CiAgICAgICAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICAgICAgICB9CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CgogICAgICByZXR1cm4gczA7CiAgICB9CgogICAgZnVuY3Rpb24gcGVnJHBhcnNlVW5xdW90ZWRMaXRlcmFsKCkgewogICAgICB2YXIgczAsIHMxLCBzMiwgczMsIHM0OwogICAgICBzMCA9IHBlZyRjdXJyUG9zOwogICAgICBzMSA9IFtdOwogICAgICBzMiA9IHBlZyRwYXJzZVVucXVvdGVkQ2hhcmFjdGVyKCk7CgogICAgICB3aGlsZSAoczIgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICBzMS5wdXNoKHMyKTsKICAgICAgICBzMiA9IHBlZyRwYXJzZVVucXVvdGVkQ2hhcmFjdGVyKCk7CiAgICAgIH0KCiAgICAgIGlmIChzMSAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgIHMyID0gcGVnJHBhcnNlQ3Vyc29yKCk7CgogICAgICAgIGlmIChzMiAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgczMgPSBbXTsKICAgICAgICAgIHM0ID0gcGVnJHBhcnNlVW5xdW90ZWRDaGFyYWN0ZXIoKTsKCiAgICAgICAgICB3aGlsZSAoczQgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgczMucHVzaChzNCk7CiAgICAgICAgICAgIHM0ID0gcGVnJHBhcnNlVW5xdW90ZWRDaGFyYWN0ZXIoKTsKICAgICAgICAgIH0KCiAgICAgICAgICBpZiAoczMgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgcGVnJHNhdmVkUG9zID0gczA7CiAgICAgICAgICAgIHMxID0gcGVnJGM0MChzMSwgczIsIHMzKTsKICAgICAgICAgICAgczAgPSBzMTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHBlZyRjdXJyUG9zID0gczA7CiAgICAgICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgICAgIH0KICAgICAgICB9IGVsc2UgewogICAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDsKICAgICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgICB9CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDsKICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CiAgICAgIH0KCiAgICAgIGlmIChzMCA9PT0gcGVnJEZBSUxFRCkgewogICAgICAgIHMwID0gcGVnJGN1cnJQb3M7CiAgICAgICAgczEgPSBbXTsKICAgICAgICBzMiA9IHBlZyRwYXJzZVVucXVvdGVkQ2hhcmFjdGVyKCk7CgogICAgICAgIGlmIChzMiAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgd2hpbGUgKHMyICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgIHMxLnB1c2goczIpOwogICAgICAgICAgICBzMiA9IHBlZyRwYXJzZVVucXVvdGVkQ2hhcmFjdGVyKCk7CiAgICAgICAgICB9CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHMxID0gcGVnJEZBSUxFRDsKICAgICAgICB9CgogICAgICAgIGlmIChzMSAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgcGVnJHNhdmVkUG9zID0gczA7CiAgICAgICAgICBzMSA9IHBlZyRjNDkoczEpOwogICAgICAgIH0KCiAgICAgICAgczAgPSBzMTsKICAgICAgfQoKICAgICAgcmV0dXJuIHMwOwogICAgfQoKICAgIGZ1bmN0aW9uIHBlZyRwYXJzZVVucXVvdGVkQ2hhcmFjdGVyKCkgewogICAgICB2YXIgczAsIHMxLCBzMiwgczMsIHM0OwogICAgICBzMCA9IHBlZyRwYXJzZUVzY2FwZWRXaGl0ZXNwYWNlKCk7CgogICAgICBpZiAoczAgPT09IHBlZyRGQUlMRUQpIHsKICAgICAgICBzMCA9IHBlZyRwYXJzZUVzY2FwZWRTcGVjaWFsQ2hhcmFjdGVyKCk7CgogICAgICAgIGlmIChzMCA9PT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgczAgPSBwZWckcGFyc2VFc2NhcGVkS2V5d29yZCgpOwoKICAgICAgICAgIGlmIChzMCA9PT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgICBzMCA9IHBlZyRwYXJzZVdpbGRjYXJkKCk7CgogICAgICAgICAgICBpZiAoczAgPT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgICBzMCA9IHBlZyRjdXJyUG9zOwogICAgICAgICAgICAgIHMxID0gcGVnJGN1cnJQb3M7CiAgICAgICAgICAgICAgcGVnJHNpbGVudEZhaWxzKys7CiAgICAgICAgICAgICAgczIgPSBwZWckcGFyc2VTcGVjaWFsQ2hhcmFjdGVyKCk7CiAgICAgICAgICAgICAgcGVnJHNpbGVudEZhaWxzLS07CgogICAgICAgICAgICAgIGlmIChzMiA9PT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgICAgICAgczEgPSB2b2lkIDA7CiAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHBlZyRjdXJyUG9zID0gczE7CiAgICAgICAgICAgICAgICBzMSA9IHBlZyRGQUlMRUQ7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBpZiAoczEgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgICAgIHMyID0gcGVnJGN1cnJQb3M7CiAgICAgICAgICAgICAgICBwZWckc2lsZW50RmFpbHMrKzsKICAgICAgICAgICAgICAgIHMzID0gcGVnJHBhcnNlS2V5d29yZCgpOwogICAgICAgICAgICAgICAgcGVnJHNpbGVudEZhaWxzLS07CgogICAgICAgICAgICAgICAgaWYgKHMzID09PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgICAgICAgIHMyID0gdm9pZCAwOwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgcGVnJGN1cnJQb3MgPSBzMjsKICAgICAgICAgICAgICAgICAgczIgPSBwZWckRkFJTEVEOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIGlmIChzMiAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgICAgICAgICBzMyA9IHBlZyRjdXJyUG9zOwogICAgICAgICAgICAgICAgICBwZWckc2lsZW50RmFpbHMrKzsKICAgICAgICAgICAgICAgICAgczQgPSBwZWckcGFyc2VDdXJzb3IoKTsKICAgICAgICAgICAgICAgICAgcGVnJHNpbGVudEZhaWxzLS07CgogICAgICAgICAgICAgICAgICBpZiAoczQgPT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgICAgICAgICBzMyA9IHZvaWQgMDsKICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICBwZWckY3VyclBvcyA9IHMzOwogICAgICAgICAgICAgICAgICAgIHMzID0gcGVnJEZBSUxFRDsKICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgaWYgKHMzICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgICAgICAgICAgaWYgKGlucHV0Lmxlbmd0aCA+IHBlZyRjdXJyUG9zKSB7CiAgICAgICAgICAgICAgICAgICAgICBzNCA9IGlucHV0LmNoYXJBdChwZWckY3VyclBvcyk7CiAgICAgICAgICAgICAgICAgICAgICBwZWckY3VyclBvcysrOwogICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICBzNCA9IHBlZyRGQUlMRUQ7CgogICAgICAgICAgICAgICAgICAgICAgaWYgKHBlZyRzaWxlbnRGYWlscyA9PT0gMCkgewogICAgICAgICAgICAgICAgICAgICAgICBwZWckZmFpbChwZWckYzUwKTsKICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgIGlmIChzNCAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgICAgICAgICAgICAgcGVnJHNhdmVkUG9zID0gczA7CiAgICAgICAgICAgICAgICAgICAgICBzMSA9IHBlZyRjNDYoczQpOwogICAgICAgICAgICAgICAgICAgICAgczAgPSBzMTsKICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDsKICAgICAgICAgICAgICAgICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDsKICAgICAgICAgICAgICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgIHBlZyRjdXJyUG9zID0gczA7CiAgICAgICAgICAgICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDsKICAgICAgICAgICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KCiAgICAgIHJldHVybiBzMDsKICAgIH0KCiAgICBmdW5jdGlvbiBwZWckcGFyc2VXaWxkY2FyZCgpIHsKICAgICAgdmFyIHMwLCBzMTsKICAgICAgczAgPSBwZWckY3VyclBvczsKCiAgICAgIGlmIChpbnB1dC5jaGFyQ29kZUF0KHBlZyRjdXJyUG9zKSA9PT0gNDIpIHsKICAgICAgICBzMSA9IHBlZyRjNTE7CiAgICAgICAgcGVnJGN1cnJQb3MrKzsKICAgICAgfSBlbHNlIHsKICAgICAgICBzMSA9IHBlZyRGQUlMRUQ7CgogICAgICAgIGlmIChwZWckc2lsZW50RmFpbHMgPT09IDApIHsKICAgICAgICAgIHBlZyRmYWlsKHBlZyRjNTIpOwogICAgICAgIH0KICAgICAgfQoKICAgICAgaWYgKHMxICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgcGVnJHNhdmVkUG9zID0gczA7CiAgICAgICAgczEgPSBwZWckYzUzKCk7CiAgICAgIH0KCiAgICAgIHMwID0gczE7CiAgICAgIHJldHVybiBzMDsKICAgIH0KCiAgICBmdW5jdGlvbiBwZWckcGFyc2VPcHRpb25hbFNwYWNlKCkgewogICAgICB2YXIgczAsIHMxLCBzMiwgczMsIHM0OwogICAgICBzMCA9IHBlZyRjdXJyUG9zOwogICAgICBzMSA9IFtdOwogICAgICBzMiA9IHBlZyRwYXJzZVNwYWNlKCk7CgogICAgICB3aGlsZSAoczIgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICBzMS5wdXNoKHMyKTsKICAgICAgICBzMiA9IHBlZyRwYXJzZVNwYWNlKCk7CiAgICAgIH0KCiAgICAgIGlmIChzMSAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgIHMyID0gcGVnJHBhcnNlQ3Vyc29yKCk7CgogICAgICAgIGlmIChzMiAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgczMgPSBbXTsKICAgICAgICAgIHM0ID0gcGVnJHBhcnNlU3BhY2UoKTsKCiAgICAgICAgICB3aGlsZSAoczQgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgczMucHVzaChzNCk7CiAgICAgICAgICAgIHM0ID0gcGVnJHBhcnNlU3BhY2UoKTsKICAgICAgICAgIH0KCiAgICAgICAgICBpZiAoczMgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgcGVnJHNhdmVkUG9zID0gczA7CiAgICAgICAgICAgIHMxID0gcGVnJGM0MChzMSwgczIsIHMzKTsKICAgICAgICAgICAgczAgPSBzMTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHBlZyRjdXJyUG9zID0gczA7CiAgICAgICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgICAgIH0KICAgICAgICB9IGVsc2UgewogICAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDsKICAgICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgICB9CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDsKICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CiAgICAgIH0KCiAgICAgIGlmIChzMCA9PT0gcGVnJEZBSUxFRCkgewogICAgICAgIHMwID0gW107CiAgICAgICAgczEgPSBwZWckcGFyc2VTcGFjZSgpOwoKICAgICAgICB3aGlsZSAoczEgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgIHMwLnB1c2goczEpOwogICAgICAgICAgczEgPSBwZWckcGFyc2VTcGFjZSgpOwogICAgICAgIH0KICAgICAgfQoKICAgICAgcmV0dXJuIHMwOwogICAgfQoKICAgIGZ1bmN0aW9uIHBlZyRwYXJzZUVzY2FwZWRXaGl0ZXNwYWNlKCkgewogICAgICB2YXIgczAsIHMxOwogICAgICBzMCA9IHBlZyRjdXJyUG9zOwoKICAgICAgaWYgKGlucHV0LnN1YnN0cihwZWckY3VyclBvcywgMikgPT09IHBlZyRjNTQpIHsKICAgICAgICBzMSA9IHBlZyRjNTQ7CiAgICAgICAgcGVnJGN1cnJQb3MgKz0gMjsKICAgICAgfSBlbHNlIHsKICAgICAgICBzMSA9IHBlZyRGQUlMRUQ7CgogICAgICAgIGlmIChwZWckc2lsZW50RmFpbHMgPT09IDApIHsKICAgICAgICAgIHBlZyRmYWlsKHBlZyRjNTUpOwogICAgICAgIH0KICAgICAgfQoKICAgICAgaWYgKHMxICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgcGVnJHNhdmVkUG9zID0gczA7CiAgICAgICAgczEgPSBwZWckYzU2KCk7CiAgICAgIH0KCiAgICAgIHMwID0gczE7CgogICAgICBpZiAoczAgPT09IHBlZyRGQUlMRUQpIHsKICAgICAgICBzMCA9IHBlZyRjdXJyUG9zOwoKICAgICAgICBpZiAoaW5wdXQuc3Vic3RyKHBlZyRjdXJyUG9zLCAyKSA9PT0gcGVnJGM1NykgewogICAgICAgICAgczEgPSBwZWckYzU3OwogICAgICAgICAgcGVnJGN1cnJQb3MgKz0gMjsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgczEgPSBwZWckRkFJTEVEOwoKICAgICAgICAgIGlmIChwZWckc2lsZW50RmFpbHMgPT09IDApIHsKICAgICAgICAgICAgcGVnJGZhaWwocGVnJGM1OCk7CiAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICBpZiAoczEgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgIHBlZyRzYXZlZFBvcyA9IHMwOwogICAgICAgICAgczEgPSBwZWckYzU5KCk7CiAgICAgICAgfQoKICAgICAgICBzMCA9IHMxOwoKICAgICAgICBpZiAoczAgPT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgIHMwID0gcGVnJGN1cnJQb3M7CgogICAgICAgICAgaWYgKGlucHV0LnN1YnN0cihwZWckY3VyclBvcywgMikgPT09IHBlZyRjNjApIHsKICAgICAgICAgICAgczEgPSBwZWckYzYwOwogICAgICAgICAgICBwZWckY3VyclBvcyArPSAyOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgczEgPSBwZWckRkFJTEVEOwoKICAgICAgICAgICAgaWYgKHBlZyRzaWxlbnRGYWlscyA9PT0gMCkgewogICAgICAgICAgICAgIHBlZyRmYWlsKHBlZyRjNjEpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CgogICAgICAgICAgaWYgKHMxICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgIHBlZyRzYXZlZFBvcyA9IHMwOwogICAgICAgICAgICBzMSA9IHBlZyRjNjIoKTsKICAgICAgICAgIH0KCiAgICAgICAgICBzMCA9IHMxOwogICAgICAgIH0KICAgICAgfQoKICAgICAgcmV0dXJuIHMwOwogICAgfQoKICAgIGZ1bmN0aW9uIHBlZyRwYXJzZUVzY2FwZWRTcGVjaWFsQ2hhcmFjdGVyKCkgewogICAgICB2YXIgczAsIHMxLCBzMjsKICAgICAgczAgPSBwZWckY3VyclBvczsKCiAgICAgIGlmIChpbnB1dC5jaGFyQ29kZUF0KHBlZyRjdXJyUG9zKSA9PT0gOTIpIHsKICAgICAgICBzMSA9IHBlZyRjNDI7CiAgICAgICAgcGVnJGN1cnJQb3MrKzsKICAgICAgfSBlbHNlIHsKICAgICAgICBzMSA9IHBlZyRGQUlMRUQ7CgogICAgICAgIGlmIChwZWckc2lsZW50RmFpbHMgPT09IDApIHsKICAgICAgICAgIHBlZyRmYWlsKHBlZyRjNDMpOwogICAgICAgIH0KICAgICAgfQoKICAgICAgaWYgKHMxICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgczIgPSBwZWckcGFyc2VTcGVjaWFsQ2hhcmFjdGVyKCk7CgogICAgICAgIGlmIChzMiAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgcGVnJHNhdmVkUG9zID0gczA7CiAgICAgICAgICBzMSA9IHBlZyRjNDYoczIpOwogICAgICAgICAgczAgPSBzMTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDsKICAgICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgICB9CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDsKICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CiAgICAgIH0KCiAgICAgIHJldHVybiBzMDsKICAgIH0KCiAgICBmdW5jdGlvbiBwZWckcGFyc2VFc2NhcGVkS2V5d29yZCgpIHsKICAgICAgdmFyIHMwLCBzMSwgczI7CiAgICAgIHMwID0gcGVnJGN1cnJQb3M7CgogICAgICBpZiAoaW5wdXQuY2hhckNvZGVBdChwZWckY3VyclBvcykgPT09IDkyKSB7CiAgICAgICAgczEgPSBwZWckYzQyOwogICAgICAgIHBlZyRjdXJyUG9zKys7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgczEgPSBwZWckRkFJTEVEOwoKICAgICAgICBpZiAocGVnJHNpbGVudEZhaWxzID09PSAwKSB7CiAgICAgICAgICBwZWckZmFpbChwZWckYzQzKTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIGlmIChzMSAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgIGlmIChpbnB1dC5zdWJzdHIocGVnJGN1cnJQb3MsIDIpLnRvTG93ZXJDYXNlKCkgPT09IHBlZyRjMjkpIHsKICAgICAgICAgIHMyID0gaW5wdXQuc3Vic3RyKHBlZyRjdXJyUG9zLCAyKTsKICAgICAgICAgIHBlZyRjdXJyUG9zICs9IDI7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHMyID0gcGVnJEZBSUxFRDsKCiAgICAgICAgICBpZiAocGVnJHNpbGVudEZhaWxzID09PSAwKSB7CiAgICAgICAgICAgIHBlZyRmYWlsKHBlZyRjMzApOwogICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgaWYgKHMyID09PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICBpZiAoaW5wdXQuc3Vic3RyKHBlZyRjdXJyUG9zLCAzKS50b0xvd2VyQ2FzZSgpID09PSBwZWckYzMyKSB7CiAgICAgICAgICAgIHMyID0gaW5wdXQuc3Vic3RyKHBlZyRjdXJyUG9zLCAzKTsKICAgICAgICAgICAgcGVnJGN1cnJQb3MgKz0gMzsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHMyID0gcGVnJEZBSUxFRDsKCiAgICAgICAgICAgIGlmIChwZWckc2lsZW50RmFpbHMgPT09IDApIHsKICAgICAgICAgICAgICBwZWckZmFpbChwZWckYzMzKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQoKICAgICAgICAgIGlmIChzMiA9PT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgICBpZiAoaW5wdXQuc3Vic3RyKHBlZyRjdXJyUG9zLCAzKS50b0xvd2VyQ2FzZSgpID09PSBwZWckYzM1KSB7CiAgICAgICAgICAgICAgczIgPSBpbnB1dC5zdWJzdHIocGVnJGN1cnJQb3MsIDMpOwogICAgICAgICAgICAgIHBlZyRjdXJyUG9zICs9IDM7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgczIgPSBwZWckRkFJTEVEOwoKICAgICAgICAgICAgICBpZiAocGVnJHNpbGVudEZhaWxzID09PSAwKSB7CiAgICAgICAgICAgICAgICBwZWckZmFpbChwZWckYzM2KTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIGlmIChzMiAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgcGVnJHNhdmVkUG9zID0gczA7CiAgICAgICAgICBzMSA9IHBlZyRjNjMoczIpOwogICAgICAgICAgczAgPSBzMTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDsKICAgICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgICB9CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDsKICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CiAgICAgIH0KCiAgICAgIHJldHVybiBzMDsKICAgIH0KCiAgICBmdW5jdGlvbiBwZWckcGFyc2VLZXl3b3JkKCkgewogICAgICB2YXIgczA7CiAgICAgIHMwID0gcGVnJHBhcnNlT3IoKTsKCiAgICAgIGlmIChzMCA9PT0gcGVnJEZBSUxFRCkgewogICAgICAgIHMwID0gcGVnJHBhcnNlQW5kKCk7CgogICAgICAgIGlmIChzMCA9PT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgczAgPSBwZWckcGFyc2VOb3QoKTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIHJldHVybiBzMDsKICAgIH0KCiAgICBmdW5jdGlvbiBwZWckcGFyc2VTcGVjaWFsQ2hhcmFjdGVyKCkgewogICAgICB2YXIgczA7CgogICAgICBpZiAocGVnJGM2NC50ZXN0KGlucHV0LmNoYXJBdChwZWckY3VyclBvcykpKSB7CiAgICAgICAgczAgPSBpbnB1dC5jaGFyQXQocGVnJGN1cnJQb3MpOwogICAgICAgIHBlZyRjdXJyUG9zKys7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgczAgPSBwZWckRkFJTEVEOwoKICAgICAgICBpZiAocGVnJHNpbGVudEZhaWxzID09PSAwKSB7CiAgICAgICAgICBwZWckZmFpbChwZWckYzY1KTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIHJldHVybiBzMDsKICAgIH0KCiAgICBmdW5jdGlvbiBwZWckcGFyc2VSYW5nZU9wZXJhdG9yKCkgewogICAgICB2YXIgczAsIHMxOwogICAgICBzMCA9IHBlZyRjdXJyUG9zOwoKICAgICAgaWYgKGlucHV0LnN1YnN0cihwZWckY3VyclBvcywgMikgPT09IHBlZyRjNjYpIHsKICAgICAgICBzMSA9IHBlZyRjNjY7CiAgICAgICAgcGVnJGN1cnJQb3MgKz0gMjsKICAgICAgfSBlbHNlIHsKICAgICAgICBzMSA9IHBlZyRGQUlMRUQ7CgogICAgICAgIGlmIChwZWckc2lsZW50RmFpbHMgPT09IDApIHsKICAgICAgICAgIHBlZyRmYWlsKHBlZyRjNjcpOwogICAgICAgIH0KICAgICAgfQoKICAgICAgaWYgKHMxICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgcGVnJHNhdmVkUG9zID0gczA7CiAgICAgICAgczEgPSBwZWckYzY4KCk7CiAgICAgIH0KCiAgICAgIHMwID0gczE7CgogICAgICBpZiAoczAgPT09IHBlZyRGQUlMRUQpIHsKICAgICAgICBzMCA9IHBlZyRjdXJyUG9zOwoKICAgICAgICBpZiAoaW5wdXQuc3Vic3RyKHBlZyRjdXJyUG9zLCAyKSA9PT0gcGVnJGM2OSkgewogICAgICAgICAgczEgPSBwZWckYzY5OwogICAgICAgICAgcGVnJGN1cnJQb3MgKz0gMjsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgczEgPSBwZWckRkFJTEVEOwoKICAgICAgICAgIGlmIChwZWckc2lsZW50RmFpbHMgPT09IDApIHsKICAgICAgICAgICAgcGVnJGZhaWwocGVnJGM3MCk7CiAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICBpZiAoczEgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgIHBlZyRzYXZlZFBvcyA9IHMwOwogICAgICAgICAgczEgPSBwZWckYzcxKCk7CiAgICAgICAgfQoKICAgICAgICBzMCA9IHMxOwoKICAgICAgICBpZiAoczAgPT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgIHMwID0gcGVnJGN1cnJQb3M7CgogICAgICAgICAgaWYgKGlucHV0LmNoYXJDb2RlQXQocGVnJGN1cnJQb3MpID09PSA2MCkgewogICAgICAgICAgICBzMSA9IHBlZyRjNzI7CiAgICAgICAgICAgIHBlZyRjdXJyUG9zKys7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBzMSA9IHBlZyRGQUlMRUQ7CgogICAgICAgICAgICBpZiAocGVnJHNpbGVudEZhaWxzID09PSAwKSB7CiAgICAgICAgICAgICAgcGVnJGZhaWwocGVnJGM3Myk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KCiAgICAgICAgICBpZiAoczEgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgcGVnJHNhdmVkUG9zID0gczA7CiAgICAgICAgICAgIHMxID0gcGVnJGM3NCgpOwogICAgICAgICAgfQoKICAgICAgICAgIHMwID0gczE7CgogICAgICAgICAgaWYgKHMwID09PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgIHMwID0gcGVnJGN1cnJQb3M7CgogICAgICAgICAgICBpZiAoaW5wdXQuY2hhckNvZGVBdChwZWckY3VyclBvcykgPT09IDYyKSB7CiAgICAgICAgICAgICAgczEgPSBwZWckYzc1OwogICAgICAgICAgICAgIHBlZyRjdXJyUG9zKys7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgczEgPSBwZWckRkFJTEVEOwoKICAgICAgICAgICAgICBpZiAocGVnJHNpbGVudEZhaWxzID09PSAwKSB7CiAgICAgICAgICAgICAgICBwZWckZmFpbChwZWckYzc2KTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmIChzMSAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgICAgIHBlZyRzYXZlZFBvcyA9IHMwOwogICAgICAgICAgICAgIHMxID0gcGVnJGM3NygpOwogICAgICAgICAgICB9CgogICAgICAgICAgICBzMCA9IHMxOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQoKICAgICAgcmV0dXJuIHMwOwogICAgfQoKICAgIGZ1bmN0aW9uIHBlZyRwYXJzZVNwYWNlKCkgewogICAgICB2YXIgczAsIHMxOwogICAgICBwZWckc2lsZW50RmFpbHMrKzsKCiAgICAgIGlmIChwZWckYzc5LnRlc3QoaW5wdXQuY2hhckF0KHBlZyRjdXJyUG9zKSkpIHsKICAgICAgICBzMCA9IGlucHV0LmNoYXJBdChwZWckY3VyclBvcyk7CiAgICAgICAgcGVnJGN1cnJQb3MrKzsKICAgICAgfSBlbHNlIHsKICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CgogICAgICAgIGlmIChwZWckc2lsZW50RmFpbHMgPT09IDApIHsKICAgICAgICAgIHBlZyRmYWlsKHBlZyRjODApOwogICAgICAgIH0KICAgICAgfQoKICAgICAgcGVnJHNpbGVudEZhaWxzLS07CgogICAgICBpZiAoczAgPT09IHBlZyRGQUlMRUQpIHsKICAgICAgICBzMSA9IHBlZyRGQUlMRUQ7CgogICAgICAgIGlmIChwZWckc2lsZW50RmFpbHMgPT09IDApIHsKICAgICAgICAgIHBlZyRmYWlsKHBlZyRjNzgpOwogICAgICAgIH0KICAgICAgfQoKICAgICAgcmV0dXJuIHMwOwogICAgfQoKICAgIGZ1bmN0aW9uIHBlZyRwYXJzZUN1cnNvcigpIHsKICAgICAgdmFyIHMwLCBzMSwgczI7CiAgICAgIHMwID0gcGVnJGN1cnJQb3M7CiAgICAgIHBlZyRzYXZlZFBvcyA9IHBlZyRjdXJyUG9zOwogICAgICBzMSA9IHBlZyRjODEoKTsKCiAgICAgIGlmIChzMSkgewogICAgICAgIHMxID0gdm9pZCAwOwogICAgICB9IGVsc2UgewogICAgICAgIHMxID0gcGVnJEZBSUxFRDsKICAgICAgfQoKICAgICAgaWYgKHMxICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgaWYgKGlucHV0LnN1YnN0cihwZWckY3VyclBvcywgMTQpID09PSBwZWckYzgyKSB7CiAgICAgICAgICBzMiA9IHBlZyRjODI7CiAgICAgICAgICBwZWckY3VyclBvcyArPSAxNDsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgczIgPSBwZWckRkFJTEVEOwoKICAgICAgICAgIGlmIChwZWckc2lsZW50RmFpbHMgPT09IDApIHsKICAgICAgICAgICAgcGVnJGZhaWwocGVnJGM4Myk7CiAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICBpZiAoczIgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgIHBlZyRzYXZlZFBvcyA9IHMwOwogICAgICAgICAgczEgPSBwZWckYzg0KCk7CiAgICAgICAgICBzMCA9IHMxOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICAgIH0KICAgICAgfSBlbHNlIHsKICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgfQoKICAgICAgcmV0dXJuIHMwOwogICAgfQoKICAgIGZ1bmN0aW9uIHBlZyRwYXJzZUx1Y2VuZU9yKCkgewogICAgICB2YXIgczAsIHMxLCBzMiwgczMsIHM0OwogICAgICBzMCA9IHBlZyRjdXJyUG9zOwogICAgICBzMSA9IFtdOwogICAgICBzMiA9IHBlZyRwYXJzZVNwYWNlKCk7CgogICAgICB3aGlsZSAoczIgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICBzMS5wdXNoKHMyKTsKICAgICAgICBzMiA9IHBlZyRwYXJzZVNwYWNlKCk7CiAgICAgIH0KCiAgICAgIGlmIChzMSAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgIGlmIChpbnB1dC5zdWJzdHIocGVnJGN1cnJQb3MsIDIpID09PSBwZWckYzg1KSB7CiAgICAgICAgICBzMiA9IHBlZyRjODU7CiAgICAgICAgICBwZWckY3VyclBvcyArPSAyOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBzMiA9IHBlZyRGQUlMRUQ7CgogICAgICAgICAgaWYgKHBlZyRzaWxlbnRGYWlscyA9PT0gMCkgewogICAgICAgICAgICBwZWckZmFpbChwZWckYzg2KTsKICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIGlmIChzMiAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgczMgPSBbXTsKICAgICAgICAgIHM0ID0gcGVnJHBhcnNlU3BhY2UoKTsKCiAgICAgICAgICB3aGlsZSAoczQgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgczMucHVzaChzNCk7CiAgICAgICAgICAgIHM0ID0gcGVnJHBhcnNlU3BhY2UoKTsKICAgICAgICAgIH0KCiAgICAgICAgICBpZiAoczMgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgcGVnJHNhdmVkUG9zID0gczA7CiAgICAgICAgICAgIHMxID0gcGVnJGM4NygpOwogICAgICAgICAgICBzMCA9IHMxOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDsKICAgICAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICAgICAgfQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICAgIH0KICAgICAgfSBlbHNlIHsKICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgfQoKICAgICAgcmV0dXJuIHMwOwogICAgfQoKICAgIGZ1bmN0aW9uIHBlZyRwYXJzZUx1Y2VuZUFuZCgpIHsKICAgICAgdmFyIHMwLCBzMSwgczIsIHMzLCBzNDsKICAgICAgczAgPSBwZWckY3VyclBvczsKICAgICAgczEgPSBbXTsKICAgICAgczIgPSBwZWckcGFyc2VTcGFjZSgpOwoKICAgICAgd2hpbGUgKHMyICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgczEucHVzaChzMik7CiAgICAgICAgczIgPSBwZWckcGFyc2VTcGFjZSgpOwogICAgICB9CgogICAgICBpZiAoczEgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICBpZiAoaW5wdXQuc3Vic3RyKHBlZyRjdXJyUG9zLCAyKSA9PT0gcGVnJGM4OCkgewogICAgICAgICAgczIgPSBwZWckYzg4OwogICAgICAgICAgcGVnJGN1cnJQb3MgKz0gMjsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgczIgPSBwZWckRkFJTEVEOwoKICAgICAgICAgIGlmIChwZWckc2lsZW50RmFpbHMgPT09IDApIHsKICAgICAgICAgICAgcGVnJGZhaWwocGVnJGM4OSk7CiAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICBpZiAoczIgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgIHMzID0gW107CiAgICAgICAgICBzNCA9IHBlZyRwYXJzZVNwYWNlKCk7CgogICAgICAgICAgd2hpbGUgKHM0ICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgIHMzLnB1c2goczQpOwogICAgICAgICAgICBzNCA9IHBlZyRwYXJzZVNwYWNlKCk7CiAgICAgICAgICB9CgogICAgICAgICAgaWYgKHMzICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgIHBlZyRzYXZlZFBvcyA9IHMwOwogICAgICAgICAgICBzMSA9IHBlZyRjOTAoKTsKICAgICAgICAgICAgczAgPSBzMTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHBlZyRjdXJyUG9zID0gczA7CiAgICAgICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgICAgIH0KICAgICAgICB9IGVsc2UgewogICAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDsKICAgICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgICB9CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDsKICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CiAgICAgIH0KCiAgICAgIGlmIChzMCA9PT0gcGVnJEZBSUxFRCkgewogICAgICAgIHMwID0gcGVnJGN1cnJQb3M7CgogICAgICAgIGlmIChpbnB1dC5jaGFyQ29kZUF0KHBlZyRjdXJyUG9zKSA9PT0gNDMpIHsKICAgICAgICAgIHMxID0gcGVnJGM5MTsKICAgICAgICAgIHBlZyRjdXJyUG9zKys7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHMxID0gcGVnJEZBSUxFRDsKCiAgICAgICAgICBpZiAocGVnJHNpbGVudEZhaWxzID09PSAwKSB7CiAgICAgICAgICAgIHBlZyRmYWlsKHBlZyRjOTIpOwogICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgaWYgKHMxICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICBwZWckc2F2ZWRQb3MgPSBzMDsKICAgICAgICAgIHMxID0gcGVnJGM5MCgpOwogICAgICAgIH0KCiAgICAgICAgczAgPSBzMTsKICAgICAgfQoKICAgICAgcmV0dXJuIHMwOwogICAgfQoKICAgIGZ1bmN0aW9uIHBlZyRwYXJzZUx1Y2VuZU5vdCgpIHsKICAgICAgdmFyIHMwLCBzMTsKICAgICAgczAgPSBwZWckY3VyclBvczsKCiAgICAgIGlmIChpbnB1dC5jaGFyQ29kZUF0KHBlZyRjdXJyUG9zKSA9PT0gNDUpIHsKICAgICAgICBzMSA9IHBlZyRjOTM7CiAgICAgICAgcGVnJGN1cnJQb3MrKzsKICAgICAgfSBlbHNlIHsKICAgICAgICBzMSA9IHBlZyRGQUlMRUQ7CgogICAgICAgIGlmIChwZWckc2lsZW50RmFpbHMgPT09IDApIHsKICAgICAgICAgIHBlZyRmYWlsKHBlZyRjOTQpOwogICAgICAgIH0KICAgICAgfQoKICAgICAgaWYgKHMxICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgcGVnJHNhdmVkUG9zID0gczA7CiAgICAgICAgczEgPSBwZWckYzk1KCk7CiAgICAgIH0KCiAgICAgIHMwID0gczE7CgogICAgICBpZiAoczAgPT09IHBlZyRGQUlMRUQpIHsKICAgICAgICBzMCA9IHBlZyRjdXJyUG9zOwoKICAgICAgICBpZiAoaW5wdXQuY2hhckNvZGVBdChwZWckY3VyclBvcykgPT09IDMzKSB7CiAgICAgICAgICBzMSA9IHBlZyRjOTY7CiAgICAgICAgICBwZWckY3VyclBvcysrOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBzMSA9IHBlZyRGQUlMRUQ7CgogICAgICAgICAgaWYgKHBlZyRzaWxlbnRGYWlscyA9PT0gMCkgewogICAgICAgICAgICBwZWckZmFpbChwZWckYzk3KTsKICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIGlmIChzMSAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgcGVnJHNhdmVkUG9zID0gczA7CiAgICAgICAgICBzMSA9IHBlZyRjOTUoKTsKICAgICAgICB9CgogICAgICAgIHMwID0gczE7CiAgICAgIH0KCiAgICAgIHJldHVybiBzMDsKICAgIH0KCiAgICBmdW5jdGlvbiBwZWckcGFyc2VMdWNlbmVRdWVyeSgpIHsKICAgICAgdmFyIHMwOwogICAgICBzMCA9IHBlZyRwYXJzZUx1Y2VuZUZpZWxkUXVlcnkoKTsKCiAgICAgIGlmIChzMCA9PT0gcGVnJEZBSUxFRCkgewogICAgICAgIHMwID0gcGVnJHBhcnNlTHVjZW5lVmFsdWUoKTsKCiAgICAgICAgaWYgKHMwID09PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICBzMCA9IHBlZyRwYXJzZUx1Y2VuZUV4aXN0cygpOwogICAgICAgIH0KICAgICAgfQoKICAgICAgcmV0dXJuIHMwOwogICAgfQoKICAgIGZ1bmN0aW9uIHBlZyRwYXJzZUx1Y2VuZUZpZWxkUXVlcnkoKSB7CiAgICAgIHZhciBzMCwgczEsIHMyLCBzMywgczQsIHM1OwogICAgICBzMCA9IHBlZyRjdXJyUG9zOwogICAgICBzMSA9IHBlZyRwYXJzZUx1Y2VuZUxpdGVyYWwoKTsKCiAgICAgIGlmIChzMSAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgIHMyID0gW107CiAgICAgICAgczMgPSBwZWckcGFyc2VTcGFjZSgpOwoKICAgICAgICB3aGlsZSAoczMgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgIHMyLnB1c2goczMpOwogICAgICAgICAgczMgPSBwZWckcGFyc2VTcGFjZSgpOwogICAgICAgIH0KCiAgICAgICAgaWYgKHMyICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICBpZiAoaW5wdXQuY2hhckNvZGVBdChwZWckY3VyclBvcykgPT09IDU4KSB7CiAgICAgICAgICAgIHMzID0gcGVnJGMxMDsKICAgICAgICAgICAgcGVnJGN1cnJQb3MrKzsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHMzID0gcGVnJEZBSUxFRDsKCiAgICAgICAgICAgIGlmIChwZWckc2lsZW50RmFpbHMgPT09IDApIHsKICAgICAgICAgICAgICBwZWckZmFpbChwZWckYzExKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQoKICAgICAgICAgIGlmIChzMyAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgICBzNCA9IFtdOwogICAgICAgICAgICBzNSA9IHBlZyRwYXJzZVNwYWNlKCk7CgogICAgICAgICAgICB3aGlsZSAoczUgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgICBzNC5wdXNoKHM1KTsKICAgICAgICAgICAgICBzNSA9IHBlZyRwYXJzZVNwYWNlKCk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmIChzNCAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgICAgIHM1ID0gcGVnJHBhcnNlTHVjZW5lVmFsdWUoKTsKCiAgICAgICAgICAgICAgaWYgKHM1ICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgICAgICBzMSA9IFtzMSwgczIsIHMzLCBzNCwgczVdOwogICAgICAgICAgICAgICAgczAgPSBzMTsKICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDsKICAgICAgICAgICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDsKICAgICAgICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHBlZyRjdXJyUG9zID0gczA7CiAgICAgICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgICAgIH0KICAgICAgICB9IGVsc2UgewogICAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDsKICAgICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgICB9CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDsKICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CiAgICAgIH0KCiAgICAgIHJldHVybiBzMDsKICAgIH0KCiAgICBmdW5jdGlvbiBwZWckcGFyc2VMdWNlbmVWYWx1ZSgpIHsKICAgICAgdmFyIHMwOwogICAgICBzMCA9IHBlZyRwYXJzZUx1Y2VuZVJhbmdlKCk7CgogICAgICBpZiAoczAgPT09IHBlZyRGQUlMRUQpIHsKICAgICAgICBzMCA9IHBlZyRwYXJzZUx1Y2VuZVdpbGRjYXJkKCk7CgogICAgICAgIGlmIChzMCA9PT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgczAgPSBwZWckcGFyc2VMdWNlbmVSZWdleCgpOwoKICAgICAgICAgIGlmIChzMCA9PT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgICBzMCA9IHBlZyRwYXJzZUx1Y2VuZUZ1enp5KCk7CgogICAgICAgICAgICBpZiAoczAgPT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgICBzMCA9IHBlZyRwYXJzZUx1Y2VuZVByb3hpbWl0eSgpOwoKICAgICAgICAgICAgICBpZiAoczAgPT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgICAgIHMwID0gcGVnJHBhcnNlTHVjZW5lQm9vc3QoKTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KCiAgICAgIHJldHVybiBzMDsKICAgIH0KCiAgICBmdW5jdGlvbiBwZWckcGFyc2VMdWNlbmVFeGlzdHMoKSB7CiAgICAgIHZhciBzMCwgczEsIHMyLCBzMywgczQsIHM1OwogICAgICBzMCA9IHBlZyRjdXJyUG9zOwoKICAgICAgaWYgKGlucHV0LnN1YnN0cihwZWckY3VyclBvcywgOCkgPT09IHBlZyRjOTgpIHsKICAgICAgICBzMSA9IHBlZyRjOTg7CiAgICAgICAgcGVnJGN1cnJQb3MgKz0gODsKICAgICAgfSBlbHNlIHsKICAgICAgICBzMSA9IHBlZyRGQUlMRUQ7CgogICAgICAgIGlmIChwZWckc2lsZW50RmFpbHMgPT09IDApIHsKICAgICAgICAgIHBlZyRmYWlsKHBlZyRjOTkpOwogICAgICAgIH0KICAgICAgfQoKICAgICAgaWYgKHMxICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgczIgPSBbXTsKICAgICAgICBzMyA9IHBlZyRwYXJzZVNwYWNlKCk7CgogICAgICAgIHdoaWxlIChzMyAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgczIucHVzaChzMyk7CiAgICAgICAgICBzMyA9IHBlZyRwYXJzZVNwYWNlKCk7CiAgICAgICAgfQoKICAgICAgICBpZiAoczIgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgIGlmIChpbnB1dC5jaGFyQ29kZUF0KHBlZyRjdXJyUG9zKSA9PT0gNTgpIHsKICAgICAgICAgICAgczMgPSBwZWckYzEwOwogICAgICAgICAgICBwZWckY3VyclBvcysrOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgczMgPSBwZWckRkFJTEVEOwoKICAgICAgICAgICAgaWYgKHBlZyRzaWxlbnRGYWlscyA9PT0gMCkgewogICAgICAgICAgICAgIHBlZyRmYWlsKHBlZyRjMTEpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CgogICAgICAgICAgaWYgKHMzICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgIHM0ID0gW107CiAgICAgICAgICAgIHM1ID0gcGVnJHBhcnNlU3BhY2UoKTsKCiAgICAgICAgICAgIHdoaWxlIChzNSAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgICAgIHM0LnB1c2goczUpOwogICAgICAgICAgICAgIHM1ID0gcGVnJHBhcnNlU3BhY2UoKTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgaWYgKHM0ICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgICAgczUgPSBwZWckcGFyc2VMdWNlbmVMaXRlcmFsKCk7CgogICAgICAgICAgICAgIGlmIChzNSAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgICAgICAgcGVnJHNhdmVkUG9zID0gczA7CiAgICAgICAgICAgICAgICBzMSA9IHBlZyRjMTAwKCk7CiAgICAgICAgICAgICAgICBzMCA9IHMxOwogICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgICAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgICAgICAgfQogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDsKICAgICAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICAgICAgfQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICAgIH0KICAgICAgfSBlbHNlIHsKICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgfQoKICAgICAgcmV0dXJuIHMwOwogICAgfQoKICAgIGZ1bmN0aW9uIHBlZyRwYXJzZUx1Y2VuZVJhbmdlKCkgewogICAgICB2YXIgczAsIHMxLCBzMiwgczMsIHM0LCBzNSwgczY7CiAgICAgIHMwID0gcGVnJGN1cnJQb3M7CiAgICAgIHMxID0gcGVnJHBhcnNlUmFuZ2VPcGVyYXRvcigpOwoKICAgICAgaWYgKHMxICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgczIgPSBbXTsKICAgICAgICBzMyA9IHBlZyRwYXJzZVNwYWNlKCk7CgogICAgICAgIHdoaWxlIChzMyAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgczIucHVzaChzMyk7CiAgICAgICAgICBzMyA9IHBlZyRwYXJzZVNwYWNlKCk7CiAgICAgICAgfQoKICAgICAgICBpZiAoczIgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgIHMzID0gcGVnJHBhcnNlTHVjZW5lTGl0ZXJhbCgpOwoKICAgICAgICAgIGlmIChzMyAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgICBwZWckc2F2ZWRQb3MgPSBzMDsKICAgICAgICAgICAgczEgPSBwZWckYzEwMSgpOwogICAgICAgICAgICBzMCA9IHMxOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDsKICAgICAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICAgICAgfQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICAgIH0KICAgICAgfSBlbHNlIHsKICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgfQoKICAgICAgaWYgKHMwID09PSBwZWckRkFJTEVEKSB7CiAgICAgICAgczAgPSBwZWckY3VyclBvczsKICAgICAgICBzMSA9IHBlZyRwYXJzZUx1Y2VuZVJhbmdlU3RhcnQoKTsKCiAgICAgICAgaWYgKHMxICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICBzMiA9IFtdOwogICAgICAgICAgczMgPSBwZWckcGFyc2VTcGFjZSgpOwoKICAgICAgICAgIHdoaWxlIChzMyAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgICBzMi5wdXNoKHMzKTsKICAgICAgICAgICAgczMgPSBwZWckcGFyc2VTcGFjZSgpOwogICAgICAgICAgfQoKICAgICAgICAgIGlmIChzMiAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgICBzMyA9IHBlZyRwYXJzZUx1Y2VuZUxpdGVyYWwoKTsKCiAgICAgICAgICAgIGlmIChzMyAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgICAgIHM0ID0gcGVnJHBhcnNlTHVjZW5lVG8oKTsKCiAgICAgICAgICAgICAgaWYgKHM0ICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgICAgICBzNSA9IHBlZyRwYXJzZUx1Y2VuZUxpdGVyYWwoKTsKCiAgICAgICAgICAgICAgICBpZiAoczUgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgICAgICAgczYgPSBwZWckcGFyc2VMdWNlbmVSYW5nZUVuZCgpOwoKICAgICAgICAgICAgICAgICAgaWYgKHM2ICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgICAgICAgICAgcGVnJHNhdmVkUG9zID0gczA7CiAgICAgICAgICAgICAgICAgICAgczEgPSBwZWckYzEwMSgpOwogICAgICAgICAgICAgICAgICAgIHMwID0gczE7CiAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDsKICAgICAgICAgICAgICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgIHBlZyRjdXJyUG9zID0gczA7CiAgICAgICAgICAgICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDsKICAgICAgICAgICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDsKICAgICAgICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHBlZyRjdXJyUG9zID0gczA7CiAgICAgICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgICAgIH0KICAgICAgICB9IGVsc2UgewogICAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDsKICAgICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIHJldHVybiBzMDsKICAgIH0KCiAgICBmdW5jdGlvbiBwZWckcGFyc2VMdWNlbmVXaWxkY2FyZCgpIHsKICAgICAgdmFyIHMwLCBzMSwgczIsIHMzLCBzNDsKICAgICAgczAgPSBwZWckY3VyclBvczsKICAgICAgczEgPSBbXTsKICAgICAgczIgPSBwZWckcGFyc2VMdWNlbmVVbnF1b3RlZENoYXJhY3RlcigpOwoKICAgICAgaWYgKHMyID09PSBwZWckRkFJTEVEKSB7CiAgICAgICAgaWYgKGlucHV0LmNoYXJDb2RlQXQocGVnJGN1cnJQb3MpID09PSA0MikgewogICAgICAgICAgczIgPSBwZWckYzUxOwogICAgICAgICAgcGVnJGN1cnJQb3MrKzsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgczIgPSBwZWckRkFJTEVEOwoKICAgICAgICAgIGlmIChwZWckc2lsZW50RmFpbHMgPT09IDApIHsKICAgICAgICAgICAgcGVnJGZhaWwocGVnJGM1Mik7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CgogICAgICB3aGlsZSAoczIgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICBzMS5wdXNoKHMyKTsKICAgICAgICBzMiA9IHBlZyRwYXJzZUx1Y2VuZVVucXVvdGVkQ2hhcmFjdGVyKCk7CgogICAgICAgIGlmIChzMiA9PT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgaWYgKGlucHV0LmNoYXJDb2RlQXQocGVnJGN1cnJQb3MpID09PSA0MikgewogICAgICAgICAgICBzMiA9IHBlZyRjNTE7CiAgICAgICAgICAgIHBlZyRjdXJyUG9zKys7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBzMiA9IHBlZyRGQUlMRUQ7CgogICAgICAgICAgICBpZiAocGVnJHNpbGVudEZhaWxzID09PSAwKSB7CiAgICAgICAgICAgICAgcGVnJGZhaWwocGVnJGM1Mik7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KCiAgICAgIGlmIChzMSAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgIGlmIChpbnB1dC5jaGFyQ29kZUF0KHBlZyRjdXJyUG9zKSA9PT0gNjMpIHsKICAgICAgICAgIHMyID0gcGVnJGMxMDI7CiAgICAgICAgICBwZWckY3VyclBvcysrOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBzMiA9IHBlZyRGQUlMRUQ7CgogICAgICAgICAgaWYgKHBlZyRzaWxlbnRGYWlscyA9PT0gMCkgewogICAgICAgICAgICBwZWckZmFpbChwZWckYzEwMyk7CiAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICBpZiAoczIgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgIHMzID0gW107CiAgICAgICAgICBzNCA9IHBlZyRwYXJzZUx1Y2VuZVdpbGRjYXJkKCk7CgogICAgICAgICAgd2hpbGUgKHM0ICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgIHMzLnB1c2goczQpOwogICAgICAgICAgICBzNCA9IHBlZyRwYXJzZUx1Y2VuZVdpbGRjYXJkKCk7CiAgICAgICAgICB9CgogICAgICAgICAgaWYgKHMzICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgIHBlZyRzYXZlZFBvcyA9IHMwOwogICAgICAgICAgICBzMSA9IHBlZyRjMTA0KCk7CiAgICAgICAgICAgIHMwID0gczE7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CiAgICAgICAgICB9CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHBlZyRjdXJyUG9zID0gczA7CiAgICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CiAgICAgICAgfQogICAgICB9IGVsc2UgewogICAgICAgIHBlZyRjdXJyUG9zID0gczA7CiAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICB9CgogICAgICByZXR1cm4gczA7CiAgICB9CgogICAgZnVuY3Rpb24gcGVnJHBhcnNlTHVjZW5lUmVnZXgoKSB7CiAgICAgIHZhciBzMCwgczEsIHMyLCBzMzsKICAgICAgczAgPSBwZWckY3VyclBvczsKCiAgICAgIGlmIChpbnB1dC5jaGFyQ29kZUF0KHBlZyRjdXJyUG9zKSA9PT0gNDcpIHsKICAgICAgICBzMSA9IHBlZyRjMTA1OwogICAgICAgIHBlZyRjdXJyUG9zKys7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgczEgPSBwZWckRkFJTEVEOwoKICAgICAgICBpZiAocGVnJHNpbGVudEZhaWxzID09PSAwKSB7CiAgICAgICAgICBwZWckZmFpbChwZWckYzEwNik7CiAgICAgICAgfQogICAgICB9CgogICAgICBpZiAoczEgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICBzMiA9IFtdOwoKICAgICAgICBpZiAocGVnJGMxMDcudGVzdChpbnB1dC5jaGFyQXQocGVnJGN1cnJQb3MpKSkgewogICAgICAgICAgczMgPSBpbnB1dC5jaGFyQXQocGVnJGN1cnJQb3MpOwogICAgICAgICAgcGVnJGN1cnJQb3MrKzsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgczMgPSBwZWckRkFJTEVEOwoKICAgICAgICAgIGlmIChwZWckc2lsZW50RmFpbHMgPT09IDApIHsKICAgICAgICAgICAgcGVnJGZhaWwocGVnJGMxMDgpOwogICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgd2hpbGUgKHMzICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICBzMi5wdXNoKHMzKTsKCiAgICAgICAgICBpZiAocGVnJGMxMDcudGVzdChpbnB1dC5jaGFyQXQocGVnJGN1cnJQb3MpKSkgewogICAgICAgICAgICBzMyA9IGlucHV0LmNoYXJBdChwZWckY3VyclBvcyk7CiAgICAgICAgICAgIHBlZyRjdXJyUG9zKys7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBzMyA9IHBlZyRGQUlMRUQ7CgogICAgICAgICAgICBpZiAocGVnJHNpbGVudEZhaWxzID09PSAwKSB7CiAgICAgICAgICAgICAgcGVnJGZhaWwocGVnJGMxMDgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICBpZiAoczIgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgIGlmIChpbnB1dC5jaGFyQ29kZUF0KHBlZyRjdXJyUG9zKSA9PT0gNDcpIHsKICAgICAgICAgICAgczMgPSBwZWckYzEwNTsKICAgICAgICAgICAgcGVnJGN1cnJQb3MrKzsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHMzID0gcGVnJEZBSUxFRDsKCiAgICAgICAgICAgIGlmIChwZWckc2lsZW50RmFpbHMgPT09IDApIHsKICAgICAgICAgICAgICBwZWckZmFpbChwZWckYzEwNik7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KCiAgICAgICAgICBpZiAoczMgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgcGVnJHNhdmVkUG9zID0gczA7CiAgICAgICAgICAgIHMxID0gcGVnJGMxMDkoKTsKICAgICAgICAgICAgczAgPSBzMTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHBlZyRjdXJyUG9zID0gczA7CiAgICAgICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgICAgIH0KICAgICAgICB9IGVsc2UgewogICAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDsKICAgICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgICB9CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDsKICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CiAgICAgIH0KCiAgICAgIHJldHVybiBzMDsKICAgIH0KCiAgICBmdW5jdGlvbiBwZWckcGFyc2VMdWNlbmVGdXp6eSgpIHsKICAgICAgdmFyIHMwLCBzMSwgczIsIHMzLCBzNDsKICAgICAgczAgPSBwZWckY3VyclBvczsKICAgICAgczEgPSBwZWckcGFyc2VMdWNlbmVVbnF1b3RlZExpdGVyYWwoKTsKCiAgICAgIGlmIChzMSAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgIGlmIChpbnB1dC5jaGFyQ29kZUF0KHBlZyRjdXJyUG9zKSA9PT0gMTI2KSB7CiAgICAgICAgICBzMiA9IHBlZyRjMTEwOwogICAgICAgICAgcGVnJGN1cnJQb3MrKzsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgczIgPSBwZWckRkFJTEVEOwoKICAgICAgICAgIGlmIChwZWckc2lsZW50RmFpbHMgPT09IDApIHsKICAgICAgICAgICAgcGVnJGZhaWwocGVnJGMxMTEpOwogICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgaWYgKHMyICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICBzMyA9IFtdOwoKICAgICAgICAgIGlmIChwZWckYzExMi50ZXN0KGlucHV0LmNoYXJBdChwZWckY3VyclBvcykpKSB7CiAgICAgICAgICAgIHM0ID0gaW5wdXQuY2hhckF0KHBlZyRjdXJyUG9zKTsKICAgICAgICAgICAgcGVnJGN1cnJQb3MrKzsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHM0ID0gcGVnJEZBSUxFRDsKCiAgICAgICAgICAgIGlmIChwZWckc2lsZW50RmFpbHMgPT09IDApIHsKICAgICAgICAgICAgICBwZWckZmFpbChwZWckYzExMyk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KCiAgICAgICAgICB3aGlsZSAoczQgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgczMucHVzaChzNCk7CgogICAgICAgICAgICBpZiAocGVnJGMxMTIudGVzdChpbnB1dC5jaGFyQXQocGVnJGN1cnJQb3MpKSkgewogICAgICAgICAgICAgIHM0ID0gaW5wdXQuY2hhckF0KHBlZyRjdXJyUG9zKTsKICAgICAgICAgICAgICBwZWckY3VyclBvcysrOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIHM0ID0gcGVnJEZBSUxFRDsKCiAgICAgICAgICAgICAgaWYgKHBlZyRzaWxlbnRGYWlscyA9PT0gMCkgewogICAgICAgICAgICAgICAgcGVnJGZhaWwocGVnJGMxMTMpOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfQoKICAgICAgICAgIGlmIChzMyAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgICBwZWckc2F2ZWRQb3MgPSBzMDsKICAgICAgICAgICAgczEgPSBwZWckYzExNCgpOwogICAgICAgICAgICBzMCA9IHMxOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDsKICAgICAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICAgICAgfQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICAgIH0KICAgICAgfSBlbHNlIHsKICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgfQoKICAgICAgcmV0dXJuIHMwOwogICAgfQoKICAgIGZ1bmN0aW9uIHBlZyRwYXJzZUx1Y2VuZVByb3hpbWl0eSgpIHsKICAgICAgdmFyIHMwLCBzMSwgczIsIHMzLCBzNDsKICAgICAgczAgPSBwZWckY3VyclBvczsKICAgICAgczEgPSBwZWckcGFyc2VRdW90ZWRTdHJpbmcoKTsKCiAgICAgIGlmIChzMSAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgIGlmIChpbnB1dC5jaGFyQ29kZUF0KHBlZyRjdXJyUG9zKSA9PT0gMTI2KSB7CiAgICAgICAgICBzMiA9IHBlZyRjMTEwOwogICAgICAgICAgcGVnJGN1cnJQb3MrKzsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgczIgPSBwZWckRkFJTEVEOwoKICAgICAgICAgIGlmIChwZWckc2lsZW50RmFpbHMgPT09IDApIHsKICAgICAgICAgICAgcGVnJGZhaWwocGVnJGMxMTEpOwogICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgaWYgKHMyICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICBzMyA9IFtdOwoKICAgICAgICAgIGlmIChwZWckYzExMi50ZXN0KGlucHV0LmNoYXJBdChwZWckY3VyclBvcykpKSB7CiAgICAgICAgICAgIHM0ID0gaW5wdXQuY2hhckF0KHBlZyRjdXJyUG9zKTsKICAgICAgICAgICAgcGVnJGN1cnJQb3MrKzsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHM0ID0gcGVnJEZBSUxFRDsKCiAgICAgICAgICAgIGlmIChwZWckc2lsZW50RmFpbHMgPT09IDApIHsKICAgICAgICAgICAgICBwZWckZmFpbChwZWckYzExMyk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KCiAgICAgICAgICB3aGlsZSAoczQgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgczMucHVzaChzNCk7CgogICAgICAgICAgICBpZiAocGVnJGMxMTIudGVzdChpbnB1dC5jaGFyQXQocGVnJGN1cnJQb3MpKSkgewogICAgICAgICAgICAgIHM0ID0gaW5wdXQuY2hhckF0KHBlZyRjdXJyUG9zKTsKICAgICAgICAgICAgICBwZWckY3VyclBvcysrOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIHM0ID0gcGVnJEZBSUxFRDsKCiAgICAgICAgICAgICAgaWYgKHBlZyRzaWxlbnRGYWlscyA9PT0gMCkgewogICAgICAgICAgICAgICAgcGVnJGZhaWwocGVnJGMxMTMpOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfQoKICAgICAgICAgIGlmIChzMyAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgICBwZWckc2F2ZWRQb3MgPSBzMDsKICAgICAgICAgICAgczEgPSBwZWckYzExNSgpOwogICAgICAgICAgICBzMCA9IHMxOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDsKICAgICAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICAgICAgfQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICAgIH0KICAgICAgfSBlbHNlIHsKICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgfQoKICAgICAgcmV0dXJuIHMwOwogICAgfQoKICAgIGZ1bmN0aW9uIHBlZyRwYXJzZUx1Y2VuZUJvb3N0KCkgewogICAgICB2YXIgczAsIHMxLCBzMiwgczMsIHM0OwogICAgICBzMCA9IHBlZyRjdXJyUG9zOwogICAgICBzMSA9IHBlZyRwYXJzZUx1Y2VuZUxpdGVyYWwoKTsKCiAgICAgIGlmIChzMSAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgIGlmIChpbnB1dC5jaGFyQ29kZUF0KHBlZyRjdXJyUG9zKSA9PT0gOTQpIHsKICAgICAgICAgIHMyID0gcGVnJGMxMTY7CiAgICAgICAgICBwZWckY3VyclBvcysrOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBzMiA9IHBlZyRGQUlMRUQ7CgogICAgICAgICAgaWYgKHBlZyRzaWxlbnRGYWlscyA9PT0gMCkgewogICAgICAgICAgICBwZWckZmFpbChwZWckYzExNyk7CiAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICBpZiAoczIgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgIHMzID0gW107CgogICAgICAgICAgaWYgKHBlZyRjMTEyLnRlc3QoaW5wdXQuY2hhckF0KHBlZyRjdXJyUG9zKSkpIHsKICAgICAgICAgICAgczQgPSBpbnB1dC5jaGFyQXQocGVnJGN1cnJQb3MpOwogICAgICAgICAgICBwZWckY3VyclBvcysrOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgczQgPSBwZWckRkFJTEVEOwoKICAgICAgICAgICAgaWYgKHBlZyRzaWxlbnRGYWlscyA9PT0gMCkgewogICAgICAgICAgICAgIHBlZyRmYWlsKHBlZyRjMTEzKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQoKICAgICAgICAgIHdoaWxlIChzNCAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgICBzMy5wdXNoKHM0KTsKCiAgICAgICAgICAgIGlmIChwZWckYzExMi50ZXN0KGlucHV0LmNoYXJBdChwZWckY3VyclBvcykpKSB7CiAgICAgICAgICAgICAgczQgPSBpbnB1dC5jaGFyQXQocGVnJGN1cnJQb3MpOwogICAgICAgICAgICAgIHBlZyRjdXJyUG9zKys7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgczQgPSBwZWckRkFJTEVEOwoKICAgICAgICAgICAgICBpZiAocGVnJHNpbGVudEZhaWxzID09PSAwKSB7CiAgICAgICAgICAgICAgICBwZWckZmFpbChwZWckYzExMyk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9CgogICAgICAgICAgaWYgKHMzICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgIHBlZyRzYXZlZFBvcyA9IHMwOwogICAgICAgICAgICBzMSA9IHBlZyRjMTE4KCk7CiAgICAgICAgICAgIHMwID0gczE7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CiAgICAgICAgICB9CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHBlZyRjdXJyUG9zID0gczA7CiAgICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CiAgICAgICAgfQogICAgICB9IGVsc2UgewogICAgICAgIHBlZyRjdXJyUG9zID0gczA7CiAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICB9CgogICAgICByZXR1cm4gczA7CiAgICB9CgogICAgZnVuY3Rpb24gcGVnJHBhcnNlTHVjZW5lTGl0ZXJhbCgpIHsKICAgICAgdmFyIHMwOwogICAgICBzMCA9IHBlZyRwYXJzZVF1b3RlZFN0cmluZygpOwoKICAgICAgaWYgKHMwID09PSBwZWckRkFJTEVEKSB7CiAgICAgICAgczAgPSBwZWckcGFyc2VMdWNlbmVVbnF1b3RlZExpdGVyYWwoKTsKICAgICAgfQoKICAgICAgcmV0dXJuIHMwOwogICAgfQoKICAgIGZ1bmN0aW9uIHBlZyRwYXJzZUx1Y2VuZVVucXVvdGVkTGl0ZXJhbCgpIHsKICAgICAgdmFyIHMwLCBzMTsKICAgICAgczAgPSBbXTsKICAgICAgczEgPSBwZWckcGFyc2VMdWNlbmVVbnF1b3RlZENoYXJhY3RlcigpOwoKICAgICAgaWYgKHMxICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgd2hpbGUgKHMxICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICBzMC5wdXNoKHMxKTsKICAgICAgICAgIHMxID0gcGVnJHBhcnNlTHVjZW5lVW5xdW90ZWRDaGFyYWN0ZXIoKTsKICAgICAgICB9CiAgICAgIH0gZWxzZSB7CiAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICB9CgogICAgICByZXR1cm4gczA7CiAgICB9CgogICAgZnVuY3Rpb24gcGVnJHBhcnNlTHVjZW5lVW5xdW90ZWRDaGFyYWN0ZXIoKSB7CiAgICAgIHZhciBzMCwgczEsIHMyLCBzMzsKICAgICAgczAgPSBwZWckcGFyc2VFc2NhcGVkV2hpdGVzcGFjZSgpOwoKICAgICAgaWYgKHMwID09PSBwZWckRkFJTEVEKSB7CiAgICAgICAgczAgPSBwZWckcGFyc2VFc2NhcGVkTHVjZW5lU3BlY2lhbENoYXJhY3RlcigpOwoKICAgICAgICBpZiAoczAgPT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgIHMwID0gcGVnJGN1cnJQb3M7CiAgICAgICAgICBzMSA9IHBlZyRjdXJyUG9zOwogICAgICAgICAgcGVnJHNpbGVudEZhaWxzKys7CiAgICAgICAgICBzMiA9IHBlZyRwYXJzZUx1Y2VuZVNwZWNpYWxDaGFyYWN0ZXIoKTsKICAgICAgICAgIHBlZyRzaWxlbnRGYWlscy0tOwoKICAgICAgICAgIGlmIChzMiA9PT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgICBzMSA9IHZvaWQgMDsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHBlZyRjdXJyUG9zID0gczE7CiAgICAgICAgICAgIHMxID0gcGVnJEZBSUxFRDsKICAgICAgICAgIH0KCiAgICAgICAgICBpZiAoczEgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgczIgPSBwZWckY3VyclBvczsKICAgICAgICAgICAgcGVnJHNpbGVudEZhaWxzKys7CiAgICAgICAgICAgIHMzID0gcGVnJHBhcnNlTHVjZW5lS2V5d29yZCgpOwogICAgICAgICAgICBwZWckc2lsZW50RmFpbHMtLTsKCiAgICAgICAgICAgIGlmIChzMyA9PT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgICAgIHMyID0gdm9pZCAwOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIHBlZyRjdXJyUG9zID0gczI7CiAgICAgICAgICAgICAgczIgPSBwZWckRkFJTEVEOwogICAgICAgICAgICB9CgogICAgICAgICAgICBpZiAoczIgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgICBpZiAoaW5wdXQubGVuZ3RoID4gcGVnJGN1cnJQb3MpIHsKICAgICAgICAgICAgICAgIHMzID0gaW5wdXQuY2hhckF0KHBlZyRjdXJyUG9zKTsKICAgICAgICAgICAgICAgIHBlZyRjdXJyUG9zKys7CiAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHMzID0gcGVnJEZBSUxFRDsKCiAgICAgICAgICAgICAgICBpZiAocGVnJHNpbGVudEZhaWxzID09PSAwKSB7CiAgICAgICAgICAgICAgICAgIHBlZyRmYWlsKHBlZyRjNTApOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgaWYgKHMzICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgICAgICBzMSA9IFtzMSwgczIsIHMzXTsKICAgICAgICAgICAgICAgIHMwID0gczE7CiAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHBlZyRjdXJyUG9zID0gczA7CiAgICAgICAgICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIHBlZyRjdXJyUG9zID0gczA7CiAgICAgICAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICAgICAgICB9CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CgogICAgICByZXR1cm4gczA7CiAgICB9CgogICAgZnVuY3Rpb24gcGVnJHBhcnNlTHVjZW5lS2V5d29yZCgpIHsKICAgICAgdmFyIHMwOwogICAgICBzMCA9IHBlZyRwYXJzZU9yKCk7CgogICAgICBpZiAoczAgPT09IHBlZyRGQUlMRUQpIHsKICAgICAgICBzMCA9IHBlZyRwYXJzZUFuZCgpOwoKICAgICAgICBpZiAoczAgPT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgIHMwID0gcGVnJHBhcnNlTHVjZW5lT3IoKTsKCiAgICAgICAgICBpZiAoczAgPT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgczAgPSBwZWckcGFyc2VMdWNlbmVBbmQoKTsKCiAgICAgICAgICAgIGlmIChzMCA9PT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgICAgIHMwID0gcGVnJHBhcnNlTHVjZW5lTm90KCk7CgogICAgICAgICAgICAgIGlmIChzMCA9PT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgICAgICAgczAgPSBwZWckcGFyc2VMdWNlbmVUbygpOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQoKICAgICAgcmV0dXJuIHMwOwogICAgfQoKICAgIGZ1bmN0aW9uIHBlZyRwYXJzZUVzY2FwZWRMdWNlbmVTcGVjaWFsQ2hhcmFjdGVyKCkgewogICAgICB2YXIgczAsIHMxLCBzMjsKICAgICAgczAgPSBwZWckY3VyclBvczsKCiAgICAgIGlmIChpbnB1dC5jaGFyQ29kZUF0KHBlZyRjdXJyUG9zKSA9PT0gOTIpIHsKICAgICAgICBzMSA9IHBlZyRjNDI7CiAgICAgICAgcGVnJGN1cnJQb3MrKzsKICAgICAgfSBlbHNlIHsKICAgICAgICBzMSA9IHBlZyRGQUlMRUQ7CgogICAgICAgIGlmIChwZWckc2lsZW50RmFpbHMgPT09IDApIHsKICAgICAgICAgIHBlZyRmYWlsKHBlZyRjNDMpOwogICAgICAgIH0KICAgICAgfQoKICAgICAgaWYgKHMxICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgczIgPSBwZWckcGFyc2VMdWNlbmVTcGVjaWFsQ2hhcmFjdGVyKCk7CgogICAgICAgIGlmIChzMiAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgcGVnJHNhdmVkUG9zID0gczA7CiAgICAgICAgICBzMSA9IHBlZyRjMTE5KCk7CiAgICAgICAgICBzMCA9IHMxOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICAgIH0KICAgICAgfSBlbHNlIHsKICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgfQoKICAgICAgcmV0dXJuIHMwOwogICAgfQoKICAgIGZ1bmN0aW9uIHBlZyRwYXJzZUx1Y2VuZVNwZWNpYWxDaGFyYWN0ZXIoKSB7CiAgICAgIHZhciBzMDsKCiAgICAgIGlmIChpbnB1dC5jaGFyQ29kZUF0KHBlZyRjdXJyUG9zKSA9PT0gNDMpIHsKICAgICAgICBzMCA9IHBlZyRjOTE7CiAgICAgICAgcGVnJGN1cnJQb3MrKzsKICAgICAgfSBlbHNlIHsKICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CgogICAgICAgIGlmIChwZWckc2lsZW50RmFpbHMgPT09IDApIHsKICAgICAgICAgIHBlZyRmYWlsKHBlZyRjOTIpOwogICAgICAgIH0KICAgICAgfQoKICAgICAgaWYgKHMwID09PSBwZWckRkFJTEVEKSB7CiAgICAgICAgaWYgKGlucHV0LmNoYXJDb2RlQXQocGVnJGN1cnJQb3MpID09PSA0NSkgewogICAgICAgICAgczAgPSBwZWckYzkzOwogICAgICAgICAgcGVnJGN1cnJQb3MrKzsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgczAgPSBwZWckRkFJTEVEOwoKICAgICAgICAgIGlmIChwZWckc2lsZW50RmFpbHMgPT09IDApIHsKICAgICAgICAgICAgcGVnJGZhaWwocGVnJGM5NCk7CiAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICBpZiAoczAgPT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgIGlmIChpbnB1dC5jaGFyQ29kZUF0KHBlZyRjdXJyUG9zKSA9PT0gNjEpIHsKICAgICAgICAgICAgczAgPSBwZWckYzEyMDsKICAgICAgICAgICAgcGVnJGN1cnJQb3MrKzsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHMwID0gcGVnJEZBSUxFRDsKCiAgICAgICAgICAgIGlmIChwZWckc2lsZW50RmFpbHMgPT09IDApIHsKICAgICAgICAgICAgICBwZWckZmFpbChwZWckYzEyMSk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KCiAgICAgICAgICBpZiAoczAgPT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgaWYgKGlucHV0LmNoYXJDb2RlQXQocGVnJGN1cnJQb3MpID09PSA2MikgewogICAgICAgICAgICAgIHMwID0gcGVnJGM3NTsKICAgICAgICAgICAgICBwZWckY3VyclBvcysrOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIHMwID0gcGVnJEZBSUxFRDsKCiAgICAgICAgICAgICAgaWYgKHBlZyRzaWxlbnRGYWlscyA9PT0gMCkgewogICAgICAgICAgICAgICAgcGVnJGZhaWwocGVnJGM3Nik7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CgogICAgICAgICAgICBpZiAoczAgPT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgICBpZiAoaW5wdXQuY2hhckNvZGVBdChwZWckY3VyclBvcykgPT09IDYwKSB7CiAgICAgICAgICAgICAgICBzMCA9IHBlZyRjNzI7CiAgICAgICAgICAgICAgICBwZWckY3VyclBvcysrOwogICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CgogICAgICAgICAgICAgICAgaWYgKHBlZyRzaWxlbnRGYWlscyA9PT0gMCkgewogICAgICAgICAgICAgICAgICBwZWckZmFpbChwZWckYzczKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIGlmIChzMCA9PT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgICAgICAgaWYgKGlucHV0LmNoYXJDb2RlQXQocGVnJGN1cnJQb3MpID09PSAzMykgewogICAgICAgICAgICAgICAgICBzMCA9IHBlZyRjOTY7CiAgICAgICAgICAgICAgICAgIHBlZyRjdXJyUG9zKys7CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CgogICAgICAgICAgICAgICAgICBpZiAocGVnJHNpbGVudEZhaWxzID09PSAwKSB7CiAgICAgICAgICAgICAgICAgICAgcGVnJGZhaWwocGVnJGM5Nyk7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBpZiAoczAgPT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgICAgICAgaWYgKGlucHV0LmNoYXJDb2RlQXQocGVnJGN1cnJQb3MpID09PSA0MCkgewogICAgICAgICAgICAgICAgICAgIHMwID0gcGVnJGM1OwogICAgICAgICAgICAgICAgICAgIHBlZyRjdXJyUG9zKys7CiAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgczAgPSBwZWckRkFJTEVEOwoKICAgICAgICAgICAgICAgICAgICBpZiAocGVnJHNpbGVudEZhaWxzID09PSAwKSB7CiAgICAgICAgICAgICAgICAgICAgICBwZWckZmFpbChwZWckYzYpOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgaWYgKHMwID09PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgICAgICAgICAgaWYgKGlucHV0LmNoYXJDb2RlQXQocGVnJGN1cnJQb3MpID09PSA0MSkgewogICAgICAgICAgICAgICAgICAgICAgczAgPSBwZWckYzc7CiAgICAgICAgICAgICAgICAgICAgICBwZWckY3VyclBvcysrOwogICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CgogICAgICAgICAgICAgICAgICAgICAgaWYgKHBlZyRzaWxlbnRGYWlscyA9PT0gMCkgewogICAgICAgICAgICAgICAgICAgICAgICBwZWckZmFpbChwZWckYzgpOwogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgaWYgKHMwID09PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgICAgICAgICAgICBpZiAoaW5wdXQuY2hhckNvZGVBdChwZWckY3VyclBvcykgPT09IDEyMykgewogICAgICAgICAgICAgICAgICAgICAgICBzMCA9IHBlZyRjMTI7CiAgICAgICAgICAgICAgICAgICAgICAgIHBlZyRjdXJyUG9zKys7CiAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CgogICAgICAgICAgICAgICAgICAgICAgICBpZiAocGVnJHNpbGVudEZhaWxzID09PSAwKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgcGVnJGZhaWwocGVnJGMxMyk7CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgICBpZiAoczAgPT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGlucHV0LmNoYXJDb2RlQXQocGVnJGN1cnJQb3MpID09PSAxMjUpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICBzMCA9IHBlZyRjMTQ7CiAgICAgICAgICAgICAgICAgICAgICAgICAgcGVnJGN1cnJQb3MrKzsKICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CgogICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChwZWckc2lsZW50RmFpbHMgPT09IDApIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBlZyRmYWlsKHBlZyRjMTUpOwogICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHMwID09PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGlucHV0LmNoYXJDb2RlQXQocGVnJGN1cnJQb3MpID09PSA5MSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgczAgPSBwZWckYzEyMjsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBlZyRjdXJyUG9zKys7CiAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHMwID0gcGVnJEZBSUxFRDsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAocGVnJHNpbGVudEZhaWxzID09PSAwKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBlZyRmYWlsKHBlZyRjMTIzKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzMCA9PT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGlucHV0LmNoYXJDb2RlQXQocGVnJGN1cnJQb3MpID09PSA5MykgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzMCA9IHBlZyRjMTI0OwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwZWckY3VyclBvcysrOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgczAgPSBwZWckRkFJTEVEOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHBlZyRzaWxlbnRGYWlscyA9PT0gMCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBlZyRmYWlsKHBlZyRjMTI1KTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzMCA9PT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoaW5wdXQuY2hhckNvZGVBdChwZWckY3VyclBvcykgPT09IDk0KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgczAgPSBwZWckYzExNjsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwZWckY3VyclBvcysrOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHMwID0gcGVnJEZBSUxFRDsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHBlZyRzaWxlbnRGYWlscyA9PT0gMCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGVnJGZhaWwocGVnJGMxMTcpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHMwID09PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGlucHV0LmNoYXJDb2RlQXQocGVnJGN1cnJQb3MpID09PSAzNCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgczAgPSBwZWckYzM4OwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGVnJGN1cnJQb3MrKzsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgczAgPSBwZWckRkFJTEVEOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChwZWckc2lsZW50RmFpbHMgPT09IDApIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGVnJGZhaWwocGVnJGMzOSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoczAgPT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpbnB1dC5jaGFyQ29kZUF0KHBlZyRjdXJyUG9zKSA9PT0gMTI2KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHMwID0gcGVnJGMxMTA7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBlZyRjdXJyUG9zKys7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAocGVnJHNpbGVudEZhaWxzID09PSAwKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGVnJGZhaWwocGVnJGMxMTEpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHMwID09PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpbnB1dC5jaGFyQ29kZUF0KHBlZyRjdXJyUG9zKSA9PT0gNDIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzMCA9IHBlZyRjNTE7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGVnJGN1cnJQb3MrKzsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChwZWckc2lsZW50RmFpbHMgPT09IDApIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBlZyRmYWlsKHBlZyRjNTIpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHMwID09PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGlucHV0LmNoYXJDb2RlQXQocGVnJGN1cnJQb3MpID09PSA2MykgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgczAgPSBwZWckYzEwMjsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBlZyRjdXJyUG9zKys7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHMwID0gcGVnJEZBSUxFRDsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAocGVnJHNpbGVudEZhaWxzID09PSAwKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBlZyRmYWlsKHBlZyRjMTAzKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzMCA9PT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGlucHV0LmNoYXJDb2RlQXQocGVnJGN1cnJQb3MpID09PSA1OCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzMCA9IHBlZyRjMTA7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBlZyRjdXJyUG9zKys7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAocGVnJHNpbGVudEZhaWxzID09PSAwKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGVnJGZhaWwocGVnJGMxMSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoczAgPT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGlucHV0LmNoYXJDb2RlQXQocGVnJGN1cnJQb3MpID09PSA5MikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHMwID0gcGVnJGM0MjsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwZWckY3VyclBvcysrOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHMwID0gcGVnJEZBSUxFRDsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHBlZyRzaWxlbnRGYWlscyA9PT0gMCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGVnJGZhaWwocGVnJGM0Myk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoczAgPT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoaW5wdXQuY2hhckNvZGVBdChwZWckY3VyclBvcykgPT09IDQ3KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzMCA9IHBlZyRjMTA1OwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGVnJGN1cnJQb3MrKzsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgczAgPSBwZWckRkFJTEVEOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChwZWckc2lsZW50RmFpbHMgPT09IDApIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGVnJGZhaWwocGVnJGMxMDYpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQoKICAgICAgcmV0dXJuIHMwOwogICAgfQoKICAgIGZ1bmN0aW9uIHBlZyRwYXJzZUx1Y2VuZVRvKCkgewogICAgICB2YXIgczAsIHMxLCBzMiwgczMsIHM0OwogICAgICBzMCA9IHBlZyRjdXJyUG9zOwogICAgICBzMSA9IFtdOwogICAgICBzMiA9IHBlZyRwYXJzZVNwYWNlKCk7CgogICAgICBpZiAoczIgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICB3aGlsZSAoczIgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgIHMxLnB1c2goczIpOwogICAgICAgICAgczIgPSBwZWckcGFyc2VTcGFjZSgpOwogICAgICAgIH0KICAgICAgfSBlbHNlIHsKICAgICAgICBzMSA9IHBlZyRGQUlMRUQ7CiAgICAgIH0KCiAgICAgIGlmIChzMSAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgIGlmIChpbnB1dC5zdWJzdHIocGVnJGN1cnJQb3MsIDIpID09PSBwZWckYzEyNikgewogICAgICAgICAgczIgPSBwZWckYzEyNjsKICAgICAgICAgIHBlZyRjdXJyUG9zICs9IDI7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHMyID0gcGVnJEZBSUxFRDsKCiAgICAgICAgICBpZiAocGVnJHNpbGVudEZhaWxzID09PSAwKSB7CiAgICAgICAgICAgIHBlZyRmYWlsKHBlZyRjMTI3KTsKICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIGlmIChzMiAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgczMgPSBbXTsKICAgICAgICAgIHM0ID0gcGVnJHBhcnNlU3BhY2UoKTsKCiAgICAgICAgICBpZiAoczQgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgd2hpbGUgKHM0ICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgICAgczMucHVzaChzNCk7CiAgICAgICAgICAgICAgczQgPSBwZWckcGFyc2VTcGFjZSgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBzMyA9IHBlZyRGQUlMRUQ7CiAgICAgICAgICB9CgogICAgICAgICAgaWYgKHMzICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgIHMxID0gW3MxLCBzMiwgczNdOwogICAgICAgICAgICBzMCA9IHMxOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDsKICAgICAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICAgICAgfQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICAgIH0KICAgICAgfSBlbHNlIHsKICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgfQoKICAgICAgcmV0dXJuIHMwOwogICAgfQoKICAgIGZ1bmN0aW9uIHBlZyRwYXJzZUx1Y2VuZVJhbmdlU3RhcnQoKSB7CiAgICAgIHZhciBzMDsKCiAgICAgIGlmIChpbnB1dC5jaGFyQ29kZUF0KHBlZyRjdXJyUG9zKSA9PT0gOTEpIHsKICAgICAgICBzMCA9IHBlZyRjMTIyOwogICAgICAgIHBlZyRjdXJyUG9zKys7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgczAgPSBwZWckRkFJTEVEOwoKICAgICAgICBpZiAocGVnJHNpbGVudEZhaWxzID09PSAwKSB7CiAgICAgICAgICBwZWckZmFpbChwZWckYzEyMyk7CiAgICAgICAgfQogICAgICB9CgogICAgICBpZiAoczAgPT09IHBlZyRGQUlMRUQpIHsKICAgICAgICBpZiAoaW5wdXQuY2hhckNvZGVBdChwZWckY3VyclBvcykgPT09IDEyMykgewogICAgICAgICAgczAgPSBwZWckYzEyOwogICAgICAgICAgcGVnJGN1cnJQb3MrKzsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgczAgPSBwZWckRkFJTEVEOwoKICAgICAgICAgIGlmIChwZWckc2lsZW50RmFpbHMgPT09IDApIHsKICAgICAgICAgICAgcGVnJGZhaWwocGVnJGMxMyk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CgogICAgICByZXR1cm4gczA7CiAgICB9CgogICAgZnVuY3Rpb24gcGVnJHBhcnNlTHVjZW5lUmFuZ2VFbmQoKSB7CiAgICAgIHZhciBzMDsKCiAgICAgIGlmIChpbnB1dC5jaGFyQ29kZUF0KHBlZyRjdXJyUG9zKSA9PT0gOTMpIHsKICAgICAgICBzMCA9IHBlZyRjMTI0OwogICAgICAgIHBlZyRjdXJyUG9zKys7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgczAgPSBwZWckRkFJTEVEOwoKICAgICAgICBpZiAocGVnJHNpbGVudEZhaWxzID09PSAwKSB7CiAgICAgICAgICBwZWckZmFpbChwZWckYzEyNSk7CiAgICAgICAgfQogICAgICB9CgogICAgICBpZiAoczAgPT09IHBlZyRGQUlMRUQpIHsKICAgICAgICBpZiAoaW5wdXQuY2hhckNvZGVBdChwZWckY3VyclBvcykgPT09IDEyNSkgewogICAgICAgICAgczAgPSBwZWckYzE0OwogICAgICAgICAgcGVnJGN1cnJQb3MrKzsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgczAgPSBwZWckRkFJTEVEOwoKICAgICAgICAgIGlmIChwZWckc2lsZW50RmFpbHMgPT09IDApIHsKICAgICAgICAgICAgcGVnJGZhaWwocGVnJGMxNSk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CgogICAgICByZXR1cm4gczA7CiAgICB9CgogICAgdmFyIGVycm9yT25MdWNlbmVTeW50YXggPSBvcHRpb25zLmVycm9yT25MdWNlbmVTeW50YXgsCiAgICAgICAgcGFyc2VDdXJzb3IgPSBvcHRpb25zLnBhcnNlQ3Vyc29yLAogICAgICAgIGN1cnNvclN5bWJvbCA9IG9wdGlvbnMuY3Vyc29yU3ltYm9sLAogICAgICAgIF9vcHRpb25zJGFsbG93TGVhZGluZyA9IG9wdGlvbnMuYWxsb3dMZWFkaW5nV2lsZGNhcmRzLAogICAgICAgIGFsbG93TGVhZGluZ1dpbGRjYXJkcyA9IF9vcHRpb25zJGFsbG93TGVhZGluZyA9PT0gdm9pZCAwID8gdHJ1ZSA6IF9vcHRpb25zJGFsbG93TGVhZGluZywKICAgICAgICBub2RlVHlwZXMgPSBvcHRpb25zLmhlbHBlcnMubm9kZVR5cGVzOwogICAgdmFyIGJ1aWxkRnVuY3Rpb25Ob2RlID0gbm9kZVR5cGVzLmZ1bmN0aW9uLmJ1aWxkTm9kZVdpdGhBcmd1bWVudE5vZGVzOwogICAgdmFyIGJ1aWxkTGl0ZXJhbE5vZGUgPSBub2RlVHlwZXMubGl0ZXJhbC5idWlsZE5vZGU7CiAgICB2YXIgYnVpbGRXaWxkY2FyZE5vZGUgPSBub2RlVHlwZXMud2lsZGNhcmQuYnVpbGROb2RlOwogICAgdmFyIGJ1aWxkTmFtZWRBcmdOb2RlID0gbm9kZVR5cGVzLm5hbWVkQXJnLmJ1aWxkTm9kZTsKICAgIHZhciB3aWxkY2FyZFN5bWJvbCA9IG5vZGVUeXBlcy53aWxkY2FyZC53aWxkY2FyZFN5bWJvbDsKICAgIHBlZyRyZXN1bHQgPSBwZWckc3RhcnRSdWxlRnVuY3Rpb24oKTsKCiAgICBpZiAocGVnJHJlc3VsdCAhPT0gcGVnJEZBSUxFRCAmJiBwZWckY3VyclBvcyA9PT0gaW5wdXQubGVuZ3RoKSB7CiAgICAgIHJldHVybiBwZWckcmVzdWx0OwogICAgfSBlbHNlIHsKICAgICAgaWYgKHBlZyRyZXN1bHQgIT09IHBlZyRGQUlMRUQgJiYgcGVnJGN1cnJQb3MgPCBpbnB1dC5sZW5ndGgpIHsKICAgICAgICBwZWckZmFpbCh7CiAgICAgICAgICB0eXBlOiAiZW5kIiwKICAgICAgICAgIGRlc2NyaXB0aW9uOiAiZW5kIG9mIGlucHV0IgogICAgICAgIH0pOwogICAgICB9CgogICAgICB0aHJvdyBwZWckYnVpbGRFeGNlcHRpb24obnVsbCwgcGVnJG1heEZhaWxFeHBlY3RlZCwgcGVnJG1heEZhaWxQb3MgPCBpbnB1dC5sZW5ndGggPyBpbnB1dC5jaGFyQXQocGVnJG1heEZhaWxQb3MpIDogbnVsbCwgcGVnJG1heEZhaWxQb3MgPCBpbnB1dC5sZW5ndGggPyBwZWckY29tcHV0ZUxvY2F0aW9uKHBlZyRtYXhGYWlsUG9zLCBwZWckbWF4RmFpbFBvcyArIDEpIDogcGVnJGNvbXB1dGVMb2NhdGlvbihwZWckbWF4RmFpbFBvcywgcGVnJG1heEZhaWxQb3MpKTsKICAgIH0KICB9CgogIHJldHVybiB7CiAgICBTeW50YXhFcnJvcjogcGVnJFN5bnRheEVycm9yLAogICAgcGFyc2U6IHBlZyRwYXJzZQogIH07Cn0oKTs="},null]}