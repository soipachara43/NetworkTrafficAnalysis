{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/maps/public/connected_components/map/mb/image_utils.js","dependencies":[{"path":"x-pack/legacy/plugins/maps/public/connected_components/map/mb/image_utils.js","mtime":1589249552412},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLlJHQkFJbWFnZSA9IGV4cG9ydHMuQWxwaGFJbWFnZSA9IHZvaWQgMDsKCnZhciBfYXNzZXJ0ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCJhc3NlcnQiKSk7CgpmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfQoKZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb24iKTsgfSB9CgpmdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmICgidmFsdWUiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfQoKZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH0KCmZ1bmN0aW9uIGNyZWF0ZUltYWdlKGltYWdlLCBfcmVmLCBjaGFubmVscywgZGF0YSkgewogIHZhciB3aWR0aCA9IF9yZWYud2lkdGgsCiAgICAgIGhlaWdodCA9IF9yZWYuaGVpZ2h0OwoKICBpZiAoIWRhdGEpIHsKICAgIGRhdGEgPSBuZXcgVWludDhBcnJheSh3aWR0aCAqIGhlaWdodCAqIGNoYW5uZWxzKTsKICB9IGVsc2UgaWYgKGRhdGEgaW5zdGFuY2VvZiBVaW50OENsYW1wZWRBcnJheSkgewogICAgZGF0YSA9IG5ldyBVaW50OEFycmF5KGRhdGEuYnVmZmVyKTsKICB9IGVsc2UgaWYgKGRhdGEubGVuZ3RoICE9PSB3aWR0aCAqIGhlaWdodCAqIGNoYW5uZWxzKSB7CiAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcignbWlzbWF0Y2hlZCBpbWFnZSBzaXplJyk7CiAgfQoKICBpbWFnZS53aWR0aCA9IHdpZHRoOwogIGltYWdlLmhlaWdodCA9IGhlaWdodDsKICBpbWFnZS5kYXRhID0gZGF0YTsKICByZXR1cm4gaW1hZ2U7Cn0KCmZ1bmN0aW9uIHJlc2l6ZUltYWdlKGltYWdlLCBfcmVmMiwgY2hhbm5lbHMpIHsKICB2YXIgd2lkdGggPSBfcmVmMi53aWR0aCwKICAgICAgaGVpZ2h0ID0gX3JlZjIuaGVpZ2h0OwoKICBpZiAod2lkdGggPT09IGltYWdlLndpZHRoICYmIGhlaWdodCA9PT0gaW1hZ2UuaGVpZ2h0KSB7CiAgICByZXR1cm47CiAgfQoKICB2YXIgbmV3SW1hZ2UgPSBjcmVhdGVJbWFnZSh7fSwgewogICAgd2lkdGg6IHdpZHRoLAogICAgaGVpZ2h0OiBoZWlnaHQKICB9LCBjaGFubmVscyk7CiAgY29weUltYWdlKGltYWdlLCBuZXdJbWFnZSwgewogICAgeDogMCwKICAgIHk6IDAKICB9LCB7CiAgICB4OiAwLAogICAgeTogMAogIH0sIHsKICAgIHdpZHRoOiBNYXRoLm1pbihpbWFnZS53aWR0aCwgd2lkdGgpLAogICAgaGVpZ2h0OiBNYXRoLm1pbihpbWFnZS5oZWlnaHQsIGhlaWdodCkKICB9LCBjaGFubmVscyk7CiAgaW1hZ2Uud2lkdGggPSB3aWR0aDsKICBpbWFnZS5oZWlnaHQgPSBoZWlnaHQ7CiAgaW1hZ2UuZGF0YSA9IG5ld0ltYWdlLmRhdGE7Cn0KCmZ1bmN0aW9uIGNvcHlJbWFnZShzcmNJbWcsIGRzdEltZywgc3JjUHQsIGRzdFB0LCBzaXplLCBjaGFubmVscykgewogIGlmIChzaXplLndpZHRoID09PSAwIHx8IHNpemUuaGVpZ2h0ID09PSAwKSB7CiAgICByZXR1cm4gZHN0SW1nOwogIH0KCiAgaWYgKHNpemUud2lkdGggPiBzcmNJbWcud2lkdGggfHwgc2l6ZS5oZWlnaHQgPiBzcmNJbWcuaGVpZ2h0IHx8IHNyY1B0LnggPiBzcmNJbWcud2lkdGggLSBzaXplLndpZHRoIHx8IHNyY1B0LnkgPiBzcmNJbWcuaGVpZ2h0IC0gc2l6ZS5oZWlnaHQpIHsKICAgIHRocm93IG5ldyBSYW5nZUVycm9yKCdvdXQgb2YgcmFuZ2Ugc291cmNlIGNvb3JkaW5hdGVzIGZvciBpbWFnZSBjb3B5Jyk7CiAgfQoKICBpZiAoc2l6ZS53aWR0aCA+IGRzdEltZy53aWR0aCB8fCBzaXplLmhlaWdodCA+IGRzdEltZy5oZWlnaHQgfHwgZHN0UHQueCA+IGRzdEltZy53aWR0aCAtIHNpemUud2lkdGggfHwgZHN0UHQueSA+IGRzdEltZy5oZWlnaHQgLSBzaXplLmhlaWdodCkgewogICAgdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ291dCBvZiByYW5nZSBkZXN0aW5hdGlvbiBjb29yZGluYXRlcyBmb3IgaW1hZ2UgY29weScpOwogIH0KCiAgdmFyIHNyY0RhdGEgPSBzcmNJbWcuZGF0YTsKICB2YXIgZHN0RGF0YSA9IGRzdEltZy5kYXRhOwogICgwLCBfYXNzZXJ0LmRlZmF1bHQpKHNyY0RhdGEgIT09IGRzdERhdGEpOwoKICBmb3IgKHZhciB5ID0gMDsgeSA8IHNpemUuaGVpZ2h0OyB5KyspIHsKICAgIHZhciBzcmNPZmZzZXQgPSAoKHNyY1B0LnkgKyB5KSAqIHNyY0ltZy53aWR0aCArIHNyY1B0LngpICogY2hhbm5lbHM7CiAgICB2YXIgZHN0T2Zmc2V0ID0gKChkc3RQdC55ICsgeSkgKiBkc3RJbWcud2lkdGggKyBkc3RQdC54KSAqIGNoYW5uZWxzOwoKICAgIGZvciAodmFyIGkgPSAwOyBpIDwgc2l6ZS53aWR0aCAqIGNoYW5uZWxzOyBpKyspIHsKICAgICAgZHN0RGF0YVtkc3RPZmZzZXQgKyBpXSA9IHNyY0RhdGFbc3JjT2Zmc2V0ICsgaV07CiAgICB9CiAgfQoKICByZXR1cm4gZHN0SW1nOwp9Cgp2YXIgQWxwaGFJbWFnZSA9Ci8qI19fUFVSRV9fKi8KZnVuY3Rpb24gKCkgewogIGZ1bmN0aW9uIEFscGhhSW1hZ2Uoc2l6ZSwgZGF0YSkgewogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEFscGhhSW1hZ2UpOwoKICAgIGNyZWF0ZUltYWdlKHRoaXMsIHNpemUsIDEsIGRhdGEpOwogIH0KCiAgX2NyZWF0ZUNsYXNzKEFscGhhSW1hZ2UsIFt7CiAgICBrZXk6ICJyZXNpemUiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHJlc2l6ZShzaXplKSB7CiAgICAgIHJlc2l6ZUltYWdlKHRoaXMsIHNpemUsIDEpOwogICAgfQogIH0sIHsKICAgIGtleTogImNsb25lIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBjbG9uZSgpIHsKICAgICAgcmV0dXJuIG5ldyBBbHBoYUltYWdlKHsKICAgICAgICB3aWR0aDogdGhpcy53aWR0aCwKICAgICAgICBoZWlnaHQ6IHRoaXMuaGVpZ2h0CiAgICAgIH0sIG5ldyBVaW50OEFycmF5KHRoaXMuZGF0YSkpOwogICAgfQogIH1dLCBbewogICAga2V5OiAiY29weSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gY29weShzcmNJbWcsIGRzdEltZywgc3JjUHQsIGRzdFB0LCBzaXplKSB7CiAgICAgIGNvcHlJbWFnZShzcmNJbWcsIGRzdEltZywgc3JjUHQsIGRzdFB0LCBzaXplLCAxKTsKICAgIH0KICB9XSk7CgogIHJldHVybiBBbHBoYUltYWdlOwp9KCk7IC8vIE5vdCBwcmVtdWx0aXBsaWVkLCBiZWNhdXNlIEltYWdlRGF0YSBpcyBub3QgcHJlbXVsdGlwbGllZC4KLy8gVU5QQUNLX1BSRU1VTFRJUExZX0FMUEhBX1dFQkdMIG11c3QgYmUgdXNlZCB3aGVuIHVwbG9hZGluZyB0byBhIHRleHR1cmUuCgoKZXhwb3J0cy5BbHBoYUltYWdlID0gQWxwaGFJbWFnZTsKCnZhciBSR0JBSW1hZ2UgPQovKiNfX1BVUkVfXyovCmZ1bmN0aW9uICgpIHsKICAvLyBkYXRhIG11c3QgYmUgYSBVaW50OEFycmF5IGluc3RlYWQgb2YgVWludDhDbGFtcGVkQXJyYXkgYmVjYXVzZSB0ZXhJbWFnZTJEIGRvZXMgbm90CiAgLy8gc3VwcG9ydCBVaW50OENsYW1wZWRBcnJheSBpbiBhbGwgYnJvd3NlcnMKICBmdW5jdGlvbiBSR0JBSW1hZ2Uoc2l6ZSwgZGF0YSkgewogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFJHQkFJbWFnZSk7CgogICAgY3JlYXRlSW1hZ2UodGhpcywgc2l6ZSwgNCwgZGF0YSk7CiAgfQoKICBfY3JlYXRlQ2xhc3MoUkdCQUltYWdlLCBbewogICAga2V5OiAicmVzaXplIiwKICAgIHZhbHVlOiBmdW5jdGlvbiByZXNpemUoc2l6ZSkgewogICAgICByZXNpemVJbWFnZSh0aGlzLCBzaXplLCA0KTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJyZXBsYWNlIiwKICAgIHZhbHVlOiBmdW5jdGlvbiByZXBsYWNlKGRhdGEsIGNvcHkpIHsKICAgICAgaWYgKGNvcHkpIHsKICAgICAgICB0aGlzLmRhdGEuc2V0KGRhdGEpOwogICAgICB9IGVsc2UgaWYgKGRhdGEgaW5zdGFuY2VvZiBVaW50OENsYW1wZWRBcnJheSkgewogICAgICAgIHRoaXMuZGF0YSA9IG5ldyBVaW50OEFycmF5KGRhdGEuYnVmZmVyKTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLmRhdGEgPSBkYXRhOwogICAgICB9CiAgICB9CiAgfSwgewogICAga2V5OiAiY2xvbmUiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGNsb25lKCkgewogICAgICByZXR1cm4gbmV3IFJHQkFJbWFnZSh7CiAgICAgICAgd2lkdGg6IHRoaXMud2lkdGgsCiAgICAgICAgaGVpZ2h0OiB0aGlzLmhlaWdodAogICAgICB9LCBuZXcgVWludDhBcnJheSh0aGlzLmRhdGEpKTsKICAgIH0KICB9XSwgW3sKICAgIGtleTogImNvcHkiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGNvcHkoc3JjSW1nLCBkc3RJbWcsIHNyY1B0LCBkc3RQdCwgc2l6ZSkgewogICAgICBjb3B5SW1hZ2Uoc3JjSW1nLCBkc3RJbWcsIHNyY1B0LCBkc3RQdCwgc2l6ZSwgNCk7CiAgICB9CiAgfV0pOwoKICByZXR1cm4gUkdCQUltYWdlOwp9KCk7CgpleHBvcnRzLlJHQkFJbWFnZSA9IFJHQkFJbWFnZTs="},null]}