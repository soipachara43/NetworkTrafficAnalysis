{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!src/plugins/data/common/search/aggs/date_interval_utils/least_common_interval.js","dependencies":[{"path":"src/plugins/data/common/search/aggs/date_interval_utils/least_common_interval.js","mtime":1589249550591},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmxlYXN0Q29tbW9uSW50ZXJ2YWwgPSBsZWFzdENvbW1vbkludGVydmFsOwoKdmFyIF9kYXRlbWF0aCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgiQGVsYXN0aWMvZGF0ZW1hdGgiKSk7Cgp2YXIgX2xlYXN0X2NvbW1vbl9tdWx0aXBsZSA9IHJlcXVpcmUoIi4vbGVhc3RfY29tbW9uX211bHRpcGxlIik7Cgp2YXIgX3BhcnNlX2VzX2ludGVydmFsID0gcmVxdWlyZSgiLi9wYXJzZV9lc19pbnRlcnZhbCIpOwoKZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsKICByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogewogICAgZGVmYXVsdDogb2JqCiAgfTsKfQovKgogKiBMaWNlbnNlZCB0byBFbGFzdGljc2VhcmNoIEIuVi4gdW5kZXIgb25lIG9yIG1vcmUgY29udHJpYnV0b3IKICogbGljZW5zZSBhZ3JlZW1lbnRzLiBTZWUgdGhlIE5PVElDRSBmaWxlIGRpc3RyaWJ1dGVkIHdpdGgKICogdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uIHJlZ2FyZGluZyBjb3B5cmlnaHQKICogb3duZXJzaGlwLiBFbGFzdGljc2VhcmNoIEIuVi4gbGljZW5zZXMgdGhpcyBmaWxlIHRvIHlvdSB1bmRlcgogKiB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsgeW91IG1heQogKiBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgogKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKICoKICogICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wCiAqCiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywKICogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4KICogIkFTIElTIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZCiAqIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZQogKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zCiAqIHVuZGVyIHRoZSBMaWNlbnNlLgogKi8KCi8qKgogKiBGaW5kcyB0aGUgbG93ZXN0IGNvbW1vbiBpbnRlcnZhbCBiZXR3ZWVuIHR3byBnaXZlbiBFUyBkYXRlIGhpc3RvZ3JhbSBpbnRlcnZhbHMKICogaW4gdGhlIGZvcm1hdCBvZiAodmFsdWUpKHVuaXQpCiAqCiAqICAtIGBtc2AgdW5pdHMgYXJlIGZpeGVkLWxlbmd0aCBpbnRlcnZhbHMKICogIC0gYHMsIG0sIGgsIGRgIHVuaXRzIGFyZSBmaXhlZC1sZW5ndGggaW50ZXJ2YWxzIHdoZW4gdmFsdWUgPiAxIChpLmUuIDJtLCAyNGgsIDdkKSwKICogICAgYnV0IGNhbGVuZGFyIGludGVydmFsIHdoZW4gdmFsdWUgPT09IDEKICogIC0gYHcsIE0sIHEsIHlgIHVuaXRzIGFyZSBjYWxlbmRhciBpbnRlcnZhbHMgYW5kIGRvIG5vdCBzdXBwb3J0IG11bHRpcGxlLCBha2EKICogICAgdmFsdWUgbXVzdCA9PT0gMQogKgogKiBAcmV0dXJucyB7c3RyaW5nfQogKi8KCgpmdW5jdGlvbiBsZWFzdENvbW1vbkludGVydmFsKGEsIGIpIHsKICB2YXIgX2RhdGVtYXRoJGRlZmF1bHQgPSBfZGF0ZW1hdGguZGVmYXVsdCwKICAgICAgdW5pdHNNYXAgPSBfZGF0ZW1hdGgkZGVmYXVsdC51bml0c01hcCwKICAgICAgdW5pdHNEZXNjID0gX2RhdGVtYXRoJGRlZmF1bHQudW5pdHNEZXNjOwogIHZhciBhSW50ID0gKDAsIF9wYXJzZV9lc19pbnRlcnZhbC5wYXJzZUVzSW50ZXJ2YWwpKGEpOwogIHZhciBiSW50ID0gKDAsIF9wYXJzZV9lc19pbnRlcnZhbC5wYXJzZUVzSW50ZXJ2YWwpKGIpOwoKICBpZiAoYSA9PT0gYikgewogICAgcmV0dXJuIGE7CiAgfQoKICB2YXIgYVVuaXQgPSB1bml0c01hcFthSW50LnVuaXRdOwogIHZhciBiVW5pdCA9IHVuaXRzTWFwW2JJbnQudW5pdF07IC8vIElmIGludGVydmFscyBhcmVuJ3QgdGhlIHNhbWUgdHlwZSwgdGhyb3cgZXJyb3IKCiAgaWYgKGFJbnQudHlwZSAhPT0gYkludC50eXBlKSB7CiAgICB0aHJvdyBFcnJvcigiSW5jb21wYXRpYmxlIGludGVydmFsczogIi5jb25jYXQoYSwgIiAoIikuY29uY2F0KGFJbnQudHlwZSwgIiksICIpLmNvbmNhdChiLCAiICgiKS5jb25jYXQoYkludC50eXBlLCAiKSIpKTsKICB9IC8vIElmIGludGVydmFscyBhcmUgY2FsZW5kYXIgdW5pdHMsIHBpY2sgdGhlIGxhcmdlciBvbmUgKGNhbGVuZGFyIHZhbHVlIGlzIGFsd2F5cyAxKQoKCiAgaWYgKGFJbnQudHlwZSA9PT0gJ2NhbGVuZGFyJyB8fCBiSW50LnR5cGUgPT09ICdjYWxlbmRhcicpIHsKICAgIHJldHVybiBhVW5pdC53ZWlnaHQgPiBiVW5pdC53ZWlnaHQgPyAiIi5jb25jYXQoYUludC52YWx1ZSkuY29uY2F0KGFJbnQudW5pdCkgOiAiIi5jb25jYXQoYkludC52YWx1ZSkuY29uY2F0KGJJbnQudW5pdCk7CiAgfSAvLyBPdGhlcndpc2UgaWYgaW50ZXJ2YWxzIGFyZSBmaXhlZCB1bml0cywgZmluZCBsZWFzdCBjb21tb24gbXVsdGlwbGUgaW4gbWlsbGlzZWNvbmRzCgoKICB2YXIgYU1zID0gYUludC52YWx1ZSAqIGFVbml0LmJhc2U7CiAgdmFyIGJNcyA9IGJJbnQudmFsdWUgKiBiVW5pdC5iYXNlOwogIHZhciBsY21NcyA9ICgwLCBfbGVhc3RfY29tbW9uX211bHRpcGxlLmxlYXN0Q29tbW9uTXVsdGlwbGUpKGFNcywgYk1zKTsgLy8gUmV0dXJuIG9yaWdpbmFsIGludGVydmFsIHN0cmluZyBpZiBpdCBtYXRjaGVzIG9uZSBvZiB0aGUgb3JpZ2luYWwgbWlsbGlzZWNvbmRzCgogIGlmIChsY21NcyA9PT0gYk1zKSB7CiAgICByZXR1cm4gYi5yZXBsYWNlKC9ccy9nLCAnJyk7CiAgfQoKICBpZiAobGNtTXMgPT09IGFNcykgewogICAgcmV0dXJuIGEucmVwbGFjZSgvXHMvZywgJycpOwogIH0gLy8gT3RoZXJ3aXNlIGZpbmQgdGhlIGJpZ2dlc3Qgbm9uLWNhbGVuZGFyIHVuaXQgdGhhdCBkaXZpZGVzIGV2ZW5seQoKCiAgdmFyIGxjbVVuaXQgPSB1bml0c0Rlc2MuZmluZChmdW5jdGlvbiAodW5pdCkgewogICAgdmFyIHVuaXRJbmZvID0gdW5pdHNNYXBbdW5pdF07CiAgICByZXR1cm4gISEodW5pdEluZm8udHlwZSAhPT0gJ2NhbGVuZGFyJyAmJiBsY21NcyAlIHVuaXRJbmZvLmJhc2UgPT09IDApOwogIH0pOyAvLyBUaHJvdyBlcnJvciBpbiBjYXNlIHdlIGNvdWxkbid0IGRpdmlkZSBldmVubHksIHRoZW9yZXRpY2FsbHkgd2UgbmV2ZXIgZ2V0IGhlcmUgYXMgZXZlcnl0aGluZyBpcwogIC8vIGRpdmlzaWJsZSBieSAxIG1pbGxpc2Vjb25kCgogIGlmICghbGNtVW5pdCkgewogICAgdGhyb3cgRXJyb3IoIlVuYWJsZSB0byBmaW5kIGNvbW1vbiBpbnRlcnZhbCBmb3I6ICIuY29uY2F0KGEsICIsICIpLmNvbmNhdChiKSk7CiAgfSAvLyBSZXR1cm4gdGhlIGludGVydmFsIHN0cmluZwoKCiAgcmV0dXJuICIiLmNvbmNhdChsY21NcyAvIHVuaXRzTWFwW2xjbVVuaXRdLmJhc2UpLmNvbmNhdChsY21Vbml0KTsKfQ=="},null]}