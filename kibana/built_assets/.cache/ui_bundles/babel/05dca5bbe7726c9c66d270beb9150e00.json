{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!src/plugins/embeddable/public/lib/actions/edit_panel_action.js","dependencies":[{"path":"src/plugins/embeddable/public/lib/actions/edit_panel_action.js","mtime":1589249550755},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLkVkaXRQYW5lbEFjdGlvbiA9IGV4cG9ydHMuQUNUSU9OX0VESVRfUEFORUwgPSB2b2lkIDA7Cgp2YXIgX2kxOG4gPSByZXF1aXJlKCJAa2JuL2kxOG4iKTsKCnZhciBfdHlwZXMgPSByZXF1aXJlKCIuLi90eXBlcyIpOwoKdmFyIF9lcnJvcnMgPSByZXF1aXJlKCIuLi9lcnJvcnMiKTsKCmZ1bmN0aW9uIGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywga2V5LCBhcmcpIHsKICB0cnkgewogICAgdmFyIGluZm8gPSBnZW5ba2V5XShhcmcpOwogICAgdmFyIHZhbHVlID0gaW5mby52YWx1ZTsKICB9IGNhdGNoIChlcnJvcikgewogICAgcmVqZWN0KGVycm9yKTsKICAgIHJldHVybjsKICB9CgogIGlmIChpbmZvLmRvbmUpIHsKICAgIHJlc29sdmUodmFsdWUpOwogIH0gZWxzZSB7CiAgICBQcm9taXNlLnJlc29sdmUodmFsdWUpLnRoZW4oX25leHQsIF90aHJvdyk7CiAgfQp9CgpmdW5jdGlvbiBfYXN5bmNUb0dlbmVyYXRvcihmbikgewogIHJldHVybiBmdW5jdGlvbiAoKSB7CiAgICB2YXIgc2VsZiA9IHRoaXMsCiAgICAgICAgYXJncyA9IGFyZ3VtZW50czsKICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICAgIHZhciBnZW4gPSBmbi5hcHBseShzZWxmLCBhcmdzKTsKCiAgICAgIGZ1bmN0aW9uIF9uZXh0KHZhbHVlKSB7CiAgICAgICAgYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCAibmV4dCIsIHZhbHVlKTsKICAgICAgfQoKICAgICAgZnVuY3Rpb24gX3Rocm93KGVycikgewogICAgICAgIGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywgInRocm93IiwgZXJyKTsKICAgICAgfQoKICAgICAgX25leHQodW5kZWZpbmVkKTsKICAgIH0pOwogIH07Cn0KCmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsKICBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgewogICAgdGhyb3cgbmV3IFR5cGVFcnJvcigiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uIik7CiAgfQp9CgpmdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7CiAgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgewogICAgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsKICAgIGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsKICAgIGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsKICAgIGlmICgidmFsdWUiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOwogICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOwogIH0KfQoKZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgewogIGlmIChwcm90b1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOwogIGlmIChzdGF0aWNQcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsKICByZXR1cm4gQ29uc3RydWN0b3I7Cn0KCmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHsKICBpZiAoa2V5IGluIG9iaikgewogICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7CiAgICAgIHZhbHVlOiB2YWx1ZSwKICAgICAgZW51bWVyYWJsZTogdHJ1ZSwKICAgICAgY29uZmlndXJhYmxlOiB0cnVlLAogICAgICB3cml0YWJsZTogdHJ1ZQogICAgfSk7CiAgfSBlbHNlIHsKICAgIG9ialtrZXldID0gdmFsdWU7CiAgfQoKICByZXR1cm4gb2JqOwp9Cgp2YXIgQUNUSU9OX0VESVRfUEFORUwgPSAnZWRpdFBhbmVsJzsKZXhwb3J0cy5BQ1RJT05fRURJVF9QQU5FTCA9IEFDVElPTl9FRElUX1BBTkVMOwoKdmFyIEVkaXRQYW5lbEFjdGlvbiA9Ci8qI19fUFVSRV9fKi8KZnVuY3Rpb24gKCkgewogIGZ1bmN0aW9uIEVkaXRQYW5lbEFjdGlvbihnZXRFbWJlZGRhYmxlRmFjdG9yeSkgewogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEVkaXRQYW5lbEFjdGlvbik7CgogICAgdGhpcy5nZXRFbWJlZGRhYmxlRmFjdG9yeSA9IGdldEVtYmVkZGFibGVGYWN0b3J5OwoKICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCAidHlwZSIsIEFDVElPTl9FRElUX1BBTkVMKTsKCiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgImlkIiwgQUNUSU9OX0VESVRfUEFORUwpOwoKICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCAib3JkZXIiLCAxNSk7CiAgfQoKICBfY3JlYXRlQ2xhc3MoRWRpdFBhbmVsQWN0aW9uLCBbewogICAga2V5OiAiZ2V0RGlzcGxheU5hbWUiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdldERpc3BsYXlOYW1lKF9yZWYpIHsKICAgICAgdmFyIGVtYmVkZGFibGUgPSBfcmVmLmVtYmVkZGFibGU7CiAgICAgIHZhciBmYWN0b3J5ID0gdGhpcy5nZXRFbWJlZGRhYmxlRmFjdG9yeShlbWJlZGRhYmxlLnR5cGUpOwoKICAgICAgaWYgKCFmYWN0b3J5KSB7CiAgICAgICAgdGhyb3cgbmV3IF9lcnJvcnMuRW1iZWRkYWJsZUZhY3RvcnlOb3RGb3VuZEVycm9yKGVtYmVkZGFibGUudHlwZSk7CiAgICAgIH0KCiAgICAgIHJldHVybiBfaTE4bi5pMThuLnRyYW5zbGF0ZSgnZW1iZWRkYWJsZUFwaS5wYW5lbC5lZGl0UGFuZWwuZGlzcGxheU5hbWUnLCB7CiAgICAgICAgZGVmYXVsdE1lc3NhZ2U6ICdFZGl0IHt2YWx1ZX0nLAogICAgICAgIHZhbHVlczogewogICAgICAgICAgdmFsdWU6IGZhY3RvcnkuZ2V0RGlzcGxheU5hbWUoKQogICAgICAgIH0KICAgICAgfSk7CiAgICB9CiAgfSwgewogICAga2V5OiAiZ2V0SWNvblR5cGUiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdldEljb25UeXBlKCkgewogICAgICByZXR1cm4gJ3BlbmNpbCc7CiAgICB9CiAgfSwgewogICAga2V5OiAiaXNDb21wYXRpYmxlIiwKICAgIHZhbHVlOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfaXNDb21wYXRpYmxlID0gX2FzeW5jVG9HZW5lcmF0b3IoCiAgICAgIC8qI19fUFVSRV9fKi8KICAgICAgcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShfcmVmMikgewogICAgICAgIHZhciBlbWJlZGRhYmxlLCBjYW5FZGl0RW1iZWRkYWJsZSwgaW5EYXNoYm9hcmRFZGl0TW9kZTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBlbWJlZGRhYmxlID0gX3JlZjIuZW1iZWRkYWJsZTsKICAgICAgICAgICAgICAgIGNhbkVkaXRFbWJlZGRhYmxlID0gQm9vbGVhbihlbWJlZGRhYmxlICYmIGVtYmVkZGFibGUuZ2V0T3V0cHV0KCkuZWRpdGFibGUgJiYgZW1iZWRkYWJsZS5nZXRPdXRwdXQoKS5lZGl0VXJsKTsKICAgICAgICAgICAgICAgIGluRGFzaGJvYXJkRWRpdE1vZGUgPSBlbWJlZGRhYmxlLmdldElucHV0KCkudmlld01vZGUgPT09IF90eXBlcy5WaWV3TW9kZS5FRElUOwogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgQm9vbGVhbihjYW5FZGl0RW1iZWRkYWJsZSAmJiBpbkRhc2hib2FyZEVkaXRNb2RlKSk7CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSk7CgogICAgICBmdW5jdGlvbiBpc0NvbXBhdGlibGUoX3gpIHsKICAgICAgICByZXR1cm4gX2lzQ29tcGF0aWJsZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gaXNDb21wYXRpYmxlOwogICAgfSgpCiAgfSwgewogICAga2V5OiAiZXhlY3V0ZSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gKCkgewogICAgICB2YXIgX2V4ZWN1dGUgPSBfYXN5bmNUb0dlbmVyYXRvcigKICAgICAgLyojX19QVVJFX18qLwogICAgICByZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5hYnJ1cHQoInJldHVybiIpOwoKICAgICAgICAgICAgICBjYXNlIDE6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIpOwogICAgICB9KSk7CgogICAgICBmdW5jdGlvbiBleGVjdXRlKCkgewogICAgICAgIHJldHVybiBfZXhlY3V0ZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gZXhlY3V0ZTsKICAgIH0oKQogIH0sIHsKICAgIGtleTogImdldEhyZWYiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdldEhyZWYoX3JlZjMpIHsKICAgICAgdmFyIGVtYmVkZGFibGUgPSBfcmVmMy5lbWJlZGRhYmxlOwogICAgICB2YXIgZWRpdFVybCA9IGVtYmVkZGFibGUgPyBlbWJlZGRhYmxlLmdldE91dHB1dCgpLmVkaXRVcmwgOiB1bmRlZmluZWQ7CiAgICAgIHJldHVybiBlZGl0VXJsID8gZWRpdFVybCA6ICcnOwogICAgfQogIH1dKTsKCiAgcmV0dXJuIEVkaXRQYW5lbEFjdGlvbjsKfSgpOwoKZXhwb3J0cy5FZGl0UGFuZWxBY3Rpb24gPSBFZGl0UGFuZWxBY3Rpb247"},null]}