{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!src/core/public/chrome/recently_accessed/recently_accessed_service.js","dependencies":[{"path":"src/core/public/chrome/recently_accessed/recently_accessed_service.js","mtime":1589249549290},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLlJlY2VudGx5QWNjZXNzZWRTZXJ2aWNlID0gdm9pZCAwOwoKdmFyIF9wZXJzaXN0ZWRfbG9nID0gcmVxdWlyZSgiLi9wZXJzaXN0ZWRfbG9nIik7Cgp2YXIgX2NyZWF0ZV9sb2dfa2V5ID0gcmVxdWlyZSgiLi9jcmVhdGVfbG9nX2tleSIpOwoKZnVuY3Rpb24gYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCBrZXksIGFyZykgewogIHRyeSB7CiAgICB2YXIgaW5mbyA9IGdlbltrZXldKGFyZyk7CiAgICB2YXIgdmFsdWUgPSBpbmZvLnZhbHVlOwogIH0gY2F0Y2ggKGVycm9yKSB7CiAgICByZWplY3QoZXJyb3IpOwogICAgcmV0dXJuOwogIH0KCiAgaWYgKGluZm8uZG9uZSkgewogICAgcmVzb2x2ZSh2YWx1ZSk7CiAgfSBlbHNlIHsKICAgIFByb21pc2UucmVzb2x2ZSh2YWx1ZSkudGhlbihfbmV4dCwgX3Rocm93KTsKICB9Cn0KCmZ1bmN0aW9uIF9hc3luY1RvR2VuZXJhdG9yKGZuKSB7CiAgcmV0dXJuIGZ1bmN0aW9uICgpIHsKICAgIHZhciBzZWxmID0gdGhpcywKICAgICAgICBhcmdzID0gYXJndW1lbnRzOwogICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgICAgdmFyIGdlbiA9IGZuLmFwcGx5KHNlbGYsIGFyZ3MpOwoKICAgICAgZnVuY3Rpb24gX25leHQodmFsdWUpIHsKICAgICAgICBhc3luY0dlbmVyYXRvclN0ZXAoZ2VuLCByZXNvbHZlLCByZWplY3QsIF9uZXh0LCBfdGhyb3csICJuZXh0IiwgdmFsdWUpOwogICAgICB9CgogICAgICBmdW5jdGlvbiBfdGhyb3coZXJyKSB7CiAgICAgICAgYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCAidGhyb3ciLCBlcnIpOwogICAgICB9CgogICAgICBfbmV4dCh1bmRlZmluZWQpOwogICAgfSk7CiAgfTsKfQoKZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgewogIGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7CiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb24iKTsKICB9Cn0KCmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsKICBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7CiAgICB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOwogICAgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOwogICAgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOwogICAgaWYgKCJ2YWx1ZSIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7CiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7CiAgfQp9CgpmdW5jdGlvbiBfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7CiAgaWYgKHByb3RvUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7CiAgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOwogIHJldHVybiBDb25zdHJ1Y3RvcjsKfQovKiogQGludGVybmFsICovCgoKdmFyIFJlY2VudGx5QWNjZXNzZWRTZXJ2aWNlID0KLyojX19QVVJFX18qLwpmdW5jdGlvbiAoKSB7CiAgZnVuY3Rpb24gUmVjZW50bHlBY2Nlc3NlZFNlcnZpY2UoKSB7CiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgUmVjZW50bHlBY2Nlc3NlZFNlcnZpY2UpOwogIH0KCiAgX2NyZWF0ZUNsYXNzKFJlY2VudGx5QWNjZXNzZWRTZXJ2aWNlLCBbewogICAga2V5OiAic3RhcnQiLAogICAgdmFsdWU6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF9zdGFydCA9IF9hc3luY1RvR2VuZXJhdG9yKAogICAgICAvKiNfX1BVUkVfXyovCiAgICAgIHJlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoX3JlZikgewogICAgICAgIHZhciBodHRwLCBsb2dLZXksIGhpc3Rvcnk7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgaHR0cCA9IF9yZWYuaHR0cDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuICgwLCBfY3JlYXRlX2xvZ19rZXkuY3JlYXRlTG9nS2V5KSgncmVjZW50bHlBY2Nlc3NlZCcsIGh0dHAuYmFzZVBhdGguZ2V0KCkpOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICBsb2dLZXkgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgaGlzdG9yeSA9IG5ldyBfcGVyc2lzdGVkX2xvZy5QZXJzaXN0ZWRMb2cobG9nS2V5LCB7CiAgICAgICAgICAgICAgICAgIG1heExlbmd0aDogMjAsCiAgICAgICAgICAgICAgICAgIGlzRXF1YWw6IGZ1bmN0aW9uIGlzRXF1YWwob2xkSXRlbSwgbmV3SXRlbSkgewogICAgICAgICAgICAgICAgICAgIHJldHVybiBvbGRJdGVtLmlkID09PSBuZXdJdGVtLmlkOwogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIHsKICAgICAgICAgICAgICAgICAgLyoqIEFkZHMgYSBuZXcgaXRlbSB0byB0aGUgaGlzdG9yeS4gKi8KICAgICAgICAgICAgICAgICAgYWRkOiBmdW5jdGlvbiBhZGQobGluaywgbGFiZWwsIGlkKSB7CiAgICAgICAgICAgICAgICAgICAgaGlzdG9yeS5hZGQoewogICAgICAgICAgICAgICAgICAgICAgbGluazogbGluaywKICAgICAgICAgICAgICAgICAgICAgIGxhYmVsOiBsYWJlbCwKICAgICAgICAgICAgICAgICAgICAgIGlkOiBpZAogICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICB9LAoKICAgICAgICAgICAgICAgICAgLyoqIEdldHMgdGhlIGN1cnJlbnQgYXJyYXkgb2YgaGlzdG9yeSBpdGVtcy4gKi8KICAgICAgICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGhpc3RvcnkuZ2V0KCk7CiAgICAgICAgICAgICAgICAgIH0sCgogICAgICAgICAgICAgICAgICAvKiogR2V0cyBhbiBvYnNlcnZhYmxlIG9mIHRoZSBjdXJyZW50IGFycmF5IG9mIGhpc3RvcnkgaXRlbXMuICovCiAgICAgICAgICAgICAgICAgIGdldCQ6IGZ1bmN0aW9uIGdldCQoKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGhpc3RvcnkuZ2V0JCgpOwogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIHN0YXJ0KF94KSB7CiAgICAgICAgcmV0dXJuIF9zdGFydC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gc3RhcnQ7CiAgICB9KCkKICB9XSk7CgogIHJldHVybiBSZWNlbnRseUFjY2Vzc2VkU2VydmljZTsKfSgpOwovKioKICoge0BsaW5rIENocm9tZVJlY2VudGx5QWNjZXNzZWQgfCBBUElzfSBmb3IgcmVjZW50bHkgYWNjZXNzZWQgaGlzdG9yeS4KICogQHB1YmxpYwogKi8KCgpleHBvcnRzLlJlY2VudGx5QWNjZXNzZWRTZXJ2aWNlID0gUmVjZW50bHlBY2Nlc3NlZFNlcnZpY2U7"},null]}