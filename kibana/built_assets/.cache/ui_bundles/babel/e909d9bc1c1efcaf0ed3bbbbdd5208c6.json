{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!src/legacy/ui/public/field_editor/components/field_format_editor/editors/duration/duration.js","dependencies":[{"path":"src/legacy/ui/public/field_editor/components/field_format_editor/editors/duration/duration.js","mtime":1589249550311},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLkR1cmF0aW9uRm9ybWF0RWRpdG9yID0gdm9pZCAwOwoKdmFyIF9yZWFjdCA9IF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKHJlcXVpcmUoInJlYWN0IikpOwoKdmFyIF9ldWkgPSByZXF1aXJlKCJAZWxhc3RpYy9ldWkiKTsKCnZhciBfZGVmYXVsdCA9IHJlcXVpcmUoIi4uL2RlZmF1bHQiKTsKCnZhciBfc2FtcGxlcyA9IHJlcXVpcmUoIi4uLy4uL3NhbXBsZXMiKTsKCnZhciBfcmVhY3QyID0gcmVxdWlyZSgiQGtibi9pMThuL3JlYWN0Iik7Cgp2YXIgX2kxOG4gPSByZXF1aXJlKCJAa2JuL2kxOG4iKTsKCmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKG9iaikgeyBpZiAob2JqICYmIG9iai5fX2VzTW9kdWxlKSB7IHJldHVybiBvYmo7IH0gZWxzZSB7IHZhciBuZXdPYmogPSB7fTsgaWYgKG9iaiAhPSBudWxsKSB7IGZvciAodmFyIGtleSBpbiBvYmopIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGtleSkpIHsgdmFyIGRlc2MgPSBPYmplY3QuZGVmaW5lUHJvcGVydHkgJiYgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvciA/IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqLCBrZXkpIDoge307IGlmIChkZXNjLmdldCB8fCBkZXNjLnNldCkgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkobmV3T2JqLCBrZXksIGRlc2MpOyB9IGVsc2UgeyBuZXdPYmpba2V5XSA9IG9ialtrZXldOyB9IH0gfSB9IG5ld09iai5kZWZhdWx0ID0gb2JqOyByZXR1cm4gbmV3T2JqOyB9IH0KCmZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IGlmICh0eXBlb2YgU3ltYm9sID09PSAiZnVuY3Rpb24iICYmIHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPT09ICJzeW1ib2wiKSB7IF90eXBlb2YgPSBmdW5jdGlvbiBfdHlwZW9mKG9iaikgeyByZXR1cm4gdHlwZW9mIG9iajsgfTsgfSBlbHNlIHsgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gImZ1bmN0aW9uIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyAic3ltYm9sIiA6IHR5cGVvZiBvYmo7IH07IH0gcmV0dXJuIF90eXBlb2Yob2JqKTsgfQoKZnVuY3Rpb24gb3duS2V5cyhvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7IHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCk7IGlmIChlbnVtZXJhYmxlT25seSkgc3ltYm9scyA9IHN5bWJvbHMuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHsgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7IH0pOyBrZXlzLnB1c2guYXBwbHkoa2V5cywgc3ltYm9scyk7IH0gcmV0dXJuIGtleXM7IH0KCmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV0gIT0gbnVsbCA/IGFyZ3VtZW50c1tpXSA6IHt9OyBpZiAoaSAlIDIpIHsgb3duS2V5cyhzb3VyY2UsIHRydWUpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTsgfSk7IH0gZWxzZSBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMpIHsgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKTsgfSBlbHNlIHsgb3duS2V5cyhzb3VyY2UpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBrZXkpKTsgfSk7IH0gfSByZXR1cm4gdGFyZ2V0OyB9CgpmdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvbiIpOyB9IH0KCmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKCJ2YWx1ZSIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9CgpmdW5jdGlvbiBfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfQoKZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoY2FsbCAmJiAoX3R5cGVvZihjYWxsKSA9PT0gIm9iamVjdCIgfHwgdHlwZW9mIGNhbGwgPT09ICJmdW5jdGlvbiIpKSB7IHJldHVybiBjYWxsOyB9IHJldHVybiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpOyB9CgpmdW5jdGlvbiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpIHsgaWYgKHNlbGYgPT09IHZvaWQgMCkgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZCIpOyB9IHJldHVybiBzZWxmOyB9CgpmdW5jdGlvbiBfZ2V0KHRhcmdldCwgcHJvcGVydHksIHJlY2VpdmVyKSB7IGlmICh0eXBlb2YgUmVmbGVjdCAhPT0gInVuZGVmaW5lZCIgJiYgUmVmbGVjdC5nZXQpIHsgX2dldCA9IFJlZmxlY3QuZ2V0OyB9IGVsc2UgeyBfZ2V0ID0gZnVuY3Rpb24gX2dldCh0YXJnZXQsIHByb3BlcnR5LCByZWNlaXZlcikgeyB2YXIgYmFzZSA9IF9zdXBlclByb3BCYXNlKHRhcmdldCwgcHJvcGVydHkpOyBpZiAoIWJhc2UpIHJldHVybjsgdmFyIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGJhc2UsIHByb3BlcnR5KTsgaWYgKGRlc2MuZ2V0KSB7IHJldHVybiBkZXNjLmdldC5jYWxsKHJlY2VpdmVyKTsgfSByZXR1cm4gZGVzYy52YWx1ZTsgfTsgfSByZXR1cm4gX2dldCh0YXJnZXQsIHByb3BlcnR5LCByZWNlaXZlciB8fCB0YXJnZXQpOyB9CgpmdW5jdGlvbiBfc3VwZXJQcm9wQmFzZShvYmplY3QsIHByb3BlcnR5KSB7IHdoaWxlICghT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpKSB7IG9iamVjdCA9IF9nZXRQcm90b3R5cGVPZihvYmplY3QpOyBpZiAob2JqZWN0ID09PSBudWxsKSBicmVhazsgfSByZXR1cm4gb2JqZWN0OyB9CgpmdW5jdGlvbiBfZ2V0UHJvdG90eXBlT2YobykgeyBfZ2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3QuZ2V0UHJvdG90eXBlT2YgOiBmdW5jdGlvbiBfZ2V0UHJvdG90eXBlT2YobykgeyByZXR1cm4gby5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKG8pOyB9OyByZXR1cm4gX2dldFByb3RvdHlwZU9mKG8pOyB9CgpmdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSAiZnVuY3Rpb24iICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcigiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24iKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBfc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpOyB9CgpmdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkgeyBfc2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHwgZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHsgby5fX3Byb3RvX18gPSBwOyByZXR1cm4gbzsgfTsgcmV0dXJuIF9zZXRQcm90b3R5cGVPZihvLCBwKTsgfQoKZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkgeyBpZiAoa2V5IGluIG9iaikgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHsgdmFsdWU6IHZhbHVlLCBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlIH0pOyB9IGVsc2UgeyBvYmpba2V5XSA9IHZhbHVlOyB9IHJldHVybiBvYmo7IH0KCnZhciBEdXJhdGlvbkZvcm1hdEVkaXRvciA9Ci8qI19fUFVSRV9fKi8KZnVuY3Rpb24gKF9EZWZhdWx0Rm9ybWF0RWRpdG9yKSB7CiAgX2luaGVyaXRzKER1cmF0aW9uRm9ybWF0RWRpdG9yLCBfRGVmYXVsdEZvcm1hdEVkaXRvcik7CgogIGZ1bmN0aW9uIER1cmF0aW9uRm9ybWF0RWRpdG9yKHByb3BzKSB7CiAgICB2YXIgX3RoaXM7CgogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIER1cmF0aW9uRm9ybWF0RWRpdG9yKTsKCiAgICBfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9nZXRQcm90b3R5cGVPZihEdXJhdGlvbkZvcm1hdEVkaXRvcikuY2FsbCh0aGlzLCBwcm9wcykpOwogICAgX3RoaXMuc3RhdGUuc2FtcGxlSW5wdXRzID0gWy0xMjMsIDEsIDEyLCAxMjMsIDY1OCwgMTk4OCwgMzg1NywgMTIzMjkyLCA5MjM1MjgyNzFdOwogICAgX3RoaXMuc3RhdGUuaGFzRGVjaW1hbEVycm9yID0gZmFsc2U7CiAgICByZXR1cm4gX3RoaXM7CiAgfQoKICBfY3JlYXRlQ2xhc3MoRHVyYXRpb25Gb3JtYXRFZGl0b3IsIFt7CiAgICBrZXk6ICJyZW5kZXIiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcigpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICB2YXIgX3RoaXMkcHJvcHMgPSB0aGlzLnByb3BzLAogICAgICAgICAgZm9ybWF0ID0gX3RoaXMkcHJvcHMuZm9ybWF0LAogICAgICAgICAgZm9ybWF0UGFyYW1zID0gX3RoaXMkcHJvcHMuZm9ybWF0UGFyYW1zOwogICAgICB2YXIgX3RoaXMkc3RhdGUgPSB0aGlzLnN0YXRlLAogICAgICAgICAgZXJyb3IgPSBfdGhpcyRzdGF0ZS5lcnJvciwKICAgICAgICAgIHNhbXBsZXMgPSBfdGhpcyRzdGF0ZS5zYW1wbGVzLAogICAgICAgICAgaGFzRGVjaW1hbEVycm9yID0gX3RoaXMkc3RhdGUuaGFzRGVjaW1hbEVycm9yOwogICAgICByZXR1cm4gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfcmVhY3QuRnJhZ21lbnQsIG51bGwsIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlGb3JtUm93LCB7CiAgICAgICAgbGFiZWw6IF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3JlYWN0Mi5Gb3JtYXR0ZWRNZXNzYWdlLCB7CiAgICAgICAgICBpZDogImNvbW1vbi51aS5maWVsZEVkaXRvci5kdXJhdGlvbi5pbnB1dEZvcm1hdExhYmVsIiwKICAgICAgICAgIGRlZmF1bHRNZXNzYWdlOiAiSW5wdXQgZm9ybWF0IgogICAgICAgIH0pLAogICAgICAgIGlzSW52YWxpZDogISFlcnJvciwKICAgICAgICBlcnJvcjogaGFzRGVjaW1hbEVycm9yID8gbnVsbCA6IGVycm9yCiAgICAgIH0sIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlTZWxlY3QsIHsKICAgICAgICB2YWx1ZTogZm9ybWF0UGFyYW1zLmlucHV0Rm9ybWF0LAogICAgICAgIG9wdGlvbnM6IGZvcm1hdC50eXBlLmlucHV0Rm9ybWF0cy5tYXAoZnVuY3Rpb24gKGZvcm1hdCkgewogICAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgdmFsdWU6IGZvcm1hdC5raW5kLAogICAgICAgICAgICB0ZXh0OiBmb3JtYXQudGV4dAogICAgICAgICAgfTsKICAgICAgICB9KSwKICAgICAgICBvbkNoYW5nZTogZnVuY3Rpb24gb25DaGFuZ2UoZSkgewogICAgICAgICAgX3RoaXMyLm9uQ2hhbmdlKHsKICAgICAgICAgICAgaW5wdXRGb3JtYXQ6IGUudGFyZ2V0LnZhbHVlCiAgICAgICAgICB9KTsKICAgICAgICB9LAogICAgICAgIGlzSW52YWxpZDogISFlcnJvcgogICAgICB9KSksIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlGb3JtUm93LCB7CiAgICAgICAgbGFiZWw6IF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3JlYWN0Mi5Gb3JtYXR0ZWRNZXNzYWdlLCB7CiAgICAgICAgICBpZDogImNvbW1vbi51aS5maWVsZEVkaXRvci5kdXJhdGlvbi5vdXRwdXRGb3JtYXRMYWJlbCIsCiAgICAgICAgICBkZWZhdWx0TWVzc2FnZTogIk91dHB1dCBmb3JtYXQiCiAgICAgICAgfSksCiAgICAgICAgaXNJbnZhbGlkOiAhIWVycm9yCiAgICAgIH0sIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlTZWxlY3QsIHsKICAgICAgICB2YWx1ZTogZm9ybWF0UGFyYW1zLm91dHB1dEZvcm1hdCwKICAgICAgICBvcHRpb25zOiBmb3JtYXQudHlwZS5vdXRwdXRGb3JtYXRzLm1hcChmdW5jdGlvbiAoZm9ybWF0KSB7CiAgICAgICAgICByZXR1cm4gewogICAgICAgICAgICB2YWx1ZTogZm9ybWF0Lm1ldGhvZCwKICAgICAgICAgICAgdGV4dDogZm9ybWF0LnRleHQKICAgICAgICAgIH07CiAgICAgICAgfSksCiAgICAgICAgb25DaGFuZ2U6IGZ1bmN0aW9uIG9uQ2hhbmdlKGUpIHsKICAgICAgICAgIF90aGlzMi5vbkNoYW5nZSh7CiAgICAgICAgICAgIG91dHB1dEZvcm1hdDogZS50YXJnZXQudmFsdWUKICAgICAgICAgIH0pOwogICAgICAgIH0sCiAgICAgICAgaXNJbnZhbGlkOiAhIWVycm9yCiAgICAgIH0pKSwgIWZvcm1hdC5pc0h1bWFuKCkgPyBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpRm9ybVJvdywgewogICAgICAgIGxhYmVsOiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9yZWFjdDIuRm9ybWF0dGVkTWVzc2FnZSwgewogICAgICAgICAgaWQ6ICJjb21tb24udWkuZmllbGRFZGl0b3IuZHVyYXRpb24uZGVjaW1hbFBsYWNlc0xhYmVsIiwKICAgICAgICAgIGRlZmF1bHRNZXNzYWdlOiAiRGVjaW1hbCBwbGFjZXMiCiAgICAgICAgfSksCiAgICAgICAgaXNJbnZhbGlkOiAhIWVycm9yLAogICAgICAgIGVycm9yOiBoYXNEZWNpbWFsRXJyb3IgPyBlcnJvciA6IG51bGwKICAgICAgfSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUZpZWxkTnVtYmVyLCB7CiAgICAgICAgdmFsdWU6IGZvcm1hdFBhcmFtcy5vdXRwdXRQcmVjaXNpb24sCiAgICAgICAgbWluOiAwLAogICAgICAgIG1heDogMjAsCiAgICAgICAgb25DaGFuZ2U6IGZ1bmN0aW9uIG9uQ2hhbmdlKGUpIHsKICAgICAgICAgIF90aGlzMi5vbkNoYW5nZSh7CiAgICAgICAgICAgIG91dHB1dFByZWNpc2lvbjogZS50YXJnZXQudmFsdWUgPyBOdW1iZXIoZS50YXJnZXQudmFsdWUpIDogbnVsbAogICAgICAgICAgfSk7CiAgICAgICAgfSwKICAgICAgICBpc0ludmFsaWQ6ICEhZXJyb3IKICAgICAgfSkpIDogbnVsbCwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfc2FtcGxlcy5Gb3JtYXRFZGl0b3JTYW1wbGVzLCB7CiAgICAgICAgc2FtcGxlczogc2FtcGxlcwogICAgICB9KSk7CiAgICB9CiAgfV0sIFt7CiAgICBrZXk6ICJnZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyhuZXh0UHJvcHMsIHN0YXRlKSB7CiAgICAgIHZhciBvdXRwdXQgPSBfZ2V0KF9nZXRQcm90b3R5cGVPZihEdXJhdGlvbkZvcm1hdEVkaXRvciksICJnZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMiLCB0aGlzKS5jYWxsKHRoaXMsIG5leHRQcm9wcywgc3RhdGUpOwoKICAgICAgdmFyIGVycm9yID0gbnVsbDsKCiAgICAgIGlmICghbmV4dFByb3BzLmZvcm1hdC5pc0h1bWFuKCkgJiYgbmV4dFByb3BzLmZvcm1hdFBhcmFtcy5vdXRwdXRQcmVjaXNpb24gPiAyMCkgewogICAgICAgIGVycm9yID0gX2kxOG4uaTE4bi50cmFuc2xhdGUoJ2NvbW1vbi51aS5maWVsZEVkaXRvci5kdXJhdGlvbkVycm9yTWVzc2FnZScsIHsKICAgICAgICAgIGRlZmF1bHRNZXNzYWdlOiAnRGVjaW1hbCBwbGFjZXMgbXVzdCBiZSBiZXR3ZWVuIDAgYW5kIDIwJwogICAgICAgIH0pOwogICAgICAgIG5leHRQcm9wcy5vbkVycm9yKGVycm9yKTsKICAgICAgICByZXR1cm4gX29iamVjdFNwcmVhZCh7fSwgb3V0cHV0LCB7CiAgICAgICAgICBlcnJvcjogZXJyb3IsCiAgICAgICAgICBoYXNEZWNpbWFsRXJyb3I6IHRydWUKICAgICAgICB9KTsKICAgICAgfQoKICAgICAgcmV0dXJuIF9vYmplY3RTcHJlYWQoe30sIG91dHB1dCwgewogICAgICAgIGhhc0RlY2ltYWxFcnJvcjogZmFsc2UKICAgICAgfSk7CiAgICB9CiAgfV0pOwoKICByZXR1cm4gRHVyYXRpb25Gb3JtYXRFZGl0b3I7Cn0oX2RlZmF1bHQuRGVmYXVsdEZvcm1hdEVkaXRvcik7CgpleHBvcnRzLkR1cmF0aW9uRm9ybWF0RWRpdG9yID0gRHVyYXRpb25Gb3JtYXRFZGl0b3I7CgpfZGVmaW5lUHJvcGVydHkoRHVyYXRpb25Gb3JtYXRFZGl0b3IsICJmb3JtYXRJZCIsICdkdXJhdGlvbicpOw=="},null]}