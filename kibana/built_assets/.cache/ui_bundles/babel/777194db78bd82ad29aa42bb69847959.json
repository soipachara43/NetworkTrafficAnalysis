{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/uptime/public/lib/alert_types/monitor_status.js","dependencies":[{"path":"x-pack/legacy/plugins/uptime/public/lib/alert_types/monitor_status.js","mtime":1589249553676},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmluaXRNb25pdG9yU3RhdHVzQWxlcnRUeXBlID0gZXhwb3J0cy52YWxpZGF0ZSA9IHZvaWQgMDsKCnZhciBfUGF0aFJlcG9ydGVyID0gcmVxdWlyZSgiaW8tdHMvbGliL1BhdGhSZXBvcnRlciIpOwoKdmFyIF9yZWFjdCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgicmVhY3QiKSk7Cgp2YXIgX2RhdGVtYXRoID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCJAZWxhc3RpYy9kYXRlbWF0aCIpKTsKCnZhciBfRWl0aGVyID0gcmVxdWlyZSgiZnAtdHMvbGliL0VpdGhlciIpOwoKdmFyIF9ydW50aW1lX3R5cGVzID0gcmVxdWlyZSgiLi4vLi4vLi4vY29tbW9uL3J1bnRpbWVfdHlwZXMiKTsKCnZhciBfYWxlcnRzID0gcmVxdWlyZSgiLi4vLi4vY29tcG9uZW50cy9jb25uZWN0ZWQvYWxlcnRzIik7CgpmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgewogIHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7CiAgICBkZWZhdWx0OiBvYmoKICB9Owp9CgpmdW5jdGlvbiBfZXh0ZW5kcygpIHsKICBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgewogICAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsKICAgICAgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsKCiAgICAgIGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsKICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgewogICAgICAgICAgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsKICAgICAgICB9CiAgICAgIH0KICAgIH0KCiAgICByZXR1cm4gdGFyZ2V0OwogIH07CgogIHJldHVybiBfZXh0ZW5kcy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9Cgp2YXIgdmFsaWRhdGUgPSBmdW5jdGlvbiB2YWxpZGF0ZShhbGVydFBhcmFtcykgewogIHZhciBlcnJvcnMgPSB7fTsKCiAgdmFyIGRlY29kZWQgPSBfcnVudGltZV90eXBlcy5TdGF0dXNDaGVja0V4ZWN1dG9yUGFyYW1zVHlwZS5kZWNvZGUoYWxlcnRQYXJhbXMpOwogIC8qCiAgICogV2hlbiB0aGUgVUkgaW5pdGlhbGx5IGxvYWRzLCB0aGlzIHZhbGlkYXRlIGZ1bmN0aW9uIGlzIGNhbGxlZCB3aXRoIGFuCiAgICogZW1wdHkgc2V0IG9mIHBhcmFtcywgd2UgZG9uJ3Qgd2FudCB0byB0eXBlIGNoZWNrIGFnYWluc3QgdGhhdC4KICAgKi8KCgogIGlmICghKDAsIF9FaXRoZXIuaXNSaWdodCkoZGVjb2RlZCkpIHsKICAgIGVycm9ycy50eXBlQ2hlY2tGYWlsdXJlID0gJ1Byb3ZpZGVkIHBhcmFtZXRlcnMgZG8gbm90IGNvbmZvcm0gdG8gdGhlIGV4cGVjdGVkIHR5cGUuJzsKICAgIGVycm9ycy50eXBlQ2hlY2tQYXJzaW5nTWVzc2FnZSA9IF9QYXRoUmVwb3J0ZXIuUGF0aFJlcG9ydGVyLnJlcG9ydChkZWNvZGVkKTsKICB9CgogIGlmICgoMCwgX0VpdGhlci5pc1JpZ2h0KShkZWNvZGVkKSkgewogICAgdmFyIF9EYXRlTWF0aCRwYXJzZSwgX0RhdGVNYXRoJHBhcnNlMjsKCiAgICB2YXIgX2RlY29kZWQkcmlnaHQgPSBkZWNvZGVkLnJpZ2h0LAogICAgICAgIG51bVRpbWVzID0gX2RlY29kZWQkcmlnaHQubnVtVGltZXMsCiAgICAgICAgdGltZXJhbmdlID0gX2RlY29kZWQkcmlnaHQudGltZXJhbmdlOwogICAgdmFyIGZyb20gPSB0aW1lcmFuZ2UuZnJvbSwKICAgICAgICB0byA9IHRpbWVyYW5nZS50bzsKICAgIHZhciBmcm9tQWJzID0gKF9EYXRlTWF0aCRwYXJzZSA9IF9kYXRlbWF0aC5kZWZhdWx0LnBhcnNlKGZyb20pKSA9PT0gbnVsbCB8fCBfRGF0ZU1hdGgkcGFyc2UgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9EYXRlTWF0aCRwYXJzZS52YWx1ZU9mKCk7CiAgICB2YXIgdG9BYnMgPSAoX0RhdGVNYXRoJHBhcnNlMiA9IF9kYXRlbWF0aC5kZWZhdWx0LnBhcnNlKHRvKSkgPT09IG51bGwgfHwgX0RhdGVNYXRoJHBhcnNlMiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX0RhdGVNYXRoJHBhcnNlMi52YWx1ZU9mKCk7CgogICAgaWYgKCFmcm9tQWJzIHx8IGlzTmFOKGZyb21BYnMpKSB7CiAgICAgIGVycm9ycy50aW1lUmFuZ2VTdGFydFZhbHVlTmFOID0gJ1NwZWNpZmllZCB0aW1lIHJhbmdlIGBmcm9tYCBpcyBhbiBpbnZhbGlkIHZhbHVlJzsKICAgIH0KCiAgICBpZiAoIXRvQWJzIHx8IGlzTmFOKHRvQWJzKSkgewogICAgICBlcnJvcnMudGltZVJhbmdlRW5kVmFsdWVOYU4gPSAnU3BlY2lmaWVkIHRpbWUgcmFuZ2UgYHRvYCBpcyBhbiBpbnZhbGlkIHZhbHVlJzsKICAgIH0gLy8gdGhlIGRlZmF1bHQgdmFsdWVzIGZvciB0aGlzIHRlc3Qgd2lsbCBwYXNzLCB3ZSBvbmx5IHdhbnQgdG8gc3BlY2lmeSBhbiBlcnJvcgogICAgLy8gaW4gdGhlIGNhc2UgdGhhdCBgZnJvbWAgaXMgbW9yZSByZWNlbnQgdGhhbiBgdG9gCgoKICAgIGlmICgoZnJvbUFicyAhPT0gbnVsbCAmJiBmcm9tQWJzICE9PSB2b2lkIDAgPyBmcm9tQWJzIDogMCkgPiAodG9BYnMgIT09IG51bGwgJiYgdG9BYnMgIT09IHZvaWQgMCA/IHRvQWJzIDogMSkpIHsKICAgICAgZXJyb3JzLmludmFsaWRUaW1lUmFuZ2UgPSAnVGltZSByYW5nZSBzdGFydCBjYW5ub3QgZXhjZWVkIHRpbWUgcmFuZ2UgZW5kJzsKICAgIH0KCiAgICBpZiAobnVtVGltZXMgPCAxKSB7CiAgICAgIGVycm9ycy5pbnZhbGlkTnVtVGltZXMgPSAnTnVtYmVyIG9mIGFsZXJ0IGNoZWNrIGRvd24gdGltZXMgbXVzdCBiZSBhbiBpbnRlZ2VyIGdyZWF0ZXIgdGhhbiAwJzsKICAgIH0KICB9CgogIHJldHVybiB7CiAgICBlcnJvcnM6IGVycm9ycwogIH07Cn07CgpleHBvcnRzLnZhbGlkYXRlID0gdmFsaWRhdGU7Cgp2YXIgaW5pdE1vbml0b3JTdGF0dXNBbGVydFR5cGUgPSBmdW5jdGlvbiBpbml0TW9uaXRvclN0YXR1c0FsZXJ0VHlwZShfcmVmKSB7CiAgdmFyIGF1dG9jb21wbGV0ZSA9IF9yZWYuYXV0b2NvbXBsZXRlOwogIHJldHVybiB7CiAgICBpZDogJ3hwYWNrLnVwdGltZS5hbGVydHMubW9uaXRvclN0YXR1cycsCiAgICBuYW1lOiAnVXB0aW1lIG1vbml0b3Igc3RhdHVzJywKICAgIGljb25DbGFzczogJ3VwdGltZUFwcCcsCiAgICBhbGVydFBhcmFtc0V4cHJlc3Npb246IGZ1bmN0aW9uIGFsZXJ0UGFyYW1zRXhwcmVzc2lvbihwYXJhbXMpIHsKICAgICAgcmV0dXJuIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2FsZXJ0cy5BbGVydE1vbml0b3JTdGF0dXMsIF9leHRlbmRzKHt9LCBwYXJhbXMsIHsKICAgICAgICBhdXRvY29tcGxldGU6IGF1dG9jb21wbGV0ZQogICAgICB9KSk7CiAgICB9LAogICAgdmFsaWRhdGU6IHZhbGlkYXRlLAogICAgZGVmYXVsdEFjdGlvbk1lc3NhZ2U6ICJ7e2NvbnRleHQubWVzc2FnZX19XG5MYXN0IHRyaWdnZXJlZCBhdDoge3tzdGF0ZS5sYXN0VHJpZ2dlcmVkQXR9fVxue3tjb250ZXh0LmRvd25Nb25pdG9yc1dpdGhHZW99fSIKICB9Owp9OwoKZXhwb3J0cy5pbml0TW9uaXRvclN0YXR1c0FsZXJ0VHlwZSA9IGluaXRNb25pdG9yU3RhdHVzQWxlcnRUeXBlOw=="},null]}