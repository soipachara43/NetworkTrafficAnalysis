{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!src/plugins/data/public/ui/query_string_input/language_switcher.js","dependencies":[{"path":"src/plugins/data/public/ui/query_string_input/language_switcher.js","mtime":1589249550691},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLlF1ZXJ5TGFuZ3VhZ2VTd2l0Y2hlciA9IFF1ZXJ5TGFuZ3VhZ2VTd2l0Y2hlcjsKCnZhciBfZXVpID0gcmVxdWlyZSgiQGVsYXN0aWMvZXVpIik7Cgp2YXIgX3JlYWN0ID0gcmVxdWlyZSgiQGtibi9pMThuL3JlYWN0Iik7Cgp2YXIgX3JlYWN0MiA9IF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKHJlcXVpcmUoInJlYWN0IikpOwoKdmFyIF9wdWJsaWMgPSByZXF1aXJlKCIuLi8uLi8uLi8uLi9raWJhbmFfcmVhY3QvcHVibGljIik7CgpmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChvYmopIHsKICBpZiAob2JqICYmIG9iai5fX2VzTW9kdWxlKSB7CiAgICByZXR1cm4gb2JqOwogIH0gZWxzZSB7CiAgICB2YXIgbmV3T2JqID0ge307CgogICAgaWYgKG9iaiAhPSBudWxsKSB7CiAgICAgIGZvciAodmFyIGtleSBpbiBvYmopIHsKICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwga2V5KSkgewogICAgICAgICAgdmFyIGRlc2MgPSBPYmplY3QuZGVmaW5lUHJvcGVydHkgJiYgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvciA/IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqLCBrZXkpIDoge307CgogICAgICAgICAgaWYgKGRlc2MuZ2V0IHx8IGRlc2Muc2V0KSB7CiAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShuZXdPYmosIGtleSwgZGVzYyk7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBuZXdPYmpba2V5XSA9IG9ialtrZXldOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfQoKICAgIG5ld09iai5kZWZhdWx0ID0gb2JqOwogICAgcmV0dXJuIG5ld09iajsKICB9Cn0KCmZ1bmN0aW9uIF9zbGljZWRUb0FycmF5KGFyciwgaSkgewogIHJldHVybiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB8fCBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB8fCBfbm9uSXRlcmFibGVSZXN0KCk7Cn0KCmZ1bmN0aW9uIF9ub25JdGVyYWJsZVJlc3QoKSB7CiAgdGhyb3cgbmV3IFR5cGVFcnJvcigiSW52YWxpZCBhdHRlbXB0IHRvIGRlc3RydWN0dXJlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZSIpOwp9CgpmdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB7CiAgdmFyIF9hcnIgPSBbXTsKICB2YXIgX24gPSB0cnVlOwogIHZhciBfZCA9IGZhbHNlOwogIHZhciBfZSA9IHVuZGVmaW5lZDsKCiAgdHJ5IHsKICAgIGZvciAodmFyIF9pID0gYXJyW1N5bWJvbC5pdGVyYXRvcl0oKSwgX3M7ICEoX24gPSAoX3MgPSBfaS5uZXh0KCkpLmRvbmUpOyBfbiA9IHRydWUpIHsKICAgICAgX2Fyci5wdXNoKF9zLnZhbHVlKTsKCiAgICAgIGlmIChpICYmIF9hcnIubGVuZ3RoID09PSBpKSBicmVhazsKICAgIH0KICB9IGNhdGNoIChlcnIpIHsKICAgIF9kID0gdHJ1ZTsKICAgIF9lID0gZXJyOwogIH0gZmluYWxseSB7CiAgICB0cnkgewogICAgICBpZiAoIV9uICYmIF9pWyJyZXR1cm4iXSAhPSBudWxsKSBfaVsicmV0dXJuIl0oKTsKICAgIH0gZmluYWxseSB7CiAgICAgIGlmIChfZCkgdGhyb3cgX2U7CiAgICB9CiAgfQoKICByZXR1cm4gX2FycjsKfQoKZnVuY3Rpb24gX2FycmF5V2l0aEhvbGVzKGFycikgewogIGlmIChBcnJheS5pc0FycmF5KGFycikpIHJldHVybiBhcnI7Cn0KCmZ1bmN0aW9uIFF1ZXJ5TGFuZ3VhZ2VTd2l0Y2hlcihwcm9wcykgewogIHZhciBraWJhbmEgPSAoMCwgX3B1YmxpYy51c2VLaWJhbmEpKCk7CiAgdmFyIGt1ZXJ5UXVlcnlTeW50YXhEb2NzID0ga2liYW5hLnNlcnZpY2VzLmRvY0xpbmtzLmxpbmtzLnF1ZXJ5Lmt1ZXJ5UXVlcnlTeW50YXg7CgogIHZhciBfdXNlU3RhdGUgPSAoMCwgX3JlYWN0Mi51c2VTdGF0ZSkoZmFsc2UpLAogICAgICBfdXNlU3RhdGUyID0gX3NsaWNlZFRvQXJyYXkoX3VzZVN0YXRlLCAyKSwKICAgICAgaXNQb3BvdmVyT3BlbiA9IF91c2VTdGF0ZTJbMF0sCiAgICAgIHNldElzUG9wb3Zlck9wZW4gPSBfdXNlU3RhdGUyWzFdOwoKICB2YXIgbHVjZW5lTGFiZWwgPSBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChfcmVhY3QuRm9ybWF0dGVkTWVzc2FnZSwgewogICAgaWQ6ICJkYXRhLnF1ZXJ5LnF1ZXJ5QmFyLmx1Y2VuZUxhbmd1YWdlTmFtZSIsCiAgICBkZWZhdWx0TWVzc2FnZTogIkx1Y2VuZSIKICB9KTsKCiAgdmFyIGtxbExhYmVsID0gX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3JlYWN0LkZvcm1hdHRlZE1lc3NhZ2UsIHsKICAgIGlkOiAiZGF0YS5xdWVyeS5xdWVyeUJhci5rcWxMYW5ndWFnZU5hbWUiLAogICAgZGVmYXVsdE1lc3NhZ2U6ICJLUUwiCiAgfSk7CgogIHZhciBrcWxGdWxsTmFtZSA9IF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9yZWFjdC5Gb3JtYXR0ZWRNZXNzYWdlLCB7CiAgICBpZDogImRhdGEucXVlcnkucXVlcnlCYXIua3FsRnVsbExhbmd1YWdlTmFtZSIsCiAgICBkZWZhdWx0TWVzc2FnZTogIktpYmFuYSBRdWVyeSBMYW5ndWFnZSIKICB9KTsKCiAgdmFyIGJ1dHRvbiA9IF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpQnV0dG9uRW1wdHksIHsKICAgIHNpemU6ICJ4cyIsCiAgICBvbkNsaWNrOiBmdW5jdGlvbiBvbkNsaWNrKCkgewogICAgICByZXR1cm4gc2V0SXNQb3BvdmVyT3BlbighaXNQb3BvdmVyT3Blbik7CiAgICB9LAogICAgY2xhc3NOYW1lOiAiZXVpRm9ybUNvbnRyb2xMYXlvdXRfX2FwcGVuZCIsCiAgICAiZGF0YS10ZXN0LXN1YmoiOiAnc3dpdGNoUXVlcnlMYW5ndWFnZUJ1dHRvbicKICB9LCBwcm9wcy5sYW5ndWFnZSA9PT0gJ2x1Y2VuZScgPyBsdWNlbmVMYWJlbCA6IGtxbExhYmVsKTsKCiAgcmV0dXJuIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpUG9wb3ZlciwgewogICAgaWQ6ICJxdWVyeUxhbmd1YWdlU3dpdGNoZXJQb3BvdmVyIiwKICAgIGFuY2hvckNsYXNzTmFtZTogImV1aUZvcm1Db250cm9sTGF5b3V0X19hcHBlbmQiLAogICAgb3duRm9jdXM6IHRydWUsCiAgICBhbmNob3JQb3NpdGlvbjogcHJvcHMuYW5jaG9yUG9zaXRpb24gfHwgJ2Rvd25SaWdodCcsCiAgICBidXR0b246IGJ1dHRvbiwKICAgIGlzT3BlbjogaXNQb3BvdmVyT3BlbiwKICAgIGNsb3NlUG9wb3ZlcjogZnVuY3Rpb24gY2xvc2VQb3BvdmVyKCkgewogICAgICByZXR1cm4gc2V0SXNQb3BvdmVyT3BlbihmYWxzZSk7CiAgICB9LAogICAgd2l0aFRpdGxlOiB0cnVlCiAgfSwgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlQb3BvdmVyVGl0bGUsIG51bGwsIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9yZWFjdC5Gb3JtYXR0ZWRNZXNzYWdlLCB7CiAgICBpZDogImRhdGEucXVlcnkucXVlcnlCYXIuc3ludGF4T3B0aW9uc1RpdGxlIiwKICAgIGRlZmF1bHRNZXNzYWdlOiAiU3ludGF4IG9wdGlvbnMiCiAgfSkpLCBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudCgiZGl2IiwgewogICAgc3R5bGU6IHsKICAgICAgd2lkdGg6ICczNTBweCcKICAgIH0KICB9LCBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aVRleHQsIG51bGwsIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KCJwIiwgbnVsbCwgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3JlYWN0LkZvcm1hdHRlZE1lc3NhZ2UsIHsKICAgIGlkOiAiZGF0YS5xdWVyeS5xdWVyeUJhci5zeW50YXhPcHRpb25zRGVzY3JpcHRpb24iLAogICAgZGVmYXVsdE1lc3NhZ2U6ICJUaGUge2RvY3NMaW5rfSAoS1FMKSBvZmZlcnMgYSBzaW1wbGlmaWVkIHF1ZXJ5IHN5bnRheCBhbmQgc3VwcG9ydCBmb3Igc2NyaXB0ZWQgZmllbGRzLiBLUUwgYWxzbyBwcm92aWRlcyBhdXRvY29tcGxldGUgaWYgeW91IGhhdmUgYSBCYXNpYyBsaWNlbnNlIG9yIGFib3ZlLiBJZiB5b3UgdHVybiBvZmYgS1FMLCBLaWJhbmEgdXNlcyBMdWNlbmUuIiwKICAgIHZhbHVlczogewogICAgICBkb2NzTGluazogX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlMaW5rLCB7CiAgICAgICAgaHJlZjoga3VlcnlRdWVyeVN5bnRheERvY3MsCiAgICAgICAgdGFyZ2V0OiAiX2JsYW5rIgogICAgICB9LCBrcWxGdWxsTmFtZSkKICAgIH0KICB9KSkpLCBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aVNwYWNlciwgewogICAgc2l6ZTogIm0iCiAgfSksIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpRm9ybSwgbnVsbCwgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlGb3JtUm93LCB7CiAgICBsYWJlbDoga3FsRnVsbE5hbWUKICB9LCBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aVN3aXRjaCwgewogICAgaWQ6ICJxdWVyeUVuaGFuY2VtZW50T3B0SW4iLAogICAgbmFtZTogInBvcHN3aXRjaCIsCiAgICBsYWJlbDogcHJvcHMubGFuZ3VhZ2UgPT09ICdrdWVyeScgPyBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChfcmVhY3QuRm9ybWF0dGVkTWVzc2FnZSwgewogICAgICBpZDogImRhdGEucXVlcnkucXVlcnlCYXIua3FsT25MYWJlbCIsCiAgICAgIGRlZmF1bHRNZXNzYWdlOiAiT24iCiAgICB9KSA6IF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9yZWFjdC5Gb3JtYXR0ZWRNZXNzYWdlLCB7CiAgICAgIGlkOiAiZGF0YS5xdWVyeS5xdWVyeUJhci5rcWxPZmZMYWJlbCIsCiAgICAgIGRlZmF1bHRNZXNzYWdlOiAiT2ZmIgogICAgfSksCiAgICBjaGVja2VkOiBwcm9wcy5sYW5ndWFnZSA9PT0gJ2t1ZXJ5JywKICAgIG9uQ2hhbmdlOiBmdW5jdGlvbiBvbkNoYW5nZSgpIHsKICAgICAgdmFyIG5ld0xhbmd1YWdlID0gcHJvcHMubGFuZ3VhZ2UgPT09ICdsdWNlbmUnID8gJ2t1ZXJ5JyA6ICdsdWNlbmUnOwogICAgICBwcm9wcy5vblNlbGVjdExhbmd1YWdlKG5ld0xhbmd1YWdlKTsKICAgIH0sCiAgICAiZGF0YS10ZXN0LXN1YmoiOiAibGFuZ3VhZ2VUb2dnbGUiCiAgfSkpKSkpOwp9"},null]}