{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/siem/public/components/page/overview/stat_value.js","dependencies":[{"path":"x-pack/legacy/plugins/siem/public/components/page/overview/stat_value.js","mtime":1589249553112},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLlN0YXRWYWx1ZSA9IHZvaWQgMDsKCnZhciBfZXVpID0gcmVxdWlyZSgiQGVsYXN0aWMvZXVpIik7Cgp2YXIgX251bWVyYWwgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoIkBlbGFzdGljL251bWVyYWwiKSk7Cgp2YXIgX3JlYWN0ID0gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQocmVxdWlyZSgicmVhY3QiKSk7Cgp2YXIgX3N0eWxlZENvbXBvbmVudHMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoInN0eWxlZC1jb21wb25lbnRzIikpOwoKdmFyIF9jb25zdGFudHMgPSByZXF1aXJlKCIuLi8uLi8uLi8uLi9jb21tb24vY29uc3RhbnRzIik7Cgp2YXIgX2tpYmFuYSA9IHJlcXVpcmUoIi4uLy4uLy4uL2xpYi9raWJhbmEiKTsKCmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKG9iaikgewogIGlmIChvYmogJiYgb2JqLl9fZXNNb2R1bGUpIHsKICAgIHJldHVybiBvYmo7CiAgfSBlbHNlIHsKICAgIHZhciBuZXdPYmogPSB7fTsKCiAgICBpZiAob2JqICE9IG51bGwpIHsKICAgICAgZm9yICh2YXIga2V5IGluIG9iaikgewogICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBrZXkpKSB7CiAgICAgICAgICB2YXIgZGVzYyA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSAmJiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID8gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmosIGtleSkgOiB7fTsKCiAgICAgICAgICBpZiAoZGVzYy5nZXQgfHwgZGVzYy5zZXQpIHsKICAgICAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG5ld09iaiwga2V5LCBkZXNjKTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIG5ld09ialtrZXldID0gb2JqW2tleV07CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9CgogICAgbmV3T2JqLmRlZmF1bHQgPSBvYmo7CiAgICByZXR1cm4gbmV3T2JqOwogIH0KfQoKZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsKICByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogewogICAgZGVmYXVsdDogb2JqCiAgfTsKfQoKZnVuY3Rpb24gX3NsaWNlZFRvQXJyYXkoYXJyLCBpKSB7CiAgcmV0dXJuIF9hcnJheVdpdGhIb2xlcyhhcnIpIHx8IF9pdGVyYWJsZVRvQXJyYXlMaW1pdChhcnIsIGkpIHx8IF9ub25JdGVyYWJsZVJlc3QoKTsKfQoKZnVuY3Rpb24gX25vbkl0ZXJhYmxlUmVzdCgpIHsKICB0aHJvdyBuZXcgVHlwZUVycm9yKCJJbnZhbGlkIGF0dGVtcHQgdG8gZGVzdHJ1Y3R1cmUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlIik7Cn0KCmZ1bmN0aW9uIF9pdGVyYWJsZVRvQXJyYXlMaW1pdChhcnIsIGkpIHsKICB2YXIgX2FyciA9IFtdOwogIHZhciBfbiA9IHRydWU7CiAgdmFyIF9kID0gZmFsc2U7CiAgdmFyIF9lID0gdW5kZWZpbmVkOwoKICB0cnkgewogICAgZm9yICh2YXIgX2kgPSBhcnJbU3ltYm9sLml0ZXJhdG9yXSgpLCBfczsgIShfbiA9IChfcyA9IF9pLm5leHQoKSkuZG9uZSk7IF9uID0gdHJ1ZSkgewogICAgICBfYXJyLnB1c2goX3MudmFsdWUpOwoKICAgICAgaWYgKGkgJiYgX2Fyci5sZW5ndGggPT09IGkpIGJyZWFrOwogICAgfQogIH0gY2F0Y2ggKGVycikgewogICAgX2QgPSB0cnVlOwogICAgX2UgPSBlcnI7CiAgfSBmaW5hbGx5IHsKICAgIHRyeSB7CiAgICAgIGlmICghX24gJiYgX2lbInJldHVybiJdICE9IG51bGwpIF9pWyJyZXR1cm4iXSgpOwogICAgfSBmaW5hbGx5IHsKICAgICAgaWYgKF9kKSB0aHJvdyBfZTsKICAgIH0KICB9CgogIHJldHVybiBfYXJyOwp9CgpmdW5jdGlvbiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB7CiAgaWYgKEFycmF5LmlzQXJyYXkoYXJyKSkgcmV0dXJuIGFycjsKfQoKdmFyIFByb2dyZXNzQ29udGFpbmVyID0gX3N0eWxlZENvbXBvbmVudHMuZGVmYXVsdC5kaXYud2l0aENvbmZpZyh7CiAgZGlzcGxheU5hbWU6ICJQcm9ncmVzc0NvbnRhaW5lciIsCiAgY29tcG9uZW50SWQ6ICJ4emg4cTQtMCIKfSkoWyJtYXJnaW4tbGVmdDo4cHg7bWluLXdpZHRoOjEwMHB4OyJdKTsKCnZhciBMb2FkaW5nQ29udGVudCA9ICgwLCBfc3R5bGVkQ29tcG9uZW50cy5kZWZhdWx0KShfZXVpLkV1aUxvYWRpbmdDb250ZW50KS53aXRoQ29uZmlnKHsKICBkaXNwbGF5TmFtZTogIkxvYWRpbmdDb250ZW50IiwKICBjb21wb25lbnRJZDogInh6aDhxNC0xIgp9KShbIi5ldWlMb2FkaW5nQ29udGVudF9fc2luZ2xlTGluZXttYXJnaW4tYm90dG9tOjBweDt9Il0pOwoKdmFyIFN0YXRWYWx1ZUNvbXBvbmVudCA9IGZ1bmN0aW9uIFN0YXRWYWx1ZUNvbXBvbmVudChfcmVmKSB7CiAgdmFyIGNvdW50ID0gX3JlZi5jb3VudCwKICAgICAgaXNHcm91cFN0YXQgPSBfcmVmLmlzR3JvdXBTdGF0LAogICAgICBpc0xvYWRpbmcgPSBfcmVmLmlzTG9hZGluZywKICAgICAgbWF4ID0gX3JlZi5tYXg7CgogIHZhciBfdXNlVWlTZXR0aW5nJCA9ICgwLCBfa2liYW5hLnVzZVVpU2V0dGluZyQpKF9jb25zdGFudHMuREVGQVVMVF9OVU1CRVJfRk9STUFUKSwKICAgICAgX3VzZVVpU2V0dGluZyQyID0gX3NsaWNlZFRvQXJyYXkoX3VzZVVpU2V0dGluZyQsIDEpLAogICAgICBkZWZhdWx0TnVtYmVyRm9ybWF0ID0gX3VzZVVpU2V0dGluZyQyWzBdOwoKICB2YXIgX3VzZVN0YXRlID0gKDAsIF9yZWFjdC51c2VTdGF0ZSkodHJ1ZSksCiAgICAgIF91c2VTdGF0ZTIgPSBfc2xpY2VkVG9BcnJheShfdXNlU3RhdGUsIDIpLAogICAgICBpc0luaXRpYWxMb2FkaW5nID0gX3VzZVN0YXRlMlswXSwKICAgICAgc2V0SXNJbml0aWFsTG9hZGluZyA9IF91c2VTdGF0ZTJbMV07CgogICgwLCBfcmVhY3QudXNlRWZmZWN0KShmdW5jdGlvbiAoKSB7CiAgICBpZiAoaXNJbml0aWFsTG9hZGluZyAmJiAhaXNMb2FkaW5nKSB7CiAgICAgIHNldElzSW5pdGlhbExvYWRpbmcoZmFsc2UpOwogICAgfQogIH0sIFtpc0xvYWRpbmcsIGlzSW5pdGlhbExvYWRpbmcsIHNldElzSW5pdGlhbExvYWRpbmddKTsKICByZXR1cm4gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUZsZXhHcm91cCwgewogICAgYWxpZ25JdGVtczogImNlbnRlciIsCiAgICBndXR0ZXJTaXplOiAibm9uZSIKICB9LCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpRmxleEl0ZW0sIHsKICAgIGdyb3c6IGZhbHNlCiAgfSwgIWlzSW5pdGlhbExvYWRpbmcgJiYgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aVRleHQsIHsKICAgIGNvbG9yOiBpc0dyb3VwU3RhdCA/ICdkZWZhdWx0JyA6ICdzdWJkdWVkJywKICAgIHNpemU6IGlzR3JvdXBTdGF0ID8gJ20nIDogJ3MnCiAgfSwgKDAsIF9udW1lcmFsLmRlZmF1bHQpKGNvdW50KS5mb3JtYXQoZGVmYXVsdE51bWJlckZvcm1hdCkpKSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUZsZXhJdGVtLCB7CiAgICBncm93OiB0cnVlCiAgfSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChQcm9ncmVzc0NvbnRhaW5lciwgbnVsbCwgaXNMb2FkaW5nID8gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChMb2FkaW5nQ29udGVudCwgewogICAgImRhdGEtdGVzdC1zdWJqIjogInN0YXQtdmFsdWUtbG9hZGluZy1zcGlubmVyIiwKICAgIGxpbmVzOiAxCiAgfSkgOiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpUHJvZ3Jlc3MsIHsKICAgIGNvbG9yOiBpc0dyb3VwU3RhdCA/ICdwcmltYXJ5JyA6ICdzdWJkdWVkJywKICAgIG1heDogbWF4LAogICAgc2l6ZTogIm0iLAogICAgdmFsdWU6IGNvdW50CiAgfSkpKSk7Cn07CgpTdGF0VmFsdWVDb21wb25lbnQuZGlzcGxheU5hbWUgPSAnU3RhdFZhbHVlQ29tcG9uZW50JzsKCnZhciBTdGF0VmFsdWUgPSBfcmVhY3QuZGVmYXVsdC5tZW1vKFN0YXRWYWx1ZUNvbXBvbmVudCk7CgpleHBvcnRzLlN0YXRWYWx1ZSA9IFN0YXRWYWx1ZTs="},null]}