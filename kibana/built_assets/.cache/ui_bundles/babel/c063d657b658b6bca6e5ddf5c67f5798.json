{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/siem/public/components/header_global/index.js","dependencies":[{"path":"x-pack/legacy/plugins/siem/public/components/header_global/index.js","mtime":1589249552988},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLkhlYWRlckdsb2JhbCA9IHZvaWQgMDsKCnZhciBfZXVpID0gcmVxdWlyZSgiQGVsYXN0aWMvZXVpIik7Cgp2YXIgX2ZwID0gcmVxdWlyZSgibG9kYXNoL2ZwIik7Cgp2YXIgX3JlYWN0ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCJyZWFjdCIpKTsKCnZhciBfc3R5bGVkQ29tcG9uZW50cyA9IF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKHJlcXVpcmUoInN0eWxlZC1jb21wb25lbnRzIikpOwoKdmFyIF9yZWFjdFJvdXRlckRvbSA9IHJlcXVpcmUoInJlYWN0LXJvdXRlci1kb20iKTsKCnZhciBfaGVscGVycyA9IHJlcXVpcmUoIi4uLy4uL2xpYi9oZWxwZXJzIik7Cgp2YXIgX2hvbWVfbmF2aWdhdGlvbnMgPSByZXF1aXJlKCIuLi8uLi9wYWdlcy9ob21lL2hvbWVfbmF2aWdhdGlvbnMiKTsKCnZhciBfdHlwZXMgPSByZXF1aXJlKCIuLi8uLi9wYWdlcy9ob21lL3R5cGVzIik7Cgp2YXIgX2xpbmtfdG8gPSByZXF1aXJlKCIuLi9saW5rX3RvIik7Cgp2YXIgX21sX3BvcG92ZXIgPSByZXF1aXJlKCIuLi9tbF9wb3BvdmVyL21sX3BvcG92ZXIiKTsKCnZhciBfbmF2aWdhdGlvbiA9IHJlcXVpcmUoIi4uL25hdmlnYXRpb24iKTsKCnZhciBpMThuID0gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQocmVxdWlyZSgiLi90cmFuc2xhdGlvbnMiKSk7Cgp2YXIgX3NvdXJjZSA9IHJlcXVpcmUoIi4uLy4uL2NvbnRhaW5lcnMvc291cmNlIik7CgpmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChvYmopIHsKICBpZiAob2JqICYmIG9iai5fX2VzTW9kdWxlKSB7CiAgICByZXR1cm4gb2JqOwogIH0gZWxzZSB7CiAgICB2YXIgbmV3T2JqID0ge307CgogICAgaWYgKG9iaiAhPSBudWxsKSB7CiAgICAgIGZvciAodmFyIGtleSBpbiBvYmopIHsKICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwga2V5KSkgewogICAgICAgICAgdmFyIGRlc2MgPSBPYmplY3QuZGVmaW5lUHJvcGVydHkgJiYgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvciA/IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqLCBrZXkpIDoge307CgogICAgICAgICAgaWYgKGRlc2MuZ2V0IHx8IGRlc2Muc2V0KSB7CiAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShuZXdPYmosIGtleSwgZGVzYyk7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBuZXdPYmpba2V5XSA9IG9ialtrZXldOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfQoKICAgIG5ld09iai5kZWZhdWx0ID0gb2JqOwogICAgcmV0dXJuIG5ld09iajsKICB9Cn0KCmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7CiAgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsKICAgIGRlZmF1bHQ6IG9iagogIH07Cn0KLyoKICogQ29weXJpZ2h0IEVsYXN0aWNzZWFyY2ggQi5WLiBhbmQvb3IgbGljZW5zZWQgdG8gRWxhc3RpY3NlYXJjaCBCLlYuIHVuZGVyIG9uZQogKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gTGljZW5zZWQgdW5kZXIgdGhlIEVsYXN0aWMgTGljZW5zZTsKICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBFbGFzdGljIExpY2Vuc2UuCiAqLwoKCnZhciBXcmFwcGVyID0gX3N0eWxlZENvbXBvbmVudHMuZGVmYXVsdC5oZWFkZXIud2l0aENvbmZpZyh7CiAgZGlzcGxheU5hbWU6ICJXcmFwcGVyIiwKICBjb21wb25lbnRJZDogInNjLTlpdXMzaC0wIgp9KShbIiIsICIiXSwgZnVuY3Rpb24gKF9yZWYpIHsKICB2YXIgdGhlbWUgPSBfcmVmLnRoZW1lOwogIHJldHVybiAoMCwgX3N0eWxlZENvbXBvbmVudHMuY3NzKShbImJhY2tncm91bmQ6IiwgIjtib3JkZXItYm90dG9tOiIsICI7cGFkZGluZzoiLCAiICIsICIgIiwgIiAiLCAiOyJdLCB0aGVtZS5ldWkuZXVpQ29sb3JFbXB0eVNoYWRlLCB0aGVtZS5ldWkuZXVpQm9yZGVyVGhpbiwgdGhlbWUuZXVpLnBhZGRpbmdTaXplcy5tLCBfaGVscGVycy5ndXR0ZXJUaW1lbGluZSwgdGhlbWUuZXVpLnBhZGRpbmdTaXplcy5tLCB0aGVtZS5ldWkucGFkZGluZ1NpemVzLmwpOwp9KTsKCldyYXBwZXIuZGlzcGxheU5hbWUgPSAnV3JhcHBlcic7CnZhciBGbGV4SXRlbSA9ICgwLCBfc3R5bGVkQ29tcG9uZW50cy5kZWZhdWx0KShfZXVpLkV1aUZsZXhJdGVtKS53aXRoQ29uZmlnKHsKICBkaXNwbGF5TmFtZTogIkZsZXhJdGVtIiwKICBjb21wb25lbnRJZDogInNjLTlpdXMzaC0xIgp9KShbIm1pbi13aWR0aDowOyJdKTsKRmxleEl0ZW0uZGlzcGxheU5hbWUgPSAnRmxleEl0ZW0nOwoKdmFyIEhlYWRlckdsb2JhbCA9IF9yZWFjdC5kZWZhdWx0Lm1lbW8oZnVuY3Rpb24gKF9yZWYyKSB7CiAgdmFyIF9yZWYyJGhpZGVEZXRlY3Rpb25FbiA9IF9yZWYyLmhpZGVEZXRlY3Rpb25FbmdpbmUsCiAgICAgIGhpZGVEZXRlY3Rpb25FbmdpbmUgPSBfcmVmMiRoaWRlRGV0ZWN0aW9uRW4gPT09IHZvaWQgMCA/IGZhbHNlIDogX3JlZjIkaGlkZURldGVjdGlvbkVuOwogIHZhciBjdXJyZW50TG9jYXRpb24gPSAoMCwgX3JlYWN0Um91dGVyRG9tLnVzZUxvY2F0aW9uKSgpOwogIHJldHVybiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFdyYXBwZXIsIHsKICAgIGNsYXNzTmFtZTogInNpZW1IZWFkZXJHbG9iYWwiCiAgfSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUZsZXhHcm91cCwgewogICAgYWxpZ25JdGVtczogImNlbnRlciIsCiAgICBqdXN0aWZ5Q29udGVudDogInNwYWNlQmV0d2VlbiIsCiAgICB3cmFwOiB0cnVlCiAgfSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfc291cmNlLldpdGhTb3VyY2UsIHsKICAgIHNvdXJjZUlkOiAiZGVmYXVsdCIKICB9LCBmdW5jdGlvbiAoX3JlZjMpIHsKICAgIHZhciBpbmRpY2VzRXhpc3QgPSBfcmVmMy5pbmRpY2VzRXhpc3Q7CiAgICByZXR1cm4gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfcmVhY3QuZGVmYXVsdC5GcmFnbWVudCwgbnVsbCwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChGbGV4SXRlbSwgbnVsbCwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUZsZXhHcm91cCwgewogICAgICBhbGlnbkl0ZW1zOiAiY2VudGVyIiwKICAgICAgcmVzcG9uc2l2ZTogZmFsc2UKICAgIH0sIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoRmxleEl0ZW0sIHsKICAgICAgZ3JvdzogZmFsc2UKICAgIH0sIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlMaW5rLCB7CiAgICAgIGhyZWY6ICgwLCBfbGlua190by5nZXRPdmVydmlld1VybCkoKQogICAgfSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUljb24sIHsKICAgICAgImFyaWEtbGFiZWwiOiBpMThuLlNJRU0sCiAgICAgIHR5cGU6ICJzZWN1cml0eUFuYWx5dGljc0FwcCIsCiAgICAgIHNpemU6ICJsIgogICAgfSkpKSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChGbGV4SXRlbSwgewogICAgICBjb21wb25lbnQ6ICJuYXYiCiAgICB9LCAoMCwgX3NvdXJjZS5pbmRpY2VzRXhpc3RPckRhdGFUZW1wb3JhcmlseVVuYXZhaWxhYmxlKShpbmRpY2VzRXhpc3QpID8gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfbmF2aWdhdGlvbi5TaWVtTmF2aWdhdGlvbiwgewogICAgICBkaXNwbGF5OiAiY29uZGVuc2VkIiwKICAgICAgbmF2VGFiczogaGlkZURldGVjdGlvbkVuZ2luZSA/ICgwLCBfZnAucGlja0J5KShmdW5jdGlvbiAoXywga2V5KSB7CiAgICAgICAgcmV0dXJuIGtleSAhPT0gX3R5cGVzLlNpZW1QYWdlTmFtZS5kZXRlY3Rpb25zOwogICAgICB9LCBfaG9tZV9uYXZpZ2F0aW9ucy5uYXZUYWJzKSA6IF9ob21lX25hdmlnYXRpb25zLm5hdlRhYnMKICAgIH0pIDogX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfbmF2aWdhdGlvbi5TaWVtTmF2aWdhdGlvbiwgewogICAgICBkaXNwbGF5OiAiY29uZGVuc2VkIiwKICAgICAgbmF2VGFiczogKDAsIF9mcC5waWNrQnkpKGZ1bmN0aW9uIChfLCBrZXkpIHsKICAgICAgICByZXR1cm4ga2V5ID09PSBfdHlwZXMuU2llbVBhZ2VOYW1lLm92ZXJ2aWV3OwogICAgICB9LCBfaG9tZV9uYXZpZ2F0aW9ucy5uYXZUYWJzKQogICAgfSkpKSksIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoRmxleEl0ZW0sIHsKICAgICAgZ3JvdzogZmFsc2UKICAgIH0sIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlGbGV4R3JvdXAsIHsKICAgICAgYWxpZ25JdGVtczogImNlbnRlciIsCiAgICAgIGd1dHRlclNpemU6ICJzIiwKICAgICAgcmVzcG9uc2l2ZTogZmFsc2UsCiAgICAgIHdyYXA6IHRydWUKICAgIH0sICgwLCBfc291cmNlLmluZGljZXNFeGlzdE9yRGF0YVRlbXBvcmFyaWx5VW5hdmFpbGFibGUpKGluZGljZXNFeGlzdCkgJiYgY3VycmVudExvY2F0aW9uLnBhdGhuYW1lLmluY2x1ZGVzKCIvIi5jb25jYXQoX3R5cGVzLlNpZW1QYWdlTmFtZS5kZXRlY3Rpb25zLCAiLyIpKSAmJiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KEZsZXhJdGVtLCB7CiAgICAgIGdyb3c6IGZhbHNlCiAgICB9LCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9tbF9wb3BvdmVyLk1sUG9wb3ZlciwgbnVsbCkpLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KEZsZXhJdGVtLCB7CiAgICAgIGdyb3c6IGZhbHNlCiAgICB9LCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpQnV0dG9uRW1wdHksIHsKICAgICAgImRhdGEtdGVzdC1zdWJqIjogImFkZC1kYXRhIiwKICAgICAgaHJlZjogImtpYmFuYSNob21lL3R1dG9yaWFsX2RpcmVjdG9yeS9zaWVtIiwKICAgICAgaWNvblR5cGU6ICJwbHVzSW5DaXJjbGUiCiAgICB9LCBpMThuLkJVVFRPTl9BRERfREFUQSkpKSkpOwogIH0pKSk7Cn0pOwoKZXhwb3J0cy5IZWFkZXJHbG9iYWwgPSBIZWFkZXJHbG9iYWw7CkhlYWRlckdsb2JhbC5kaXNwbGF5TmFtZSA9ICdIZWFkZXJHbG9iYWwnOw=="},null]}