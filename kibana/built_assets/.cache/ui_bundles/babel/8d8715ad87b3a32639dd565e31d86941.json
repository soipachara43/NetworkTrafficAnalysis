{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!src/legacy/ui/public/new_platform/new_platform.js","dependencies":[{"path":"src/legacy/ui/public/new_platform/new_platform.js","mtime":1589249550331},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLl9fcmVzZXRfXyA9IF9fcmVzZXRfXzsKZXhwb3J0cy5fX3NldHVwX18gPSBfX3NldHVwX187CmV4cG9ydHMuX19zdGFydF9fID0gX19zdGFydF9fOwpleHBvcnRzLmxlZ2FjeUFwcFJlZ2lzdGVyID0gZXhwb3J0cy5ucFN0YXJ0ID0gZXhwb3J0cy5ucFNldHVwID0gdm9pZCAwOwoKdmFyIF9oaXN0b3J5ID0gcmVxdWlyZSgiaGlzdG9yeSIpOwoKdmFyIF9wdWJsaWMgPSByZXF1aXJlKCIuLi8uLi8uLi8uLi9jb3JlL3B1YmxpYyIpOwoKdmFyIF9zZXJ2aWNlcyA9IHJlcXVpcmUoIi4uLy4uLy4uLy4uL3BsdWdpbnMvZGF0YS9wdWJsaWMvc2VydmljZXMiKTsKCmZ1bmN0aW9uIGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywga2V5LCBhcmcpIHsKICB0cnkgewogICAgdmFyIGluZm8gPSBnZW5ba2V5XShhcmcpOwogICAgdmFyIHZhbHVlID0gaW5mby52YWx1ZTsKICB9IGNhdGNoIChlcnJvcikgewogICAgcmVqZWN0KGVycm9yKTsKICAgIHJldHVybjsKICB9CgogIGlmIChpbmZvLmRvbmUpIHsKICAgIHJlc29sdmUodmFsdWUpOwogIH0gZWxzZSB7CiAgICBQcm9taXNlLnJlc29sdmUodmFsdWUpLnRoZW4oX25leHQsIF90aHJvdyk7CiAgfQp9CgpmdW5jdGlvbiBfYXN5bmNUb0dlbmVyYXRvcihmbikgewogIHJldHVybiBmdW5jdGlvbiAoKSB7CiAgICB2YXIgc2VsZiA9IHRoaXMsCiAgICAgICAgYXJncyA9IGFyZ3VtZW50czsKICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICAgIHZhciBnZW4gPSBmbi5hcHBseShzZWxmLCBhcmdzKTsKCiAgICAgIGZ1bmN0aW9uIF9uZXh0KHZhbHVlKSB7CiAgICAgICAgYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCAibmV4dCIsIHZhbHVlKTsKICAgICAgfQoKICAgICAgZnVuY3Rpb24gX3Rocm93KGVycikgewogICAgICAgIGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywgInRocm93IiwgZXJyKTsKICAgICAgfQoKICAgICAgX25leHQodW5kZWZpbmVkKTsKICAgIH0pOwogIH07Cn0KCnZhciBucFNldHVwID0gewogIGNvcmU6IG51bGwsCiAgcGx1Z2luczoge30KfTsKZXhwb3J0cy5ucFNldHVwID0gbnBTZXR1cDsKdmFyIG5wU3RhcnQgPSB7CiAgY29yZTogbnVsbCwKICBwbHVnaW5zOiB7fQp9OwovKioKICogT25seSB1c2VkIGJ5IHVuaXQgdGVzdHMKICogQGludGVybmFsCiAqLwoKZXhwb3J0cy5ucFN0YXJ0ID0gbnBTdGFydDsKCmZ1bmN0aW9uIF9fcmVzZXRfXygpIHsKICBucFNldHVwLmNvcmUgPSBudWxsOwogIG5wU2V0dXAucGx1Z2lucyA9IHt9OwogIG5wU3RhcnQuY29yZSA9IG51bGw7CiAgbnBTdGFydC5wbHVnaW5zID0ge307CiAgbGVnYWN5QXBwUmVnaXN0ZXJlZCA9IGZhbHNlOwp9CgpmdW5jdGlvbiBfX3NldHVwX18oY29yZVNldHVwLCBwbHVnaW5zKSB7CiAgbnBTZXR1cC5jb3JlID0gY29yZVNldHVwOwogIG5wU2V0dXAucGx1Z2lucyA9IHBsdWdpbnM7IC8vIFNldHVwIGNvbXBhdGliaWxpdHkgbGF5ZXIgZm9yIEFwcFNlcnZpY2UgaW4gbGVnYWN5IHBsYXRmb3JtCgogIG5wU2V0dXAuY29yZS5hcHBsaWNhdGlvbi5yZWdpc3RlciA9IGxlZ2FjeUFwcFJlZ2lzdGVyOyAvLyBTZXJ2aWNlcyB0aGF0IG5lZWQgdG8gYmUgc2V0IGluIHRoZSBsZWdhY3kgcGxhdGZvcm0gc2luY2UgdGhlIGxlZ2FjeSBkYXRhIHBsdWdpbgogIC8vIHdoaWNoIHByZXZpb3VzbHkgcHJvdmlkZWQgdGhlbSBoYXMgYmVlbiByZW1vdmVkLgoKICAoMCwgX3NlcnZpY2VzLnNldEluamVjdGVkTWV0YWRhdGEpKG5wU2V0dXAuY29yZS5pbmplY3RlZE1ldGFkYXRhKTsKfQoKZnVuY3Rpb24gX19zdGFydF9fKGNvcmVTdGFydCwgcGx1Z2lucykgewogIG5wU3RhcnQuY29yZSA9IGNvcmVTdGFydDsKICBucFN0YXJ0LnBsdWdpbnMgPSBwbHVnaW5zOyAvLyBTZXJ2aWNlcyB0aGF0IG5lZWQgdG8gYmUgc2V0IGluIHRoZSBsZWdhY3kgcGxhdGZvcm0gc2luY2UgdGhlIGxlZ2FjeSBkYXRhIHBsdWdpbgogIC8vIHdoaWNoIHByZXZpb3VzbHkgcHJvdmlkZWQgdGhlbSBoYXMgYmVlbiByZW1vdmVkLgoKICAoMCwgX3NlcnZpY2VzLnNldEh0dHApKG5wU3RhcnQuY29yZS5odHRwKTsKICAoMCwgX3NlcnZpY2VzLnNldE5vdGlmaWNhdGlvbnMpKG5wU3RhcnQuY29yZS5ub3RpZmljYXRpb25zKTsKICAoMCwgX3NlcnZpY2VzLnNldE92ZXJsYXlzKShucFN0YXJ0LmNvcmUub3ZlcmxheXMpOwogICgwLCBfc2VydmljZXMuc2V0VWlTZXR0aW5ncykobnBTdGFydC5jb3JlLnVpU2V0dGluZ3MpOwogICgwLCBfc2VydmljZXMuc2V0RmllbGRGb3JtYXRzKShucFN0YXJ0LnBsdWdpbnMuZGF0YS5maWVsZEZvcm1hdHMpOwogICgwLCBfc2VydmljZXMuc2V0SW5kZXhQYXR0ZXJucykobnBTdGFydC5wbHVnaW5zLmRhdGEuaW5kZXhQYXR0ZXJucyk7CiAgKDAsIF9zZXJ2aWNlcy5zZXRRdWVyeVNlcnZpY2UpKG5wU3RhcnQucGx1Z2lucy5kYXRhLnF1ZXJ5KTsKICAoMCwgX3NlcnZpY2VzLnNldFNlYXJjaFNlcnZpY2UpKG5wU3RhcnQucGx1Z2lucy5kYXRhLnNlYXJjaCk7Cn0KLyoqIEZsYWcgdXNlZCB0byBlbnN1cmUgYGxlZ2FjeUFwcFJlZ2lzdGVyYCBpcyBvbmx5IGNhbGxlZCBvbmNlLiAqLwoKCnZhciBsZWdhY3lBcHBSZWdpc3RlcmVkID0gZmFsc2U7Ci8qKgogKiBFeHBvcnRlZCBmb3IgdGVzdGluZyBvbmx5LiBVc2UgYG5wU2V0dXAuY29yZS5hcHBsaWNhdGlvbi5yZWdpc3RlcmAgaW4gbGVnYWN5IGFwcHMuCiAqIEBpbnRlcm5hbAogKi8KCnZhciBsZWdhY3lBcHBSZWdpc3RlciA9IGZ1bmN0aW9uIGxlZ2FjeUFwcFJlZ2lzdGVyKGFwcCkgewogIGlmIChsZWdhY3lBcHBSZWdpc3RlcmVkKSB7CiAgICB0aHJvdyBuZXcgRXJyb3IoImNvcmUuYXBwbGljYXRpb24ucmVnaXN0ZXIgbWF5IG9ubHkgYmUgY2FsbGVkIG9uY2UgZm9yIGxlZ2FjeSBwbHVnaW5zLiIpOwogIH0KCiAgbGVnYWN5QXBwUmVnaXN0ZXJlZCA9IHRydWU7CgogIHJlcXVpcmUoJ3VpL2Nocm9tZScpLnNldFJvb3RDb250cm9sbGVyKGFwcC5pZCwgZnVuY3Rpb24gKCRzY29wZSwgJGVsZW1lbnQpIHsKICAgIHZhciBlbGVtZW50ID0gJGVsZW1lbnRbMF07IC8vIFJvb3QgY29udHJvbGxlciBjYW5ub3QgcmV0dXJuIGEgUHJvbWlzZSBzbyB1c2UgYW4gaW50ZXJuYWwgYXN5bmMgZnVuY3Rpb24gYW5kIGNhbGwgaXQgaW1tZWRpYXRlbHkKCiAgICBfYXN5bmNUb0dlbmVyYXRvcigKICAgIC8qI19fUFVSRV9fKi8KICAgIHJlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgIHZhciBhcHBSb3V0ZSwgYXBwQmFzZVBhdGgsIHBhcmFtcywgdW5tb3VudDsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGFwcFJvdXRlID0gYXBwLmFwcFJvdXRlIHx8ICIvYXBwLyIuY29uY2F0KGFwcC5pZCk7CiAgICAgICAgICAgICAgYXBwQmFzZVBhdGggPSBucFNldHVwLmNvcmUuaHR0cC5iYXNlUGF0aC5wcmVwZW5kKGFwcFJvdXRlKTsKICAgICAgICAgICAgICBwYXJhbXMgPSB7CiAgICAgICAgICAgICAgICBlbGVtZW50OiBlbGVtZW50LAogICAgICAgICAgICAgICAgYXBwQmFzZVBhdGg6IGFwcEJhc2VQYXRoLAogICAgICAgICAgICAgICAgaGlzdG9yeTogbmV3IF9wdWJsaWMuU2NvcGVkSGlzdG9yeSgoMCwgX2hpc3RvcnkuY3JlYXRlQnJvd3Nlckhpc3RvcnkpKHsKICAgICAgICAgICAgICAgICAgYmFzZW5hbWU6IG5wU2V0dXAuY29yZS5odHRwLmJhc2VQYXRoLmdldCgpCiAgICAgICAgICAgICAgICB9KSwgYXBwUm91dGUpLAogICAgICAgICAgICAgICAgb25BcHBMZWF2ZTogZnVuY3Rpb24gb25BcHBMZWF2ZSgpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9OwoKICAgICAgICAgICAgICBpZiAoIWlzQXBwTW91bnREZXByZWNhdGVkKGFwcC5tb3VudCkpIHsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA5OwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNjsKICAgICAgICAgICAgICByZXR1cm4gYXBwLm1vdW50KHsKICAgICAgICAgICAgICAgIGNvcmU6IG5wU3RhcnQuY29yZQogICAgICAgICAgICAgIH0sIHBhcmFtcyk7CgogICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxMjsKICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTE7CiAgICAgICAgICAgICAgcmV0dXJuIGFwcC5tb3VudChwYXJhbXMpOwoKICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0LnNlbnQ7CgogICAgICAgICAgICBjYXNlIDEyOgogICAgICAgICAgICAgIHVubW91bnQgPSBfY29udGV4dC50MDsKICAgICAgICAgICAgICAkc2NvcGUuJG9uKCckZGVzdHJveScsIGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgIHVubW91bnQoKTsKICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGNhc2UgMTQ6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUpOwogICAgfSkpKCk7CiAgfSk7Cn07CgpleHBvcnRzLmxlZ2FjeUFwcFJlZ2lzdGVyID0gbGVnYWN5QXBwUmVnaXN0ZXI7CgpmdW5jdGlvbiBpc0FwcE1vdW50RGVwcmVjYXRlZChtb3VudCkgewogIC8vIE1vdW50IGZ1bmN0aW9ucyB3aXRoIHR3byBhcmd1bWVudHMgYXJlIGFzc3VtZWQgdG8gZXhwZWN0IGRlcHJlY2F0ZWQgYGNvbnRleHRgIG9iamVjdC4KICByZXR1cm4gbW91bnQubGVuZ3RoID09PSAyOwp9"},null]}