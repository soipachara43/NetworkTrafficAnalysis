{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/monitoring/public/views/kibana/instances/index.js","dependencies":[{"path":"x-pack/legacy/plugins/monitoring/public/views/kibana/instances/index.js","mtime":1589249552628},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9yZWFjdCA9IF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKHJlcXVpcmUoInJlYWN0IikpOwoKdmFyIF9yb3V0ZXMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoInBsdWdpbnMvbW9uaXRvcmluZy9ucF9pbXBvcnRzL3VpL3JvdXRlcyIpKTsKCnZhciBfcm91dGVfaW5pdCA9IHJlcXVpcmUoInBsdWdpbnMvbW9uaXRvcmluZy9saWIvcm91dGVfaW5pdCIpOwoKdmFyIF8gPSByZXF1aXJlKCIuLi8uLi8iKTsKCnZhciBfZ2V0X3BhZ2VfZGF0YSA9IHJlcXVpcmUoIi4vZ2V0X3BhZ2VfZGF0YSIpOwoKdmFyIF9pbmRleCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgiLi9pbmRleC5odG1sIikpOwoKdmFyIF9pbnN0YW5jZXMgPSByZXF1aXJlKCJwbHVnaW5zL21vbml0b3JpbmcvY29tcG9uZW50cy9raWJhbmEvaW5zdGFuY2VzIik7Cgp2YXIgX3JlbmRlcmVycyA9IHJlcXVpcmUoIi4uLy4uLy4uL2NvbXBvbmVudHMvcmVuZGVyZXJzIik7Cgp2YXIgX2kxOG4gPSByZXF1aXJlKCJ1aS9pMThuIik7Cgp2YXIgX2NvbnN0YW50cyA9IHJlcXVpcmUoIi4uLy4uLy4uLy4uL2NvbW1vbi9jb25zdGFudHMiKTsKCmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9CgpmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChvYmopIHsgaWYgKG9iaiAmJiBvYmouX19lc01vZHVsZSkgeyByZXR1cm4gb2JqOyB9IGVsc2UgeyB2YXIgbmV3T2JqID0ge307IGlmIChvYmogIT0gbnVsbCkgeyBmb3IgKHZhciBrZXkgaW4gb2JqKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBrZXkpKSB7IHZhciBkZXNjID0gT2JqZWN0LmRlZmluZVByb3BlcnR5ICYmIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IgPyBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iaiwga2V5KSA6IHt9OyBpZiAoZGVzYy5nZXQgfHwgZGVzYy5zZXQpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KG5ld09iaiwga2V5LCBkZXNjKTsgfSBlbHNlIHsgbmV3T2JqW2tleV0gPSBvYmpba2V5XTsgfSB9IH0gfSBuZXdPYmouZGVmYXVsdCA9IG9iajsgcmV0dXJuIG5ld09iajsgfSB9CgpmdW5jdGlvbiBfdHlwZW9mKG9iaikgeyBpZiAodHlwZW9mIFN5bWJvbCA9PT0gImZ1bmN0aW9uIiAmJiB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID09PSAic3ltYm9sIikgeyBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgcmV0dXJuIHR5cGVvZiBvYmo7IH07IH0gZWxzZSB7IF90eXBlb2YgPSBmdW5jdGlvbiBfdHlwZW9mKG9iaikgeyByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09ICJmdW5jdGlvbiIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gInN5bWJvbCIgOiB0eXBlb2Ygb2JqOyB9OyB9IHJldHVybiBfdHlwZW9mKG9iaik7IH0KCmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcigiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uIik7IH0gfQoKZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoY2FsbCAmJiAoX3R5cGVvZihjYWxsKSA9PT0gIm9iamVjdCIgfHwgdHlwZW9mIGNhbGwgPT09ICJmdW5jdGlvbiIpKSB7IHJldHVybiBjYWxsOyB9IHJldHVybiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpOyB9CgpmdW5jdGlvbiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpIHsgaWYgKHNlbGYgPT09IHZvaWQgMCkgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZCIpOyB9IHJldHVybiBzZWxmOyB9CgpmdW5jdGlvbiBfZ2V0UHJvdG90eXBlT2YobykgeyBfZ2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3QuZ2V0UHJvdG90eXBlT2YgOiBmdW5jdGlvbiBfZ2V0UHJvdG90eXBlT2YobykgeyByZXR1cm4gby5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKG8pOyB9OyByZXR1cm4gX2dldFByb3RvdHlwZU9mKG8pOyB9CgpmdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSAiZnVuY3Rpb24iICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcigiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24iKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBfc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpOyB9CgpmdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkgeyBfc2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHwgZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHsgby5fX3Byb3RvX18gPSBwOyByZXR1cm4gbzsgfTsgcmV0dXJuIF9zZXRQcm90b3R5cGVPZihvLCBwKTsgfQoKX3JvdXRlcy5kZWZhdWx0LndoZW4oJy9raWJhbmEvaW5zdGFuY2VzJywgewogIHRlbXBsYXRlOiBfaW5kZXguZGVmYXVsdCwKICByZXNvbHZlOiB7CiAgICBjbHVzdGVyczogZnVuY3Rpb24gY2x1c3RlcnMoUHJpdmF0ZSkgewogICAgICB2YXIgcm91dGVJbml0ID0gUHJpdmF0ZShfcm91dGVfaW5pdC5yb3V0ZUluaXRQcm92aWRlcik7CiAgICAgIHJldHVybiByb3V0ZUluaXQoewogICAgICAgIGNvZGVQYXRoczogW19jb25zdGFudHMuQ09ERV9QQVRIX0tJQkFOQV0KICAgICAgfSk7CiAgICB9LAogICAgcGFnZURhdGE6IF9nZXRfcGFnZV9kYXRhLmdldFBhZ2VEYXRhCiAgfSwKICBjb250cm9sbGVyQXM6ICdraWJhbmFzJywKICBjb250cm9sbGVyOgogIC8qI19fUFVSRV9fKi8KICBmdW5jdGlvbiAoX01vbml0b3JpbmdWaWV3QmFzZUV1KSB7CiAgICBfaW5oZXJpdHMoS2liYW5hSW5zdGFuY2VzTGlzdCwgX01vbml0b3JpbmdWaWV3QmFzZUV1KTsKCiAgICBmdW5jdGlvbiBLaWJhbmFJbnN0YW5jZXNMaXN0KCRpbmplY3RvciwgJHNjb3BlKSB7CiAgICAgIHZhciBfdGhpczsKCiAgICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBLaWJhbmFJbnN0YW5jZXNMaXN0KTsKCiAgICAgIF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgX2dldFByb3RvdHlwZU9mKEtpYmFuYUluc3RhbmNlc0xpc3QpLmNhbGwodGhpcywgewogICAgICAgIHRpdGxlOiAnS2liYW5hIEluc3RhbmNlcycsCiAgICAgICAgc3RvcmFnZUtleTogJ2tpYmFuYS5pbnN0YW5jZXMnLAogICAgICAgIGdldFBhZ2VEYXRhOiBfZ2V0X3BhZ2VfZGF0YS5nZXRQYWdlRGF0YSwKICAgICAgICByZWFjdE5vZGVJZDogJ21vbml0b3JpbmdLaWJhbmFJbnN0YW5jZXNBcHAnLAogICAgICAgICRzY29wZTogJHNjb3BlLAogICAgICAgICRpbmplY3RvcjogJGluamVjdG9yCiAgICAgIH0pKTsKICAgICAgdmFyIGtiblVybCA9ICRpbmplY3Rvci5nZXQoJ2tiblVybCcpOwoKICAgICAgdmFyIHJlbmRlclJlYWN0ID0gZnVuY3Rpb24gcmVuZGVyUmVhY3QoKSB7CiAgICAgICAgX3RoaXMucmVuZGVyUmVhY3QoX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfaTE4bi5JMThuQ29udGV4dCwgbnVsbCwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfcmVuZGVyZXJzLlNldHVwTW9kZVJlbmRlcmVyLCB7CiAgICAgICAgICBzY29wZTogJHNjb3BlLAogICAgICAgICAgaW5qZWN0b3I6ICRpbmplY3RvciwKICAgICAgICAgIHByb2R1Y3ROYW1lOiBfY29uc3RhbnRzLktJQkFOQV9TWVNURU1fSUQsCiAgICAgICAgICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcihfcmVmKSB7CiAgICAgICAgICAgIHZhciBzZXR1cE1vZGUgPSBfcmVmLnNldHVwTW9kZSwKICAgICAgICAgICAgICAgIGZseW91dENvbXBvbmVudCA9IF9yZWYuZmx5b3V0Q29tcG9uZW50LAogICAgICAgICAgICAgICAgYm90dG9tQmFyQ29tcG9uZW50ID0gX3JlZi5ib3R0b21CYXJDb21wb25lbnQ7CiAgICAgICAgICAgIHJldHVybiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9yZWFjdC5GcmFnbWVudCwgbnVsbCwgZmx5b3V0Q29tcG9uZW50LCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9pbnN0YW5jZXMuS2liYW5hSW5zdGFuY2VzLCB7CiAgICAgICAgICAgICAgaW5zdGFuY2VzOiBfdGhpcy5kYXRhLmtpYmFuYXMsCiAgICAgICAgICAgICAgc2V0dXBNb2RlOiBzZXR1cE1vZGUsCiAgICAgICAgICAgICAgc29ydGluZzogX3RoaXMuc29ydGluZywKICAgICAgICAgICAgICBwYWdpbmF0aW9uOiBfdGhpcy5wYWdpbmF0aW9uLAogICAgICAgICAgICAgIG9uVGFibGVDaGFuZ2U6IF90aGlzLm9uVGFibGVDaGFuZ2UsCiAgICAgICAgICAgICAgY2x1c3RlclN0YXR1czogX3RoaXMuZGF0YS5jbHVzdGVyU3RhdHVzLAogICAgICAgICAgICAgIGFuZ3VsYXI6IHsKICAgICAgICAgICAgICAgICRzY29wZTogJHNjb3BlLAogICAgICAgICAgICAgICAga2JuVXJsOiBrYm5VcmwKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pLCBib3R0b21CYXJDb21wb25lbnQpOwogICAgICAgICAgfQogICAgICAgIH0pKSk7CiAgICAgIH07CgogICAgICAkc2NvcGUuJHdhdGNoKGZ1bmN0aW9uICgpIHsKICAgICAgICByZXR1cm4gX3RoaXMuZGF0YTsKICAgICAgfSwgZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICBpZiAoIWRhdGEpIHsKICAgICAgICAgIHJldHVybjsKICAgICAgICB9CgogICAgICAgIHJlbmRlclJlYWN0KCk7CiAgICAgIH0pOwogICAgICByZXR1cm4gX3RoaXM7CiAgICB9CgogICAgcmV0dXJuIEtpYmFuYUluc3RhbmNlc0xpc3Q7CiAgfShfLk1vbml0b3JpbmdWaWV3QmFzZUV1aVRhYmxlQ29udHJvbGxlcikKfSk7"},null]}