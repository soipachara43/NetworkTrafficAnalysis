{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!src/legacy/core_plugins/kibana/public/visualize/np_ready/listing/visualize_listing_table.js","dependencies":[{"path":"src/legacy/core_plugins/kibana/public/visualize/np_ready/listing/visualize_listing_table.js","mtime":1589249549866},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLlZpc3VhbGl6ZUxpc3RpbmdUYWJsZSA9IHZvaWQgMDsKCnZhciBfcmVhY3QgPSBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChyZXF1aXJlKCJyZWFjdCIpKTsKCnZhciBfcHJvcFR5cGVzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCJwcm9wLXR5cGVzIikpOwoKdmFyIF9yZWFjdDIgPSByZXF1aXJlKCJAa2JuL2kxOG4vcmVhY3QiKTsKCnZhciBfaTE4biA9IHJlcXVpcmUoIkBrYm4vaTE4biIpOwoKdmFyIF9wdWJsaWMgPSByZXF1aXJlKCIuLi8uLi8uLi8uLi8uLi8uLi8uLi9wbHVnaW5zL2tpYmFuYV9yZWFjdC9wdWJsaWMiKTsKCnZhciBfZXVpID0gcmVxdWlyZSgiQGVsYXN0aWMvZXVpIik7Cgp2YXIgX2tpYmFuYV9zZXJ2aWNlcyA9IHJlcXVpcmUoIi4uLy4uL2tpYmFuYV9zZXJ2aWNlcyIpOwoKZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH0KCmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKG9iaikgeyBpZiAob2JqICYmIG9iai5fX2VzTW9kdWxlKSB7IHJldHVybiBvYmo7IH0gZWxzZSB7IHZhciBuZXdPYmogPSB7fTsgaWYgKG9iaiAhPSBudWxsKSB7IGZvciAodmFyIGtleSBpbiBvYmopIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGtleSkpIHsgdmFyIGRlc2MgPSBPYmplY3QuZGVmaW5lUHJvcGVydHkgJiYgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvciA/IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqLCBrZXkpIDoge307IGlmIChkZXNjLmdldCB8fCBkZXNjLnNldCkgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkobmV3T2JqLCBrZXksIGRlc2MpOyB9IGVsc2UgeyBuZXdPYmpba2V5XSA9IG9ialtrZXldOyB9IH0gfSB9IG5ld09iai5kZWZhdWx0ID0gb2JqOyByZXR1cm4gbmV3T2JqOyB9IH0KCmZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IGlmICh0eXBlb2YgU3ltYm9sID09PSAiZnVuY3Rpb24iICYmIHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPT09ICJzeW1ib2wiKSB7IF90eXBlb2YgPSBmdW5jdGlvbiBfdHlwZW9mKG9iaikgeyByZXR1cm4gdHlwZW9mIG9iajsgfTsgfSBlbHNlIHsgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gImZ1bmN0aW9uIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyAic3ltYm9sIiA6IHR5cGVvZiBvYmo7IH07IH0gcmV0dXJuIF90eXBlb2Yob2JqKTsgfQoKZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb24iKTsgfSB9CgpmdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmICgidmFsdWUiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfQoKZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH0KCmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKGNhbGwgJiYgKF90eXBlb2YoY2FsbCkgPT09ICJvYmplY3QiIHx8IHR5cGVvZiBjYWxsID09PSAiZnVuY3Rpb24iKSkgeyByZXR1cm4gY2FsbDsgfSByZXR1cm4gX2Fzc2VydFRoaXNJbml0aWFsaXplZChzZWxmKTsgfQoKZnVuY3Rpb24gX2Fzc2VydFRoaXNJbml0aWFsaXplZChzZWxmKSB7IGlmIChzZWxmID09PSB2b2lkIDApIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWQiKTsgfSByZXR1cm4gc2VsZjsgfQoKZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHsgX2dldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LmdldFByb3RvdHlwZU9mIDogZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHsgcmV0dXJuIG8uX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihvKTsgfTsgcmV0dXJuIF9nZXRQcm90b3R5cGVPZihvKTsgfQoKZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gImZ1bmN0aW9uIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uIik7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgX3NldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKTsgfQoKZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHsgX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8IGZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7IG8uX19wcm90b19fID0gcDsgcmV0dXJuIG87IH07IHJldHVybiBfc2V0UHJvdG90eXBlT2YobywgcCk7IH0KCnZhciBWaXN1YWxpemVMaXN0aW5nVGFibGUgPQovKiNfX1BVUkVfXyovCmZ1bmN0aW9uIChfQ29tcG9uZW50KSB7CiAgX2luaGVyaXRzKFZpc3VhbGl6ZUxpc3RpbmdUYWJsZSwgX0NvbXBvbmVudCk7CgogIGZ1bmN0aW9uIFZpc3VhbGl6ZUxpc3RpbmdUYWJsZShwcm9wcykgewogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFZpc3VhbGl6ZUxpc3RpbmdUYWJsZSk7CgogICAgcmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9nZXRQcm90b3R5cGVPZihWaXN1YWxpemVMaXN0aW5nVGFibGUpLmNhbGwodGhpcywgcHJvcHMpKTsKICB9CgogIF9jcmVhdGVDbGFzcyhWaXN1YWxpemVMaXN0aW5nVGFibGUsIFt7CiAgICBrZXk6ICJyZW5kZXIiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcigpIHsKICAgICAgdmFyIF9nZXRTZXJ2aWNlcyA9ICgwLCBfa2liYW5hX3NlcnZpY2VzLmdldFNlcnZpY2VzKSgpLAogICAgICAgICAgdmlzdWFsaXplQ2FwYWJpbGl0aWVzID0gX2dldFNlcnZpY2VzLnZpc3VhbGl6ZUNhcGFiaWxpdGllcywKICAgICAgICAgIHVpU2V0dGluZ3MgPSBfZ2V0U2VydmljZXMudWlTZXR0aW5ncywKICAgICAgICAgIHRvYXN0Tm90aWZpY2F0aW9ucyA9IF9nZXRTZXJ2aWNlcy50b2FzdE5vdGlmaWNhdGlvbnM7CgogICAgICByZXR1cm4gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfcHVibGljLlRhYmxlTGlzdFZpZXcsIHsKICAgICAgICBoZWFkaW5nSWQ6ICJ2aXN1YWxpemVMaXN0aW5nSGVhZGluZyIgLy8gd2UgYWxsb3cgdXNlcnMgdG8gY3JlYXRlIHZpc3VhbGl6YXRpb25zIGV2ZW4gaWYgdGhleSBjYW4ndCBzYXZlIHRoZW0KICAgICAgICAvLyBmb3IgZGF0YSBleHBsb3JhdGlvbiBwdXJwb3NlcwogICAgICAgICwKICAgICAgICBjcmVhdGVJdGVtOiB0aGlzLnByb3BzLmNyZWF0ZUl0ZW0sCiAgICAgICAgZmluZEl0ZW1zOiB0aGlzLnByb3BzLmZpbmRJdGVtcywKICAgICAgICBkZWxldGVJdGVtczogdmlzdWFsaXplQ2FwYWJpbGl0aWVzLmRlbGV0ZSA/IHRoaXMucHJvcHMuZGVsZXRlSXRlbXMgOiBudWxsLAogICAgICAgIGVkaXRJdGVtOiB2aXN1YWxpemVDYXBhYmlsaXRpZXMuc2F2ZSA/IHRoaXMucHJvcHMuZWRpdEl0ZW0gOiBudWxsLAogICAgICAgIHRhYmxlQ29sdW1uczogdGhpcy5nZXRUYWJsZUNvbHVtbnMoKSwKICAgICAgICBsaXN0aW5nTGltaXQ6IHRoaXMucHJvcHMubGlzdGluZ0xpbWl0LAogICAgICAgIHNlbGVjdGFibGU6IGZ1bmN0aW9uIHNlbGVjdGFibGUoaXRlbSkgewogICAgICAgICAgcmV0dXJuIGl0ZW0uY2FuRGVsZXRlOwogICAgICAgIH0sCiAgICAgICAgaW5pdGlhbEZpbHRlcjogJycsCiAgICAgICAgbm9JdGVtc0ZyYWdtZW50OiB0aGlzLmdldE5vSXRlbXNNZXNzYWdlKCksCiAgICAgICAgZW50aXR5TmFtZTogX2kxOG4uaTE4bi50cmFuc2xhdGUoJ2tibi52aXN1YWxpemUubGlzdGluZy50YWJsZS5lbnRpdHlOYW1lJywgewogICAgICAgICAgZGVmYXVsdE1lc3NhZ2U6ICd2aXN1YWxpemF0aW9uJwogICAgICAgIH0pLAogICAgICAgIGVudGl0eU5hbWVQbHVyYWw6IF9pMThuLmkxOG4udHJhbnNsYXRlKCdrYm4udmlzdWFsaXplLmxpc3RpbmcudGFibGUuZW50aXR5TmFtZVBsdXJhbCcsIHsKICAgICAgICAgIGRlZmF1bHRNZXNzYWdlOiAndmlzdWFsaXphdGlvbnMnCiAgICAgICAgfSksCiAgICAgICAgdGFibGVMaXN0VGl0bGU6IF9pMThuLmkxOG4udHJhbnNsYXRlKCdrYm4udmlzdWFsaXplLmxpc3RpbmcudGFibGUubGlzdFRpdGxlJywgewogICAgICAgICAgZGVmYXVsdE1lc3NhZ2U6ICdWaXN1YWxpemF0aW9ucycKICAgICAgICB9KSwKICAgICAgICB0b2FzdE5vdGlmaWNhdGlvbnM6IHRvYXN0Tm90aWZpY2F0aW9ucywKICAgICAgICB1aVNldHRpbmdzOiB1aVNldHRpbmdzCiAgICAgIH0pOwogICAgfQogIH0sIHsKICAgIGtleTogImdldFRhYmxlQ29sdW1ucyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0VGFibGVDb2x1bW5zKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdmFyIHRhYmxlQ29sdW1ucyA9IFt7CiAgICAgICAgZmllbGQ6ICd0aXRsZScsCiAgICAgICAgbmFtZTogX2kxOG4uaTE4bi50cmFuc2xhdGUoJ2tibi52aXN1YWxpemUubGlzdGluZy50YWJsZS50aXRsZUNvbHVtbk5hbWUnLCB7CiAgICAgICAgICBkZWZhdWx0TWVzc2FnZTogJ1RpdGxlJwogICAgICAgIH0pLAogICAgICAgIHNvcnRhYmxlOiB0cnVlLAogICAgICAgIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKGZpZWxkLCByZWNvcmQpIHsKICAgICAgICAgIHJldHVybiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpTGluaywgewogICAgICAgICAgICBocmVmOiBfdGhpcy5wcm9wcy5nZXRWaWV3VXJsKHJlY29yZCksCiAgICAgICAgICAgICJkYXRhLXRlc3Qtc3ViaiI6ICJ2aXNMaXN0aW5nVGl0bGVMaW5rLSIuY29uY2F0KHJlY29yZC50aXRsZS5zcGxpdCgnICcpLmpvaW4oJy0nKSkKICAgICAgICAgIH0sIGZpZWxkKTsKICAgICAgICB9CiAgICAgIH0sIHsKICAgICAgICBmaWVsZDogJ3R5cGVUaXRsZScsCiAgICAgICAgbmFtZTogX2kxOG4uaTE4bi50cmFuc2xhdGUoJ2tibi52aXN1YWxpemUubGlzdGluZy50YWJsZS50eXBlQ29sdW1uTmFtZScsIHsKICAgICAgICAgIGRlZmF1bHRNZXNzYWdlOiAnVHlwZScKICAgICAgICB9KSwKICAgICAgICBzb3J0YWJsZTogdHJ1ZSwKICAgICAgICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcihmaWVsZCwgcmVjb3JkKSB7CiAgICAgICAgICByZXR1cm4gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudCgic3BhbiIsIG51bGwsIF90aGlzLnJlbmRlckl0ZW1UeXBlSWNvbihyZWNvcmQpLCByZWNvcmQudHlwZVRpdGxlLCBfdGhpcy5nZXRCYWRnZShyZWNvcmQpKTsKICAgICAgICB9CiAgICAgIH0sIHsKICAgICAgICBmaWVsZDogJ2Rlc2NyaXB0aW9uJywKICAgICAgICBuYW1lOiBfaTE4bi5pMThuLnRyYW5zbGF0ZSgna2JuLmRhc2hib2FyZC5saXN0aW5nLnRhYmxlLmRlc2NyaXB0aW9uQ29sdW1uTmFtZScsIHsKICAgICAgICAgIGRlZmF1bHRNZXNzYWdlOiAnRGVzY3JpcHRpb24nCiAgICAgICAgfSksCiAgICAgICAgc29ydGFibGU6IHRydWUsCiAgICAgICAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIoZmllbGQsIHJlY29yZCkgewogICAgICAgICAgcmV0dXJuIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoInNwYW4iLCBudWxsLCByZWNvcmQuZGVzY3JpcHRpb24pOwogICAgICAgIH0KICAgICAgfV07CiAgICAgIHJldHVybiB0YWJsZUNvbHVtbnM7CiAgICB9CiAgfSwgewogICAga2V5OiAiZ2V0Tm9JdGVtc01lc3NhZ2UiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdldE5vSXRlbXNNZXNzYWdlKCkgewogICAgICBpZiAodGhpcy5wcm9wcy5oaWRlV3JpdGVDb250cm9scykgewogICAgICAgIHJldHVybiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KCJkaXYiLCBudWxsLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpRW1wdHlQcm9tcHQsIHsKICAgICAgICAgIGljb25UeXBlOiAidmlzdWFsaXplQXBwIiwKICAgICAgICAgIHRpdGxlOiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KCJoMSIsIHsKICAgICAgICAgICAgaWQ6ICJ2aXN1YWxpemVMaXN0aW5nSGVhZGluZyIKICAgICAgICAgIH0sIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3JlYWN0Mi5Gb3JtYXR0ZWRNZXNzYWdlLCB7CiAgICAgICAgICAgIGlkOiAia2JuLnZpc3VhbGl6ZS5saXN0aW5nLm5vSXRlbXNNZXNzYWdlIiwKICAgICAgICAgICAgZGVmYXVsdE1lc3NhZ2U6ICJMb29rcyBsaWtlIHlvdSBkb24ndCBoYXZlIGFueSB2aXN1YWxpemF0aW9ucy4iCiAgICAgICAgICB9KSkKICAgICAgICB9KSk7CiAgICAgIH0KCiAgICAgIHJldHVybiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KCJkaXYiLCBudWxsLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpRW1wdHlQcm9tcHQsIHsKICAgICAgICBpY29uVHlwZTogInZpc3VhbGl6ZUFwcCIsCiAgICAgICAgdGl0bGU6IF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoImgxIiwgewogICAgICAgICAgaWQ6ICJ2aXN1YWxpemVMaXN0aW5nSGVhZGluZyIKICAgICAgICB9LCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9yZWFjdDIuRm9ybWF0dGVkTWVzc2FnZSwgewogICAgICAgICAgaWQ6ICJrYm4udmlzdWFsaXplLmxpc3RpbmcuY3JlYXRlTmV3LnRpdGxlIiwKICAgICAgICAgIGRlZmF1bHRNZXNzYWdlOiAiQ3JlYXRlIHlvdXIgZmlyc3QgdmlzdWFsaXphdGlvbiIKICAgICAgICB9KSksCiAgICAgICAgYm9keTogX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfcmVhY3QuRnJhZ21lbnQsIG51bGwsIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoInAiLCBudWxsLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9yZWFjdDIuRm9ybWF0dGVkTWVzc2FnZSwgewogICAgICAgICAgaWQ6ICJrYm4udmlzdWFsaXplLmxpc3RpbmcuY3JlYXRlTmV3LmRlc2NyaXB0aW9uIiwKICAgICAgICAgIGRlZmF1bHRNZXNzYWdlOiAiWW91IGNhbiBjcmVhdGUgZGlmZmVyZW50IHZpc3VhbGl6YXRpb25zLCBiYXNlZCBvbiB5b3VyIGRhdGEuIgogICAgICAgIH0pKSksCiAgICAgICAgYWN0aW9uczogX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUJ1dHRvbiwgewogICAgICAgICAgb25DbGljazogdGhpcy5wcm9wcy5jcmVhdGVJdGVtLAogICAgICAgICAgZmlsbDogdHJ1ZSwKICAgICAgICAgIGljb25UeXBlOiAicGx1c0luQ2lyY2xlIiwKICAgICAgICAgICJkYXRhLXRlc3Qtc3ViaiI6ICJjcmVhdGVWaXN1YWxpemF0aW9uUHJvbXB0QnV0dG9uIgogICAgICAgIH0sIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3JlYWN0Mi5Gb3JtYXR0ZWRNZXNzYWdlLCB7CiAgICAgICAgICBpZDogImtibi52aXN1YWxpemUubGlzdGluZy5jcmVhdGVOZXcuY3JlYXRlQnV0dG9uTGFiZWwiLAogICAgICAgICAgZGVmYXVsdE1lc3NhZ2U6ICJDcmVhdGUgbmV3IHZpc3VhbGl6YXRpb24iCiAgICAgICAgfSkpCiAgICAgIH0pKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJyZW5kZXJJdGVtVHlwZUljb24iLAogICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlckl0ZW1UeXBlSWNvbihpdGVtKSB7CiAgICAgIHZhciBpY29uOwoKICAgICAgaWYgKGl0ZW0uaW1hZ2UpIHsKICAgICAgICBpY29uID0gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudCgiaW1nIiwgewogICAgICAgICAgY2xhc3NOYW1lOiAidmlzTGlzdGluZ1RhYmxlX190eXBlSW1hZ2UiLAogICAgICAgICAgImFyaWEtaGlkZGVuIjogInRydWUiLAogICAgICAgICAgYWx0OiAiIiwKICAgICAgICAgIHNyYzogaXRlbS5pbWFnZQogICAgICAgIH0pOwogICAgICB9IGVsc2UgewogICAgICAgIGljb24gPSBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpSWNvbiwgewogICAgICAgICAgY2xhc3NOYW1lOiAidmlzTGlzdGluZ1RhYmxlX190eXBlSWNvbiIsCiAgICAgICAgICAiYXJpYS1oaWRkZW4iOiAidHJ1ZSIsCiAgICAgICAgICB0eXBlOiBpdGVtLmljb24gfHwgJ2VtcHR5JywKICAgICAgICAgIHNpemU6ICJtIgogICAgICAgIH0pOwogICAgICB9CgogICAgICByZXR1cm4gaWNvbjsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJnZXRCYWRnZSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0QmFkZ2UoaXRlbSkgewogICAgICBpZiAoaXRlbS5zdGFnZSA9PT0gJ2JldGEnKSB7CiAgICAgICAgcmV0dXJuIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlCZXRhQmFkZ2UsIHsKICAgICAgICAgIGNsYXNzTmFtZTogInZpc0xpc3RpbmdUYWJsZV9fYmV0YUljb24iLAogICAgICAgICAgbGFiZWw6ICJCIiwKICAgICAgICAgIHRpdGxlOiBfaTE4bi5pMThuLnRyYW5zbGF0ZSgna2JuLnZpc3VhbGl6ZS5saXN0aW5nLmJldGFUaXRsZScsIHsKICAgICAgICAgICAgZGVmYXVsdE1lc3NhZ2U6ICdCZXRhJwogICAgICAgICAgfSksCiAgICAgICAgICB0b29sdGlwQ29udGVudDogX2kxOG4uaTE4bi50cmFuc2xhdGUoJ2tibi52aXN1YWxpemUubGlzdGluZy5iZXRhVG9vbHRpcCcsIHsKICAgICAgICAgICAgZGVmYXVsdE1lc3NhZ2U6ICdUaGlzIHZpc3VhbGl6YXRpb24gaXMgaW4gYmV0YSBhbmQgaXMgc3ViamVjdCB0byBjaGFuZ2UuIFRoZSBkZXNpZ24gYW5kIGNvZGUgaXMgbGVzcyBtYXR1cmUgdGhhbiBvZmZpY2lhbCBHQSAnICsgJ2ZlYXR1cmVzIGFuZCBpcyBiZWluZyBwcm92aWRlZCBhcy1pcyB3aXRoIG5vIHdhcnJhbnRpZXMuIEJldGEgZmVhdHVyZXMgYXJlIG5vdCBzdWJqZWN0IHRvIHRoZSBzdXBwb3J0IFNMQSBvZiBvZmZpY2lhbCBHQSAnICsgJ2ZlYXR1cmVzJwogICAgICAgICAgfSkKICAgICAgICB9KTsKICAgICAgfSBlbHNlIGlmIChpdGVtLnN0YWdlID09PSAnZXhwZXJpbWVudGFsJykgewogICAgICAgIHJldHVybiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpQmV0YUJhZGdlLCB7CiAgICAgICAgICBjbGFzc05hbWU6ICJ2aXNMaXN0aW5nVGFibGVfX2V4cGVyaW1lbnRhbEljb24iLAogICAgICAgICAgbGFiZWw6ICJFIiwKICAgICAgICAgIHRpdGxlOiBfaTE4bi5pMThuLnRyYW5zbGF0ZSgna2JuLnZpc3VhbGl6ZS5saXN0aW5nLmV4cGVyaW1lbnRhbFRpdGxlJywgewogICAgICAgICAgICBkZWZhdWx0TWVzc2FnZTogJ0V4cGVyaW1lbnRhbCcKICAgICAgICAgIH0pLAogICAgICAgICAgdG9vbHRpcENvbnRlbnQ6IF9pMThuLmkxOG4udHJhbnNsYXRlKCdrYm4udmlzdWFsaXplLmxpc3RpbmcuZXhwZXJpbWVudGFsVG9vbHRpcCcsIHsKICAgICAgICAgICAgZGVmYXVsdE1lc3NhZ2U6ICdUaGlzIHZpc3VhbGl6YXRpb24gbWlnaHQgYmUgY2hhbmdlZCBvciByZW1vdmVkIGluIGEgZnV0dXJlIHJlbGVhc2UgYW5kIGlzIG5vdCBzdWJqZWN0IHRvIHRoZSBzdXBwb3J0IFNMQS4nCiAgICAgICAgICB9KQogICAgICAgIH0pOwogICAgICB9CiAgICB9CiAgfV0pOwoKICByZXR1cm4gVmlzdWFsaXplTGlzdGluZ1RhYmxlOwp9KF9yZWFjdC5Db21wb25lbnQpOwoKZXhwb3J0cy5WaXN1YWxpemVMaXN0aW5nVGFibGUgPSBWaXN1YWxpemVMaXN0aW5nVGFibGU7ClZpc3VhbGl6ZUxpc3RpbmdUYWJsZS5wcm9wVHlwZXMgPSB7CiAgZGVsZXRlSXRlbXM6IF9wcm9wVHlwZXMuZGVmYXVsdC5mdW5jLmlzUmVxdWlyZWQsCiAgZmluZEl0ZW1zOiBfcHJvcFR5cGVzLmRlZmF1bHQuZnVuYy5pc1JlcXVpcmVkLAogIGNyZWF0ZUl0ZW06IF9wcm9wVHlwZXMuZGVmYXVsdC5mdW5jLmlzUmVxdWlyZWQsCiAgZ2V0Vmlld1VybDogX3Byb3BUeXBlcy5kZWZhdWx0LmZ1bmMuaXNSZXF1aXJlZCwKICBlZGl0SXRlbTogX3Byb3BUeXBlcy5kZWZhdWx0LmZ1bmMuaXNSZXF1aXJlZCwKICBsaXN0aW5nTGltaXQ6IF9wcm9wVHlwZXMuZGVmYXVsdC5udW1iZXIuaXNSZXF1aXJlZAp9Ow=="},null]}