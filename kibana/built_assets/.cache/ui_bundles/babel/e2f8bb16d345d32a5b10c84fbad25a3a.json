{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/apm/public/components/app/Settings/CustomizeUI/CustomLink/CustomLinkFlyout/helper.js","dependencies":[{"path":"x-pack/legacy/plugins/apm/public/components/app/Settings/CustomizeUI/CustomLink/CustomLinkFlyout/helper.js","mtime":1589249551603},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmNvbnZlcnRGaWx0ZXJzVG9RdWVyeSA9IGV4cG9ydHMucmVwbGFjZVRlbXBsYXRlVmFyaWFibGVzID0gZXhwb3J0cy5nZXRTZWxlY3RPcHRpb25zID0gZXhwb3J0cy5GSUxURVJfU0VMRUNUX09QVElPTlMgPSBleHBvcnRzLkRFRkFVTFRfT1BUSU9OID0gdm9pZCAwOwoKdmFyIF9pMThuID0gcmVxdWlyZSgiQGtibi9pMThuIik7Cgp2YXIgX211c3RhY2hlID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCJtdXN0YWNoZSIpKTsKCnZhciBfbG9kYXNoID0gcmVxdWlyZSgibG9kYXNoIik7Cgp2YXIgX2N1c3RvbV9saW5rX2ZpbHRlcl9vcHRpb25zID0gcmVxdWlyZSgiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vcGx1Z2lucy9hcG0vY29tbW9uL2N1c3RvbV9saW5rL2N1c3RvbV9saW5rX2ZpbHRlcl9vcHRpb25zIik7CgpmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgewogIHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7CiAgICBkZWZhdWx0OiBvYmoKICB9Owp9CgpmdW5jdGlvbiBfc2xpY2VkVG9BcnJheShhcnIsIGkpIHsKICByZXR1cm4gX2FycmF5V2l0aEhvbGVzKGFycikgfHwgX2l0ZXJhYmxlVG9BcnJheUxpbWl0KGFyciwgaSkgfHwgX25vbkl0ZXJhYmxlUmVzdCgpOwp9CgpmdW5jdGlvbiBfbm9uSXRlcmFibGVSZXN0KCkgewogIHRocm93IG5ldyBUeXBlRXJyb3IoIkludmFsaWQgYXR0ZW1wdCB0byBkZXN0cnVjdHVyZSBub24taXRlcmFibGUgaW5zdGFuY2UiKTsKfQoKZnVuY3Rpb24gX2l0ZXJhYmxlVG9BcnJheUxpbWl0KGFyciwgaSkgewogIHZhciBfYXJyID0gW107CiAgdmFyIF9uID0gdHJ1ZTsKICB2YXIgX2QgPSBmYWxzZTsKICB2YXIgX2UgPSB1bmRlZmluZWQ7CgogIHRyeSB7CiAgICBmb3IgKHZhciBfaSA9IGFycltTeW1ib2wuaXRlcmF0b3JdKCksIF9zOyAhKF9uID0gKF9zID0gX2kubmV4dCgpKS5kb25lKTsgX24gPSB0cnVlKSB7CiAgICAgIF9hcnIucHVzaChfcy52YWx1ZSk7CgogICAgICBpZiAoaSAmJiBfYXJyLmxlbmd0aCA9PT0gaSkgYnJlYWs7CiAgICB9CiAgfSBjYXRjaCAoZXJyKSB7CiAgICBfZCA9IHRydWU7CiAgICBfZSA9IGVycjsKICB9IGZpbmFsbHkgewogICAgdHJ5IHsKICAgICAgaWYgKCFfbiAmJiBfaVsicmV0dXJuIl0gIT0gbnVsbCkgX2lbInJldHVybiJdKCk7CiAgICB9IGZpbmFsbHkgewogICAgICBpZiAoX2QpIHRocm93IF9lOwogICAgfQogIH0KCiAgcmV0dXJuIF9hcnI7Cn0KCmZ1bmN0aW9uIF9hcnJheVdpdGhIb2xlcyhhcnIpIHsKICBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSByZXR1cm4gYXJyOwp9CgpmdW5jdGlvbiBfdG9Db25zdW1hYmxlQXJyYXkoYXJyKSB7CiAgcmV0dXJuIF9hcnJheVdpdGhvdXRIb2xlcyhhcnIpIHx8IF9pdGVyYWJsZVRvQXJyYXkoYXJyKSB8fCBfbm9uSXRlcmFibGVTcHJlYWQoKTsKfQoKZnVuY3Rpb24gX25vbkl0ZXJhYmxlU3ByZWFkKCkgewogIHRocm93IG5ldyBUeXBlRXJyb3IoIkludmFsaWQgYXR0ZW1wdCB0byBzcHJlYWQgbm9uLWl0ZXJhYmxlIGluc3RhbmNlIik7Cn0KCmZ1bmN0aW9uIF9pdGVyYWJsZVRvQXJyYXkoaXRlcikgewogIGlmIChTeW1ib2wuaXRlcmF0b3IgaW4gT2JqZWN0KGl0ZXIpIHx8IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChpdGVyKSA9PT0gIltvYmplY3QgQXJndW1lbnRzXSIpIHJldHVybiBBcnJheS5mcm9tKGl0ZXIpOwp9CgpmdW5jdGlvbiBfYXJyYXlXaXRob3V0SG9sZXMoYXJyKSB7CiAgaWYgKEFycmF5LmlzQXJyYXkoYXJyKSkgewogICAgZm9yICh2YXIgaSA9IDAsIGFycjIgPSBuZXcgQXJyYXkoYXJyLmxlbmd0aCk7IGkgPCBhcnIubGVuZ3RoOyBpKyspIHsKICAgICAgYXJyMltpXSA9IGFycltpXTsKICAgIH0KCiAgICByZXR1cm4gYXJyMjsKICB9Cn0KCnZhciBERUZBVUxUX09QVElPTiA9IHsKICB2YWx1ZTogJ0RFRkFVTFQnLAogIHRleHQ6IF9pMThuLmkxOG4udHJhbnNsYXRlKCd4cGFjay5hcG0uc2V0dGluZ3MuY3VzdG9taXplVUkuY3VzdG9tTGluay5mbHlPdXQuZmlsdGVycy5kZWZhdWx0T3B0aW9uJywgewogICAgZGVmYXVsdE1lc3NhZ2U6ICdTZWxlY3QgZmllbGQuLi4nCiAgfSkKfTsKZXhwb3J0cy5ERUZBVUxUX09QVElPTiA9IERFRkFVTFRfT1BUSU9OOwp2YXIgRklMVEVSX1NFTEVDVF9PUFRJT05TID0gW0RFRkFVTFRfT1BUSU9OXS5jb25jYXQoX3RvQ29uc3VtYWJsZUFycmF5KF9jdXN0b21fbGlua19maWx0ZXJfb3B0aW9ucy5GSUxURVJfT1BUSU9OUy5tYXAoZnVuY3Rpb24gKGZpbHRlcikgewogIHJldHVybiB7CiAgICB2YWx1ZTogZmlsdGVyLAogICAgdGV4dDogZmlsdGVyCiAgfTsKfSkpKTsKLyoqCiAqIFJldHVybnMgdGhlIG9wdGlvbnMgYXZhaWxhYmxlLCByZW1vdmluZyBmaWx0ZXJzIGFscmVhZHkgYWRkZWQsIGJ1dCBrZWVwaW5nIHRoZSBzZWxlY3RlZCBmaWx0ZXIuCiAqCiAqIEBwYXJhbSBmaWx0ZXJzCiAqIEBwYXJhbSBzZWxlY3RlZEtleQogKi8KCmV4cG9ydHMuRklMVEVSX1NFTEVDVF9PUFRJT05TID0gRklMVEVSX1NFTEVDVF9PUFRJT05TOwoKdmFyIGdldFNlbGVjdE9wdGlvbnMgPSBmdW5jdGlvbiBnZXRTZWxlY3RPcHRpb25zKGZpbHRlcnMsIHNlbGVjdGVkS2V5KSB7CiAgcmV0dXJuIEZJTFRFUl9TRUxFQ1RfT1BUSU9OUy5maWx0ZXIoZnVuY3Rpb24gKF9yZWYpIHsKICAgIHZhciB2YWx1ZSA9IF9yZWYudmFsdWU7CiAgICByZXR1cm4gIWZpbHRlcnMuc29tZShmdW5jdGlvbiAoX3JlZjIpIHsKICAgICAgdmFyIGtleSA9IF9yZWYyLmtleTsKICAgICAgcmV0dXJuIGtleSA9PT0gdmFsdWUgJiYga2V5ICE9PSBzZWxlY3RlZEtleTsKICAgIH0pOwogIH0pOwp9OwoKZXhwb3J0cy5nZXRTZWxlY3RPcHRpb25zID0gZ2V0U2VsZWN0T3B0aW9uczsKCnZhciBnZXRJbnZhbGlkVGVtcGxhdGVWYXJpYWJsZXMgPSBmdW5jdGlvbiBnZXRJbnZhbGlkVGVtcGxhdGVWYXJpYWJsZXModGVtcGxhdGUsIHRyYW5zYWN0aW9uKSB7CiAgcmV0dXJuIF9tdXN0YWNoZS5kZWZhdWx0LnBhcnNlKHRlbXBsYXRlKS5maWx0ZXIoZnVuY3Rpb24gKF9yZWYzKSB7CiAgICB2YXIgX3JlZjQgPSBfc2xpY2VkVG9BcnJheShfcmVmMywgMSksCiAgICAgICAgdHlwZSA9IF9yZWY0WzBdOwoKICAgIHJldHVybiB0eXBlID09PSAnbmFtZSc7CiAgfSkubWFwKGZ1bmN0aW9uIChfcmVmNSkgewogICAgdmFyIF9yZWY2ID0gX3NsaWNlZFRvQXJyYXkoX3JlZjUsIDIpLAogICAgICAgIHZhbHVlID0gX3JlZjZbMV07CgogICAgcmV0dXJuIHZhbHVlOwogIH0pLmZpbHRlcihmdW5jdGlvbiAodGVtcGxhdGVWYXIpIHsKICAgIHJldHVybiAoMCwgX2xvZGFzaC5nZXQpKHRyYW5zYWN0aW9uLCB0ZW1wbGF0ZVZhcikgPT0gbnVsbDsKICB9KTsKfTsKCnZhciB2YWxpZGF0ZVVybCA9IGZ1bmN0aW9uIHZhbGlkYXRlVXJsKHVybCwgdHJhbnNhY3Rpb24pIHsKICBpZiAoIXRyYW5zYWN0aW9uIHx8ICgwLCBfbG9kYXNoLmlzRW1wdHkpKHRyYW5zYWN0aW9uKSkgewogICAgcmV0dXJuIF9pMThuLmkxOG4udHJhbnNsYXRlKCd4cGFjay5hcG0uc2V0dGluZ3MuY3VzdG9taXplVUkuY3VzdG9tTGluay5wcmV2aWV3LnRyYW5zYWN0aW9uLm5vdEZvdW5kJywgewogICAgICBkZWZhdWx0TWVzc2FnZTogIldlIGNvdWxkbid0IGZpbmQgYSBtYXRjaGluZyB0cmFuc2FjdGlvbiBkb2N1bWVudCBiYXNlZCBvbiB0aGUgZGVmaW5lZCBmaWx0ZXJzLiIKICAgIH0pOwogIH0KCiAgdHJ5IHsKICAgIHZhciBpbnZhbGlkVmFyaWFibGVzID0gZ2V0SW52YWxpZFRlbXBsYXRlVmFyaWFibGVzKHVybCwgdHJhbnNhY3Rpb24pOwoKICAgIGlmICghKDAsIF9sb2Rhc2guaXNFbXB0eSkoaW52YWxpZFZhcmlhYmxlcykpIHsKICAgICAgcmV0dXJuIF9pMThuLmkxOG4udHJhbnNsYXRlKCd4cGFjay5hcG0uc2V0dGluZ3MuY3VzdG9taXplVUkuY3VzdG9tTGluay5wcmV2aWV3LmNvbnRleHRWYXJpYWJsZS5ub01hdGNoJywgewogICAgICAgIGRlZmF1bHRNZXNzYWdlOiAiV2UgY291bGRuJ3QgZmluZCBhIHZhbHVlIG1hdGNoIGZvciB7dmFyaWFibGVzfSBpbiB0aGUgZXhhbXBsZSB0cmFuc2FjdGlvbiBkb2N1bWVudC4iLAogICAgICAgIHZhbHVlczogewogICAgICAgICAgdmFyaWFibGVzOiBpbnZhbGlkVmFyaWFibGVzLm1hcChmdW5jdGlvbiAodmFyaWFibGUpIHsKICAgICAgICAgICAgcmV0dXJuICJ7eyIuY29uY2F0KHZhcmlhYmxlLCAifX0iKTsKICAgICAgICAgIH0pLmpvaW4oJywgJykKICAgICAgICB9CiAgICAgIH0pOwogICAgfQogIH0gY2F0Y2ggKGUpIHsKICAgIHJldHVybiBfaTE4bi5pMThuLnRyYW5zbGF0ZSgneHBhY2suYXBtLnNldHRpbmdzLmN1c3RvbWl6ZVVJLmN1c3RvbUxpbmsucHJldmlldy5jb250ZXh0VmFyaWFibGUuaW52YWxpZCcsIHsKICAgICAgZGVmYXVsdE1lc3NhZ2U6ICJXZSBjb3VsZG4ndCBmaW5kIGFuIGV4YW1wbGUgdHJhbnNhY3Rpb24gZG9jdW1lbnQgZHVlIHRvIGludmFsaWQgdmFyaWFibGUocykgZGVmaW5lZC4iCiAgICB9KTsKICB9Cn07Cgp2YXIgcmVwbGFjZVRlbXBsYXRlVmFyaWFibGVzID0gZnVuY3Rpb24gcmVwbGFjZVRlbXBsYXRlVmFyaWFibGVzKHVybCwgdHJhbnNhY3Rpb24pIHsKICB2YXIgZXJyb3IgPSB2YWxpZGF0ZVVybCh1cmwsIHRyYW5zYWN0aW9uKTsKCiAgdHJ5IHsKICAgIHJldHVybiB7CiAgICAgIGZvcm1hdHRlZFVybDogX211c3RhY2hlLmRlZmF1bHQucmVuZGVyKHVybCwgdHJhbnNhY3Rpb24pLAogICAgICBlcnJvcjogZXJyb3IKICAgIH07CiAgfSBjYXRjaCAoZSkgewogICAgLy8gZXJyb3JzIHdpbGwgYmUgY2F1Z2h0IG9uIHZhbGlkYXRlVXJsIGZ1bmN0aW9uCiAgICByZXR1cm4gewogICAgICBmb3JtYXR0ZWRVcmw6IHVybCwKICAgICAgZXJyb3I6IGVycm9yCiAgICB9OwogIH0KfTsKCmV4cG9ydHMucmVwbGFjZVRlbXBsYXRlVmFyaWFibGVzID0gcmVwbGFjZVRlbXBsYXRlVmFyaWFibGVzOwoKdmFyIGNvbnZlcnRGaWx0ZXJzVG9RdWVyeSA9IGZ1bmN0aW9uIGNvbnZlcnRGaWx0ZXJzVG9RdWVyeShmaWx0ZXJzKSB7CiAgcmV0dXJuIGZpbHRlcnMucmVkdWNlKGZ1bmN0aW9uIChhY2MsIF9yZWY3KSB7CiAgICB2YXIga2V5ID0gX3JlZjcua2V5LAogICAgICAgIHZhbHVlID0gX3JlZjcudmFsdWU7CgogICAgaWYgKGtleSAmJiB2YWx1ZSkgewogICAgICBhY2Nba2V5XSA9IHZhbHVlOwogICAgfQoKICAgIHJldHVybiBhY2M7CiAgfSwge30pOwp9OwoKZXhwb3J0cy5jb252ZXJ0RmlsdGVyc1RvUXVlcnkgPSBjb252ZXJ0RmlsdGVyc1RvUXVlcnk7"},null]}