{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/plugins/index_management/public/application/components/mappings_editor/components/document_fields/editor_toggle_controls.js","dependencies":[{"path":"x-pack/plugins/index_management/public/application/components/mappings_editor/components/document_fields/editor_toggle_controls.js","mtime":1589249554096},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLkVkaXRvclRvZ2dsZUNvbnRyb2xzID0gdm9pZCAwOwoKdmFyIF9yZWFjdCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgicmVhY3QiKSk7Cgp2YXIgX2V1aSA9IHJlcXVpcmUoIkBlbGFzdGljL2V1aSIpOwoKdmFyIF9tYXBwaW5nc19zdGF0ZSA9IHJlcXVpcmUoIi4uLy4uL21hcHBpbmdzX3N0YXRlIik7Cgp2YXIgX2xpYiA9IHJlcXVpcmUoIi4uLy4uL2xpYiIpOwoKZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsKICByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogewogICAgZGVmYXVsdDogb2JqCiAgfTsKfQoKZnVuY3Rpb24gX3NsaWNlZFRvQXJyYXkoYXJyLCBpKSB7CiAgcmV0dXJuIF9hcnJheVdpdGhIb2xlcyhhcnIpIHx8IF9pdGVyYWJsZVRvQXJyYXlMaW1pdChhcnIsIGkpIHx8IF9ub25JdGVyYWJsZVJlc3QoKTsKfQoKZnVuY3Rpb24gX25vbkl0ZXJhYmxlUmVzdCgpIHsKICB0aHJvdyBuZXcgVHlwZUVycm9yKCJJbnZhbGlkIGF0dGVtcHQgdG8gZGVzdHJ1Y3R1cmUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlIik7Cn0KCmZ1bmN0aW9uIF9pdGVyYWJsZVRvQXJyYXlMaW1pdChhcnIsIGkpIHsKICB2YXIgX2FyciA9IFtdOwogIHZhciBfbiA9IHRydWU7CiAgdmFyIF9kID0gZmFsc2U7CiAgdmFyIF9lID0gdW5kZWZpbmVkOwoKICB0cnkgewogICAgZm9yICh2YXIgX2kgPSBhcnJbU3ltYm9sLml0ZXJhdG9yXSgpLCBfczsgIShfbiA9IChfcyA9IF9pLm5leHQoKSkuZG9uZSk7IF9uID0gdHJ1ZSkgewogICAgICBfYXJyLnB1c2goX3MudmFsdWUpOwoKICAgICAgaWYgKGkgJiYgX2Fyci5sZW5ndGggPT09IGkpIGJyZWFrOwogICAgfQogIH0gY2F0Y2ggKGVycikgewogICAgX2QgPSB0cnVlOwogICAgX2UgPSBlcnI7CiAgfSBmaW5hbGx5IHsKICAgIHRyeSB7CiAgICAgIGlmICghX24gJiYgX2lbInJldHVybiJdICE9IG51bGwpIF9pWyJyZXR1cm4iXSgpOwogICAgfSBmaW5hbGx5IHsKICAgICAgaWYgKF9kKSB0aHJvdyBfZTsKICAgIH0KICB9CgogIHJldHVybiBfYXJyOwp9CgpmdW5jdGlvbiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB7CiAgaWYgKEFycmF5LmlzQXJyYXkoYXJyKSkgcmV0dXJuIGFycjsKfQovKiBUT0RPOiBSZXZpZXcgdG9nZ2xlIGNvbnRyb2xzIFVJICovCgoKdmFyIEVkaXRvclRvZ2dsZUNvbnRyb2xzID0gZnVuY3Rpb24gRWRpdG9yVG9nZ2xlQ29udHJvbHMoX3JlZikgewogIHZhciBlZGl0b3IgPSBfcmVmLmVkaXRvcjsKICB2YXIgZGlzcGF0Y2ggPSAoMCwgX21hcHBpbmdzX3N0YXRlLnVzZURpc3BhdGNoKSgpOwoKICB2YXIgX3VzZU1hcHBpbmdzU3RhdGUgPSAoMCwgX21hcHBpbmdzX3N0YXRlLnVzZU1hcHBpbmdzU3RhdGUpKCksCiAgICAgIGZpZWxkc0pzb25FZGl0b3IgPSBfdXNlTWFwcGluZ3NTdGF0ZS5maWVsZHNKc29uRWRpdG9yOwoKICB2YXIgX1JlYWN0JHVzZVN0YXRlID0gX3JlYWN0LmRlZmF1bHQudXNlU3RhdGUoZmFsc2UpLAogICAgICBfUmVhY3QkdXNlU3RhdGUyID0gX3NsaWNlZFRvQXJyYXkoX1JlYWN0JHVzZVN0YXRlLCAyKSwKICAgICAgc2hvd01heERlcHRoV2FybmluZyA9IF9SZWFjdCR1c2VTdGF0ZTJbMF0sCiAgICAgIHNldFNob3dNYXhEZXB0aFdhcm5pbmcgPSBfUmVhY3QkdXNlU3RhdGUyWzFdOwoKICB2YXIgX1JlYWN0JHVzZVN0YXRlMyA9IF9yZWFjdC5kZWZhdWx0LnVzZVN0YXRlKGZhbHNlKSwKICAgICAgX1JlYWN0JHVzZVN0YXRlNCA9IF9zbGljZWRUb0FycmF5KF9SZWFjdCR1c2VTdGF0ZTMsIDIpLAogICAgICBzaG93VmFsaWRpdHlXYXJuaW5nID0gX1JlYWN0JHVzZVN0YXRlNFswXSwKICAgICAgc2V0U2hvd1ZhbGlkaXR5V2FybmluZyA9IF9SZWFjdCR1c2VTdGF0ZTRbMV07CgogIHZhciBjbGVhcldhcm5pbmdzID0gZnVuY3Rpb24gY2xlYXJXYXJuaW5ncygpIHsKICAgIGlmIChzaG93TWF4RGVwdGhXYXJuaW5nKSB7CiAgICAgIHNldFNob3dNYXhEZXB0aFdhcm5pbmcoZmFsc2UpOwogICAgfQoKICAgIGlmIChzaG93VmFsaWRpdHlXYXJuaW5nKSB7CiAgICAgIHNldFNob3dWYWxpZGl0eVdhcm5pbmcoZmFsc2UpOwogICAgfQogIH07CgogIGlmIChlZGl0b3IgPT09ICdkZWZhdWx0JykgewogICAgY2xlYXJXYXJuaW5ncygpOwogICAgcmV0dXJuIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlCdXR0b24sIHsKICAgICAgb25DbGljazogZnVuY3Rpb24gb25DbGljaygpIHsKICAgICAgICBkaXNwYXRjaCh7CiAgICAgICAgICB0eXBlOiAnZG9jdW1lbnRGaWVsZC5jaGFuZ2VFZGl0b3InLAogICAgICAgICAgdmFsdWU6ICdqc29uJwogICAgICAgIH0pOwogICAgICB9CiAgICB9LCAiVXNlIEpTT04gRWRpdG9yIik7CiAgfQoKICByZXR1cm4gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfcmVhY3QuZGVmYXVsdC5GcmFnbWVudCwgbnVsbCwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUJ1dHRvbiwgewogICAgb25DbGljazogZnVuY3Rpb24gb25DbGljaygpIHsKICAgICAgY2xlYXJXYXJuaW5ncygpOwogICAgICB2YXIgaXNWYWxpZCA9IGZpZWxkc0pzb25FZGl0b3IuaXNWYWxpZDsKCiAgICAgIGlmICghaXNWYWxpZCkgewogICAgICAgIHNldFNob3dWYWxpZGl0eVdhcm5pbmcodHJ1ZSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdmFyIGRlTm9ybWFsaXplZEZpZWxkcyA9IGZpZWxkc0pzb25FZGl0b3IuZm9ybWF0KCk7CgogICAgICAgIHZhciBfbm9ybWFsaXplID0gKDAsIF9saWIubm9ybWFsaXplKShkZU5vcm1hbGl6ZWRGaWVsZHMpLAogICAgICAgICAgICBtYXhOZXN0ZWREZXB0aCA9IF9ub3JtYWxpemUubWF4TmVzdGVkRGVwdGg7CgogICAgICAgIHZhciBjYW5Vc2VEZWZhdWx0RWRpdG9yID0gKDAsIF9saWIuY2FuVXNlTWFwcGluZ3NFZGl0b3IpKG1heE5lc3RlZERlcHRoKTsKCiAgICAgICAgaWYgKGNhblVzZURlZmF1bHRFZGl0b3IpIHsKICAgICAgICAgIGRpc3BhdGNoKHsKICAgICAgICAgICAgdHlwZTogJ2RvY3VtZW50RmllbGQuY2hhbmdlRWRpdG9yJywKICAgICAgICAgICAgdmFsdWU6ICdkZWZhdWx0JwogICAgICAgICAgfSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHNldFNob3dNYXhEZXB0aFdhcm5pbmcodHJ1ZSk7CiAgICAgICAgfQogICAgICB9CiAgICB9CiAgfSwgIlVzZSBNYXBwaW5ncyBFZGl0b3IiKSwgc2hvd01heERlcHRoV2FybmluZyA/IF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlUZXh0LCB7CiAgICBzaXplOiAicyIsCiAgICBjb2xvcjogImRhbmdlciIKICB9LCAiTWF4IGRlcHRoIGZvciBNYXBwaW5ncyBFZGl0b3IgZXhjZWVkZWQiKSA6IG51bGwsIHNob3dWYWxpZGl0eVdhcm5pbmcgJiYgIWZpZWxkc0pzb25FZGl0b3IuaXNWYWxpZCA/IF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlUZXh0LCB7CiAgICBzaXplOiAicyIsCiAgICBjb2xvcjogImRhbmdlciIKICB9LCAiSlNPTiBpcyBpbnZhbGlkIikgOiBudWxsKTsKfTsKCmV4cG9ydHMuRWRpdG9yVG9nZ2xlQ29udHJvbHMgPSBFZGl0b3JUb2dnbGVDb250cm9sczs="},null]}