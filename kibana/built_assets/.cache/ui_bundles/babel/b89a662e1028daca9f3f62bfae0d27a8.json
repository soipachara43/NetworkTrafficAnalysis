{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/canvas/public/lib/element_handler_creators.js","dependencies":[{"path":"x-pack/legacy/plugins/canvas/public/lib/element_handler_creators.js","mtime":1589249552051},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLnBvc2l0aW9uSGFuZGxlckNyZWF0b3JzID0gZXhwb3J0cy5sYXllckhhbmRsZXJDcmVhdG9ycyA9IGV4cG9ydHMuY2xpcGJvYXJkSGFuZGxlckNyZWF0b3JzID0gZXhwb3J0cy5ncm91cEhhbmRsZXJDcmVhdG9ycyA9IGV4cG9ydHMuYWxpZ25tZW50RGlzdHJpYnV0aW9uSGFuZGxlckNyZWF0b3JzID0gZXhwb3J0cy5iYXNpY0hhbmRsZXJDcmVhdG9ycyA9IHZvaWQgMDsKCnZhciBfbG9kYXNoID0gcmVxdWlyZSgibG9kYXNoIik7Cgp2YXIgX2NsaXBib2FyZCA9IHJlcXVpcmUoIi4vY2xpcGJvYXJkIik7Cgp2YXIgX2Nsb25lX3N1YmdyYXBocyA9IHJlcXVpcmUoIi4vY2xvbmVfc3ViZ3JhcGhzIik7Cgp2YXIgX25vdGlmeSA9IHJlcXVpcmUoIi4vbm90aWZ5Iik7Cgp2YXIgY3VzdG9tRWxlbWVudFNlcnZpY2UgPSBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChyZXF1aXJlKCIuL2N1c3RvbV9lbGVtZW50X3NlcnZpY2UiKSk7Cgp2YXIgX2dldF9pZCA9IHJlcXVpcmUoIi4vZ2V0X2lkIik7Cgp2YXIgX2NvbnN0YW50cyA9IHJlcXVpcmUoIi4uLy4uL2NvbW1vbi9saWIvY29uc3RhbnRzIik7CgpmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChvYmopIHsKICBpZiAob2JqICYmIG9iai5fX2VzTW9kdWxlKSB7CiAgICByZXR1cm4gb2JqOwogIH0gZWxzZSB7CiAgICB2YXIgbmV3T2JqID0ge307CgogICAgaWYgKG9iaiAhPSBudWxsKSB7CiAgICAgIGZvciAodmFyIGtleSBpbiBvYmopIHsKICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwga2V5KSkgewogICAgICAgICAgdmFyIGRlc2MgPSBPYmplY3QuZGVmaW5lUHJvcGVydHkgJiYgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvciA/IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqLCBrZXkpIDoge307CgogICAgICAgICAgaWYgKGRlc2MuZ2V0IHx8IGRlc2Muc2V0KSB7CiAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShuZXdPYmosIGtleSwgZGVzYyk7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBuZXdPYmpba2V5XSA9IG9ialtrZXldOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfQoKICAgIG5ld09iai5kZWZhdWx0ID0gb2JqOwogICAgcmV0dXJuIG5ld09iajsKICB9Cn0KCmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHsKICBpZiAoa2V5IGluIG9iaikgewogICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7CiAgICAgIHZhbHVlOiB2YWx1ZSwKICAgICAgZW51bWVyYWJsZTogdHJ1ZSwKICAgICAgY29uZmlndXJhYmxlOiB0cnVlLAogICAgICB3cml0YWJsZTogdHJ1ZQogICAgfSk7CiAgfSBlbHNlIHsKICAgIG9ialtrZXldID0gdmFsdWU7CiAgfQoKICByZXR1cm4gb2JqOwp9CgpmdW5jdGlvbiBfdG9Db25zdW1hYmxlQXJyYXkoYXJyKSB7CiAgcmV0dXJuIF9hcnJheVdpdGhvdXRIb2xlcyhhcnIpIHx8IF9pdGVyYWJsZVRvQXJyYXkoYXJyKSB8fCBfbm9uSXRlcmFibGVTcHJlYWQoKTsKfQoKZnVuY3Rpb24gX25vbkl0ZXJhYmxlU3ByZWFkKCkgewogIHRocm93IG5ldyBUeXBlRXJyb3IoIkludmFsaWQgYXR0ZW1wdCB0byBzcHJlYWQgbm9uLWl0ZXJhYmxlIGluc3RhbmNlIik7Cn0KCmZ1bmN0aW9uIF9pdGVyYWJsZVRvQXJyYXkoaXRlcikgewogIGlmIChTeW1ib2wuaXRlcmF0b3IgaW4gT2JqZWN0KGl0ZXIpIHx8IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChpdGVyKSA9PT0gIltvYmplY3QgQXJndW1lbnRzXSIpIHJldHVybiBBcnJheS5mcm9tKGl0ZXIpOwp9CgpmdW5jdGlvbiBfYXJyYXlXaXRob3V0SG9sZXMoYXJyKSB7CiAgaWYgKEFycmF5LmlzQXJyYXkoYXJyKSkgewogICAgZm9yICh2YXIgaSA9IDAsIGFycjIgPSBuZXcgQXJyYXkoYXJyLmxlbmd0aCk7IGkgPCBhcnIubGVuZ3RoOyBpKyspIHsKICAgICAgYXJyMltpXSA9IGFycltpXTsKICAgIH0KCiAgICByZXR1cm4gYXJyMjsKICB9Cn0KCnZhciBleHRyYWN0SWQgPSBmdW5jdGlvbiBleHRyYWN0SWQobm9kZSkgewogIHJldHVybiBub2RlLmlkOwp9OyAvLyBoYW5kbGVycyBmb3IgY2xvbmUsIGRlbGV0ZSwgYW5kIHNhdmluZyBjdXN0b20gZWxlbWVudHMKCgp2YXIgYmFzaWNIYW5kbGVyQ3JlYXRvcnMgPSB7CiAgY2xvbmVOb2RlczogZnVuY3Rpb24gY2xvbmVOb2RlcyhfcmVmKSB7CiAgICB2YXIgaW5zZXJ0Tm9kZXMgPSBfcmVmLmluc2VydE5vZGVzLAogICAgICAgIHBhZ2VJZCA9IF9yZWYucGFnZUlkLAogICAgICAgIHNlbGVjdFRvcGxldmVsTm9kZXMgPSBfcmVmLnNlbGVjdFRvcGxldmVsTm9kZXMsCiAgICAgICAgc2VsZWN0ZWROb2RlcyA9IF9yZWYuc2VsZWN0ZWROb2RlczsKICAgIHJldHVybiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBjbG9uZWROb2RlcyA9IHNlbGVjdGVkTm9kZXMgJiYgKDAsIF9jbG9uZV9zdWJncmFwaHMuY2xvbmVTdWJncmFwaHMpKHNlbGVjdGVkTm9kZXMpOwoKICAgICAgaWYgKGNsb25lZE5vZGVzKSB7CiAgICAgICAgaW5zZXJ0Tm9kZXMoY2xvbmVkTm9kZXMsIHBhZ2VJZCk7CiAgICAgICAgc2VsZWN0VG9wbGV2ZWxOb2RlcyhjbG9uZWROb2Rlcyk7CiAgICAgIH0KICAgIH07CiAgfSwKICBkZWxldGVOb2RlczogZnVuY3Rpb24gZGVsZXRlTm9kZXMoX3JlZjIpIHsKICAgIHZhciBwYWdlSWQgPSBfcmVmMi5wYWdlSWQsCiAgICAgICAgcmVtb3ZlTm9kZXMgPSBfcmVmMi5yZW1vdmVOb2RlcywKICAgICAgICBzZWxlY3RlZE5vZGVzID0gX3JlZjIuc2VsZWN0ZWROb2RlczsKICAgIHJldHVybiBmdW5jdGlvbiAoKSB7CiAgICAgIGlmIChzZWxlY3RlZE5vZGVzLmxlbmd0aCkgewogICAgICAgIHJlbW92ZU5vZGVzKHNlbGVjdGVkTm9kZXMubWFwKGV4dHJhY3RJZCksIHBhZ2VJZCk7CiAgICAgIH0KICAgIH07CiAgfSwKICBjcmVhdGVDdXN0b21FbGVtZW50OiBmdW5jdGlvbiBjcmVhdGVDdXN0b21FbGVtZW50KF9yZWYzKSB7CiAgICB2YXIgc2VsZWN0ZWROb2RlcyA9IF9yZWYzLnNlbGVjdGVkTm9kZXM7CiAgICByZXR1cm4gZnVuY3Rpb24gKCkgewogICAgICB2YXIgbmFtZSA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogJyc7CiAgICAgIHZhciBkZXNjcmlwdGlvbiA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogJyc7CiAgICAgIHZhciBpbWFnZSA9IGFyZ3VtZW50cy5sZW5ndGggPiAyICYmIGFyZ3VtZW50c1syXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzJdIDogJyc7CgogICAgICBpZiAoc2VsZWN0ZWROb2Rlcy5sZW5ndGgpIHsKICAgICAgICB2YXIgY29udGVudCA9IEpTT04uc3RyaW5naWZ5KHsKICAgICAgICAgIHNlbGVjdGVkTm9kZXM6IHNlbGVjdGVkTm9kZXMKICAgICAgICB9KTsKICAgICAgICB2YXIgY3VzdG9tRWxlbWVudCA9IHsKICAgICAgICAgIGlkOiAoMCwgX2dldF9pZC5nZXRJZCkoJ2N1c3RvbS1lbGVtZW50JyksCiAgICAgICAgICBuYW1lOiAoMCwgX2xvZGFzaC5jYW1lbENhc2UpKG5hbWUpLAogICAgICAgICAgZGlzcGxheU5hbWU6IG5hbWUsCiAgICAgICAgICBoZWxwOiBkZXNjcmlwdGlvbiwKICAgICAgICAgIGltYWdlOiBpbWFnZSwKICAgICAgICAgIGNvbnRlbnQ6IGNvbnRlbnQKICAgICAgICB9OwogICAgICAgIGN1c3RvbUVsZW1lbnRTZXJ2aWNlLmNyZWF0ZShjdXN0b21FbGVtZW50KS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgICAgIHJldHVybiBfbm90aWZ5Lm5vdGlmeS5zdWNjZXNzKCJDdXN0b20gZWxlbWVudCAnIi5jb25jYXQoY3VzdG9tRWxlbWVudC5kaXNwbGF5TmFtZSB8fCBjdXN0b21FbGVtZW50LmlkLCAiJyB3YXMgc2F2ZWQiKSwgewogICAgICAgICAgICAnZGF0YS10ZXN0LXN1YmonOiAnY2FudmFzQ3VzdG9tRWxlbWVudENyZWF0ZS1zdWNjZXNzJwogICAgICAgICAgfSk7CiAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKHJlc3VsdCkgewogICAgICAgICAgcmV0dXJuIF9ub3RpZnkubm90aWZ5Lndhcm5pbmcocmVzdWx0LCB7CiAgICAgICAgICAgIHRpdGxlOiAiQ3VzdG9tIGVsZW1lbnQgJyIuY29uY2F0KGN1c3RvbUVsZW1lbnQuZGlzcGxheU5hbWUgfHwgY3VzdG9tRWxlbWVudC5pZCwgIicgd2FzIG5vdCBzYXZlZCIpCiAgICAgICAgICB9KTsKICAgICAgICB9KTsKICAgICAgfQogICAgfTsKICB9Cn07IC8vIGhhbmRsZXJzIGZvciBhbGlnbm1lbnQgYW5kIGRpc3RyaWJ1dGlvbgoKZXhwb3J0cy5iYXNpY0hhbmRsZXJDcmVhdG9ycyA9IGJhc2ljSGFuZGxlckNyZWF0b3JzOwp2YXIgYWxpZ25tZW50RGlzdHJpYnV0aW9uSGFuZGxlckNyZWF0b3JzID0gT2JqZWN0LmFzc2lnbi5hcHBseShPYmplY3QsIFt7fV0uY29uY2F0KF90b0NvbnN1bWFibGVBcnJheShbJ2FsaWduTGVmdCcsICdhbGlnbkNlbnRlcicsICdhbGlnblJpZ2h0JywgJ2FsaWduVG9wJywgJ2FsaWduTWlkZGxlJywgJ2FsaWduQm90dG9tJywgJ2Rpc3RyaWJ1dGVIb3Jpem9udGFsbHknLCAnZGlzdHJpYnV0ZVZlcnRpY2FsbHknXS5tYXAoZnVuY3Rpb24gKGV2ZW50KSB7CiAgcmV0dXJuIF9kZWZpbmVQcm9wZXJ0eSh7fSwgZXZlbnQsIGZ1bmN0aW9uIChfcmVmNCkgewogICAgdmFyIGNvbW1pdCA9IF9yZWY0LmNvbW1pdDsKICAgIHJldHVybiBmdW5jdGlvbiAoKSB7CiAgICAgIGNvbW1pdCgnYWN0aW9uRXZlbnQnLCB7CiAgICAgICAgZXZlbnQ6IGV2ZW50CiAgICAgIH0pOwogICAgfTsKICB9KTsKfSkpKSk7IC8vIGhhbmRsZXJzIGZvciBncm91cCBhbmQgdW5ncm91cAoKZXhwb3J0cy5hbGlnbm1lbnREaXN0cmlidXRpb25IYW5kbGVyQ3JlYXRvcnMgPSBhbGlnbm1lbnREaXN0cmlidXRpb25IYW5kbGVyQ3JlYXRvcnM7CnZhciBncm91cEhhbmRsZXJDcmVhdG9ycyA9IHsKICBncm91cE5vZGVzOiBmdW5jdGlvbiBncm91cE5vZGVzKF9yZWY2KSB7CiAgICB2YXIgY29tbWl0ID0gX3JlZjYuY29tbWl0OwogICAgcmV0dXJuIGZ1bmN0aW9uICgpIHsKICAgICAgY29tbWl0KCdhY3Rpb25FdmVudCcsIHsKICAgICAgICBldmVudDogJ2dyb3VwJwogICAgICB9KTsKICAgIH07CiAgfSwKICB1bmdyb3VwTm9kZXM6IGZ1bmN0aW9uIHVuZ3JvdXBOb2RlcyhfcmVmNykgewogICAgdmFyIGNvbW1pdCA9IF9yZWY3LmNvbW1pdDsKICAgIHJldHVybiBmdW5jdGlvbiAoKSB7CiAgICAgIGNvbW1pdCgnYWN0aW9uRXZlbnQnLCB7CiAgICAgICAgZXZlbnQ6ICd1bmdyb3VwJwogICAgICB9KTsKICAgIH07CiAgfQp9OyAvLyBoYW5kbGVycyBmb3IgY3V0L2NvcHkvcGFzdGUKCmV4cG9ydHMuZ3JvdXBIYW5kbGVyQ3JlYXRvcnMgPSBncm91cEhhbmRsZXJDcmVhdG9yczsKdmFyIGNsaXBib2FyZEhhbmRsZXJDcmVhdG9ycyA9IHsKICBjdXROb2RlczogZnVuY3Rpb24gY3V0Tm9kZXMoX3JlZjgpIHsKICAgIHZhciBwYWdlSWQgPSBfcmVmOC5wYWdlSWQsCiAgICAgICAgcmVtb3ZlTm9kZXMgPSBfcmVmOC5yZW1vdmVOb2RlcywKICAgICAgICBzZWxlY3RlZE5vZGVzID0gX3JlZjguc2VsZWN0ZWROb2RlczsKICAgIHJldHVybiBmdW5jdGlvbiAoKSB7CiAgICAgIGlmIChzZWxlY3RlZE5vZGVzLmxlbmd0aCkgewogICAgICAgICgwLCBfY2xpcGJvYXJkLnNldENsaXBib2FyZERhdGEpKHsKICAgICAgICAgIHNlbGVjdGVkTm9kZXM6IHNlbGVjdGVkTm9kZXMKICAgICAgICB9KTsKICAgICAgICByZW1vdmVOb2RlcyhzZWxlY3RlZE5vZGVzLm1hcChleHRyYWN0SWQpLCBwYWdlSWQpOwoKICAgICAgICBfbm90aWZ5Lm5vdGlmeS5zdWNjZXNzKCdDdXQgZWxlbWVudCB0byBjbGlwYm9hcmQnKTsKICAgICAgfQogICAgfTsKICB9LAogIGNvcHlOb2RlczogZnVuY3Rpb24gY29weU5vZGVzKF9yZWY5KSB7CiAgICB2YXIgc2VsZWN0ZWROb2RlcyA9IF9yZWY5LnNlbGVjdGVkTm9kZXM7CiAgICByZXR1cm4gZnVuY3Rpb24gKCkgewogICAgICBpZiAoc2VsZWN0ZWROb2Rlcy5sZW5ndGgpIHsKICAgICAgICAoMCwgX2NsaXBib2FyZC5zZXRDbGlwYm9hcmREYXRhKSh7CiAgICAgICAgICBzZWxlY3RlZE5vZGVzOiBzZWxlY3RlZE5vZGVzCiAgICAgICAgfSk7CgogICAgICAgIF9ub3RpZnkubm90aWZ5LnN1Y2Nlc3MoJ0NvcGllZCBlbGVtZW50IHRvIGNsaXBib2FyZCcpOwogICAgICB9CiAgICB9OwogIH0sCiAgcGFzdGVOb2RlczogZnVuY3Rpb24gcGFzdGVOb2RlcyhfcmVmMTApIHsKICAgIHZhciBpbnNlcnROb2RlcyA9IF9yZWYxMC5pbnNlcnROb2RlcywKICAgICAgICBwYWdlSWQgPSBfcmVmMTAucGFnZUlkLAogICAgICAgIHNlbGVjdFRvcGxldmVsTm9kZXMgPSBfcmVmMTAuc2VsZWN0VG9wbGV2ZWxOb2RlczsKICAgIHJldHVybiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfcmVmMTEgPSBKU09OLnBhcnNlKCgwLCBfY2xpcGJvYXJkLmdldENsaXBib2FyZERhdGEpKCkpIHx8IHt9LAogICAgICAgICAgX3JlZjExJHNlbGVjdGVkTm9kZXMgPSBfcmVmMTEuc2VsZWN0ZWROb2RlcywKICAgICAgICAgIHNlbGVjdGVkTm9kZXMgPSBfcmVmMTEkc2VsZWN0ZWROb2RlcyA9PT0gdm9pZCAwID8gW10gOiBfcmVmMTEkc2VsZWN0ZWROb2RlczsKCiAgICAgIHZhciBjbG9uZWROb2RlcyA9IHNlbGVjdGVkTm9kZXMgJiYgKDAsIF9jbG9uZV9zdWJncmFwaHMuY2xvbmVTdWJncmFwaHMpKHNlbGVjdGVkTm9kZXMpOwoKICAgICAgaWYgKGNsb25lZE5vZGVzKSB7CiAgICAgICAgaW5zZXJ0Tm9kZXMoY2xvbmVkTm9kZXMsIHBhZ2VJZCk7IC8vIGZpcnN0IGNsb25lIGFuZCBwZXJzaXN0IHRoZSBuZXcgbm9kZShzKQoKICAgICAgICBzZWxlY3RUb3BsZXZlbE5vZGVzKGNsb25lZE5vZGVzKTsgLy8gdGhlbiBzZWxlY3QgdGhlIGNsb25lZCBub2RlKHMpCiAgICAgIH0KICAgIH07CiAgfQp9OyAvLyBoYW5kbGVycyBmb3IgY2hhbmdpbmcgZWxlbWVudCBsYXllciBwb3NpdGlvbgovLyBUT0RPOiBzdXBwb3J0IHJlbGF5ZXJpbmcgbXVsdGlwbGUgZWxlbWVudHMKCmV4cG9ydHMuY2xpcGJvYXJkSGFuZGxlckNyZWF0b3JzID0gY2xpcGJvYXJkSGFuZGxlckNyZWF0b3JzOwp2YXIgbGF5ZXJIYW5kbGVyQ3JlYXRvcnMgPSB7CiAgYnJpbmdUb0Zyb250OiBmdW5jdGlvbiBicmluZ1RvRnJvbnQoX3JlZjEyKSB7CiAgICB2YXIgZWxlbWVudExheWVyID0gX3JlZjEyLmVsZW1lbnRMYXllciwKICAgICAgICBwYWdlSWQgPSBfcmVmMTIucGFnZUlkLAogICAgICAgIHNlbGVjdGVkTm9kZXMgPSBfcmVmMTIuc2VsZWN0ZWROb2RlczsKICAgIHJldHVybiBmdW5jdGlvbiAoKSB7CiAgICAgIGlmIChzZWxlY3RlZE5vZGVzLmxlbmd0aCA9PT0gMSkgewogICAgICAgIGVsZW1lbnRMYXllcihwYWdlSWQsIHNlbGVjdGVkTm9kZXNbMF0uaWQsIEluZmluaXR5KTsKICAgICAgfQogICAgfTsKICB9LAogIGJyaW5nRm9yd2FyZDogZnVuY3Rpb24gYnJpbmdGb3J3YXJkKF9yZWYxMykgewogICAgdmFyIGVsZW1lbnRMYXllciA9IF9yZWYxMy5lbGVtZW50TGF5ZXIsCiAgICAgICAgcGFnZUlkID0gX3JlZjEzLnBhZ2VJZCwKICAgICAgICBzZWxlY3RlZE5vZGVzID0gX3JlZjEzLnNlbGVjdGVkTm9kZXM7CiAgICByZXR1cm4gZnVuY3Rpb24gKCkgewogICAgICBpZiAoc2VsZWN0ZWROb2Rlcy5sZW5ndGggPT09IDEpIHsKICAgICAgICBlbGVtZW50TGF5ZXIocGFnZUlkLCBzZWxlY3RlZE5vZGVzWzBdLmlkLCAxKTsKICAgICAgfQogICAgfTsKICB9LAogIHNlbmRCYWNrd2FyZDogZnVuY3Rpb24gc2VuZEJhY2t3YXJkKF9yZWYxNCkgewogICAgdmFyIGVsZW1lbnRMYXllciA9IF9yZWYxNC5lbGVtZW50TGF5ZXIsCiAgICAgICAgcGFnZUlkID0gX3JlZjE0LnBhZ2VJZCwKICAgICAgICBzZWxlY3RlZE5vZGVzID0gX3JlZjE0LnNlbGVjdGVkTm9kZXM7CiAgICByZXR1cm4gZnVuY3Rpb24gKCkgewogICAgICBpZiAoc2VsZWN0ZWROb2Rlcy5sZW5ndGggPT09IDEpIHsKICAgICAgICBlbGVtZW50TGF5ZXIocGFnZUlkLCBzZWxlY3RlZE5vZGVzWzBdLmlkLCAtMSk7CiAgICAgIH0KICAgIH07CiAgfSwKICBzZW5kVG9CYWNrOiBmdW5jdGlvbiBzZW5kVG9CYWNrKF9yZWYxNSkgewogICAgdmFyIGVsZW1lbnRMYXllciA9IF9yZWYxNS5lbGVtZW50TGF5ZXIsCiAgICAgICAgcGFnZUlkID0gX3JlZjE1LnBhZ2VJZCwKICAgICAgICBzZWxlY3RlZE5vZGVzID0gX3JlZjE1LnNlbGVjdGVkTm9kZXM7CiAgICByZXR1cm4gZnVuY3Rpb24gKCkgewogICAgICBpZiAoc2VsZWN0ZWROb2Rlcy5sZW5ndGggPT09IDEpIHsKICAgICAgICBlbGVtZW50TGF5ZXIocGFnZUlkLCBzZWxlY3RlZE5vZGVzWzBdLmlkLCAtSW5maW5pdHkpOwogICAgICB9CiAgICB9OwogIH0KfTsgLy8gaGFuZGxlcnMgZm9yIHNoaWZ0aW5nIGVsZW1lbnRzIHVwLCBkb3duLCBsZWZ0LCBhbmQgcmlnaHQKCmV4cG9ydHMubGF5ZXJIYW5kbGVyQ3JlYXRvcnMgPSBsYXllckhhbmRsZXJDcmVhdG9yczsKdmFyIHBvc2l0aW9uSGFuZGxlckNyZWF0b3JzID0gewogIHNoaWZ0VXA6IGZ1bmN0aW9uIHNoaWZ0VXAoX3JlZjE2KSB7CiAgICB2YXIgc2VsZWN0ZWROb2RlcyA9IF9yZWYxNi5zZWxlY3RlZE5vZGVzLAogICAgICAgIHNldE11bHRpcGxlUG9zaXRpb25zID0gX3JlZjE2LnNldE11bHRpcGxlUG9zaXRpb25zOwogICAgcmV0dXJuIGZ1bmN0aW9uICgpIHsKICAgICAgc2V0TXVsdGlwbGVQb3NpdGlvbnMoc2VsZWN0ZWROb2Rlcy5tYXAoZnVuY3Rpb24gKGVsZW1lbnQpIHsKICAgICAgICBlbGVtZW50LnBvc2l0aW9uLnRvcCAtPSBfY29uc3RhbnRzLkVMRU1FTlRfU0hJRlRfT0ZGU0VUOwogICAgICAgIHJldHVybiBlbGVtZW50OwogICAgICB9KSk7CiAgICB9OwogIH0sCiAgc2hpZnREb3duOiBmdW5jdGlvbiBzaGlmdERvd24oX3JlZjE3KSB7CiAgICB2YXIgc2VsZWN0ZWROb2RlcyA9IF9yZWYxNy5zZWxlY3RlZE5vZGVzLAogICAgICAgIHNldE11bHRpcGxlUG9zaXRpb25zID0gX3JlZjE3LnNldE11bHRpcGxlUG9zaXRpb25zOwogICAgcmV0dXJuIGZ1bmN0aW9uICgpIHsKICAgICAgc2V0TXVsdGlwbGVQb3NpdGlvbnMoc2VsZWN0ZWROb2Rlcy5tYXAoZnVuY3Rpb24gKGVsZW1lbnQpIHsKICAgICAgICBlbGVtZW50LnBvc2l0aW9uLnRvcCArPSBfY29uc3RhbnRzLkVMRU1FTlRfU0hJRlRfT0ZGU0VUOwogICAgICAgIHJldHVybiBlbGVtZW50OwogICAgICB9KSk7CiAgICB9OwogIH0sCiAgc2hpZnRMZWZ0OiBmdW5jdGlvbiBzaGlmdExlZnQoX3JlZjE4KSB7CiAgICB2YXIgc2VsZWN0ZWROb2RlcyA9IF9yZWYxOC5zZWxlY3RlZE5vZGVzLAogICAgICAgIHNldE11bHRpcGxlUG9zaXRpb25zID0gX3JlZjE4LnNldE11bHRpcGxlUG9zaXRpb25zOwogICAgcmV0dXJuIGZ1bmN0aW9uICgpIHsKICAgICAgc2V0TXVsdGlwbGVQb3NpdGlvbnMoc2VsZWN0ZWROb2Rlcy5tYXAoZnVuY3Rpb24gKGVsZW1lbnQpIHsKICAgICAgICBlbGVtZW50LnBvc2l0aW9uLmxlZnQgLT0gX2NvbnN0YW50cy5FTEVNRU5UX1NISUZUX09GRlNFVDsKICAgICAgICByZXR1cm4gZWxlbWVudDsKICAgICAgfSkpOwogICAgfTsKICB9LAogIHNoaWZ0UmlnaHQ6IGZ1bmN0aW9uIHNoaWZ0UmlnaHQoX3JlZjE5KSB7CiAgICB2YXIgc2VsZWN0ZWROb2RlcyA9IF9yZWYxOS5zZWxlY3RlZE5vZGVzLAogICAgICAgIHNldE11bHRpcGxlUG9zaXRpb25zID0gX3JlZjE5LnNldE11bHRpcGxlUG9zaXRpb25zOwogICAgcmV0dXJuIGZ1bmN0aW9uICgpIHsKICAgICAgc2V0TXVsdGlwbGVQb3NpdGlvbnMoc2VsZWN0ZWROb2Rlcy5tYXAoZnVuY3Rpb24gKGVsZW1lbnQpIHsKICAgICAgICBlbGVtZW50LnBvc2l0aW9uLmxlZnQgKz0gX2NvbnN0YW50cy5FTEVNRU5UX1NISUZUX09GRlNFVDsKICAgICAgICByZXR1cm4gZWxlbWVudDsKICAgICAgfSkpOwogICAgfTsKICB9LAogIG51ZGdlVXA6IGZ1bmN0aW9uIG51ZGdlVXAoX3JlZjIwKSB7CiAgICB2YXIgc2VsZWN0ZWROb2RlcyA9IF9yZWYyMC5zZWxlY3RlZE5vZGVzLAogICAgICAgIHNldE11bHRpcGxlUG9zaXRpb25zID0gX3JlZjIwLnNldE11bHRpcGxlUG9zaXRpb25zOwogICAgcmV0dXJuIGZ1bmN0aW9uICgpIHsKICAgICAgc2V0TXVsdGlwbGVQb3NpdGlvbnMoc2VsZWN0ZWROb2Rlcy5tYXAoZnVuY3Rpb24gKGVsZW1lbnQpIHsKICAgICAgICBlbGVtZW50LnBvc2l0aW9uLnRvcCAtPSBfY29uc3RhbnRzLkVMRU1FTlRfTlVER0VfT0ZGU0VUOwogICAgICAgIHJldHVybiBlbGVtZW50OwogICAgICB9KSk7CiAgICB9OwogIH0sCiAgbnVkZ2VEb3duOiBmdW5jdGlvbiBudWRnZURvd24oX3JlZjIxKSB7CiAgICB2YXIgc2VsZWN0ZWROb2RlcyA9IF9yZWYyMS5zZWxlY3RlZE5vZGVzLAogICAgICAgIHNldE11bHRpcGxlUG9zaXRpb25zID0gX3JlZjIxLnNldE11bHRpcGxlUG9zaXRpb25zOwogICAgcmV0dXJuIGZ1bmN0aW9uICgpIHsKICAgICAgc2V0TXVsdGlwbGVQb3NpdGlvbnMoc2VsZWN0ZWROb2Rlcy5tYXAoZnVuY3Rpb24gKGVsZW1lbnQpIHsKICAgICAgICBlbGVtZW50LnBvc2l0aW9uLnRvcCArPSBfY29uc3RhbnRzLkVMRU1FTlRfTlVER0VfT0ZGU0VUOwogICAgICAgIHJldHVybiBlbGVtZW50OwogICAgICB9KSk7CiAgICB9OwogIH0sCiAgbnVkZ2VMZWZ0OiBmdW5jdGlvbiBudWRnZUxlZnQoX3JlZjIyKSB7CiAgICB2YXIgc2VsZWN0ZWROb2RlcyA9IF9yZWYyMi5zZWxlY3RlZE5vZGVzLAogICAgICAgIHNldE11bHRpcGxlUG9zaXRpb25zID0gX3JlZjIyLnNldE11bHRpcGxlUG9zaXRpb25zOwogICAgcmV0dXJuIGZ1bmN0aW9uICgpIHsKICAgICAgc2V0TXVsdGlwbGVQb3NpdGlvbnMoc2VsZWN0ZWROb2Rlcy5tYXAoZnVuY3Rpb24gKGVsZW1lbnQpIHsKICAgICAgICBlbGVtZW50LnBvc2l0aW9uLmxlZnQgLT0gX2NvbnN0YW50cy5FTEVNRU5UX05VREdFX09GRlNFVDsKICAgICAgICByZXR1cm4gZWxlbWVudDsKICAgICAgfSkpOwogICAgfTsKICB9LAogIG51ZGdlUmlnaHQ6IGZ1bmN0aW9uIG51ZGdlUmlnaHQoX3JlZjIzKSB7CiAgICB2YXIgc2VsZWN0ZWROb2RlcyA9IF9yZWYyMy5zZWxlY3RlZE5vZGVzLAogICAgICAgIHNldE11bHRpcGxlUG9zaXRpb25zID0gX3JlZjIzLnNldE11bHRpcGxlUG9zaXRpb25zOwogICAgcmV0dXJuIGZ1bmN0aW9uICgpIHsKICAgICAgc2V0TXVsdGlwbGVQb3NpdGlvbnMoc2VsZWN0ZWROb2Rlcy5tYXAoZnVuY3Rpb24gKGVsZW1lbnQpIHsKICAgICAgICBlbGVtZW50LnBvc2l0aW9uLmxlZnQgKz0gX2NvbnN0YW50cy5FTEVNRU5UX05VREdFX09GRlNFVDsKICAgICAgICByZXR1cm4gZWxlbWVudDsKICAgICAgfSkpOwogICAgfTsKICB9Cn07CmV4cG9ydHMucG9zaXRpb25IYW5kbGVyQ3JlYXRvcnMgPSBwb3NpdGlvbkhhbmRsZXJDcmVhdG9yczs="},null]}