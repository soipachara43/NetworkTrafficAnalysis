{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/apm/public/components/app/Main/UpdateBreadcrumbs.js","dependencies":[{"path":"x-pack/legacy/plugins/apm/public/components/app/Main/UpdateBreadcrumbs.js","mtime":1589249551583},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKZnVuY3Rpb24gX3R5cGVvZjIob2JqKSB7IGlmICh0eXBlb2YgU3ltYm9sID09PSAiZnVuY3Rpb24iICYmIHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPT09ICJzeW1ib2wiKSB7IF90eXBlb2YyID0gZnVuY3Rpb24gX3R5cGVvZjIob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9OyB9IGVsc2UgeyBfdHlwZW9mMiA9IGZ1bmN0aW9uIF90eXBlb2YyKG9iaikgeyByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09ICJmdW5jdGlvbiIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gInN5bWJvbCIgOiB0eXBlb2Ygb2JqOyB9OyB9IHJldHVybiBfdHlwZW9mMihvYmopOyB9CgpPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgIl9fZXNNb2R1bGUiLCB7CiAgdmFsdWU6IHRydWUKfSk7CmV4cG9ydHMuVXBkYXRlQnJlYWRjcnVtYnMgPSBVcGRhdGVCcmVhZGNydW1iczsKCnZhciBfcmVhY3QgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoInJlYWN0IikpOwoKdmFyIF9BUE1MaW5rID0gcmVxdWlyZSgiLi4vLi4vc2hhcmVkL0xpbmtzL2FwbS9BUE1MaW5rIik7Cgp2YXIgX1Byb3ZpZGVCcmVhZGNydW1icyA9IHJlcXVpcmUoIi4vUHJvdmlkZUJyZWFkY3J1bWJzIik7Cgp2YXIgX3VzZUFwbVBsdWdpbkNvbnRleHQyID0gcmVxdWlyZSgiLi4vLi4vLi4vaG9va3MvdXNlQXBtUGx1Z2luQ29udGV4dCIpOwoKZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsKICByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogewogICAgZGVmYXVsdDogb2JqCiAgfTsKfQoKZnVuY3Rpb24gX3R5cGVvZihvYmopIHsKICBpZiAodHlwZW9mIFN5bWJvbCA9PT0gImZ1bmN0aW9uIiAmJiBfdHlwZW9mMihTeW1ib2wuaXRlcmF0b3IpID09PSAic3ltYm9sIikgewogICAgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7CiAgICAgIHJldHVybiBfdHlwZW9mMihvYmopOwogICAgfTsKICB9IGVsc2UgewogICAgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7CiAgICAgIHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gImZ1bmN0aW9uIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyAic3ltYm9sIiA6IF90eXBlb2YyKG9iaik7CiAgICB9OwogIH0KCiAgcmV0dXJuIF90eXBlb2Yob2JqKTsKfQoKZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgewogIGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7CiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb24iKTsKICB9Cn0KCmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsKICBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7CiAgICB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOwogICAgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOwogICAgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOwogICAgaWYgKCJ2YWx1ZSIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7CiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7CiAgfQp9CgpmdW5jdGlvbiBfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7CiAgaWYgKHByb3RvUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7CiAgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOwogIHJldHVybiBDb25zdHJ1Y3RvcjsKfQoKZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgewogIGlmIChjYWxsICYmIChfdHlwZW9mKGNhbGwpID09PSAib2JqZWN0IiB8fCB0eXBlb2YgY2FsbCA9PT0gImZ1bmN0aW9uIikpIHsKICAgIHJldHVybiBjYWxsOwogIH0KCiAgcmV0dXJuIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZik7Cn0KCmZ1bmN0aW9uIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZikgewogIGlmIChzZWxmID09PSB2b2lkIDApIHsKICAgIHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcigidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkIik7CiAgfQoKICByZXR1cm4gc2VsZjsKfQoKZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHsKICBfZ2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3QuZ2V0UHJvdG90eXBlT2YgOiBmdW5jdGlvbiBfZ2V0UHJvdG90eXBlT2YobykgewogICAgcmV0dXJuIG8uX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihvKTsKICB9OwogIHJldHVybiBfZ2V0UHJvdG90eXBlT2Yobyk7Cn0KCmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgewogIGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gImZ1bmN0aW9uIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7CiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiIpOwogIH0KCiAgc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7CiAgICBjb25zdHJ1Y3RvcjogewogICAgICB2YWx1ZTogc3ViQ2xhc3MsCiAgICAgIHdyaXRhYmxlOiB0cnVlLAogICAgICBjb25maWd1cmFibGU6IHRydWUKICAgIH0KICB9KTsKICBpZiAoc3VwZXJDbGFzcykgX3NldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKTsKfQoKZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHsKICBfc2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHwgZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHsKICAgIG8uX19wcm90b19fID0gcDsKICAgIHJldHVybiBvOwogIH07CgogIHJldHVybiBfc2V0UHJvdG90eXBlT2YobywgcCk7Cn0KCmZ1bmN0aW9uIGdldFRpdGxlRnJvbUJyZWFkQ3J1bWJzKGJyZWFkY3J1bWJzKSB7CiAgcmV0dXJuIGJyZWFkY3J1bWJzLm1hcChmdW5jdGlvbiAoX3JlZikgewogICAgdmFyIHZhbHVlID0gX3JlZi52YWx1ZTsKICAgIHJldHVybiB2YWx1ZTsKICB9KS5yZXZlcnNlKCkuam9pbignIHwgJyk7Cn0KCnZhciBVcGRhdGVCcmVhZGNydW1ic0NvbXBvbmVudCA9Ci8qI19fUFVSRV9fKi8KZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHsKICBfaW5oZXJpdHMoVXBkYXRlQnJlYWRjcnVtYnNDb21wb25lbnQsIF9SZWFjdCRDb21wb25lbnQpOwoKICBmdW5jdGlvbiBVcGRhdGVCcmVhZGNydW1ic0NvbXBvbmVudCgpIHsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBVcGRhdGVCcmVhZGNydW1ic0NvbXBvbmVudCk7CgogICAgcmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9nZXRQcm90b3R5cGVPZihVcGRhdGVCcmVhZGNydW1ic0NvbXBvbmVudCkuYXBwbHkodGhpcywgYXJndW1lbnRzKSk7CiAgfQoKICBfY3JlYXRlQ2xhc3MoVXBkYXRlQnJlYWRjcnVtYnNDb21wb25lbnQsIFt7CiAgICBrZXk6ICJ1cGRhdGVIZWFkZXJCcmVhZGNydW1icyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gdXBkYXRlSGVhZGVyQnJlYWRjcnVtYnMoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB2YXIgYnJlYWRjcnVtYnMgPSB0aGlzLnByb3BzLmJyZWFkY3J1bWJzLm1hcChmdW5jdGlvbiAoX3JlZjIpIHsKICAgICAgICB2YXIgdmFsdWUgPSBfcmVmMi52YWx1ZSwKICAgICAgICAgICAgbWF0Y2ggPSBfcmVmMi5tYXRjaDsKICAgICAgICByZXR1cm4gewogICAgICAgICAgdGV4dDogdmFsdWUsCiAgICAgICAgICBocmVmOiAoMCwgX0FQTUxpbmsuZ2V0QVBNSHJlZikobWF0Y2gudXJsLCBfdGhpcy5wcm9wcy5sb2NhdGlvbi5zZWFyY2gpCiAgICAgICAgfTsKICAgICAgfSk7CiAgICAgIGRvY3VtZW50LnRpdGxlID0gZ2V0VGl0bGVGcm9tQnJlYWRDcnVtYnModGhpcy5wcm9wcy5icmVhZGNydW1icyk7CiAgICAgIHRoaXMucHJvcHMuY29yZS5jaHJvbWUuc2V0QnJlYWRjcnVtYnMoYnJlYWRjcnVtYnMpOwogICAgfQogIH0sIHsKICAgIGtleTogImNvbXBvbmVudERpZE1vdW50IiwKICAgIHZhbHVlOiBmdW5jdGlvbiBjb21wb25lbnREaWRNb3VudCgpIHsKICAgICAgdGhpcy51cGRhdGVIZWFkZXJCcmVhZGNydW1icygpOwogICAgfQogIH0sIHsKICAgIGtleTogImNvbXBvbmVudERpZFVwZGF0ZSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gY29tcG9uZW50RGlkVXBkYXRlKCkgewogICAgICB0aGlzLnVwZGF0ZUhlYWRlckJyZWFkY3J1bWJzKCk7CiAgICB9CiAgfSwgewogICAga2V5OiAicmVuZGVyIiwKICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXIoKSB7CiAgICAgIHJldHVybiBudWxsOwogICAgfQogIH1dKTsKCiAgcmV0dXJuIFVwZGF0ZUJyZWFkY3J1bWJzQ29tcG9uZW50Owp9KF9yZWFjdC5kZWZhdWx0LkNvbXBvbmVudCk7CgpmdW5jdGlvbiBVcGRhdGVCcmVhZGNydW1icyhfcmVmMykgewogIHZhciByb3V0ZXMgPSBfcmVmMy5yb3V0ZXM7CgogIHZhciBfdXNlQXBtUGx1Z2luQ29udGV4dCA9ICgwLCBfdXNlQXBtUGx1Z2luQ29udGV4dDIudXNlQXBtUGx1Z2luQ29udGV4dCkoKSwKICAgICAgY29yZSA9IF91c2VBcG1QbHVnaW5Db250ZXh0LmNvcmU7CgogIHJldHVybiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9Qcm92aWRlQnJlYWRjcnVtYnMuUHJvdmlkZUJyZWFkY3J1bWJzLCB7CiAgICByb3V0ZXM6IHJvdXRlcywKICAgIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKF9yZWY0KSB7CiAgICAgIHZhciBicmVhZGNydW1icyA9IF9yZWY0LmJyZWFkY3J1bWJzLAogICAgICAgICAgbG9jYXRpb24gPSBfcmVmNC5sb2NhdGlvbjsKICAgICAgcmV0dXJuIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoVXBkYXRlQnJlYWRjcnVtYnNDb21wb25lbnQsIHsKICAgICAgICBicmVhZGNydW1iczogYnJlYWRjcnVtYnMsCiAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uLAogICAgICAgIGNvcmU6IGNvcmUKICAgICAgfSk7CiAgICB9CiAgfSk7Cn0="},null]}