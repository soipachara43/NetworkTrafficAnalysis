{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!src/legacy/core_plugins/kibana/public/management/sections/index_patterns/create_index_pattern_wizard/lib/get_indices.js","dependencies":[{"path":"src/legacy/core_plugins/kibana/public/management/sections/index_patterns/create_index_pattern_wizard/lib/get_indices.js","mtime":1589249549822},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmdldEluZGljZXMgPSBnZXRJbmRpY2VzOwoKdmFyIF9sb2Rhc2ggPSByZXF1aXJlKCJsb2Rhc2giKTsKCmZ1bmN0aW9uIGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywga2V5LCBhcmcpIHsKICB0cnkgewogICAgdmFyIGluZm8gPSBnZW5ba2V5XShhcmcpOwogICAgdmFyIHZhbHVlID0gaW5mby52YWx1ZTsKICB9IGNhdGNoIChlcnJvcikgewogICAgcmVqZWN0KGVycm9yKTsKICAgIHJldHVybjsKICB9CgogIGlmIChpbmZvLmRvbmUpIHsKICAgIHJlc29sdmUodmFsdWUpOwogIH0gZWxzZSB7CiAgICBQcm9taXNlLnJlc29sdmUodmFsdWUpLnRoZW4oX25leHQsIF90aHJvdyk7CiAgfQp9CgpmdW5jdGlvbiBfYXN5bmNUb0dlbmVyYXRvcihmbikgewogIHJldHVybiBmdW5jdGlvbiAoKSB7CiAgICB2YXIgc2VsZiA9IHRoaXMsCiAgICAgICAgYXJncyA9IGFyZ3VtZW50czsKICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICAgIHZhciBnZW4gPSBmbi5hcHBseShzZWxmLCBhcmdzKTsKCiAgICAgIGZ1bmN0aW9uIF9uZXh0KHZhbHVlKSB7CiAgICAgICAgYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCAibmV4dCIsIHZhbHVlKTsKICAgICAgfQoKICAgICAgZnVuY3Rpb24gX3Rocm93KGVycikgewogICAgICAgIGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywgInRocm93IiwgZXJyKTsKICAgICAgfQoKICAgICAgX25leHQodW5kZWZpbmVkKTsKICAgIH0pOwogIH07Cn0KCmZ1bmN0aW9uIGdldEluZGljZXMoX3gsIF94MiwgX3gzLCBfeDQpIHsKICByZXR1cm4gX2dldEluZGljZXMuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKfQoKZnVuY3Rpb24gX2dldEluZGljZXMoKSB7CiAgX2dldEluZGljZXMgPSBfYXN5bmNUb0dlbmVyYXRvcigKICAvKiNfX1BVUkVfXyovCiAgcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShlcywgaW5kZXhQYXR0ZXJuQ3JlYXRpb25UeXBlLCByYXdQYXR0ZXJuLCBsaW1pdCkgewogICAgdmFyIHBhdHRlcm4sIHBhcmFtcywgcmVzcG9uc2UsIHR5cGU7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIHBhdHRlcm4gPSByYXdQYXR0ZXJuLnRyaW0oKTsgLy8gU2VhcmNoaW5nIGZvciBgKjpgIGZhaWxzIGZvciBDQ1MgZW52aXJvbm1lbnRzLiBUaGUgc2VhcmNoIHJlcXVlc3QKICAgICAgICAgICAgLy8gaXMgd29ydGhsZXNzIGFueXdheXMgYXMgdGhlIHdlIHNob3VsZCBvbmx5IHNlbmQgYSByZXF1ZXN0CiAgICAgICAgICAgIC8vIGZvciBhIHNwZWNpZmljIHF1ZXJ5ICh3aGVyZSB3ZSBkbyBub3QgYXBwZW5kICopIGlmIHRoZXJlIGlzIGF0CiAgICAgICAgICAgIC8vIGxlYXN0IGEgc2luZ2xlIGNoYXJhY3RlciBiZWluZyBzZWFyY2hlZCBmb3IuCgogICAgICAgICAgICBpZiAoIShwYXR0ZXJuID09PSAnKjonKSkgewogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBbXSk7CgogICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICBpZiAoIShwYXR0ZXJuID09PSAnJykpIHsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNTsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgW10pOwoKICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgaWYgKCFwYXR0ZXJuLnN0YXJ0c1dpdGgoJywnKSkgewogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA3OwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBbXSk7CgogICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICBpZiAobGltaXQpIHsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gOTsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdgZ2V0SW5kaWNlcygpYCB3YXMgY2FsbGVkIHdpdGhvdXQgdGhlIHJlcXVpcmVkIGBsaW1pdGAgcGFyYW1ldGVyLicpOwoKICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgcGFyYW1zID0gewogICAgICAgICAgICAgIGlnbm9yZVVuYXZhaWxhYmxlOiB0cnVlLAogICAgICAgICAgICAgIGluZGV4OiBwYXR0ZXJuLAogICAgICAgICAgICAgIGlnbm9yZTogWzQwNF0sCiAgICAgICAgICAgICAgYm9keTogewogICAgICAgICAgICAgICAgc2l6ZTogMCwKICAgICAgICAgICAgICAgIC8vIG5vIGhpdHMKICAgICAgICAgICAgICAgIGFnZ3M6IHsKICAgICAgICAgICAgICAgICAgaW5kaWNlczogewogICAgICAgICAgICAgICAgICAgIHRlcm1zOiB7CiAgICAgICAgICAgICAgICAgICAgICBmaWVsZDogJ19pbmRleCcsCiAgICAgICAgICAgICAgICAgICAgICBzaXplOiBsaW1pdAogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfTsKICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDEwOwogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTM7CiAgICAgICAgICAgIHJldHVybiBlcy5zZWFyY2gocGFyYW1zKTsKCiAgICAgICAgICBjYXNlIDEzOgogICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0LnNlbnQ7CgogICAgICAgICAgICBpZiAoISghcmVzcG9uc2UgfHwgcmVzcG9uc2UuZXJyb3IgfHwgIXJlc3BvbnNlLmFnZ3JlZ2F0aW9ucykpIHsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTY7CiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIFtdKTsKCiAgICAgICAgICBjYXNlIDE2OgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCAoMCwgX2xvZGFzaC5zb3J0QnkpKHJlc3BvbnNlLmFnZ3JlZ2F0aW9ucy5pbmRpY2VzLmJ1Y2tldHMubWFwKGZ1bmN0aW9uIChidWNrZXQpIHsKICAgICAgICAgICAgICByZXR1cm4gYnVja2V0LmtleTsKICAgICAgICAgICAgfSkubWFwKGZ1bmN0aW9uIChpbmRleE5hbWUpIHsKICAgICAgICAgICAgICByZXR1cm4gewogICAgICAgICAgICAgICAgbmFtZTogaW5kZXhOYW1lLAogICAgICAgICAgICAgICAgdGFnczogaW5kZXhQYXR0ZXJuQ3JlYXRpb25UeXBlLmdldEluZGV4VGFncyhpbmRleE5hbWUpCiAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgfSksICduYW1lJykpOwoKICAgICAgICAgIGNhc2UgMTk6CiAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxOTsKICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSgxMCk7CiAgICAgICAgICAgIHR5cGUgPSAoMCwgX2xvZGFzaC5nZXQpKF9jb250ZXh0LnQwLCAnYm9keS5lcnJvci5jYXVzZWRfYnkudHlwZScpOwoKICAgICAgICAgICAgaWYgKCEodHlwZSA9PT0gJ2luZGV4X25vdF9mb3VuZF9leGNlcHRpb24nKSkgewogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyNDsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgW10pOwoKICAgICAgICAgIGNhc2UgMjQ6CiAgICAgICAgICAgIHRocm93IF9jb250ZXh0LnQwOwoKICAgICAgICAgIGNhc2UgMjU6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZSwgbnVsbCwgW1sxMCwgMTldXSk7CiAgfSkpOwogIHJldHVybiBfZ2V0SW5kaWNlcy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9"},null]}