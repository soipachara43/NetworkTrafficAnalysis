{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/plugins/index_management/public/application/components/mappings_editor/components/document_fields/field_parameters/dynamic_parameter.js","dependencies":[{"path":"x-pack/plugins/index_management/public/application/components/mappings_editor/components/document_fields/field_parameters/dynamic_parameter.js","mtime":1589249554100},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLkR5bmFtaWNQYXJhbWV0ZXIgPSBleHBvcnRzLmR5bmFtaWNEZXNlcmlhbGl6ZXIgPSBleHBvcnRzLmR5bmFtaWNTZXJpYWxpemVyID0gdm9pZCAwOwoKdmFyIF9yZWFjdCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgicmVhY3QiKSk7Cgp2YXIgX2kxOG4gPSByZXF1aXJlKCJAa2JuL2kxOG4iKTsKCnZhciBfZG9jdW1lbnRhdGlvbiA9IHJlcXVpcmUoIi4uLy4uLy4uLy4uLy4uL3NlcnZpY2VzL2RvY3VtZW50YXRpb24iKTsKCnZhciBfc2hhcmVkX2ltcG9ydHMgPSByZXF1aXJlKCIuLi8uLi8uLi9zaGFyZWRfaW1wb3J0cyIpOwoKdmFyIF9saWIgPSByZXF1aXJlKCIuLi8uLi8uLi9saWIiKTsKCnZhciBfZWRpdF9maWVsZCA9IHJlcXVpcmUoIi4uL2ZpZWxkcy9lZGl0X2ZpZWxkIik7CgpmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgewogIHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7CiAgICBkZWZhdWx0OiBvYmoKICB9Owp9CgpmdW5jdGlvbiBvd25LZXlzKG9iamVjdCwgZW51bWVyYWJsZU9ubHkpIHsKICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9iamVjdCk7CgogIGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7CiAgICB2YXIgc3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMob2JqZWN0KTsKICAgIGlmIChlbnVtZXJhYmxlT25seSkgc3ltYm9scyA9IHN5bWJvbHMuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHsKICAgICAgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7CiAgICB9KTsKICAgIGtleXMucHVzaC5hcHBseShrZXlzLCBzeW1ib2xzKTsKICB9CgogIHJldHVybiBrZXlzOwp9CgpmdW5jdGlvbiBfb2JqZWN0U3ByZWFkKHRhcmdldCkgewogIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7CiAgICB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldICE9IG51bGwgPyBhcmd1bWVudHNbaV0gOiB7fTsKCiAgICBpZiAoaSAlIDIpIHsKICAgICAgb3duS2V5cyhzb3VyY2UsIHRydWUpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgewogICAgICAgIF9kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgc291cmNlW2tleV0pOwogICAgICB9KTsKICAgIH0gZWxzZSBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMpIHsKICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKTsKICAgIH0gZWxzZSB7CiAgICAgIG93bktleXMoc291cmNlKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsKICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBrZXkpKTsKICAgICAgfSk7CiAgICB9CiAgfQoKICByZXR1cm4gdGFyZ2V0Owp9CgpmdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7CiAgaWYgKGtleSBpbiBvYmopIHsKICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgewogICAgICB2YWx1ZTogdmFsdWUsCiAgICAgIGVudW1lcmFibGU6IHRydWUsCiAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSwKICAgICAgd3JpdGFibGU6IHRydWUKICAgIH0pOwogIH0gZWxzZSB7CiAgICBvYmpba2V5XSA9IHZhbHVlOwogIH0KCiAgcmV0dXJuIG9iajsKfQoKZnVuY3Rpb24gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKHNvdXJjZSwgZXhjbHVkZWQpIHsKICBpZiAoc291cmNlID09IG51bGwpIHJldHVybiB7fTsKCiAgdmFyIHRhcmdldCA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHNvdXJjZSwgZXhjbHVkZWQpOwoKICB2YXIga2V5LCBpOwoKICBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykgewogICAgdmFyIHNvdXJjZVN5bWJvbEtleXMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKHNvdXJjZSk7CgogICAgZm9yIChpID0gMDsgaSA8IHNvdXJjZVN5bWJvbEtleXMubGVuZ3RoOyBpKyspIHsKICAgICAga2V5ID0gc291cmNlU3ltYm9sS2V5c1tpXTsKICAgICAgaWYgKGV4Y2x1ZGVkLmluZGV4T2Yoa2V5KSA+PSAwKSBjb250aW51ZTsKICAgICAgaWYgKCFPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlLmNhbGwoc291cmNlLCBrZXkpKSBjb250aW51ZTsKICAgICAgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsKICAgIH0KICB9CgogIHJldHVybiB0YXJnZXQ7Cn0KCmZ1bmN0aW9uIF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHNvdXJjZSwgZXhjbHVkZWQpIHsKICBpZiAoc291cmNlID09IG51bGwpIHJldHVybiB7fTsKICB2YXIgdGFyZ2V0ID0ge307CiAgdmFyIHNvdXJjZUtleXMgPSBPYmplY3Qua2V5cyhzb3VyY2UpOwogIHZhciBrZXksIGk7CgogIGZvciAoaSA9IDA7IGkgPCBzb3VyY2VLZXlzLmxlbmd0aDsgaSsrKSB7CiAgICBrZXkgPSBzb3VyY2VLZXlzW2ldOwogICAgaWYgKGV4Y2x1ZGVkLmluZGV4T2Yoa2V5KSA+PSAwKSBjb250aW51ZTsKICAgIHRhcmdldFtrZXldID0gc291cmNlW2tleV07CiAgfQoKICByZXR1cm4gdGFyZ2V0Owp9Ci8qKgogKiBFeHBvcnQgY3VzdG9tIHNlcmlhbGl6ZXIgdG8gYmUgdXNlZCB3aGVuIHdlIG5lZWQgdG8gc2VyaWFsaXplIHRoZSBmb3JtIGRhdGEgdG8gYmUgc2VudCB0byBFUwogKiBAcGFyYW0gZmllbGQgVGhlIGZpZWxkIHRvIGJlIHNlcmlhbGl6ZWQKICovCgoKdmFyIGR5bmFtaWNTZXJpYWxpemVyID0gZnVuY3Rpb24gZHluYW1pY1NlcmlhbGl6ZXIoZmllbGQpIHsKICBpZiAoZmllbGQuZHluYW1pY190b2dnbGUgPT09IHVuZGVmaW5lZCkgewogICAgcmV0dXJuIGZpZWxkOwogIH0KCiAgdmFyIGR5bmFtaWMgPSBmaWVsZC5keW5hbWljX3RvZ2dsZSA9PT0gdHJ1ZSA/IHRydWUgOiBmaWVsZC5keW5hbWljX3N0cmljdCA9PT0gdHJ1ZSA/ICdzdHJpY3QnIDogZmFsc2U7CgogIHZhciBkeW5hbWljX3RvZ2dsZSA9IGZpZWxkLmR5bmFtaWNfdG9nZ2xlLAogICAgICBkeW5hbWljX3N0cmljdCA9IGZpZWxkLmR5bmFtaWNfc3RyaWN0LAogICAgICByZXN0ID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKGZpZWxkLCBbImR5bmFtaWNfdG9nZ2xlIiwgImR5bmFtaWNfc3RyaWN0Il0pOwoKICByZXR1cm4gX29iamVjdFNwcmVhZCh7fSwgcmVzdCwgewogICAgZHluYW1pYzogZHluYW1pYwogIH0pOwp9OwovKioKICogRXhwb3J0IGN1c3RvbSBkZXNlcmlhbGl6ZXIgdG8gYmUgdXNlZCB3aGVuIHdlIG5lZWQgdG8gZGVzZXJpYWxpemUgdGhlIGRhdGEgY29taW5nIGZyb20gRVMKICogQHBhcmFtIGZpZWxkIFRoZSBmaWVsZCB0byBiZSBzZXJpYWxpemVkCiAqLwoKCmV4cG9ydHMuZHluYW1pY1NlcmlhbGl6ZXIgPSBkeW5hbWljU2VyaWFsaXplcjsKCnZhciBkeW5hbWljRGVzZXJpYWxpemVyID0gZnVuY3Rpb24gZHluYW1pY0Rlc2VyaWFsaXplcihmaWVsZCkgewogIGlmIChmaWVsZC5keW5hbWljID09PSB1bmRlZmluZWQpIHsKICAgIHJldHVybiBmaWVsZDsKICB9CgogIHZhciBkeW5hbWljVG9nZ2xlVmFsdWUgPSBmaWVsZC5keW5hbWljID09PSB0cnVlOwogIHZhciBkeW5hbWljU3RyaWN0VmFsdWUgPSBmaWVsZC5keW5hbWljID09PSAnc3RyaWN0JzsKICByZXR1cm4gX29iamVjdFNwcmVhZCh7fSwgZmllbGQsIHsKICAgIGR5bmFtaWNfdG9nZ2xlOiBkeW5hbWljVG9nZ2xlVmFsdWUsCiAgICBkeW5hbWljX3N0cmljdDogZHluYW1pY1N0cmljdFZhbHVlCiAgfSk7Cn07CgpleHBvcnRzLmR5bmFtaWNEZXNlcmlhbGl6ZXIgPSBkeW5hbWljRGVzZXJpYWxpemVyOwoKdmFyIER5bmFtaWNQYXJhbWV0ZXIgPSBmdW5jdGlvbiBEeW5hbWljUGFyYW1ldGVyKF9yZWYpIHsKICB2YXIgZGVmYXVsdFRvZ2dsZVZhbHVlID0gX3JlZi5kZWZhdWx0VG9nZ2xlVmFsdWU7CiAgcmV0dXJuIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2VkaXRfZmllbGQuRWRpdEZpZWxkRm9ybVJvdywgewogICAgdGl0bGU6IF9pMThuLmkxOG4udHJhbnNsYXRlKCd4cGFjay5pZHhNZ210Lm1hcHBpbmdzRWRpdG9yLmR5bmFtaWNQcm9wZXJ0eU1hcHBpbmdQYXJhbWV0ZXIuZmllbGRUaXRsZScsIHsKICAgICAgZGVmYXVsdE1lc3NhZ2U6ICdEeW5hbWljIHByb3BlcnR5IG1hcHBpbmcnCiAgICB9KSwKICAgIGRlc2NyaXB0aW9uOiBfaTE4bi5pMThuLnRyYW5zbGF0ZSgneHBhY2suaWR4TWdtdC5tYXBwaW5nc0VkaXRvci5keW5hbWljUHJvcGVydHlNYXBwaW5nUGFyYW1ldGVyLmZpZWxkRGVzY3JpcHRpb24nLCB7CiAgICAgIGRlZmF1bHRNZXNzYWdlOiAnQnkgZGVmYXVsdCwgcHJvcGVydGllcyBjYW4gYmUgYWRkZWQgZHluYW1pY2FsbHkgdG8gb2JqZWN0cyB3aXRoaW4gYSBkb2N1bWVudCwganVzdCBieSBpbmRleGluZyBhIGRvY3VtZW50IHdpdGggdGhlIG9iamVjdCBjb250YWluaW5nIHRoZSBuZXcgcHJvcGVydHkuJwogICAgfSksCiAgICBkb2NMaW5rOiB7CiAgICAgIHRleHQ6IF9pMThuLmkxOG4udHJhbnNsYXRlKCd4cGFjay5pZHhNZ210Lm1hcHBpbmdzRWRpdG9yLmR5bmFtaWNEb2NMaW5rVGV4dCcsIHsKICAgICAgICBkZWZhdWx0TWVzc2FnZTogJ0R5bmFtaWMgZG9jdW1lbnRhdGlvbicKICAgICAgfSksCiAgICAgIGhyZWY6IF9kb2N1bWVudGF0aW9uLmRvY3VtZW50YXRpb25TZXJ2aWNlLmdldER5bmFtaWNMaW5rKCkKICAgIH0sCiAgICBmb3JtRmllbGRQYXRoOiAiZHluYW1pY190b2dnbGUiLAogICAgZGVmYXVsdFRvZ2dsZVZhbHVlOiBkZWZhdWx0VG9nZ2xlVmFsdWUKICB9LCBmdW5jdGlvbiAoaXNPbikgewogICAgcmV0dXJuIGlzT24gPT09IGZhbHNlID8gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfc2hhcmVkX2ltcG9ydHMuVXNlRmllbGQsIHsKICAgICAgcGF0aDogImR5bmFtaWNfc3RyaWN0IiwKICAgICAgY29uZmlnOiAoMCwgX2xpYi5nZXRGaWVsZENvbmZpZykoJ2R5bmFtaWNfc3RyaWN0JyksCiAgICAgIGNvbXBvbmVudDogX3NoYXJlZF9pbXBvcnRzLkNoZWNrQm94RmllbGQKICAgIH0pIDogbnVsbDsKICB9KTsKfTsKCmV4cG9ydHMuRHluYW1pY1BhcmFtZXRlciA9IER5bmFtaWNQYXJhbWV0ZXI7"},null]}