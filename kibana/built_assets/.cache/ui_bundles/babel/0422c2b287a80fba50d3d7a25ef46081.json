{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/apm/public/context/ChartsSyncContext.js","dependencies":[{"path":"x-pack/legacy/plugins/apm/public/context/ChartsSyncContext.js","mtime":1589249551667},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLkNoYXJ0c1N5bmNDb250ZXh0UHJvdmlkZXIgPSBleHBvcnRzLkNoYXJ0c1N5bmNDb250ZXh0ID0gdm9pZCAwOwoKdmFyIF9yZWFjdCA9IF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKHJlcXVpcmUoInJlYWN0IikpOwoKdmFyIF91cmxfaGVscGVycyA9IHJlcXVpcmUoIi4uL2NvbXBvbmVudHMvc2hhcmVkL0xpbmtzL3VybF9oZWxwZXJzIik7Cgp2YXIgX2hpc3RvcnkgPSByZXF1aXJlKCIuLi91dGlscy9oaXN0b3J5Iik7Cgp2YXIgX3VzZVVybFBhcmFtczIgPSByZXF1aXJlKCIuLi9ob29rcy91c2VVcmxQYXJhbXMiKTsKCnZhciBfdXNlRmV0Y2hlcjIgPSByZXF1aXJlKCIuLi9ob29rcy91c2VGZXRjaGVyIik7CgpmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChvYmopIHsKICBpZiAob2JqICYmIG9iai5fX2VzTW9kdWxlKSB7CiAgICByZXR1cm4gb2JqOwogIH0gZWxzZSB7CiAgICB2YXIgbmV3T2JqID0ge307CgogICAgaWYgKG9iaiAhPSBudWxsKSB7CiAgICAgIGZvciAodmFyIGtleSBpbiBvYmopIHsKICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwga2V5KSkgewogICAgICAgICAgdmFyIGRlc2MgPSBPYmplY3QuZGVmaW5lUHJvcGVydHkgJiYgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvciA/IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqLCBrZXkpIDoge307CgogICAgICAgICAgaWYgKGRlc2MuZ2V0IHx8IGRlc2Muc2V0KSB7CiAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShuZXdPYmosIGtleSwgZGVzYyk7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBuZXdPYmpba2V5XSA9IG9ialtrZXldOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfQoKICAgIG5ld09iai5kZWZhdWx0ID0gb2JqOwogICAgcmV0dXJuIG5ld09iajsKICB9Cn0KCmZ1bmN0aW9uIG93bktleXMob2JqZWN0LCBlbnVtZXJhYmxlT25seSkgewogIHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTsKCiAgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsKICAgIHZhciBzeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvYmplY3QpOwogICAgaWYgKGVudW1lcmFibGVPbmx5KSBzeW1ib2xzID0gc3ltYm9scy5maWx0ZXIoZnVuY3Rpb24gKHN5bSkgewogICAgICByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHN5bSkuZW51bWVyYWJsZTsKICAgIH0pOwogICAga2V5cy5wdXNoLmFwcGx5KGtleXMsIHN5bWJvbHMpOwogIH0KCiAgcmV0dXJuIGtleXM7Cn0KCmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7CiAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsKICAgIHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV0gIT0gbnVsbCA/IGFyZ3VtZW50c1tpXSA6IHt9OwoKICAgIGlmIChpICUgMikgewogICAgICBvd25LZXlzKHNvdXJjZSwgdHJ1ZSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7CiAgICAgICAgX2RlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBzb3VyY2Vba2V5XSk7CiAgICAgIH0pOwogICAgfSBlbHNlIGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycykgewogICAgICBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHNvdXJjZSkpOwogICAgfSBlbHNlIHsKICAgICAgb3duS2V5cyhzb3VyY2UpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgewogICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpOwogICAgICB9KTsKICAgIH0KICB9CgogIHJldHVybiB0YXJnZXQ7Cn0KCmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHsKICBpZiAoa2V5IGluIG9iaikgewogICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7CiAgICAgIHZhbHVlOiB2YWx1ZSwKICAgICAgZW51bWVyYWJsZTogdHJ1ZSwKICAgICAgY29uZmlndXJhYmxlOiB0cnVlLAogICAgICB3cml0YWJsZTogdHJ1ZQogICAgfSk7CiAgfSBlbHNlIHsKICAgIG9ialtrZXldID0gdmFsdWU7CiAgfQoKICByZXR1cm4gb2JqOwp9CgpmdW5jdGlvbiBfc2xpY2VkVG9BcnJheShhcnIsIGkpIHsKICByZXR1cm4gX2FycmF5V2l0aEhvbGVzKGFycikgfHwgX2l0ZXJhYmxlVG9BcnJheUxpbWl0KGFyciwgaSkgfHwgX25vbkl0ZXJhYmxlUmVzdCgpOwp9CgpmdW5jdGlvbiBfbm9uSXRlcmFibGVSZXN0KCkgewogIHRocm93IG5ldyBUeXBlRXJyb3IoIkludmFsaWQgYXR0ZW1wdCB0byBkZXN0cnVjdHVyZSBub24taXRlcmFibGUgaW5zdGFuY2UiKTsKfQoKZnVuY3Rpb24gX2l0ZXJhYmxlVG9BcnJheUxpbWl0KGFyciwgaSkgewogIHZhciBfYXJyID0gW107CiAgdmFyIF9uID0gdHJ1ZTsKICB2YXIgX2QgPSBmYWxzZTsKICB2YXIgX2UgPSB1bmRlZmluZWQ7CgogIHRyeSB7CiAgICBmb3IgKHZhciBfaSA9IGFycltTeW1ib2wuaXRlcmF0b3JdKCksIF9zOyAhKF9uID0gKF9zID0gX2kubmV4dCgpKS5kb25lKTsgX24gPSB0cnVlKSB7CiAgICAgIF9hcnIucHVzaChfcy52YWx1ZSk7CgogICAgICBpZiAoaSAmJiBfYXJyLmxlbmd0aCA9PT0gaSkgYnJlYWs7CiAgICB9CiAgfSBjYXRjaCAoZXJyKSB7CiAgICBfZCA9IHRydWU7CiAgICBfZSA9IGVycjsKICB9IGZpbmFsbHkgewogICAgdHJ5IHsKICAgICAgaWYgKCFfbiAmJiBfaVsicmV0dXJuIl0gIT0gbnVsbCkgX2lbInJldHVybiJdKCk7CiAgICB9IGZpbmFsbHkgewogICAgICBpZiAoX2QpIHRocm93IF9lOwogICAgfQogIH0KCiAgcmV0dXJuIF9hcnI7Cn0KCmZ1bmN0aW9uIF9hcnJheVdpdGhIb2xlcyhhcnIpIHsKICBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSByZXR1cm4gYXJyOwp9Cgp2YXIgQ2hhcnRzU3luY0NvbnRleHQgPSBfcmVhY3QuZGVmYXVsdC5jcmVhdGVDb250ZXh0KG51bGwpOwoKZXhwb3J0cy5DaGFydHNTeW5jQ29udGV4dCA9IENoYXJ0c1N5bmNDb250ZXh0OwoKdmFyIENoYXJ0c1N5bmNDb250ZXh0UHJvdmlkZXIgPSBmdW5jdGlvbiBDaGFydHNTeW5jQ29udGV4dFByb3ZpZGVyKF9yZWYpIHsKICB2YXIgY2hpbGRyZW4gPSBfcmVmLmNoaWxkcmVuOwoKICB2YXIgX3VzZVN0YXRlID0gKDAsIF9yZWFjdC51c2VTdGF0ZSkobnVsbCksCiAgICAgIF91c2VTdGF0ZTIgPSBfc2xpY2VkVG9BcnJheShfdXNlU3RhdGUsIDIpLAogICAgICB0aW1lID0gX3VzZVN0YXRlMlswXSwKICAgICAgc2V0VGltZSA9IF91c2VTdGF0ZTJbMV07CgogIHZhciBfdXNlVXJsUGFyYW1zID0gKDAsIF91c2VVcmxQYXJhbXMyLnVzZVVybFBhcmFtcykoKSwKICAgICAgdXJsUGFyYW1zID0gX3VzZVVybFBhcmFtcy51cmxQYXJhbXMsCiAgICAgIHVpRmlsdGVycyA9IF91c2VVcmxQYXJhbXMudWlGaWx0ZXJzOwoKICB2YXIgc3RhcnQgPSB1cmxQYXJhbXMuc3RhcnQsCiAgICAgIGVuZCA9IHVybFBhcmFtcy5lbmQsCiAgICAgIHNlcnZpY2VOYW1lID0gdXJsUGFyYW1zLnNlcnZpY2VOYW1lOwogIHZhciBlbnZpcm9ubWVudCA9IHVpRmlsdGVycy5lbnZpcm9ubWVudDsKCiAgdmFyIF91c2VGZXRjaGVyID0gKDAsIF91c2VGZXRjaGVyMi51c2VGZXRjaGVyKShmdW5jdGlvbiAoY2FsbEFwbUFwaSkgewogICAgaWYgKHN0YXJ0ICYmIGVuZCAmJiBzZXJ2aWNlTmFtZSkgewogICAgICByZXR1cm4gY2FsbEFwbUFwaSh7CiAgICAgICAgcGF0aG5hbWU6ICcvYXBpL2FwbS9zZXJ2aWNlcy97c2VydmljZU5hbWV9L2Fubm90YXRpb25zJywKICAgICAgICBwYXJhbXM6IHsKICAgICAgICAgIHBhdGg6IHsKICAgICAgICAgICAgc2VydmljZU5hbWU6IHNlcnZpY2VOYW1lCiAgICAgICAgICB9LAogICAgICAgICAgcXVlcnk6IHsKICAgICAgICAgICAgc3RhcnQ6IHN0YXJ0LAogICAgICAgICAgICBlbmQ6IGVuZCwKICAgICAgICAgICAgZW52aXJvbm1lbnQ6IGVudmlyb25tZW50CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9KTsKICAgIH0KICB9LCBbc3RhcnQsIGVuZCwgZW52aXJvbm1lbnQsIHNlcnZpY2VOYW1lXSksCiAgICAgIF91c2VGZXRjaGVyJGRhdGEgPSBfdXNlRmV0Y2hlci5kYXRhLAogICAgICBkYXRhID0gX3VzZUZldGNoZXIkZGF0YSA9PT0gdm9pZCAwID8gewogICAgYW5ub3RhdGlvbnM6IFtdCiAgfSA6IF91c2VGZXRjaGVyJGRhdGE7CgogIHZhciB2YWx1ZSA9ICgwLCBfcmVhY3QudXNlTWVtbykoZnVuY3Rpb24gKCkgewogICAgdmFyIGhvdmVyWEhhbmRsZXJzID0gewogICAgICBvbkhvdmVyOiBmdW5jdGlvbiBvbkhvdmVyKGhvdmVyWCkgewogICAgICAgIHNldFRpbWUoaG92ZXJYKTsKICAgICAgfSwKICAgICAgb25Nb3VzZUxlYXZlOiBmdW5jdGlvbiBvbk1vdXNlTGVhdmUoKSB7CiAgICAgICAgc2V0VGltZShudWxsKTsKICAgICAgfSwKICAgICAgb25TZWxlY3Rpb25FbmQ6IGZ1bmN0aW9uIG9uU2VsZWN0aW9uRW5kKHJhbmdlKSB7CiAgICAgICAgc2V0VGltZShudWxsKTsKICAgICAgICB2YXIgY3VycmVudFNlYXJjaCA9ICgwLCBfdXJsX2hlbHBlcnMudG9RdWVyeSkoX2hpc3RvcnkuaGlzdG9yeS5sb2NhdGlvbi5zZWFyY2gpOwogICAgICAgIHZhciBuZXh0U2VhcmNoID0gewogICAgICAgICAgcmFuZ2VGcm9tOiBuZXcgRGF0ZShyYW5nZS5zdGFydCkudG9JU09TdHJpbmcoKSwKICAgICAgICAgIHJhbmdlVG86IG5ldyBEYXRlKHJhbmdlLmVuZCkudG9JU09TdHJpbmcoKQogICAgICAgIH07CgogICAgICAgIF9oaXN0b3J5Lmhpc3RvcnkucHVzaChfb2JqZWN0U3ByZWFkKHt9LCBfaGlzdG9yeS5oaXN0b3J5LmxvY2F0aW9uLCB7CiAgICAgICAgICBzZWFyY2g6ICgwLCBfdXJsX2hlbHBlcnMuZnJvbVF1ZXJ5KShfb2JqZWN0U3ByZWFkKHt9LCBjdXJyZW50U2VhcmNoLCB7fSwgbmV4dFNlYXJjaCkpCiAgICAgICAgfSkpOwogICAgICB9LAogICAgICBob3Zlclg6IHRpbWUsCiAgICAgIGFubm90YXRpb25zOiBkYXRhLmFubm90YXRpb25zCiAgICB9OwogICAgcmV0dXJuIF9vYmplY3RTcHJlYWQoe30sIGhvdmVyWEhhbmRsZXJzKTsKICB9LCBbdGltZSwgZGF0YS5hbm5vdGF0aW9uc10pOwogIHJldHVybiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KENoYXJ0c1N5bmNDb250ZXh0LlByb3ZpZGVyLCB7CiAgICB2YWx1ZTogdmFsdWUsCiAgICBjaGlsZHJlbjogY2hpbGRyZW4KICB9KTsKfTsKCmV4cG9ydHMuQ2hhcnRzU3luY0NvbnRleHRQcm92aWRlciA9IENoYXJ0c1N5bmNDb250ZXh0UHJvdmlkZXI7"},null]}