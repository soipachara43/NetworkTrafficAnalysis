{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/siem/public/pages/case/components/use_push_to_service/helpers.js","dependencies":[{"path":"x-pack/legacy/plugins/siem/public/pages/case/components/use_push_to_service/helpers.js","mtime":1589249553276},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmdldEFjdGlvbkxpY2Vuc2VFcnJvciA9IGV4cG9ydHMuZ2V0S2liYW5hQ29uZmlnRXJyb3IgPSBleHBvcnRzLmdldExpY2Vuc2VFcnJvciA9IHZvaWQgMDsKCnZhciBfZXVpID0gcmVxdWlyZSgiQGVsYXN0aWMvZXVpIik7Cgp2YXIgX3JlYWN0ID0gcmVxdWlyZSgiQGtibi9pMThuL3JlYWN0Iik7Cgp2YXIgX3JlYWN0MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgicmVhY3QiKSk7Cgp2YXIgaTE4biA9IF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKHJlcXVpcmUoIi4vdHJhbnNsYXRpb25zIikpOwoKZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQob2JqKSB7CiAgaWYgKG9iaiAmJiBvYmouX19lc01vZHVsZSkgewogICAgcmV0dXJuIG9iajsKICB9IGVsc2UgewogICAgdmFyIG5ld09iaiA9IHt9OwoKICAgIGlmIChvYmogIT0gbnVsbCkgewogICAgICBmb3IgKHZhciBrZXkgaW4gb2JqKSB7CiAgICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGtleSkpIHsKICAgICAgICAgIHZhciBkZXNjID0gT2JqZWN0LmRlZmluZVByb3BlcnR5ICYmIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IgPyBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iaiwga2V5KSA6IHt9OwoKICAgICAgICAgIGlmIChkZXNjLmdldCB8fCBkZXNjLnNldCkgewogICAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobmV3T2JqLCBrZXksIGRlc2MpOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgbmV3T2JqW2tleV0gPSBvYmpba2V5XTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgIH0KCiAgICBuZXdPYmouZGVmYXVsdCA9IG9iajsKICAgIHJldHVybiBuZXdPYmo7CiAgfQp9CgpmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgewogIHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7CiAgICBkZWZhdWx0OiBvYmoKICB9Owp9CgpmdW5jdGlvbiBfdG9Db25zdW1hYmxlQXJyYXkoYXJyKSB7CiAgcmV0dXJuIF9hcnJheVdpdGhvdXRIb2xlcyhhcnIpIHx8IF9pdGVyYWJsZVRvQXJyYXkoYXJyKSB8fCBfbm9uSXRlcmFibGVTcHJlYWQoKTsKfQoKZnVuY3Rpb24gX25vbkl0ZXJhYmxlU3ByZWFkKCkgewogIHRocm93IG5ldyBUeXBlRXJyb3IoIkludmFsaWQgYXR0ZW1wdCB0byBzcHJlYWQgbm9uLWl0ZXJhYmxlIGluc3RhbmNlIik7Cn0KCmZ1bmN0aW9uIF9pdGVyYWJsZVRvQXJyYXkoaXRlcikgewogIGlmIChTeW1ib2wuaXRlcmF0b3IgaW4gT2JqZWN0KGl0ZXIpIHx8IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChpdGVyKSA9PT0gIltvYmplY3QgQXJndW1lbnRzXSIpIHJldHVybiBBcnJheS5mcm9tKGl0ZXIpOwp9CgpmdW5jdGlvbiBfYXJyYXlXaXRob3V0SG9sZXMoYXJyKSB7CiAgaWYgKEFycmF5LmlzQXJyYXkoYXJyKSkgewogICAgZm9yICh2YXIgaSA9IDAsIGFycjIgPSBuZXcgQXJyYXkoYXJyLmxlbmd0aCk7IGkgPCBhcnIubGVuZ3RoOyBpKyspIHsKICAgICAgYXJyMltpXSA9IGFycltpXTsKICAgIH0KCiAgICByZXR1cm4gYXJyMjsKICB9Cn0KCnZhciBnZXRMaWNlbnNlRXJyb3IgPSBmdW5jdGlvbiBnZXRMaWNlbnNlRXJyb3IoKSB7CiAgcmV0dXJuIHsKICAgIHRpdGxlOiBpMThuLlBVU0hfRElTQUJMRV9CWV9MSUNFTlNFX1RJVExFLAogICAgZGVzY3JpcHRpb246IF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9yZWFjdC5Gb3JtYXR0ZWRNZXNzYWdlLCB7CiAgICAgIGRlZmF1bHRNZXNzYWdlOiAiVG8gb3BlbiBjYXNlcyBpbiBleHRlcm5hbCBzeXN0ZW1zLCB5b3UgbXVzdCB1cGRhdGUgeW91ciBsaWNlbnNlIHRvIFBsYXRpbnVtLCBzdGFydCBhIGZyZWUgMzAtZGF5IHRyaWFsLCBvciBzcGluIHVwIGEge2xpbmt9IG9uIEFXUywgR0NQLCBvciBBenVyZS4iLAogICAgICBpZDogInhwYWNrLnNpZW0uY2FzZS5jYXNlVmlldy5wdXNoVG9TZXJ2aWNlRGlzYWJsZUJ5TGljZW5zZURlc2NyaXB0aW9uIiwKICAgICAgdmFsdWVzOiB7CiAgICAgICAgbGluazogX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlMaW5rLCB7CiAgICAgICAgICBocmVmOiAiaHR0cHM6Ly93d3cuZWxhc3RpYy5jby9jbG91ZC8iLAogICAgICAgICAgdGFyZ2V0OiAiX2JsYW5rIgogICAgICAgIH0sIGkxOG4uTElOS19DTE9VRF9ERVBMT1lNRU5UKQogICAgICB9CiAgICB9KQogIH07Cn07CgpleHBvcnRzLmdldExpY2Vuc2VFcnJvciA9IGdldExpY2Vuc2VFcnJvcjsKCnZhciBnZXRLaWJhbmFDb25maWdFcnJvciA9IGZ1bmN0aW9uIGdldEtpYmFuYUNvbmZpZ0Vycm9yKCkgewogIHJldHVybiB7CiAgICB0aXRsZTogaTE4bi5QVVNIX0RJU0FCTEVfQllfS0lCQU5BX0NPTkZJR19USVRMRSwKICAgIGRlc2NyaXB0aW9uOiBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChfcmVhY3QuRm9ybWF0dGVkTWVzc2FnZSwgewogICAgICBkZWZhdWx0TWVzc2FnZTogIlRoZSBraWJhbmEueW1sIGZpbGUgaXMgY29uZmlndXJlZCB0byBvbmx5IGFsbG93IHNwZWNpZmljIGNvbm5lY3RvcnMuIFRvIGVuYWJsZSBvcGVuaW5nIGEgY2FzZSBpbiBleHRlcm5hbCBzeXN0ZW1zLCBhZGQgLnNlcnZpY2Vub3cgdG8gdGhlIHhwYWNrLmFjdGlvbnMuZW5hYmxlZEFjdGlvbnR5cGVzIHNldHRpbmcuIEZvciBtb3JlIGluZm9ybWF0aW9uLCBzZWUge2xpbmt9LiIsCiAgICAgIGlkOiAieHBhY2suc2llbS5jYXNlLmNhc2VWaWV3LnB1c2hUb1NlcnZpY2VEaXNhYmxlQnlDb25maWdEZXNjcmlwdGlvbiIsCiAgICAgIHZhbHVlczogewogICAgICAgIGxpbms6IF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpTGluaywgewogICAgICAgICAgaHJlZjogIiMiLAogICAgICAgICAgdGFyZ2V0OiAiX2JsYW5rIgogICAgICAgIH0sICdjb21pbmcgc29vbi4uLicpCiAgICAgIH0KICAgIH0pCiAgfTsKfTsKCmV4cG9ydHMuZ2V0S2liYW5hQ29uZmlnRXJyb3IgPSBnZXRLaWJhbmFDb25maWdFcnJvcjsKCnZhciBnZXRBY3Rpb25MaWNlbnNlRXJyb3IgPSBmdW5jdGlvbiBnZXRBY3Rpb25MaWNlbnNlRXJyb3IoYWN0aW9uTGljZW5zZSkgewogIHZhciBlcnJvcnMgPSBbXTsKCiAgaWYgKGFjdGlvbkxpY2Vuc2UgIT0gbnVsbCAmJiAhYWN0aW9uTGljZW5zZS5lbmFibGVkSW5MaWNlbnNlKSB7CiAgICBlcnJvcnMgPSBbXS5jb25jYXQoX3RvQ29uc3VtYWJsZUFycmF5KGVycm9ycyksIFtnZXRMaWNlbnNlRXJyb3IoKV0pOwogIH0KCiAgaWYgKGFjdGlvbkxpY2Vuc2UgIT0gbnVsbCAmJiAhYWN0aW9uTGljZW5zZS5lbmFibGVkSW5Db25maWcpIHsKICAgIGVycm9ycyA9IFtdLmNvbmNhdChfdG9Db25zdW1hYmxlQXJyYXkoZXJyb3JzKSwgW2dldEtpYmFuYUNvbmZpZ0Vycm9yKCldKTsKICB9CgogIHJldHVybiBlcnJvcnM7Cn07CgpleHBvcnRzLmdldEFjdGlvbkxpY2Vuc2VFcnJvciA9IGdldEFjdGlvbkxpY2Vuc2VFcnJvcjs="},null]}