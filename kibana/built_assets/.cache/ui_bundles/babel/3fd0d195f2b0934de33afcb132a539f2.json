{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/monitoring/public/views/kibana/overview/index.js","dependencies":[{"path":"x-pack/legacy/plugins/monitoring/public/views/kibana/overview/index.js","mtime":1589249552628},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9yZWFjdCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgicmVhY3QiKSk7Cgp2YXIgX3JvdXRlcyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgicGx1Z2lucy9tb25pdG9yaW5nL25wX2ltcG9ydHMvdWkvcm91dGVzIikpOwoKdmFyIF9jaGFydCA9IHJlcXVpcmUoIi4uLy4uLy4uL2NvbXBvbmVudHMvY2hhcnQiKTsKCnZhciBfYWpheF9lcnJvcl9oYW5kbGVyID0gcmVxdWlyZSgicGx1Z2lucy9tb25pdG9yaW5nL2xpYi9hamF4X2Vycm9yX2hhbmRsZXIiKTsKCnZhciBfcm91dGVfaW5pdCA9IHJlcXVpcmUoInBsdWdpbnMvbW9uaXRvcmluZy9saWIvcm91dGVfaW5pdCIpOwoKdmFyIF9pbmRleCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgiLi9pbmRleC5odG1sIikpOwoKdmFyIF90aW1lZmlsdGVyID0gcmVxdWlyZSgicGx1Z2lucy9tb25pdG9yaW5nL25wX2ltcG9ydHMvdWkvdGltZWZpbHRlciIpOwoKdmFyIF9ldWkgPSByZXF1aXJlKCJAZWxhc3RpYy9ldWkiKTsKCnZhciBfY2x1c3Rlcl9zdGF0dXMgPSByZXF1aXJlKCIuLi8uLi8uLi9jb21wb25lbnRzL2tpYmFuYS9jbHVzdGVyX3N0YXR1cyIpOwoKdmFyIF9pMThuID0gcmVxdWlyZSgidWkvaTE4biIpOwoKdmFyIF9iYXNlX2NvbnRyb2xsZXIgPSByZXF1aXJlKCIuLi8uLi9iYXNlX2NvbnRyb2xsZXIiKTsKCnZhciBfY29uc3RhbnRzID0gcmVxdWlyZSgiLi4vLi4vLi4vLi4vY29tbW9uL2NvbnN0YW50cyIpOwoKZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH0KCmZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IGlmICh0eXBlb2YgU3ltYm9sID09PSAiZnVuY3Rpb24iICYmIHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPT09ICJzeW1ib2wiKSB7IF90eXBlb2YgPSBmdW5jdGlvbiBfdHlwZW9mKG9iaikgeyByZXR1cm4gdHlwZW9mIG9iajsgfTsgfSBlbHNlIHsgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gImZ1bmN0aW9uIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyAic3ltYm9sIiA6IHR5cGVvZiBvYmo7IH07IH0gcmV0dXJuIF90eXBlb2Yob2JqKTsgfQoKZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb24iKTsgfSB9CgpmdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmIChjYWxsICYmIChfdHlwZW9mKGNhbGwpID09PSAib2JqZWN0IiB8fCB0eXBlb2YgY2FsbCA9PT0gImZ1bmN0aW9uIikpIHsgcmV0dXJuIGNhbGw7IH0gcmV0dXJuIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZik7IH0KCmZ1bmN0aW9uIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZikgeyBpZiAoc2VsZiA9PT0gdm9pZCAwKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcigidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkIik7IH0gcmV0dXJuIHNlbGY7IH0KCmZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7IF9nZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5nZXRQcm90b3R5cGVPZiA6IGZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7IHJldHVybiBvLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2Yobyk7IH07IHJldHVybiBfZ2V0UHJvdG90eXBlT2Yobyk7IH0KCmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09ICJmdW5jdGlvbiIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiIpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIF9zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcyk7IH0KCmZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7IF9zZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fCBmdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkgeyBvLl9fcHJvdG9fXyA9IHA7IHJldHVybiBvOyB9OyByZXR1cm4gX3NldFByb3RvdHlwZU9mKG8sIHApOyB9CgpmdW5jdGlvbiBnZXRQYWdlRGF0YSgkaW5qZWN0b3IpIHsKICB2YXIgJGh0dHAgPSAkaW5qZWN0b3IuZ2V0KCckaHR0cCcpOwogIHZhciBnbG9iYWxTdGF0ZSA9ICRpbmplY3Rvci5nZXQoJ2dsb2JhbFN0YXRlJyk7CiAgdmFyIHVybCA9ICIuLi9hcGkvbW9uaXRvcmluZy92MS9jbHVzdGVycy8iLmNvbmNhdChnbG9iYWxTdGF0ZS5jbHVzdGVyX3V1aWQsICIva2liYW5hIik7CgogIHZhciB0aW1lQm91bmRzID0gX3RpbWVmaWx0ZXIudGltZWZpbHRlci5nZXRCb3VuZHMoKTsKCiAgcmV0dXJuICRodHRwLnBvc3QodXJsLCB7CiAgICBjY3M6IGdsb2JhbFN0YXRlLmNjcywKICAgIHRpbWVSYW5nZTogewogICAgICBtaW46IHRpbWVCb3VuZHMubWluLnRvSVNPU3RyaW5nKCksCiAgICAgIG1heDogdGltZUJvdW5kcy5tYXgudG9JU09TdHJpbmcoKQogICAgfQogIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICByZXR1cm4gcmVzcG9uc2UuZGF0YTsKICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyKSB7CiAgICB2YXIgUHJpdmF0ZSA9ICRpbmplY3Rvci5nZXQoJ1ByaXZhdGUnKTsKICAgIHZhciBhamF4RXJyb3JIYW5kbGVycyA9IFByaXZhdGUoX2FqYXhfZXJyb3JfaGFuZGxlci5hamF4RXJyb3JIYW5kbGVyc1Byb3ZpZGVyKTsKICAgIHJldHVybiBhamF4RXJyb3JIYW5kbGVycyhlcnIpOwogIH0pOwp9Cgpfcm91dGVzLmRlZmF1bHQud2hlbignL2tpYmFuYScsIHsKICB0ZW1wbGF0ZTogX2luZGV4LmRlZmF1bHQsCiAgcmVzb2x2ZTogewogICAgY2x1c3RlcnM6IGZ1bmN0aW9uIGNsdXN0ZXJzKFByaXZhdGUpIHsKICAgICAgdmFyIHJvdXRlSW5pdCA9IFByaXZhdGUoX3JvdXRlX2luaXQucm91dGVJbml0UHJvdmlkZXIpOwogICAgICByZXR1cm4gcm91dGVJbml0KHsKICAgICAgICBjb2RlUGF0aHM6IFtfY29uc3RhbnRzLkNPREVfUEFUSF9LSUJBTkFdCiAgICAgIH0pOwogICAgfSwKICAgIHBhZ2VEYXRhOiBnZXRQYWdlRGF0YQogIH0sCiAgY29udHJvbGxlckFzOiAnbW9uaXRvcmluZ0tpYmFuYU92ZXJ2aWV3QXBwJywKICBjb250cm9sbGVyOgogIC8qI19fUFVSRV9fKi8KICBmdW5jdGlvbiAoX01vbml0b3JpbmdWaWV3QmFzZUNvKSB7CiAgICBfaW5oZXJpdHMoY29udHJvbGxlciwgX01vbml0b3JpbmdWaWV3QmFzZUNvKTsKCiAgICBmdW5jdGlvbiBjb250cm9sbGVyKCRpbmplY3RvciwgJHNjb3BlKSB7CiAgICAgIHZhciBfdGhpczsKCiAgICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBjb250cm9sbGVyKTsKCiAgICAgIF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgX2dldFByb3RvdHlwZU9mKGNvbnRyb2xsZXIpLmNhbGwodGhpcywgewogICAgICAgIHRpdGxlOiAiS2liYW5hIiwKICAgICAgICBkZWZhdWx0RGF0YToge30sCiAgICAgICAgZ2V0UGFnZURhdGE6IGdldFBhZ2VEYXRhLAogICAgICAgIHJlYWN0Tm9kZUlkOiAnbW9uaXRvcmluZ0tpYmFuYU92ZXJ2aWV3QXBwJywKICAgICAgICAkc2NvcGU6ICRzY29wZSwKICAgICAgICAkaW5qZWN0b3I6ICRpbmplY3RvcgogICAgICB9KSk7CiAgICAgICRzY29wZS4kd2F0Y2goZnVuY3Rpb24gKCkgewogICAgICAgIHJldHVybiBfdGhpcy5kYXRhOwogICAgICB9LCBmdW5jdGlvbiAoZGF0YSkgewogICAgICAgIGlmICghZGF0YSB8fCAhZGF0YS5jbHVzdGVyU3RhdHVzKSB7CiAgICAgICAgICByZXR1cm47CiAgICAgICAgfQoKICAgICAgICBfdGhpcy5yZW5kZXJSZWFjdChfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9pMThuLkkxOG5Db250ZXh0LCBudWxsLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpUGFnZSwgbnVsbCwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aVBhZ2VCb2R5LCBudWxsLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpUGFuZWwsIG51bGwsIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2NsdXN0ZXJfc3RhdHVzLkNsdXN0ZXJTdGF0dXMsIHsKICAgICAgICAgIHN0YXRzOiBkYXRhLmNsdXN0ZXJTdGF0dXMKICAgICAgICB9KSksIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlTcGFjZXIsIHsKICAgICAgICAgIHNpemU6ICJtIgogICAgICAgIH0pLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpUGFnZUNvbnRlbnQsIG51bGwsIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlGbGV4R3JvdXAsIG51bGwsIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlGbGV4SXRlbSwgewogICAgICAgICAgZ3JvdzogdHJ1ZQogICAgICAgIH0sIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2NoYXJ0Lk1vbml0b3JpbmdUaW1lc2VyaWVzQ29udGFpbmVyLCB7CiAgICAgICAgICBzZXJpZXM6IGRhdGEubWV0cmljcy5raWJhbmFfY2x1c3Rlcl9yZXF1ZXN0cywKICAgICAgICAgIG9uQnJ1c2g6IF90aGlzLm9uQnJ1c2gsCiAgICAgICAgICB6b29tSW5mbzogX3RoaXMuem9vbUluZm8KICAgICAgICB9KSksIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlGbGV4SXRlbSwgewogICAgICAgICAgZ3JvdzogdHJ1ZQogICAgICAgIH0sIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2NoYXJ0Lk1vbml0b3JpbmdUaW1lc2VyaWVzQ29udGFpbmVyLCB7CiAgICAgICAgICBzZXJpZXM6IGRhdGEubWV0cmljcy5raWJhbmFfY2x1c3Rlcl9yZXNwb25zZV90aW1lcywKICAgICAgICAgIG9uQnJ1c2g6IF90aGlzLm9uQnJ1c2gsCiAgICAgICAgICB6b29tSW5mbzogX3RoaXMuem9vbUluZm8KICAgICAgICB9KSkpKSkpKSk7CiAgICAgIH0pOwogICAgICByZXR1cm4gX3RoaXM7CiAgICB9CgogICAgcmV0dXJuIGNvbnRyb2xsZXI7CiAgfShfYmFzZV9jb250cm9sbGVyLk1vbml0b3JpbmdWaWV3QmFzZUNvbnRyb2xsZXIpCn0pOw=="},null]}