{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/plugins/index_management/public/application/components/mappings_editor/components/document_fields/fields/delete_field_provider.js","dependencies":[{"path":"x-pack/plugins/index_management/public/application/components/mappings_editor/components/document_fields/fields/delete_field_provider.js","mtime":1589249554104},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLkRlbGV0ZUZpZWxkUHJvdmlkZXIgPSB2b2lkIDA7Cgp2YXIgX3JlYWN0ID0gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQocmVxdWlyZSgicmVhY3QiKSk7Cgp2YXIgX2kxOG4gPSByZXF1aXJlKCJAa2JuL2kxOG4iKTsKCnZhciBfbWFwcGluZ3Nfc3RhdGUgPSByZXF1aXJlKCIuLi8uLi8uLi9tYXBwaW5nc19zdGF0ZSIpOwoKdmFyIF9saWIgPSByZXF1aXJlKCIuLi8uLi8uLi9saWIiKTsKCnZhciBfbW9kYWxfY29uZmlybWF0aW9uX2RlbGV0ZV9maWVsZHMgPSByZXF1aXJlKCIuL21vZGFsX2NvbmZpcm1hdGlvbl9kZWxldGVfZmllbGRzIik7CgpmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChvYmopIHsKICBpZiAob2JqICYmIG9iai5fX2VzTW9kdWxlKSB7CiAgICByZXR1cm4gb2JqOwogIH0gZWxzZSB7CiAgICB2YXIgbmV3T2JqID0ge307CgogICAgaWYgKG9iaiAhPSBudWxsKSB7CiAgICAgIGZvciAodmFyIGtleSBpbiBvYmopIHsKICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwga2V5KSkgewogICAgICAgICAgdmFyIGRlc2MgPSBPYmplY3QuZGVmaW5lUHJvcGVydHkgJiYgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvciA/IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqLCBrZXkpIDoge307CgogICAgICAgICAgaWYgKGRlc2MuZ2V0IHx8IGRlc2Muc2V0KSB7CiAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShuZXdPYmosIGtleSwgZGVzYyk7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBuZXdPYmpba2V5XSA9IG9ialtrZXldOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfQoKICAgIG5ld09iai5kZWZhdWx0ID0gb2JqOwogICAgcmV0dXJuIG5ld09iajsKICB9Cn0KCmZ1bmN0aW9uIF9zbGljZWRUb0FycmF5KGFyciwgaSkgewogIHJldHVybiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB8fCBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB8fCBfbm9uSXRlcmFibGVSZXN0KCk7Cn0KCmZ1bmN0aW9uIF9ub25JdGVyYWJsZVJlc3QoKSB7CiAgdGhyb3cgbmV3IFR5cGVFcnJvcigiSW52YWxpZCBhdHRlbXB0IHRvIGRlc3RydWN0dXJlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZSIpOwp9CgpmdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB7CiAgdmFyIF9hcnIgPSBbXTsKICB2YXIgX24gPSB0cnVlOwogIHZhciBfZCA9IGZhbHNlOwogIHZhciBfZSA9IHVuZGVmaW5lZDsKCiAgdHJ5IHsKICAgIGZvciAodmFyIF9pID0gYXJyW1N5bWJvbC5pdGVyYXRvcl0oKSwgX3M7ICEoX24gPSAoX3MgPSBfaS5uZXh0KCkpLmRvbmUpOyBfbiA9IHRydWUpIHsKICAgICAgX2Fyci5wdXNoKF9zLnZhbHVlKTsKCiAgICAgIGlmIChpICYmIF9hcnIubGVuZ3RoID09PSBpKSBicmVhazsKICAgIH0KICB9IGNhdGNoIChlcnIpIHsKICAgIF9kID0gdHJ1ZTsKICAgIF9lID0gZXJyOwogIH0gZmluYWxseSB7CiAgICB0cnkgewogICAgICBpZiAoIV9uICYmIF9pWyJyZXR1cm4iXSAhPSBudWxsKSBfaVsicmV0dXJuIl0oKTsKICAgIH0gZmluYWxseSB7CiAgICAgIGlmIChfZCkgdGhyb3cgX2U7CiAgICB9CiAgfQoKICByZXR1cm4gX2FycjsKfQoKZnVuY3Rpb24gX2FycmF5V2l0aEhvbGVzKGFycikgewogIGlmIChBcnJheS5pc0FycmF5KGFycikpIHJldHVybiBhcnI7Cn0KCnZhciBEZWxldGVGaWVsZFByb3ZpZGVyID0gZnVuY3Rpb24gRGVsZXRlRmllbGRQcm92aWRlcihfcmVmKSB7CiAgdmFyIGNoaWxkcmVuID0gX3JlZi5jaGlsZHJlbjsKCiAgdmFyIF91c2VTdGF0ZSA9ICgwLCBfcmVhY3QudXNlU3RhdGUpKHsKICAgIGlzTW9kYWxPcGVuOiBmYWxzZQogIH0pLAogICAgICBfdXNlU3RhdGUyID0gX3NsaWNlZFRvQXJyYXkoX3VzZVN0YXRlLCAyKSwKICAgICAgc3RhdGUgPSBfdXNlU3RhdGUyWzBdLAogICAgICBzZXRTdGF0ZSA9IF91c2VTdGF0ZTJbMV07CgogIHZhciBkaXNwYXRjaCA9ICgwLCBfbWFwcGluZ3Nfc3RhdGUudXNlRGlzcGF0Y2gpKCk7CgogIHZhciBfdXNlTWFwcGluZ3NTdGF0ZSA9ICgwLCBfbWFwcGluZ3Nfc3RhdGUudXNlTWFwcGluZ3NTdGF0ZSkoKSwKICAgICAgZmllbGRzID0gX3VzZU1hcHBpbmdzU3RhdGUuZmllbGRzOwoKICB2YXIgYnlJZCA9IGZpZWxkcy5ieUlkOwoKICB2YXIgY29uZmlybUJ1dHRvblRleHQgPSBfaTE4bi5pMThuLnRyYW5zbGF0ZSgneHBhY2suaWR4TWdtdC5tYXBwaW5nc0VkaXRvci5kZWxldGVGaWVsZC5jb25maXJtYXRpb25Nb2RhbC5yZW1vdmVCdXR0b25MYWJlbCcsIHsKICAgIGRlZmF1bHRNZXNzYWdlOiAnUmVtb3ZlJwogIH0pOwoKICB2YXIgbW9kYWxUaXRsZTsKCiAgaWYgKHN0YXRlLmZpZWxkKSB7CiAgICB2YXIgX3N0YXRlJGZpZWxkID0gc3RhdGUuZmllbGQsCiAgICAgICAgaXNNdWx0aUZpZWxkID0gX3N0YXRlJGZpZWxkLmlzTXVsdGlGaWVsZCwKICAgICAgICBzb3VyY2UgPSBfc3RhdGUkZmllbGQuc291cmNlOwogICAgbW9kYWxUaXRsZSA9IF9pMThuLmkxOG4udHJhbnNsYXRlKCd4cGFjay5pZHhNZ210Lm1hcHBpbmdzRWRpdG9yLmRlbGV0ZUZpZWxkLmNvbmZpcm1hdGlvbk1vZGFsLnRpdGxlJywgewogICAgICBkZWZhdWx0TWVzc2FnZTogIlJlbW92ZSB7ZmllbGRUeXBlfSAne2ZpZWxkTmFtZX0nPyIsCiAgICAgIHZhbHVlczogewogICAgICAgIGZpZWxkVHlwZTogaXNNdWx0aUZpZWxkID8gJ211bHRpLWZpZWxkJyA6ICdmaWVsZCcsCiAgICAgICAgZmllbGROYW1lOiBzb3VyY2UubmFtZQogICAgICB9CiAgICB9KTsKICB9CgogIHZhciBkZWxldGVGaWVsZCA9IGZ1bmN0aW9uIGRlbGV0ZUZpZWxkKGZpZWxkKSB7CiAgICB2YXIgYWxpYXNlcyA9ICgwLCBfbGliLmdldEFsbERlc2NlbmRhbnRBbGlhc2VzKShmaWVsZCwgZmllbGRzKS5tYXAoZnVuY3Rpb24gKGlkKSB7CiAgICAgIHJldHVybiBieUlkW2lkXS5wYXRoLmpvaW4oJyA+ICcpOwogICAgfSkuc29ydCgpOwogICAgdmFyIGhhc0FsaWFzZXMgPSBCb29sZWFuKGFsaWFzZXMubGVuZ3RoKTsKICAgIHNldFN0YXRlKHsKICAgICAgaXNNb2RhbE9wZW46IHRydWUsCiAgICAgIGZpZWxkOiBmaWVsZCwKICAgICAgYWxpYXNlczogaGFzQWxpYXNlcyA/IGFsaWFzZXMgOiB1bmRlZmluZWQKICAgIH0pOwogIH07CgogIHZhciBjbG9zZU1vZGFsID0gZnVuY3Rpb24gY2xvc2VNb2RhbCgpIHsKICAgIHNldFN0YXRlKHsKICAgICAgaXNNb2RhbE9wZW46IGZhbHNlCiAgICB9KTsKICB9OwoKICB2YXIgY29uZmlybURlbGV0ZSA9IGZ1bmN0aW9uIGNvbmZpcm1EZWxldGUoKSB7CiAgICBkaXNwYXRjaCh7CiAgICAgIHR5cGU6ICdmaWVsZC5yZW1vdmUnLAogICAgICB2YWx1ZTogc3RhdGUuZmllbGQuaWQKICAgIH0pOwogICAgY2xvc2VNb2RhbCgpOwogIH07CgogIHJldHVybiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9yZWFjdC5kZWZhdWx0LkZyYWdtZW50LCBudWxsLCBjaGlsZHJlbihkZWxldGVGaWVsZCksIHN0YXRlLmlzTW9kYWxPcGVuICYmIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX21vZGFsX2NvbmZpcm1hdGlvbl9kZWxldGVfZmllbGRzLk1vZGFsQ29uZmlybWF0aW9uRGVsZXRlRmllbGRzLCB7CiAgICB0aXRsZTogbW9kYWxUaXRsZSwKICAgIGNoaWxkRmllbGRzOiBzdGF0ZS5maWVsZCAmJiBzdGF0ZS5maWVsZC5jaGlsZEZpZWxkcywKICAgIGFsaWFzZXM6IHN0YXRlLmFsaWFzZXMsCiAgICBieUlkOiBieUlkLAogICAgY29uZmlybUJ1dHRvblRleHQ6IGNvbmZpcm1CdXR0b25UZXh0LAogICAgb25Db25maXJtOiBjb25maXJtRGVsZXRlLAogICAgb25DYW5jZWw6IGNsb3NlTW9kYWwKICB9KSk7Cn07CgpleHBvcnRzLkRlbGV0ZUZpZWxkUHJvdmlkZXIgPSBEZWxldGVGaWVsZFByb3ZpZGVyOw=="},null]}