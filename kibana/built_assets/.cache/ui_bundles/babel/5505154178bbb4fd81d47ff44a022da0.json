{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/siem/public/containers/timeline/all/api.js","dependencies":[{"path":"x-pack/legacy/plugins/siem/public/containers/timeline/all/api.js","mtime":1589249553240},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmV4cG9ydFNlbGVjdGVkVGltZWxpbmUgPSBleHBvcnRzLmltcG9ydFRpbWVsaW5lcyA9IHZvaWQgMDsKCnZhciBfa2liYW5hID0gcmVxdWlyZSgiLi4vLi4vLi4vbGliL2tpYmFuYSIpOwoKdmFyIF9jb25zdGFudHMgPSByZXF1aXJlKCIuLi8uLi8uLi8uLi9jb21tb24vY29uc3RhbnRzIik7CgpmdW5jdGlvbiBhc3luY0dlbmVyYXRvclN0ZXAoZ2VuLCByZXNvbHZlLCByZWplY3QsIF9uZXh0LCBfdGhyb3csIGtleSwgYXJnKSB7CiAgdHJ5IHsKICAgIHZhciBpbmZvID0gZ2VuW2tleV0oYXJnKTsKICAgIHZhciB2YWx1ZSA9IGluZm8udmFsdWU7CiAgfSBjYXRjaCAoZXJyb3IpIHsKICAgIHJlamVjdChlcnJvcik7CiAgICByZXR1cm47CiAgfQoKICBpZiAoaW5mby5kb25lKSB7CiAgICByZXNvbHZlKHZhbHVlKTsKICB9IGVsc2UgewogICAgUHJvbWlzZS5yZXNvbHZlKHZhbHVlKS50aGVuKF9uZXh0LCBfdGhyb3cpOwogIH0KfQoKZnVuY3Rpb24gX2FzeW5jVG9HZW5lcmF0b3IoZm4pIHsKICByZXR1cm4gZnVuY3Rpb24gKCkgewogICAgdmFyIHNlbGYgPSB0aGlzLAogICAgICAgIGFyZ3MgPSBhcmd1bWVudHM7CiAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgICB2YXIgZ2VuID0gZm4uYXBwbHkoc2VsZiwgYXJncyk7CgogICAgICBmdW5jdGlvbiBfbmV4dCh2YWx1ZSkgewogICAgICAgIGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywgIm5leHQiLCB2YWx1ZSk7CiAgICAgIH0KCiAgICAgIGZ1bmN0aW9uIF90aHJvdyhlcnIpIHsKICAgICAgICBhc3luY0dlbmVyYXRvclN0ZXAoZ2VuLCByZXNvbHZlLCByZWplY3QsIF9uZXh0LCBfdGhyb3csICJ0aHJvdyIsIGVycik7CiAgICAgIH0KCiAgICAgIF9uZXh0KHVuZGVmaW5lZCk7CiAgICB9KTsKICB9Owp9Cgp2YXIgaW1wb3J0VGltZWxpbmVzID0KLyojX19QVVJFX18qLwpmdW5jdGlvbiAoKSB7CiAgdmFyIF9yZWYgPSBfYXN5bmNUb0dlbmVyYXRvcigKICAvKiNfX1BVUkVfXyovCiAgcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShfcmVmMikgewogICAgdmFyIGZpbGVUb0ltcG9ydCwgX3JlZjIkb3ZlcndyaXRlLCBvdmVyd3JpdGUsIHNpZ25hbCwgZm9ybURhdGE7CgogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBmaWxlVG9JbXBvcnQgPSBfcmVmMi5maWxlVG9JbXBvcnQsIF9yZWYyJG92ZXJ3cml0ZSA9IF9yZWYyLm92ZXJ3cml0ZSwgb3ZlcndyaXRlID0gX3JlZjIkb3ZlcndyaXRlID09PSB2b2lkIDAgPyBmYWxzZSA6IF9yZWYyJG92ZXJ3cml0ZSwgc2lnbmFsID0gX3JlZjIuc2lnbmFsOwogICAgICAgICAgICBmb3JtRGF0YSA9IG5ldyBGb3JtRGF0YSgpOwogICAgICAgICAgICBmb3JtRGF0YS5hcHBlbmQoJ2ZpbGUnLCBmaWxlVG9JbXBvcnQpOwogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBfa2liYW5hLktpYmFuYVNlcnZpY2VzLmdldCgpLmh0dHAuZmV0Y2goIiIuY29uY2F0KF9jb25zdGFudHMuVElNRUxJTkVfSU1QT1JUX1VSTCksIHsKICAgICAgICAgICAgICBtZXRob2Q6ICdQT1NUJywKICAgICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgICAnQ29udGVudC1UeXBlJzogdW5kZWZpbmVkCiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBxdWVyeTogewogICAgICAgICAgICAgICAgb3ZlcndyaXRlOiBvdmVyd3JpdGUKICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIGJvZHk6IGZvcm1EYXRhLAogICAgICAgICAgICAgIHNpZ25hbDogc2lnbmFsCiAgICAgICAgICAgIH0pKTsKCiAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZSk7CiAgfSkpOwoKICByZXR1cm4gZnVuY3Rpb24gaW1wb3J0VGltZWxpbmVzKF94KSB7CiAgICByZXR1cm4gX3JlZi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogIH07Cn0oKTsKCmV4cG9ydHMuaW1wb3J0VGltZWxpbmVzID0gaW1wb3J0VGltZWxpbmVzOwoKdmFyIGV4cG9ydFNlbGVjdGVkVGltZWxpbmUgPQovKiNfX1BVUkVfXyovCmZ1bmN0aW9uICgpIHsKICB2YXIgX3JlZjMgPSBfYXN5bmNUb0dlbmVyYXRvcigKICAvKiNfX1BVUkVfXyovCiAgcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoX3JlZjQpIHsKICAgIHZhciBfcmVmNCRleGNsdWRlRXhwb3J0RGUsIGV4Y2x1ZGVFeHBvcnREZXRhaWxzLCBfcmVmNCRmaWxlbmFtZSwgZmlsZW5hbWUsIF9yZWY0JGlkcywgaWRzLCBzaWduYWwsIGJvZHksIHJlc3BvbnNlOwoKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIF9yZWY0JGV4Y2x1ZGVFeHBvcnREZSA9IF9yZWY0LmV4Y2x1ZGVFeHBvcnREZXRhaWxzLCBleGNsdWRlRXhwb3J0RGV0YWlscyA9IF9yZWY0JGV4Y2x1ZGVFeHBvcnREZSA9PT0gdm9pZCAwID8gZmFsc2UgOiBfcmVmNCRleGNsdWRlRXhwb3J0RGUsIF9yZWY0JGZpbGVuYW1lID0gX3JlZjQuZmlsZW5hbWUsIGZpbGVuYW1lID0gX3JlZjQkZmlsZW5hbWUgPT09IHZvaWQgMCA/ICJ0aW1lbGluZXNfZXhwb3J0Lm5kanNvbiIgOiBfcmVmNCRmaWxlbmFtZSwgX3JlZjQkaWRzID0gX3JlZjQuaWRzLCBpZHMgPSBfcmVmNCRpZHMgPT09IHZvaWQgMCA/IFtdIDogX3JlZjQkaWRzLCBzaWduYWwgPSBfcmVmNC5zaWduYWw7CiAgICAgICAgICAgIGJvZHkgPSBpZHMubGVuZ3RoID4gMCA/IEpTT04uc3RyaW5naWZ5KHsKICAgICAgICAgICAgICBpZHM6IGlkcwogICAgICAgICAgICB9KSA6IHVuZGVmaW5lZDsKICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA0OwogICAgICAgICAgICByZXR1cm4gX2tpYmFuYS5LaWJhbmFTZXJ2aWNlcy5nZXQoKS5odHRwLmZldGNoKCIiLmNvbmNhdChfY29uc3RhbnRzLlRJTUVMSU5FX0VYUE9SVF9VUkwpLCB7CiAgICAgICAgICAgICAgbWV0aG9kOiAnUE9TVCcsCiAgICAgICAgICAgICAgYm9keTogYm9keSwKICAgICAgICAgICAgICBxdWVyeTogewogICAgICAgICAgICAgICAgZXhjbHVkZV9leHBvcnRfZGV0YWlsczogZXhjbHVkZUV4cG9ydERldGFpbHMsCiAgICAgICAgICAgICAgICBmaWxlX25hbWU6IGZpbGVuYW1lCiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBzaWduYWw6IHNpZ25hbCwKICAgICAgICAgICAgICBhc1Jlc3BvbnNlOiB0cnVlCiAgICAgICAgICAgIH0pOwoKICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5hYnJ1cHQoInJldHVybiIsIHJlc3BvbnNlLmJvZHkpOwoKICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZTIpOwogIH0pKTsKCiAgcmV0dXJuIGZ1bmN0aW9uIGV4cG9ydFNlbGVjdGVkVGltZWxpbmUoX3gyKSB7CiAgICByZXR1cm4gX3JlZjMuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9Owp9KCk7CgpleHBvcnRzLmV4cG9ydFNlbGVjdGVkVGltZWxpbmUgPSBleHBvcnRTZWxlY3RlZFRpbWVsaW5lOw=="},null]}