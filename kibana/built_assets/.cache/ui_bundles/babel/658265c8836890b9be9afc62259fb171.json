{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!src/legacy/core_plugins/vis_type_vislib/public/components/options/metrics_axes/utils.js","dependencies":[{"path":"src/legacy/core_plugins/vis_type_vislib/public/components/options/metrics_axes/utils.js","mtime":1589249550102},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmNvdW50TmV4dEF4aXNOdW1iZXIgPSBjb3VudE5leHRBeGlzTnVtYmVyOwpleHBvcnRzLm1hcFBvc2l0aW9uT3Bwb3NpdGUgPSBtYXBQb3NpdGlvbk9wcG9zaXRlOwpleHBvcnRzLm1hcFBvc2l0aW9uID0gbWFwUG9zaXRpb247CmV4cG9ydHMuZ2V0VXBkYXRlZEF4aXNOYW1lID0gZXhwb3J0cy5pc0F4aXNIb3Jpem9udGFsID0gZXhwb3J0cy5tYWtlU2VyaWUgPSB2b2lkIDA7Cgp2YXIgX2xvZGFzaCA9IHJlcXVpcmUoImxvZGFzaCIpOwoKdmFyIF9jb2xsZWN0aW9ucyA9IHJlcXVpcmUoIi4uLy4uLy4uL3V0aWxzL2NvbGxlY3Rpb25zIik7CgpmdW5jdGlvbiBvd25LZXlzKG9iamVjdCwgZW51bWVyYWJsZU9ubHkpIHsKICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9iamVjdCk7CgogIGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7CiAgICB2YXIgc3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMob2JqZWN0KTsKICAgIGlmIChlbnVtZXJhYmxlT25seSkgc3ltYm9scyA9IHN5bWJvbHMuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHsKICAgICAgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7CiAgICB9KTsKICAgIGtleXMucHVzaC5hcHBseShrZXlzLCBzeW1ib2xzKTsKICB9CgogIHJldHVybiBrZXlzOwp9CgpmdW5jdGlvbiBfb2JqZWN0U3ByZWFkKHRhcmdldCkgewogIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7CiAgICB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldICE9IG51bGwgPyBhcmd1bWVudHNbaV0gOiB7fTsKCiAgICBpZiAoaSAlIDIpIHsKICAgICAgb3duS2V5cyhzb3VyY2UsIHRydWUpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgewogICAgICAgIF9kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgc291cmNlW2tleV0pOwogICAgICB9KTsKICAgIH0gZWxzZSBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMpIHsKICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKTsKICAgIH0gZWxzZSB7CiAgICAgIG93bktleXMoc291cmNlKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsKICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBrZXkpKTsKICAgICAgfSk7CiAgICB9CiAgfQoKICByZXR1cm4gdGFyZ2V0Owp9CgpmdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7CiAgaWYgKGtleSBpbiBvYmopIHsKICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgewogICAgICB2YWx1ZTogdmFsdWUsCiAgICAgIGVudW1lcmFibGU6IHRydWUsCiAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSwKICAgICAgd3JpdGFibGU6IHRydWUKICAgIH0pOwogIH0gZWxzZSB7CiAgICBvYmpba2V5XSA9IHZhbHVlOwogIH0KCiAgcmV0dXJuIG9iajsKfQoKdmFyIG1ha2VTZXJpZSA9IGZ1bmN0aW9uIG1ha2VTZXJpZShpZCwgbGFiZWwsIGRlZmF1bHRWYWx1ZUF4aXMsIGxhc3RTZXJpZSkgewogIHZhciBkYXRhID0gewogICAgaWQ6IGlkLAogICAgbGFiZWw6IGxhYmVsCiAgfTsKICB2YXIgZGVmYXVsdFNlcmllID0gewogICAgc2hvdzogdHJ1ZSwKICAgIG1vZGU6IF9jb2xsZWN0aW9ucy5DaGFydE1vZGVzLk5PUk1BTCwKICAgIHR5cGU6IF9jb2xsZWN0aW9ucy5DaGFydFR5cGVzLkxJTkUsCiAgICBkcmF3TGluZXNCZXR3ZWVuUG9pbnRzOiB0cnVlLAogICAgc2hvd0NpcmNsZXM6IHRydWUsCiAgICBpbnRlcnBvbGF0ZTogX2NvbGxlY3Rpb25zLkludGVycG9sYXRpb25Nb2Rlcy5MSU5FQVIsCiAgICBsaW5lV2lkdGg6IDIsCiAgICB2YWx1ZUF4aXM6IGRlZmF1bHRWYWx1ZUF4aXMsCiAgICBkYXRhOiBkYXRhCiAgfTsKICByZXR1cm4gbGFzdFNlcmllID8gX29iamVjdFNwcmVhZCh7fSwgbGFzdFNlcmllLCB7CiAgICBkYXRhOiBkYXRhCiAgfSkgOiBkZWZhdWx0U2VyaWU7Cn07CgpleHBvcnRzLm1ha2VTZXJpZSA9IG1ha2VTZXJpZTsKCnZhciBpc0F4aXNIb3Jpem9udGFsID0gZnVuY3Rpb24gaXNBeGlzSG9yaXpvbnRhbChwb3NpdGlvbikgewogIHJldHVybiBbX2NvbGxlY3Rpb25zLlBvc2l0aW9ucy5UT1AsIF9jb2xsZWN0aW9ucy5Qb3NpdGlvbnMuQk9UVE9NXS5pbmNsdWRlcyhwb3NpdGlvbik7Cn07CgpleHBvcnRzLmlzQXhpc0hvcml6b250YWwgPSBpc0F4aXNIb3Jpem9udGFsOwp2YXIgUkFESVggPSAxMDsKCmZ1bmN0aW9uIGNvdW50TmV4dEF4aXNOdW1iZXIoYXhpc05hbWUpIHsKICB2YXIgYXhpc1Byb3AgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6ICdpZCc7CiAgcmV0dXJuIGZ1bmN0aW9uICh2YWx1ZSwgYXhpcykgewogICAgdmFyIG5hbWVMZW5ndGggPSBheGlzTmFtZS5sZW5ndGg7CgogICAgaWYgKGF4aXNbYXhpc1Byb3BdLnN1YnN0cigwLCBuYW1lTGVuZ3RoKSA9PT0gYXhpc05hbWUpIHsKICAgICAgdmFyIG51bSA9IHBhcnNlSW50KGF4aXNbYXhpc1Byb3BdLnN1YnN0cihuYW1lTGVuZ3RoKSwgUkFESVgpOwoKICAgICAgaWYgKG51bSA+PSB2YWx1ZSkgewogICAgICAgIHZhbHVlID0gbnVtICsgMTsKICAgICAgfQogICAgfQoKICAgIHJldHVybiB2YWx1ZTsKICB9Owp9Cgp2YXIgQVhJU19QUkVGSVggPSAnQXhpcy0nOwoKdmFyIGdldFVwZGF0ZWRBeGlzTmFtZSA9IGZ1bmN0aW9uIGdldFVwZGF0ZWRBeGlzTmFtZShheGlzUG9zaXRpb24sIHZhbHVlQXhlcykgewogIHZhciBheGlzTmFtZSA9ICgwLCBfbG9kYXNoLmNhcGl0YWxpemUpKGF4aXNQb3NpdGlvbikgKyBBWElTX1BSRUZJWDsKICB2YXIgbmV4dEF4aXNOYW1lTnVtYmVyID0gdmFsdWVBeGVzLnJlZHVjZShjb3VudE5leHRBeGlzTnVtYmVyKGF4aXNOYW1lLCAnbmFtZScpLCAxKTsKICByZXR1cm4gIiIuY29uY2F0KGF4aXNOYW1lKS5jb25jYXQobmV4dEF4aXNOYW1lTnVtYmVyKTsKfTsKCmV4cG9ydHMuZ2V0VXBkYXRlZEF4aXNOYW1lID0gZ2V0VXBkYXRlZEF4aXNOYW1lOwoKZnVuY3Rpb24gbWFwUG9zaXRpb25PcHBvc2l0ZShwb3NpdGlvbikgewogIHN3aXRjaCAocG9zaXRpb24pIHsKICAgIGNhc2UgX2NvbGxlY3Rpb25zLlBvc2l0aW9ucy5CT1RUT006CiAgICAgIHJldHVybiBfY29sbGVjdGlvbnMuUG9zaXRpb25zLlRPUDsKCiAgICBjYXNlIF9jb2xsZWN0aW9ucy5Qb3NpdGlvbnMuVE9QOgogICAgICByZXR1cm4gX2NvbGxlY3Rpb25zLlBvc2l0aW9ucy5CT1RUT007CgogICAgY2FzZSBfY29sbGVjdGlvbnMuUG9zaXRpb25zLkxFRlQ6CiAgICAgIHJldHVybiBfY29sbGVjdGlvbnMuUG9zaXRpb25zLlJJR0hUOwoKICAgIGNhc2UgX2NvbGxlY3Rpb25zLlBvc2l0aW9ucy5SSUdIVDoKICAgICAgcmV0dXJuIF9jb2xsZWN0aW9ucy5Qb3NpdGlvbnMuTEVGVDsKCiAgICBkZWZhdWx0OgogICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgbGVnZW5kIHBvc2l0aW9uLicpOwogIH0KfQoKZnVuY3Rpb24gbWFwUG9zaXRpb24ocG9zaXRpb24pIHsKICBzd2l0Y2ggKHBvc2l0aW9uKSB7CiAgICBjYXNlIF9jb2xsZWN0aW9ucy5Qb3NpdGlvbnMuQk9UVE9NOgogICAgICByZXR1cm4gX2NvbGxlY3Rpb25zLlBvc2l0aW9ucy5MRUZUOwoKICAgIGNhc2UgX2NvbGxlY3Rpb25zLlBvc2l0aW9ucy5UT1A6CiAgICAgIHJldHVybiBfY29sbGVjdGlvbnMuUG9zaXRpb25zLlJJR0hUOwoKICAgIGNhc2UgX2NvbGxlY3Rpb25zLlBvc2l0aW9ucy5MRUZUOgogICAgICByZXR1cm4gX2NvbGxlY3Rpb25zLlBvc2l0aW9ucy5CT1RUT007CgogICAgY2FzZSBfY29sbGVjdGlvbnMuUG9zaXRpb25zLlJJR0hUOgogICAgICByZXR1cm4gX2NvbGxlY3Rpb25zLlBvc2l0aW9ucy5UT1A7CiAgfQp9"},null]}