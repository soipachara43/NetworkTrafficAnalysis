{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!src/plugins/kibana_legacy/public/utils/url_overflow_service.js","dependencies":[{"path":"src/plugins/kibana_legacy/public/utils/url_overflow_service.js","mtime":1589249550935},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLlVybE92ZXJmbG93U2VydmljZSA9IGV4cG9ydHMuSUVfUkVHRVggPSB2b2lkIDA7CgpmdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7CiAgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsKICAgIHRocm93IG5ldyBUeXBlRXJyb3IoIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvbiIpOwogIH0KfQoKZnVuY3Rpb24gX2RlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgewogIGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsKICAgIHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07CiAgICBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7CiAgICBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7CiAgICBpZiAoInZhbHVlIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsKICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsKICB9Cn0KCmZ1bmN0aW9uIF9jcmVhdGVDbGFzcyhDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsKICBpZiAocHJvdG9Qcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsKICBpZiAoc3RhdGljUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7CiAgcmV0dXJuIENvbnN0cnVjdG9yOwp9CgpmdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7CiAgaWYgKGtleSBpbiBvYmopIHsKICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgewogICAgICB2YWx1ZTogdmFsdWUsCiAgICAgIGVudW1lcmFibGU6IHRydWUsCiAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSwKICAgICAgd3JpdGFibGU6IHRydWUKICAgIH0pOwogIH0gZWxzZSB7CiAgICBvYmpba2V5XSA9IHZhbHVlOwogIH0KCiAgcmV0dXJuIG9iajsKfQovKgogKiBMaWNlbnNlZCB0byBFbGFzdGljc2VhcmNoIEIuVi4gdW5kZXIgb25lIG9yIG1vcmUgY29udHJpYnV0b3IKICogbGljZW5zZSBhZ3JlZW1lbnRzLiBTZWUgdGhlIE5PVElDRSBmaWxlIGRpc3RyaWJ1dGVkIHdpdGgKICogdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uIHJlZ2FyZGluZyBjb3B5cmlnaHQKICogb3duZXJzaGlwLiBFbGFzdGljc2VhcmNoIEIuVi4gbGljZW5zZXMgdGhpcyBmaWxlIHRvIHlvdSB1bmRlcgogKiB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsgeW91IG1heQogKiBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgogKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKICoKICogICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wCiAqCiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywKICogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4KICogIkFTIElTIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZCiAqIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZQogKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zCiAqIHVuZGVyIHRoZSBMaWNlbnNlLgogKi8KCgp2YXIgVVJMX01BWF9JRSA9IDIwMDA7CnZhciBVUkxfTUFYX09USEVSUyA9IDI1MDAwOwp2YXIgSUVfUkVHRVggPSAvKDsgP01TSUUgfEVkZ2VcL1xkfFRyaWRlbnRcL1tcZCtcLl0rOy4qcnY6KjExXC5cZCspLzsKZXhwb3J0cy5JRV9SRUdFWCA9IElFX1JFR0VYOwoKdmFyIFVybE92ZXJmbG93U2VydmljZSA9Ci8qI19fUFVSRV9fKi8KZnVuY3Rpb24gKCkgewogIGZ1bmN0aW9uIFVybE92ZXJmbG93U2VydmljZSgpIHsKICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFVybE92ZXJmbG93U2VydmljZSk7CgogICAgX2RlZmluZVByb3BlcnR5KHRoaXMsICJfaWVMaWtlIiwgdm9pZCAwKTsKCiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgIl92YWwiLCB2b2lkIDApOwoKICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCAiX3N5bmMiLCB2b2lkIDApOwoKICAgIHZhciBrZXkgPSAnZXJyb3IvdXJsLW92ZXJmbG93L3VybCc7CiAgICB2YXIgc3RvcmUgPSB3aW5kb3cuc2Vzc2lvblN0b3JhZ2UgfHwgewogICAgICBnZXRJdGVtOiBmdW5jdGlvbiBnZXRJdGVtKCkge30sCiAgICAgIHNldEl0ZW06IGZ1bmN0aW9uIHNldEl0ZW0oKSB7fSwKICAgICAgcmVtb3ZlSXRlbTogZnVuY3Rpb24gcmVtb3ZlSXRlbSgpIHt9CiAgICB9OyAvLyBGSVhNRTogQ291bGRuJ3QgZmluZCBhIHdheSB0byB0ZXN0IGZvciBicm93c2VyIGNvbXBhdGliaWxpdHkgd2l0aG91dAogICAgLy8gY29tcGxleCByZWRpcmVjdCBhbmQgY29va2llIGJhc2VkICJmZWF0dXJlLWRldGVjdGlvbiIgcGFnZSwgc28gZ29pbmcKICAgIC8vIHdpdGggdXNlci1hZ2VudCBkZXRlY3Rpb24gZm9yIG5vdy4KCiAgICB0aGlzLl9pZUxpa2UgPSBJRV9SRUdFWC50ZXN0KHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50KTsKICAgIHRoaXMuX3ZhbCA9IHN0b3JlLmdldEl0ZW0oa2V5KTsKCiAgICB0aGlzLl9zeW5jID0gZnVuY3Rpb24gKCkgewogICAgICBpZiAodHlwZW9mIF90aGlzLl92YWwgPT09ICdzdHJpbmcnKSB7CiAgICAgICAgc3RvcmUuc2V0SXRlbShrZXksIF90aGlzLl92YWwpOwogICAgICB9IGVsc2UgewogICAgICAgIHN0b3JlLnJlbW92ZUl0ZW0oa2V5KTsKICAgICAgfQogICAgfTsKICB9CgogIF9jcmVhdGVDbGFzcyhVcmxPdmVyZmxvd1NlcnZpY2UsIFt7CiAgICBrZXk6ICJmYWlsTGVuZ3RoIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBmYWlsTGVuZ3RoKCkgewogICAgICByZXR1cm4gdGhpcy5faWVMaWtlID8gVVJMX01BWF9JRSA6IFVSTF9NQVhfT1RIRVJTOwogICAgfQogIH0sIHsKICAgIGtleTogInNldCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gc2V0KHYpIHsKICAgICAgdGhpcy5fdmFsID0gdjsKCiAgICAgIHRoaXMuX3N5bmMoKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJnZXQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdldCgpIHsKICAgICAgcmV0dXJuIHRoaXMuX3ZhbDsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJjaGVjayIsCiAgICB2YWx1ZTogZnVuY3Rpb24gY2hlY2soYWJzVXJsKSB7CiAgICAgIGlmICghdGhpcy5nZXQoKSkgewogICAgICAgIHZhciB1cmxMZW5ndGggPSBhYnNVcmwubGVuZ3RoOwogICAgICAgIHZhciByZW1haW5pbmcgPSB0aGlzLmZhaWxMZW5ndGgoKSAtIHVybExlbmd0aDsKCiAgICAgICAgaWYgKHJlbWFpbmluZyA+IDApIHsKICAgICAgICAgIHJldHVybiByZW1haW5pbmc7CiAgICAgICAgfQoKICAgICAgICB0aGlzLnNldChhYnNVcmwpOwogICAgICB9CgogICAgICB0aHJvdyBuZXcgRXJyb3IoIlxuICAgICAgVGhlIFVSTCBoYXMgZ290dGVuIHRvbyBiaWcgYW5kIGtpYmFuYSBjYW4gbm8gbG9uZ2VyXG4gICAgICBjb250aW51ZS4gUGxlYXNlIHJlZnJlc2ggdG8gcmV0dXJuIHRvIHlvdXIgcHJldmlvdXMgc3RhdGUuXG4gICAgIik7CiAgICB9CiAgfSwgewogICAga2V5OiAiY2xlYXIiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGNsZWFyKCkgewogICAgICB0aGlzLl92YWwgPSB1bmRlZmluZWQ7CgogICAgICB0aGlzLl9zeW5jKCk7CiAgICB9CiAgfV0pOwoKICByZXR1cm4gVXJsT3ZlcmZsb3dTZXJ2aWNlOwp9KCk7CgpleHBvcnRzLlVybE92ZXJmbG93U2VydmljZSA9IFVybE92ZXJmbG93U2VydmljZTs="},null]}