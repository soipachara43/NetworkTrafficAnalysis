{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/plugins/infra/public/apps/start_legacy_app.js","dependencies":[{"path":"x-pack/plugins/infra/public/apps/start_legacy_app.js","mtime":1589249554225},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLnN0YXJ0TGVnYWN5QXBwID0gc3RhcnRMZWdhY3lBcHA7Cgp2YXIgX2hpc3RvcnkgPSByZXF1aXJlKCJoaXN0b3J5Iik7Cgp2YXIgX3JlYWN0ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCJyZWFjdCIpKTsKCnZhciBfdXJsID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCJ1cmwiKSk7Cgp2YXIgX3JlYWN0RG9tID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCJyZWFjdC1kb20iKSk7Cgp2YXIgX3JlYWN0Um91dGVyRG9tID0gcmVxdWlyZSgicmVhY3Qtcm91dGVyLWRvbSIpOwoKdmFyIF9ldWkgPSByZXF1aXJlKCJAZWxhc3RpYy9ldWkiKTsKCmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7CiAgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsKICAgIGRlZmF1bHQ6IG9iagogIH07Cn0KCmZ1bmN0aW9uIGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywga2V5LCBhcmcpIHsKICB0cnkgewogICAgdmFyIGluZm8gPSBnZW5ba2V5XShhcmcpOwogICAgdmFyIHZhbHVlID0gaW5mby52YWx1ZTsKICB9IGNhdGNoIChlcnJvcikgewogICAgcmVqZWN0KGVycm9yKTsKICAgIHJldHVybjsKICB9CgogIGlmIChpbmZvLmRvbmUpIHsKICAgIHJlc29sdmUodmFsdWUpOwogIH0gZWxzZSB7CiAgICBQcm9taXNlLnJlc29sdmUodmFsdWUpLnRoZW4oX25leHQsIF90aHJvdyk7CiAgfQp9CgpmdW5jdGlvbiBfYXN5bmNUb0dlbmVyYXRvcihmbikgewogIHJldHVybiBmdW5jdGlvbiAoKSB7CiAgICB2YXIgc2VsZiA9IHRoaXMsCiAgICAgICAgYXJncyA9IGFyZ3VtZW50czsKICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICAgIHZhciBnZW4gPSBmbi5hcHBseShzZWxmLCBhcmdzKTsKCiAgICAgIGZ1bmN0aW9uIF9uZXh0KHZhbHVlKSB7CiAgICAgICAgYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCAibmV4dCIsIHZhbHVlKTsKICAgICAgfQoKICAgICAgZnVuY3Rpb24gX3Rocm93KGVycikgewogICAgICAgIGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywgInRocm93IiwgZXJyKTsKICAgICAgfQoKICAgICAgX25leHQodW5kZWZpbmVkKTsKICAgIH0pOwogIH07Cn0gLy8gVGhpcyBleGlzdHMgcHVyZWx5IHRvIGZhY2lsaXRhdGUgbGVnYWN5IGFwcC9pbmZyYSBVUkwgcmVkaXJlY3RzLgovLyBJdCB3aWxsIGJlIHJlbW92ZWQgaW4gOC4wLjAuCgoKZnVuY3Rpb24gc3RhcnRMZWdhY3lBcHAoX3gpIHsKICByZXR1cm4gX3N0YXJ0TGVnYWN5QXBwLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7Cn0KCmZ1bmN0aW9uIF9zdGFydExlZ2FjeUFwcCgpIHsKICBfc3RhcnRMZWdhY3lBcHAgPSBfYXN5bmNUb0dlbmVyYXRvcigKICAvKiNfX1BVUkVfXyovCiAgcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShwYXJhbXMpIHsKICAgIHZhciBlbGVtZW50LCBoaXN0b3J5LCBBcHA7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIGVsZW1lbnQgPSBwYXJhbXMuZWxlbWVudDsKICAgICAgICAgICAgaGlzdG9yeSA9ICgwLCBfaGlzdG9yeS5jcmVhdGVCcm93c2VySGlzdG9yeSkoKTsKCiAgICAgICAgICAgIEFwcCA9IGZ1bmN0aW9uIEFwcCgpIHsKICAgICAgICAgICAgICByZXR1cm4gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUVycm9yQm91bmRhcnksIG51bGwsIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3JlYWN0Um91dGVyRG9tLlJvdXRlciwgewogICAgICAgICAgICAgICAgaGlzdG9yeTogaGlzdG9yeQogICAgICAgICAgICAgIH0sIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3JlYWN0Um91dGVyRG9tLlN3aXRjaCwgbnVsbCwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfcmVhY3RSb3V0ZXJEb20uUm91dGUsIHsKICAgICAgICAgICAgICAgIHBhdGg6ICcvJywKICAgICAgICAgICAgICAgIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKF9yZWYpIHsKICAgICAgICAgICAgICAgICAgdmFyIGxvY2F0aW9uID0gX3JlZi5sb2NhdGlvbjsKCiAgICAgICAgICAgICAgICAgIGlmICghbG9jYXRpb24pIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDsKICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgdmFyIG5leHRQYXRoID0gJyc7CiAgICAgICAgICAgICAgICAgIHZhciBuZXh0QmFzZVBhdGggPSAnJzsKICAgICAgICAgICAgICAgICAgdmFyIG5leHRTZWFyY2g7CgogICAgICAgICAgICAgICAgICBpZiAobG9jYXRpb24uaGFzaC5pbmRleE9mKCcjaW5mcmFzdHJ1Y3R1cmUnKSA+IC0xIHx8IGxvY2F0aW9uLmhhc2guaW5kZXhPZignIy9pbmZyYXN0cnVjdHVyZScpID4gLTEpIHsKICAgICAgICAgICAgICAgICAgICBuZXh0UGF0aCA9IGxvY2F0aW9uLmhhc2gucmVwbGFjZShuZXcgUmVnRXhwKCcjaW5mcmFzdHJ1Y3R1cmUvfCMvaW5mcmFzdHJ1Y3R1cmUvfCMvaW5mcmFzdHJ1Y3R1cmV8I2luZnJhc3RydWN0dXJlJywgJ2cnKSwgJycpOwogICAgICAgICAgICAgICAgICAgIG5leHRCYXNlUGF0aCA9IGxvY2F0aW9uLnBhdGhuYW1lLnJlcGxhY2UoJ2FwcC9pbmZyYScsICdhcHAvbWV0cmljcycpOwogICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGxvY2F0aW9uLmhhc2guaW5kZXhPZignI2xvZ3MnKSA+IC0xIHx8IGxvY2F0aW9uLmhhc2guaW5kZXhPZignIy9sb2dzJykgPiAtMSkgewogICAgICAgICAgICAgICAgICAgIG5leHRQYXRoID0gbG9jYXRpb24uaGFzaC5yZXBsYWNlKG5ldyBSZWdFeHAoJyNsb2dzL3wjL2xvZ3MvfCMvbG9nc3wjbG9ncycsICdnJyksICcnKTsKICAgICAgICAgICAgICAgICAgICBuZXh0QmFzZVBhdGggPSBsb2NhdGlvbi5wYXRobmFtZS5yZXBsYWNlKCdhcHAvaW5mcmEnLCAnYXBwL2xvZ3MnKTsKICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAvLyBUaGlzIGNvdmVycyAvYXBwL2luZnJhIGFuZCAvYXBwL2luZnJhL2hvbWUgKGJvdGggb2Ygd2hpY2ggdXNlZCB0byByZW5kZXIKICAgICAgICAgICAgICAgICAgICAvLyB0aGUgbWV0cmljcyBpbnZlbnRvcnkgcGFnZSkKICAgICAgICAgICAgICAgICAgICBuZXh0UGF0aCA9ICdpbnZlbnRvcnknOwogICAgICAgICAgICAgICAgICAgIG5leHRCYXNlUGF0aCA9IGxvY2F0aW9uLnBhdGhuYW1lLnJlcGxhY2UoJ2FwcC9pbmZyYScsICdhcHAvbWV0cmljcycpOwogICAgICAgICAgICAgICAgICAgIG5leHRTZWFyY2ggPSB1bmRlZmluZWQ7CiAgICAgICAgICAgICAgICAgIH0gLy8gYXBwL2lucmEjaW5mcmFzdHJ1Y3R1cmUvbWV0cmljcy86dHlwZS86bm9kZSB3YXMgY2hhbmdlZCB0byBhcHAvbWV0cmljcy9kZXRhaWwvOnR5cGUvOm5vZGUsIHRoaXMKICAgICAgICAgICAgICAgICAgLy8gYWNjb3VudHMgZm9yIHRoYXQgZWRnZSBjYXNlCgoKICAgICAgICAgICAgICAgICAgbmV4dFBhdGggPSBuZXh0UGF0aC5yZXBsYWNlKCdtZXRyaWNzLycsICdkZXRhaWwvJyk7IC8vIFF1ZXJ5IHBhcmFtZXRlcnMgKGxvY2F0aW9uLnNlYXJjaCkgd2lsbCBhcnJpdmUgYXMgcGFydCBvZiBsb2NhdGlvbi5oYXNoIGFuZCBub3QgbG9jYXRpb24uc2VhcmNoCgogICAgICAgICAgICAgICAgICB2YXIgbmV4dFBhdGhQYXJ0cyA9IG5leHRQYXRoLnNwbGl0KCc/Jyk7CiAgICAgICAgICAgICAgICAgIG5leHRQYXRoID0gbmV4dFBhdGhQYXJ0c1swXTsKICAgICAgICAgICAgICAgICAgbmV4dFNlYXJjaCA9IG5leHRQYXRoUGFydHNbMV0gPyBuZXh0UGF0aFBhcnRzWzFdIDogdW5kZWZpbmVkOwoKICAgICAgICAgICAgICAgICAgdmFyIG5leHRVcmwgPSBfdXJsLmRlZmF1bHQuZm9ybWF0KHsKICAgICAgICAgICAgICAgICAgICBwYXRobmFtZTogIiIuY29uY2F0KG5leHRCYXNlUGF0aCwgIi8iKS5jb25jYXQobmV4dFBhdGgpLAogICAgICAgICAgICAgICAgICAgIGhhc2g6IHVuZGVmaW5lZCwKICAgICAgICAgICAgICAgICAgICBzZWFyY2g6IG5leHRTZWFyY2gKICAgICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgICAgICBuZXh0VXJsID0gbmV4dFVybC5yZXBsYWNlKCcvLycsICcvJyk7CiAgICAgICAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gbmV4dFVybDsKICAgICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSkpKSk7CiAgICAgICAgICAgIH07CgogICAgICAgICAgICBfcmVhY3REb20uZGVmYXVsdC5yZW5kZXIoX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChBcHAsIG51bGwpLCBlbGVtZW50KTsKCiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICBfcmVhY3REb20uZGVmYXVsdC51bm1vdW50Q29tcG9uZW50QXROb2RlKGVsZW1lbnQpOwogICAgICAgICAgICB9KTsKCiAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZSk7CiAgfSkpOwogIHJldHVybiBfc3RhcnRMZWdhY3lBcHAuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKfQ=="},null]}