{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!src/legacy/core_plugins/vis_type_timelion/public/_generated_/chain.js","dependencies":[{"path":"src/legacy/core_plugins/vis_type_timelion/public/_generated_/chain.js","mtime":1589249550002},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoKSB7CiAgInVzZSBzdHJpY3QiOwogIC8qCiAgICogR2VuZXJhdGVkIGJ5IFBFRy5qcyAwLjkuMC4KICAgKgogICAqIGh0dHA6Ly9wZWdqcy5vcmcvCiAgICovCgogIGZ1bmN0aW9uIHBlZyRzdWJjbGFzcyhjaGlsZCwgcGFyZW50KSB7CiAgICBmdW5jdGlvbiBjdG9yKCkgewogICAgICB0aGlzLmNvbnN0cnVjdG9yID0gY2hpbGQ7CiAgICB9CgogICAgY3Rvci5wcm90b3R5cGUgPSBwYXJlbnQucHJvdG90eXBlOwogICAgY2hpbGQucHJvdG90eXBlID0gbmV3IGN0b3IoKTsKICB9CgogIGZ1bmN0aW9uIHBlZyRTeW50YXhFcnJvcihtZXNzYWdlLCBleHBlY3RlZCwgZm91bmQsIGxvY2F0aW9uKSB7CiAgICB0aGlzLm1lc3NhZ2UgPSBtZXNzYWdlOwogICAgdGhpcy5leHBlY3RlZCA9IGV4cGVjdGVkOwogICAgdGhpcy5mb3VuZCA9IGZvdW5kOwogICAgdGhpcy5sb2NhdGlvbiA9IGxvY2F0aW9uOwogICAgdGhpcy5uYW1lID0gIlN5bnRheEVycm9yIjsKCiAgICBpZiAodHlwZW9mIEVycm9yLmNhcHR1cmVTdGFja1RyYWNlID09PSAiZnVuY3Rpb24iKSB7CiAgICAgIEVycm9yLmNhcHR1cmVTdGFja1RyYWNlKHRoaXMsIHBlZyRTeW50YXhFcnJvcik7CiAgICB9CiAgfQoKICBwZWckc3ViY2xhc3MocGVnJFN5bnRheEVycm9yLCBFcnJvcik7CgogIGZ1bmN0aW9uIHBlZyRwYXJzZShpbnB1dCkgewogICAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMSA/IGFyZ3VtZW50c1sxXSA6IHt9LAogICAgICAgIHBhcnNlciA9IHRoaXMsCiAgICAgICAgcGVnJEZBSUxFRCA9IHt9LAogICAgICAgIHBlZyRzdGFydFJ1bGVGdW5jdGlvbnMgPSB7CiAgICAgIHN0YXJ0OiBwZWckcGFyc2VzdGFydAogICAgfSwKICAgICAgICBwZWckc3RhcnRSdWxlRnVuY3Rpb24gPSBwZWckcGFyc2VzdGFydCwKICAgICAgICBwZWckYzAgPSBmdW5jdGlvbiBwZWckYzAodHJlZSkgewogICAgICByZXR1cm4gewogICAgICAgIHRyZWU6IHRyZWUuZmlsdGVyKGZ1bmN0aW9uIChvKSB7CiAgICAgICAgICByZXR1cm4gbyAhPSBudWxsOwogICAgICAgIH0pLAogICAgICAgIGZ1bmN0aW9uczogZnVuY3Rpb25zLAogICAgICAgIGFyZ3M6IGFyZ3MsCiAgICAgICAgdmFyaWFibGVzOiB2YXJpYWJsZXMKICAgICAgfTsKICAgIH0sCiAgICAgICAgcGVnJGMxID0gIiwiLAogICAgICAgIHBlZyRjMiA9IHsKICAgICAgdHlwZTogImxpdGVyYWwiLAogICAgICB2YWx1ZTogIiwiLAogICAgICBkZXNjcmlwdGlvbjogIlwiLFwiIgogICAgfSwKICAgICAgICBwZWckYzMgPSBmdW5jdGlvbiBwZWckYzMoZmlyc3QsIGFyZykgewogICAgICByZXR1cm4gYXJnOwogICAgfSwKICAgICAgICBwZWckYzQgPSBmdW5jdGlvbiBwZWckYzQoZmlyc3QsIHJlc3QpIHsKICAgICAgcmV0dXJuIFtmaXJzdF0uY29uY2F0KHJlc3QpOwogICAgfSwKICAgICAgICBwZWckYzUgPSAiPSIsCiAgICAgICAgcGVnJGM2ID0gewogICAgICB0eXBlOiAibGl0ZXJhbCIsCiAgICAgIHZhbHVlOiAiPSIsCiAgICAgIGRlc2NyaXB0aW9uOiAiXCI9XCIiCiAgICB9LAogICAgICAgIHBlZyRjNyA9IGZ1bmN0aW9uIHBlZyRjNyhuYW1lLCB2YWx1ZSkgewogICAgICB2YXIgYXJnID0gewogICAgICAgIHR5cGU6ICduYW1lZEFyZycsCiAgICAgICAgbmFtZTogbmFtZSwKICAgICAgICB2YWx1ZTogdmFsdWUsCiAgICAgICAgbG9jYXRpb246IHNpbXBsZUxvY2F0aW9uKGxvY2F0aW9uKCkpLAogICAgICAgIHRleHQ6IHRleHQoKQogICAgICB9OwogICAgICBjdXJyZW50QXJncy5wdXNoKGFyZyk7CiAgICAgIHJldHVybiBhcmc7CiAgICB9LAogICAgICAgIHBlZyRjOCA9IGZ1bmN0aW9uIHBlZyRjOCh2YWx1ZSkgewogICAgICB2YXIgZXhjZXB0aW9uID0gewogICAgICAgIHR5cGU6ICdpbmNvbXBsZXRlQXJndW1lbnQnLAogICAgICAgIGN1cnJlbnRBcmdzOiBjdXJyZW50QXJncywKICAgICAgICBjdXJyZW50RnVuY3Rpb246IGN1cnJlbnRGdW5jdGlvbiwKICAgICAgICBsb2NhdGlvbjogc2ltcGxlTG9jYXRpb24obG9jYXRpb24oKSksCiAgICAgICAgdGV4dDogdGV4dCgpCiAgICAgIH07CiAgICAgIGVycm9yKEpTT04uc3RyaW5naWZ5KGV4Y2VwdGlvbikpOwogICAgfSwKICAgICAgICBwZWckYzkgPSBmdW5jdGlvbiBwZWckYzkobmFtZSkgewogICAgICB2YXIgZXhjZXB0aW9uID0gewogICAgICAgIHR5cGU6ICdpbmNvbXBsZXRlQXJndW1lbnRWYWx1ZScsCiAgICAgICAgY3VycmVudEFyZ3M6IGN1cnJlbnRBcmdzLAogICAgICAgIGN1cnJlbnRGdW5jdGlvbjogY3VycmVudEZ1bmN0aW9uLAogICAgICAgIG5hbWU6IG5hbWUsCiAgICAgICAgbG9jYXRpb246IHNpbXBsZUxvY2F0aW9uKGxvY2F0aW9uKCkpLAogICAgICAgIHRleHQ6IHRleHQoKQogICAgICB9OwogICAgICBlcnJvcihKU09OLnN0cmluZ2lmeShleGNlcHRpb24pKTsKICAgIH0sCiAgICAgICAgcGVnJGMxMCA9IGZ1bmN0aW9uIHBlZyRjMTAoZWxlbWVudCkgewogICAgICByZXR1cm4gZWxlbWVudDsKICAgIH0sCiAgICAgICAgcGVnJGMxMSA9IGZ1bmN0aW9uIHBlZyRjMTEobGl0ZXJhbCkgewogICAgICB2YXIgcmVzdWx0ID0gbHRvbyhsaXRlcmFsKTsKICAgICAgcmVzdWx0LmxvY2F0aW9uID0gc2ltcGxlTG9jYXRpb24obG9jYXRpb24oKSksIHJlc3VsdC50ZXh0ID0gdGV4dCgpOwogICAgICByZXR1cm4gcmVzdWx0OwogICAgfSwKICAgICAgICBwZWckYzEyID0gIiQiLAogICAgICAgIHBlZyRjMTMgPSB7CiAgICAgIHR5cGU6ICJsaXRlcmFsIiwKICAgICAgdmFsdWU6ICIkIiwKICAgICAgZGVzY3JpcHRpb246ICJcIiRcIiIKICAgIH0sCiAgICAgICAgcGVnJGMxNCA9IGZ1bmN0aW9uIHBlZyRjMTQobmFtZSkgewogICAgICBpZiAodmFyaWFibGVzW25hbWVdKSB7CiAgICAgICAgcmV0dXJuIHZhcmlhYmxlc1tuYW1lXTsKICAgICAgfSBlbHNlIHsKICAgICAgICBlcnJvcignJCcgKyBuYW1lICsgJyBpcyBub3QgZGVmaW5lZCcpOwogICAgICB9CiAgICB9LAogICAgICAgIHBlZyRjMTUgPSBmdW5jdGlvbiBwZWckYzE1KG5hbWUsIHZhbHVlKSB7CiAgICAgIHZhcmlhYmxlc1tuYW1lXSA9IHZhbHVlOwogICAgfSwKICAgICAgICBwZWckYzE2ID0gZnVuY3Rpb24gcGVnJGMxNihmaXJzdCwgc2VyaWVzKSB7CiAgICAgIHJldHVybiBzZXJpZXM7CiAgICB9LAogICAgICAgIHBlZyRjMTcgPSBmdW5jdGlvbiBwZWckYzE3KGZpcnN0LCByZXN0KSB7CiAgICAgIHJldHVybiBbZmlyc3RdLmNvbmNhdChyZXN0KTsKICAgIH0sCiAgICAgICAgcGVnJGMxOCA9IC9eW2EtekEtWl0vLAogICAgICAgIHBlZyRjMTkgPSB7CiAgICAgIHR5cGU6ICJjbGFzcyIsCiAgICAgIHZhbHVlOiAiW2EtekEtWl0iLAogICAgICBkZXNjcmlwdGlvbjogIlthLXpBLVpdIgogICAgfSwKICAgICAgICBwZWckYzIwID0gL15bLmEtekEtWjAtOV9cLV0vLAogICAgICAgIHBlZyRjMjEgPSB7CiAgICAgIHR5cGU6ICJjbGFzcyIsCiAgICAgIHZhbHVlOiAiWy5hLXpBLVowLTlfLV0iLAogICAgICBkZXNjcmlwdGlvbjogIlsuYS16QS1aMC05Xy1dIgogICAgfSwKICAgICAgICBwZWckYzIyID0gZnVuY3Rpb24gcGVnJGMyMihmaXJzdCwgcmVzdCkgewogICAgICBjdXJyZW50RnVuY3Rpb24gPSBmaXJzdC5qb2luKCcnKSArIHJlc3Quam9pbignJyk7CiAgICAgIGN1cnJlbnRBcmdzID0gW107CiAgICAgIHJldHVybiBjdXJyZW50RnVuY3Rpb247CiAgICB9LAogICAgICAgIHBlZyRjMjMgPSBmdW5jdGlvbiBwZWckYzIzKGZpcnN0LCByZXN0KSB7CiAgICAgIHJldHVybiBmaXJzdC5qb2luKCcnKSArIHJlc3Quam9pbignJyk7CiAgICB9LAogICAgICAgIHBlZyRjMjQgPSB7CiAgICAgIHR5cGU6ICJvdGhlciIsCiAgICAgIGRlc2NyaXB0aW9uOiAiZnVuY3Rpb24iCiAgICB9LAogICAgICAgIHBlZyRjMjUgPSAiLiIsCiAgICAgICAgcGVnJGMyNiA9IHsKICAgICAgdHlwZTogImxpdGVyYWwiLAogICAgICB2YWx1ZTogIi4iLAogICAgICBkZXNjcmlwdGlvbjogIlwiLlwiIgogICAgfSwKICAgICAgICBwZWckYzI3ID0gIigiLAogICAgICAgIHBlZyRjMjggPSB7CiAgICAgIHR5cGU6ICJsaXRlcmFsIiwKICAgICAgdmFsdWU6ICIoIiwKICAgICAgZGVzY3JpcHRpb246ICJcIihcIiIKICAgIH0sCiAgICAgICAgcGVnJGMyOSA9ICIpIiwKICAgICAgICBwZWckYzMwID0gewogICAgICB0eXBlOiAibGl0ZXJhbCIsCiAgICAgIHZhbHVlOiAiKSIsCiAgICAgIGRlc2NyaXB0aW9uOiAiXCIpXCIiCiAgICB9LAogICAgICAgIHBlZyRjMzEgPSBmdW5jdGlvbiBwZWckYzMxKG5hbWUsIGFyZ19saXN0KSB7CiAgICAgIHZhciByZXN1bHQgPSB7CiAgICAgICAgdHlwZTogJ2Z1bmN0aW9uJywKICAgICAgICBmdW5jdGlvbjogbmFtZSwKICAgICAgICBhcmd1bWVudHM6IGFyZ19saXN0IHx8IFtdLAogICAgICAgIGxvY2F0aW9uOiBzaW1wbGVMb2NhdGlvbihsb2NhdGlvbigpKSwKICAgICAgICB0ZXh0OiB0ZXh0KCkKICAgICAgfTsKICAgICAgcmVzdWx0LmFyZ3VtZW50cy5mb3JFYWNoKGZ1bmN0aW9uIChhcmcpIHsKICAgICAgICBhcmcuZnVuY3Rpb24gPSBuYW1lOwogICAgICAgIGFyZ3MucHVzaChhcmcpOwogICAgICB9KTsKICAgICAgZnVuY3Rpb25zLnB1c2gocmVzdWx0KTsKICAgICAgcmV0dXJuIHJlc3VsdDsKICAgIH0sCiAgICAgICAgcGVnJGMzMiA9IGZ1bmN0aW9uIHBlZyRjMzIoZnVuYykgewogICAgICB2YXIgZXhjZXB0aW9uID0gewogICAgICAgIHR5cGU6ICdpbmNvbXBsZXRlRnVuY3Rpb24nLAogICAgICAgIGZ1bmN0aW9uOiBmdW5jLAogICAgICAgIGxvY2F0aW9uOiBzaW1wbGVMb2NhdGlvbihsb2NhdGlvbigpKSwKICAgICAgICB0ZXh0OiB0ZXh0KCkKICAgICAgfTsKICAgICAgZXJyb3IoSlNPTi5zdHJpbmdpZnkoZXhjZXB0aW9uKSk7CiAgICB9LAogICAgICAgIHBlZyRjMzMgPSAiQCIsCiAgICAgICAgcGVnJGMzNCA9IHsKICAgICAgdHlwZTogImxpdGVyYWwiLAogICAgICB2YWx1ZTogIkAiLAogICAgICBkZXNjcmlwdGlvbjogIlwiQFwiIgogICAgfSwKICAgICAgICBwZWckYzM1ID0gIjoiLAogICAgICAgIHBlZyRjMzYgPSB7CiAgICAgIHR5cGU6ICJsaXRlcmFsIiwKICAgICAgdmFsdWU6ICI6IiwKICAgICAgZGVzY3JpcHRpb246ICJcIjpcIiIKICAgIH0sCiAgICAgICAgcGVnJGMzNyA9IGZ1bmN0aW9uIHBlZyRjMzcocGxvdCwgc2VyaWVzKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgdHlwZTogJ3JlZmVyZW5jZScsCiAgICAgICAgcGxvdDogcGxvdCwKICAgICAgICBzZXJpZXM6IHNlcmllcwogICAgICB9OwogICAgfSwKICAgICAgICBwZWckYzM4ID0gZnVuY3Rpb24gcGVnJGMzOChwbG90KSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgdHlwZTogJ3JlZmVyZW5jZScsCiAgICAgICAgcGxvdDogcGxvdAogICAgICB9OwogICAgfSwKICAgICAgICBwZWckYzM5ID0gZnVuY3Rpb24gcGVnJGMzOShmdW5jLCByZXN0KSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgdHlwZTogJ2NoYWluJywKICAgICAgICBjaGFpbjogW2Z1bmNdLmNvbmNhdChyZXN0KQogICAgICB9OwogICAgfSwKICAgICAgICBwZWckYzQwID0gZnVuY3Rpb24gcGVnJGM0MChncm91cGVkLCBmdW5jdGlvbnMpIHsKICAgICAgdmFyIGZpcnN0ID0gewogICAgICAgIHR5cGU6ICdjaGFpbkxpc3QnLAogICAgICAgIGxpc3Q6IGdyb3VwZWQKICAgICAgfTsKICAgICAgZmlyc3QubGFiZWwgPSB0ZXh0KCk7CiAgICAgIHJldHVybiB7CiAgICAgICAgdHlwZTogImNoYWluIiwKICAgICAgICBjaGFpbjogW2ZpcnN0XS5jb25jYXQoZnVuY3Rpb25zKQogICAgICB9OwogICAgfSwKICAgICAgICBwZWckYzQxID0gewogICAgICB0eXBlOiAib3RoZXIiLAogICAgICBkZXNjcmlwdGlvbjogImxpdGVyYWwiCiAgICB9LAogICAgICAgIHBlZyRjNDIgPSAiXCIiLAogICAgICAgIHBlZyRjNDMgPSB7CiAgICAgIHR5cGU6ICJsaXRlcmFsIiwKICAgICAgdmFsdWU6ICJcIiIsCiAgICAgIGRlc2NyaXB0aW9uOiAiXCJcXFwiXCIiCiAgICB9LAogICAgICAgIHBlZyRjNDQgPSBmdW5jdGlvbiBwZWckYzQ0KGNoYXJzKSB7CiAgICAgIHJldHVybiBjaGFycy5qb2luKCcnKTsKICAgIH0sCiAgICAgICAgcGVnJGM0NSA9ICInIiwKICAgICAgICBwZWckYzQ2ID0gewogICAgICB0eXBlOiAibGl0ZXJhbCIsCiAgICAgIHZhbHVlOiAiJyIsCiAgICAgIGRlc2NyaXB0aW9uOiAiXCInXCIiCiAgICB9LAogICAgICAgIHBlZyRjNDcgPSAidHJ1ZSIsCiAgICAgICAgcGVnJGM0OCA9IHsKICAgICAgdHlwZTogImxpdGVyYWwiLAogICAgICB2YWx1ZTogInRydWUiLAogICAgICBkZXNjcmlwdGlvbjogIlwidHJ1ZVwiIgogICAgfSwKICAgICAgICBwZWckYzQ5ID0gZnVuY3Rpb24gcGVnJGM0OSgpIHsKICAgICAgcmV0dXJuIHRydWU7CiAgICB9LAogICAgICAgIHBlZyRjNTAgPSAiZmFsc2UiLAogICAgICAgIHBlZyRjNTEgPSB7CiAgICAgIHR5cGU6ICJsaXRlcmFsIiwKICAgICAgdmFsdWU6ICJmYWxzZSIsCiAgICAgIGRlc2NyaXB0aW9uOiAiXCJmYWxzZVwiIgogICAgfSwKICAgICAgICBwZWckYzUyID0gZnVuY3Rpb24gcGVnJGM1MigpIHsKICAgICAgcmV0dXJuIGZhbHNlOwogICAgfSwKICAgICAgICBwZWckYzUzID0gIm51bGwiLAogICAgICAgIHBlZyRjNTQgPSB7CiAgICAgIHR5cGU6ICJsaXRlcmFsIiwKICAgICAgdmFsdWU6ICJudWxsIiwKICAgICAgZGVzY3JpcHRpb246ICJcIm51bGxcIiIKICAgIH0sCiAgICAgICAgcGVnJGM1NSA9IGZ1bmN0aW9uIHBlZyRjNTUoKSB7CiAgICAgIHJldHVybiBudWxsOwogICAgfSwKICAgICAgICBwZWckYzU2ID0gL15bXigpIicsPSBcdF0vLAogICAgICAgIHBlZyRjNTcgPSB7CiAgICAgIHR5cGU6ICJjbGFzcyIsCiAgICAgIHZhbHVlOiAiW14oKVwiJyw9XFwgXFx0XSIsCiAgICAgIGRlc2NyaXB0aW9uOiAiW14oKVwiJyw9XFwgXFx0XSIKICAgIH0sCiAgICAgICAgcGVnJGM1OCA9IGZ1bmN0aW9uIHBlZyRjNTgoc3RyaW5nKSB7CiAgICAgIC8vIHRoaXMgYWxzbyBtYXRjaGVzIG51bWJlcnMgdmlhIE51bWJlcigpCiAgICAgIHZhciByZXN1bHQgPSBzdHJpbmcuam9pbignJyk7IC8vIFNvcnQgb2YgaGFja3ksIGJ1dCBQRUcgZG9lc24ndCBoYXZlIGJhY2t0cmFja2luZyBzbwogICAgICAvLyBhIG51bWJlciBydWxlIGlzIGhhcmQgdG8gcmVhZCwgYW5kIHBlcmZvcm1zIHdvcnNlCgogICAgICBpZiAoaXNOYU4oTnVtYmVyKHJlc3VsdCkpKSByZXR1cm4gcmVzdWx0OwogICAgICByZXR1cm4gTnVtYmVyKHJlc3VsdCk7CiAgICB9LAogICAgICAgIHBlZyRjNTkgPSAvXlsgXHRcclxuXS8sCiAgICAgICAgcGVnJGM2MCA9IHsKICAgICAgdHlwZTogImNsYXNzIiwKICAgICAgdmFsdWU6ICJbXFwgXFx0XFxyXFxuXSIsCiAgICAgIGRlc2NyaXB0aW9uOiAiW1xcIFxcdFxcclxcbl0iCiAgICB9LAogICAgICAgIHBlZyRjNjEgPSAiXFwiLAogICAgICAgIHBlZyRjNjIgPSB7CiAgICAgIHR5cGU6ICJsaXRlcmFsIiwKICAgICAgdmFsdWU6ICJcXCIsCiAgICAgIGRlc2NyaXB0aW9uOiAiXCJcXFxcXCIiCiAgICB9LAogICAgICAgIHBlZyRjNjMgPSBmdW5jdGlvbiBwZWckYzYzKHNlcXVlbmNlKSB7CiAgICAgIHJldHVybiBzZXF1ZW5jZTsKICAgIH0sCiAgICAgICAgcGVnJGM2NCA9IC9eW14iXS8sCiAgICAgICAgcGVnJGM2NSA9IHsKICAgICAgdHlwZTogImNsYXNzIiwKICAgICAgdmFsdWU6ICJbXlwiXSIsCiAgICAgIGRlc2NyaXB0aW9uOiAiW15cIl0iCiAgICB9LAogICAgICAgIHBlZyRjNjYgPSAvXlteJ10vLAogICAgICAgIHBlZyRjNjcgPSB7CiAgICAgIHR5cGU6ICJjbGFzcyIsCiAgICAgIHZhbHVlOiAiW14nXSIsCiAgICAgIGRlc2NyaXB0aW9uOiAiW14nXSIKICAgIH0sCiAgICAgICAgcGVnJGM2OCA9IC9eWzAtOV0vLAogICAgICAgIHBlZyRjNjkgPSB7CiAgICAgIHR5cGU6ICJjbGFzcyIsCiAgICAgIHZhbHVlOiAiWzAtOV0iLAogICAgICBkZXNjcmlwdGlvbjogIlswLTldIgogICAgfSwKICAgICAgICBwZWckYzcwID0gZnVuY3Rpb24gcGVnJGM3MChkaWdpdHMpIHsKICAgICAgcmV0dXJuIHBhcnNlSW50KGRpZ2l0cy5qb2luKCcnKSk7CiAgICB9LAogICAgICAgIHBlZyRjdXJyUG9zID0gMCwKICAgICAgICBwZWckc2F2ZWRQb3MgPSAwLAogICAgICAgIHBlZyRwb3NEZXRhaWxzQ2FjaGUgPSBbewogICAgICBsaW5lOiAxLAogICAgICBjb2x1bW46IDEsCiAgICAgIHNlZW5DUjogZmFsc2UKICAgIH1dLAogICAgICAgIHBlZyRtYXhGYWlsUG9zID0gMCwKICAgICAgICBwZWckbWF4RmFpbEV4cGVjdGVkID0gW10sCiAgICAgICAgcGVnJHNpbGVudEZhaWxzID0gMCwKICAgICAgICBwZWckcmVzdWx0OwoKICAgIGlmICgic3RhcnRSdWxlIiBpbiBvcHRpb25zKSB7CiAgICAgIGlmICghKG9wdGlvbnMuc3RhcnRSdWxlIGluIHBlZyRzdGFydFJ1bGVGdW5jdGlvbnMpKSB7CiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCJDYW4ndCBzdGFydCBwYXJzaW5nIGZyb20gcnVsZSBcIiIgKyBvcHRpb25zLnN0YXJ0UnVsZSArICJcIi4iKTsKICAgICAgfQoKICAgICAgcGVnJHN0YXJ0UnVsZUZ1bmN0aW9uID0gcGVnJHN0YXJ0UnVsZUZ1bmN0aW9uc1tvcHRpb25zLnN0YXJ0UnVsZV07CiAgICB9CgogICAgZnVuY3Rpb24gdGV4dCgpIHsKICAgICAgcmV0dXJuIGlucHV0LnN1YnN0cmluZyhwZWckc2F2ZWRQb3MsIHBlZyRjdXJyUG9zKTsKICAgIH0KCiAgICBmdW5jdGlvbiBsb2NhdGlvbigpIHsKICAgICAgcmV0dXJuIHBlZyRjb21wdXRlTG9jYXRpb24ocGVnJHNhdmVkUG9zLCBwZWckY3VyclBvcyk7CiAgICB9CgogICAgZnVuY3Rpb24gZXhwZWN0ZWQoZGVzY3JpcHRpb24pIHsKICAgICAgdGhyb3cgcGVnJGJ1aWxkRXhjZXB0aW9uKG51bGwsIFt7CiAgICAgICAgdHlwZTogIm90aGVyIiwKICAgICAgICBkZXNjcmlwdGlvbjogZGVzY3JpcHRpb24KICAgICAgfV0sIGlucHV0LnN1YnN0cmluZyhwZWckc2F2ZWRQb3MsIHBlZyRjdXJyUG9zKSwgcGVnJGNvbXB1dGVMb2NhdGlvbihwZWckc2F2ZWRQb3MsIHBlZyRjdXJyUG9zKSk7CiAgICB9CgogICAgZnVuY3Rpb24gZXJyb3IobWVzc2FnZSkgewogICAgICB0aHJvdyBwZWckYnVpbGRFeGNlcHRpb24obWVzc2FnZSwgbnVsbCwgaW5wdXQuc3Vic3RyaW5nKHBlZyRzYXZlZFBvcywgcGVnJGN1cnJQb3MpLCBwZWckY29tcHV0ZUxvY2F0aW9uKHBlZyRzYXZlZFBvcywgcGVnJGN1cnJQb3MpKTsKICAgIH0KCiAgICBmdW5jdGlvbiBwZWckY29tcHV0ZVBvc0RldGFpbHMocG9zKSB7CiAgICAgIHZhciBkZXRhaWxzID0gcGVnJHBvc0RldGFpbHNDYWNoZVtwb3NdLAogICAgICAgICAgcCwKICAgICAgICAgIGNoOwoKICAgICAgaWYgKGRldGFpbHMpIHsKICAgICAgICByZXR1cm4gZGV0YWlsczsKICAgICAgfSBlbHNlIHsKICAgICAgICBwID0gcG9zIC0gMTsKCiAgICAgICAgd2hpbGUgKCFwZWckcG9zRGV0YWlsc0NhY2hlW3BdKSB7CiAgICAgICAgICBwLS07CiAgICAgICAgfQoKICAgICAgICBkZXRhaWxzID0gcGVnJHBvc0RldGFpbHNDYWNoZVtwXTsKICAgICAgICBkZXRhaWxzID0gewogICAgICAgICAgbGluZTogZGV0YWlscy5saW5lLAogICAgICAgICAgY29sdW1uOiBkZXRhaWxzLmNvbHVtbiwKICAgICAgICAgIHNlZW5DUjogZGV0YWlscy5zZWVuQ1IKICAgICAgICB9OwoKICAgICAgICB3aGlsZSAocCA8IHBvcykgewogICAgICAgICAgY2ggPSBpbnB1dC5jaGFyQXQocCk7CgogICAgICAgICAgaWYgKGNoID09PSAiXG4iKSB7CiAgICAgICAgICAgIGlmICghZGV0YWlscy5zZWVuQ1IpIHsKICAgICAgICAgICAgICBkZXRhaWxzLmxpbmUrKzsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgZGV0YWlscy5jb2x1bW4gPSAxOwogICAgICAgICAgICBkZXRhaWxzLnNlZW5DUiA9IGZhbHNlOwogICAgICAgICAgfSBlbHNlIGlmIChjaCA9PT0gIlxyIiB8fCBjaCA9PT0gIlx1MjAyOCIgfHwgY2ggPT09ICJcdTIwMjkiKSB7CiAgICAgICAgICAgIGRldGFpbHMubGluZSsrOwogICAgICAgICAgICBkZXRhaWxzLmNvbHVtbiA9IDE7CiAgICAgICAgICAgIGRldGFpbHMuc2VlbkNSID0gdHJ1ZTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGRldGFpbHMuY29sdW1uKys7CiAgICAgICAgICAgIGRldGFpbHMuc2VlbkNSID0gZmFsc2U7CiAgICAgICAgICB9CgogICAgICAgICAgcCsrOwogICAgICAgIH0KCiAgICAgICAgcGVnJHBvc0RldGFpbHNDYWNoZVtwb3NdID0gZGV0YWlsczsKICAgICAgICByZXR1cm4gZGV0YWlsczsKICAgICAgfQogICAgfQoKICAgIGZ1bmN0aW9uIHBlZyRjb21wdXRlTG9jYXRpb24oc3RhcnRQb3MsIGVuZFBvcykgewogICAgICB2YXIgc3RhcnRQb3NEZXRhaWxzID0gcGVnJGNvbXB1dGVQb3NEZXRhaWxzKHN0YXJ0UG9zKSwKICAgICAgICAgIGVuZFBvc0RldGFpbHMgPSBwZWckY29tcHV0ZVBvc0RldGFpbHMoZW5kUG9zKTsKICAgICAgcmV0dXJuIHsKICAgICAgICBzdGFydDogewogICAgICAgICAgb2Zmc2V0OiBzdGFydFBvcywKICAgICAgICAgIGxpbmU6IHN0YXJ0UG9zRGV0YWlscy5saW5lLAogICAgICAgICAgY29sdW1uOiBzdGFydFBvc0RldGFpbHMuY29sdW1uCiAgICAgICAgfSwKICAgICAgICBlbmQ6IHsKICAgICAgICAgIG9mZnNldDogZW5kUG9zLAogICAgICAgICAgbGluZTogZW5kUG9zRGV0YWlscy5saW5lLAogICAgICAgICAgY29sdW1uOiBlbmRQb3NEZXRhaWxzLmNvbHVtbgogICAgICAgIH0KICAgICAgfTsKICAgIH0KCiAgICBmdW5jdGlvbiBwZWckZmFpbChleHBlY3RlZCkgewogICAgICBpZiAocGVnJGN1cnJQb3MgPCBwZWckbWF4RmFpbFBvcykgewogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgaWYgKHBlZyRjdXJyUG9zID4gcGVnJG1heEZhaWxQb3MpIHsKICAgICAgICBwZWckbWF4RmFpbFBvcyA9IHBlZyRjdXJyUG9zOwogICAgICAgIHBlZyRtYXhGYWlsRXhwZWN0ZWQgPSBbXTsKICAgICAgfQoKICAgICAgcGVnJG1heEZhaWxFeHBlY3RlZC5wdXNoKGV4cGVjdGVkKTsKICAgIH0KCiAgICBmdW5jdGlvbiBwZWckYnVpbGRFeGNlcHRpb24obWVzc2FnZSwgZXhwZWN0ZWQsIGZvdW5kLCBsb2NhdGlvbikgewogICAgICBmdW5jdGlvbiBjbGVhbnVwRXhwZWN0ZWQoZXhwZWN0ZWQpIHsKICAgICAgICB2YXIgaSA9IDE7CiAgICAgICAgZXhwZWN0ZWQuc29ydChmdW5jdGlvbiAoYSwgYikgewogICAgICAgICAgaWYgKGEuZGVzY3JpcHRpb24gPCBiLmRlc2NyaXB0aW9uKSB7CiAgICAgICAgICAgIHJldHVybiAtMTsKICAgICAgICAgIH0gZWxzZSBpZiAoYS5kZXNjcmlwdGlvbiA+IGIuZGVzY3JpcHRpb24pIHsKICAgICAgICAgICAgcmV0dXJuIDE7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICByZXR1cm4gMDsKICAgICAgICAgIH0KICAgICAgICB9KTsKCiAgICAgICAgd2hpbGUgKGkgPCBleHBlY3RlZC5sZW5ndGgpIHsKICAgICAgICAgIGlmIChleHBlY3RlZFtpIC0gMV0gPT09IGV4cGVjdGVkW2ldKSB7CiAgICAgICAgICAgIGV4cGVjdGVkLnNwbGljZShpLCAxKTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGkrKzsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KCiAgICAgIGZ1bmN0aW9uIGJ1aWxkTWVzc2FnZShleHBlY3RlZCwgZm91bmQpIHsKICAgICAgICBmdW5jdGlvbiBzdHJpbmdFc2NhcGUocykgewogICAgICAgICAgZnVuY3Rpb24gaGV4KGNoKSB7CiAgICAgICAgICAgIHJldHVybiBjaC5jaGFyQ29kZUF0KDApLnRvU3RyaW5nKDE2KS50b1VwcGVyQ2FzZSgpOwogICAgICAgICAgfQoKICAgICAgICAgIHJldHVybiBzLnJlcGxhY2UoL1xcL2csICdcXFxcJykucmVwbGFjZSgvIi9nLCAnXFwiJykucmVwbGFjZSgvXHgwOC9nLCAnXFxiJykucmVwbGFjZSgvXHQvZywgJ1xcdCcpLnJlcGxhY2UoL1xuL2csICdcXG4nKS5yZXBsYWNlKC9cZi9nLCAnXFxmJykucmVwbGFjZSgvXHIvZywgJ1xccicpLnJlcGxhY2UoL1tceDAwLVx4MDdceDBCXHgwRVx4MEZdL2csIGZ1bmN0aW9uIChjaCkgewogICAgICAgICAgICByZXR1cm4gJ1xceDAnICsgaGV4KGNoKTsKICAgICAgICAgIH0pLnJlcGxhY2UoL1tceDEwLVx4MUZceDgwLVx4RkZdL2csIGZ1bmN0aW9uIChjaCkgewogICAgICAgICAgICByZXR1cm4gJ1xceCcgKyBoZXgoY2gpOwogICAgICAgICAgfSkucmVwbGFjZSgvW1x1MDEwMC1cdTBGRkZdL2csIGZ1bmN0aW9uIChjaCkgewogICAgICAgICAgICByZXR1cm4gIlxcdTAiICsgaGV4KGNoKTsKICAgICAgICAgIH0pLnJlcGxhY2UoL1tcdTEwMDAtXHVGRkZGXS9nLCBmdW5jdGlvbiAoY2gpIHsKICAgICAgICAgICAgcmV0dXJuICJcXHUiICsgaGV4KGNoKTsKICAgICAgICAgIH0pOwogICAgICAgIH0KCiAgICAgICAgdmFyIGV4cGVjdGVkRGVzY3MgPSBuZXcgQXJyYXkoZXhwZWN0ZWQubGVuZ3RoKSwKICAgICAgICAgICAgZXhwZWN0ZWREZXNjLAogICAgICAgICAgICBmb3VuZERlc2MsCiAgICAgICAgICAgIGk7CgogICAgICAgIGZvciAoaSA9IDA7IGkgPCBleHBlY3RlZC5sZW5ndGg7IGkrKykgewogICAgICAgICAgZXhwZWN0ZWREZXNjc1tpXSA9IGV4cGVjdGVkW2ldLmRlc2NyaXB0aW9uOwogICAgICAgIH0KCiAgICAgICAgZXhwZWN0ZWREZXNjID0gZXhwZWN0ZWQubGVuZ3RoID4gMSA/IGV4cGVjdGVkRGVzY3Muc2xpY2UoMCwgLTEpLmpvaW4oIiwgIikgKyAiIG9yICIgKyBleHBlY3RlZERlc2NzW2V4cGVjdGVkLmxlbmd0aCAtIDFdIDogZXhwZWN0ZWREZXNjc1swXTsKICAgICAgICBmb3VuZERlc2MgPSBmb3VuZCA/ICJcIiIgKyBzdHJpbmdFc2NhcGUoZm91bmQpICsgIlwiIiA6ICJlbmQgb2YgaW5wdXQiOwogICAgICAgIHJldHVybiAiRXhwZWN0ZWQgIiArIGV4cGVjdGVkRGVzYyArICIgYnV0ICIgKyBmb3VuZERlc2MgKyAiIGZvdW5kLiI7CiAgICAgIH0KCiAgICAgIGlmIChleHBlY3RlZCAhPT0gbnVsbCkgewogICAgICAgIGNsZWFudXBFeHBlY3RlZChleHBlY3RlZCk7CiAgICAgIH0KCiAgICAgIHJldHVybiBuZXcgcGVnJFN5bnRheEVycm9yKG1lc3NhZ2UgIT09IG51bGwgPyBtZXNzYWdlIDogYnVpbGRNZXNzYWdlKGV4cGVjdGVkLCBmb3VuZCksIGV4cGVjdGVkLCBmb3VuZCwgbG9jYXRpb24pOwogICAgfQoKICAgIGZ1bmN0aW9uIHBlZyRwYXJzZXN0YXJ0KCkgewogICAgICB2YXIgczAsIHMxLCBzMjsKICAgICAgczAgPSBwZWckY3VyclBvczsKICAgICAgczEgPSBwZWckcGFyc2VzcGFjZSgpOwoKICAgICAgaWYgKHMxID09PSBwZWckRkFJTEVEKSB7CiAgICAgICAgczEgPSBudWxsOwogICAgICB9CgogICAgICBpZiAoczEgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICBzMiA9IHBlZyRwYXJzZXNlcmllcygpOwoKICAgICAgICBpZiAoczIgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgIHBlZyRzYXZlZFBvcyA9IHMwOwogICAgICAgICAgczEgPSBwZWckYzAoczIpOwogICAgICAgICAgczAgPSBzMTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDsKICAgICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgICB9CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDsKICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CiAgICAgIH0KCiAgICAgIHJldHVybiBzMDsKICAgIH0KCiAgICBmdW5jdGlvbiBwZWckcGFyc2VhcmdfbGlzdCgpIHsKICAgICAgdmFyIHMwLCBzMSwgczIsIHMzLCBzNCwgczUsIHM2LCBzNzsKICAgICAgczAgPSBwZWckY3VyclBvczsKICAgICAgczEgPSBwZWckcGFyc2Vhcmd1bWVudCgpOwoKICAgICAgaWYgKHMxICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgczIgPSBbXTsKICAgICAgICBzMyA9IHBlZyRjdXJyUG9zOwogICAgICAgIHM0ID0gcGVnJHBhcnNlc3BhY2UoKTsKCiAgICAgICAgaWYgKHM0ID09PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICBzNCA9IG51bGw7CiAgICAgICAgfQoKICAgICAgICBpZiAoczQgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgIGlmIChpbnB1dC5jaGFyQ29kZUF0KHBlZyRjdXJyUG9zKSA9PT0gNDQpIHsKICAgICAgICAgICAgczUgPSBwZWckYzE7CiAgICAgICAgICAgIHBlZyRjdXJyUG9zKys7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBzNSA9IHBlZyRGQUlMRUQ7CgogICAgICAgICAgICBpZiAocGVnJHNpbGVudEZhaWxzID09PSAwKSB7CiAgICAgICAgICAgICAgcGVnJGZhaWwocGVnJGMyKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQoKICAgICAgICAgIGlmIChzNSAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgICBzNiA9IHBlZyRwYXJzZXNwYWNlKCk7CgogICAgICAgICAgICBpZiAoczYgPT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgICBzNiA9IG51bGw7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmIChzNiAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgICAgIHM3ID0gcGVnJHBhcnNlYXJndW1lbnQoKTsKCiAgICAgICAgICAgICAgaWYgKHM3ICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgICAgICBwZWckc2F2ZWRQb3MgPSBzMzsKICAgICAgICAgICAgICAgIHM0ID0gcGVnJGMzKHMxLCBzNyk7CiAgICAgICAgICAgICAgICBzMyA9IHM0OwogICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBwZWckY3VyclBvcyA9IHMzOwogICAgICAgICAgICAgICAgczMgPSBwZWckRkFJTEVEOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICBwZWckY3VyclBvcyA9IHMzOwogICAgICAgICAgICAgIHMzID0gcGVnJEZBSUxFRDsKICAgICAgICAgICAgfQogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgcGVnJGN1cnJQb3MgPSBzMzsKICAgICAgICAgICAgczMgPSBwZWckRkFJTEVEOwogICAgICAgICAgfQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBwZWckY3VyclBvcyA9IHMzOwogICAgICAgICAgczMgPSBwZWckRkFJTEVEOwogICAgICAgIH0KCiAgICAgICAgd2hpbGUgKHMzICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICBzMi5wdXNoKHMzKTsKICAgICAgICAgIHMzID0gcGVnJGN1cnJQb3M7CiAgICAgICAgICBzNCA9IHBlZyRwYXJzZXNwYWNlKCk7CgogICAgICAgICAgaWYgKHM0ID09PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgIHM0ID0gbnVsbDsKICAgICAgICAgIH0KCiAgICAgICAgICBpZiAoczQgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgaWYgKGlucHV0LmNoYXJDb2RlQXQocGVnJGN1cnJQb3MpID09PSA0NCkgewogICAgICAgICAgICAgIHM1ID0gcGVnJGMxOwogICAgICAgICAgICAgIHBlZyRjdXJyUG9zKys7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgczUgPSBwZWckRkFJTEVEOwoKICAgICAgICAgICAgICBpZiAocGVnJHNpbGVudEZhaWxzID09PSAwKSB7CiAgICAgICAgICAgICAgICBwZWckZmFpbChwZWckYzIpOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQoKICAgICAgICAgICAgaWYgKHM1ICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgICAgczYgPSBwZWckcGFyc2VzcGFjZSgpOwoKICAgICAgICAgICAgICBpZiAoczYgPT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgICAgIHM2ID0gbnVsbDsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIGlmIChzNiAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgICAgICAgczcgPSBwZWckcGFyc2Vhcmd1bWVudCgpOwoKICAgICAgICAgICAgICAgIGlmIChzNyAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgICAgICAgICBwZWckc2F2ZWRQb3MgPSBzMzsKICAgICAgICAgICAgICAgICAgczQgPSBwZWckYzMoczEsIHM3KTsKICAgICAgICAgICAgICAgICAgczMgPSBzNDsKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgIHBlZyRjdXJyUG9zID0gczM7CiAgICAgICAgICAgICAgICAgIHMzID0gcGVnJEZBSUxFRDsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgcGVnJGN1cnJQb3MgPSBzMzsKICAgICAgICAgICAgICAgIHMzID0gcGVnJEZBSUxFRDsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgcGVnJGN1cnJQb3MgPSBzMzsKICAgICAgICAgICAgICBzMyA9IHBlZyRGQUlMRUQ7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHBlZyRjdXJyUG9zID0gczM7CiAgICAgICAgICAgIHMzID0gcGVnJEZBSUxFRDsKICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIGlmIChzMiAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgczMgPSBwZWckcGFyc2VzcGFjZSgpOwoKICAgICAgICAgIGlmIChzMyA9PT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgICBzMyA9IG51bGw7CiAgICAgICAgICB9CgogICAgICAgICAgaWYgKHMzICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgIGlmIChpbnB1dC5jaGFyQ29kZUF0KHBlZyRjdXJyUG9zKSA9PT0gNDQpIHsKICAgICAgICAgICAgICBzNCA9IHBlZyRjMTsKICAgICAgICAgICAgICBwZWckY3VyclBvcysrOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIHM0ID0gcGVnJEZBSUxFRDsKCiAgICAgICAgICAgICAgaWYgKHBlZyRzaWxlbnRGYWlscyA9PT0gMCkgewogICAgICAgICAgICAgICAgcGVnJGZhaWwocGVnJGMyKTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmIChzNCA9PT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgICAgIHM0ID0gbnVsbDsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgaWYgKHM0ICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgICAgcGVnJHNhdmVkUG9zID0gczA7CiAgICAgICAgICAgICAgczEgPSBwZWckYzQoczEsIHMyKTsKICAgICAgICAgICAgICBzMCA9IHMxOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIHBlZyRjdXJyUG9zID0gczA7CiAgICAgICAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICAgICAgICB9CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CiAgICAgICAgICB9CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHBlZyRjdXJyUG9zID0gczA7CiAgICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CiAgICAgICAgfQogICAgICB9IGVsc2UgewogICAgICAgIHBlZyRjdXJyUG9zID0gczA7CiAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICB9CgogICAgICByZXR1cm4gczA7CiAgICB9CgogICAgZnVuY3Rpb24gcGVnJHBhcnNlYXJndW1lbnQoKSB7CiAgICAgIHZhciBzMCwgczEsIHMyLCBzMywgczQsIHM1OwogICAgICBzMCA9IHBlZyRjdXJyUG9zOwogICAgICBzMSA9IHBlZyRwYXJzZWFyZ3VtZW50X25hbWUoKTsKCiAgICAgIGlmIChzMSAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgIHMyID0gcGVnJHBhcnNlc3BhY2UoKTsKCiAgICAgICAgaWYgKHMyID09PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICBzMiA9IG51bGw7CiAgICAgICAgfQoKICAgICAgICBpZiAoczIgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgIGlmIChpbnB1dC5jaGFyQ29kZUF0KHBlZyRjdXJyUG9zKSA9PT0gNjEpIHsKICAgICAgICAgICAgczMgPSBwZWckYzU7CiAgICAgICAgICAgIHBlZyRjdXJyUG9zKys7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBzMyA9IHBlZyRGQUlMRUQ7CgogICAgICAgICAgICBpZiAocGVnJHNpbGVudEZhaWxzID09PSAwKSB7CiAgICAgICAgICAgICAgcGVnJGZhaWwocGVnJGM2KTsKICAgICAgICAgICAgfQogICAgICAgICAgfQoKICAgICAgICAgIGlmIChzMyAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgICBzNCA9IHBlZyRwYXJzZXNwYWNlKCk7CgogICAgICAgICAgICBpZiAoczQgPT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgICBzNCA9IG51bGw7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmIChzNCAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgICAgIHM1ID0gcGVnJHBhcnNlYXJnX3R5cGUoKTsKCiAgICAgICAgICAgICAgaWYgKHM1ICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgICAgICBwZWckc2F2ZWRQb3MgPSBzMDsKICAgICAgICAgICAgICAgIHMxID0gcGVnJGM3KHMxLCBzNSk7CiAgICAgICAgICAgICAgICBzMCA9IHMxOwogICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgICAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgICAgICAgfQogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDsKICAgICAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICAgICAgfQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICAgIH0KICAgICAgfSBlbHNlIHsKICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgfQoKICAgICAgaWYgKHMwID09PSBwZWckRkFJTEVEKSB7CiAgICAgICAgczAgPSBwZWckY3VyclBvczsKICAgICAgICBzMSA9IHBlZyRwYXJzZXNwYWNlKCk7CgogICAgICAgIGlmIChzMSA9PT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgczEgPSBudWxsOwogICAgICAgIH0KCiAgICAgICAgaWYgKHMxICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICBpZiAoaW5wdXQuY2hhckNvZGVBdChwZWckY3VyclBvcykgPT09IDYxKSB7CiAgICAgICAgICAgIHMyID0gcGVnJGM1OwogICAgICAgICAgICBwZWckY3VyclBvcysrOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgczIgPSBwZWckRkFJTEVEOwoKICAgICAgICAgICAgaWYgKHBlZyRzaWxlbnRGYWlscyA9PT0gMCkgewogICAgICAgICAgICAgIHBlZyRmYWlsKHBlZyRjNik7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KCiAgICAgICAgICBpZiAoczIgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgczMgPSBwZWckcGFyc2VzcGFjZSgpOwoKICAgICAgICAgICAgaWYgKHMzID09PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgICAgczMgPSBudWxsOwogICAgICAgICAgICB9CgogICAgICAgICAgICBpZiAoczMgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgICBzNCA9IHBlZyRwYXJzZWFyZ190eXBlKCk7CgogICAgICAgICAgICAgIGlmIChzNCA9PT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgICAgICAgczQgPSBudWxsOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgaWYgKHM0ICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgICAgICBwZWckc2F2ZWRQb3MgPSBzMDsKICAgICAgICAgICAgICAgIHMxID0gcGVnJGM4KHM0KTsKICAgICAgICAgICAgICAgIHMwID0gczE7CiAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHBlZyRjdXJyUG9zID0gczA7CiAgICAgICAgICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIHBlZyRjdXJyUG9zID0gczA7CiAgICAgICAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICAgICAgICB9CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CiAgICAgICAgICB9CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHBlZyRjdXJyUG9zID0gczA7CiAgICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CiAgICAgICAgfQoKICAgICAgICBpZiAoczAgPT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgIHMwID0gcGVnJGN1cnJQb3M7CiAgICAgICAgICBzMSA9IHBlZyRwYXJzZWFyZ3VtZW50X25hbWUoKTsKCiAgICAgICAgICBpZiAoczEgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgczIgPSBwZWckcGFyc2VzcGFjZSgpOwoKICAgICAgICAgICAgaWYgKHMyID09PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgICAgczIgPSBudWxsOwogICAgICAgICAgICB9CgogICAgICAgICAgICBpZiAoczIgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgICBpZiAoaW5wdXQuY2hhckNvZGVBdChwZWckY3VyclBvcykgPT09IDYxKSB7CiAgICAgICAgICAgICAgICBzMyA9IHBlZyRjNTsKICAgICAgICAgICAgICAgIHBlZyRjdXJyUG9zKys7CiAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHMzID0gcGVnJEZBSUxFRDsKCiAgICAgICAgICAgICAgICBpZiAocGVnJHNpbGVudEZhaWxzID09PSAwKSB7CiAgICAgICAgICAgICAgICAgIHBlZyRmYWlsKHBlZyRjNik7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBpZiAoczMgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgICAgIHBlZyRzYXZlZFBvcyA9IHMwOwogICAgICAgICAgICAgICAgczEgPSBwZWckYzkoczEpOwogICAgICAgICAgICAgICAgczAgPSBzMTsKICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDsKICAgICAgICAgICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDsKICAgICAgICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHBlZyRjdXJyUG9zID0gczA7CiAgICAgICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgICAgIH0KCiAgICAgICAgICBpZiAoczAgPT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgczAgPSBwZWckY3VyclBvczsKICAgICAgICAgICAgczEgPSBwZWckcGFyc2VhcmdfdHlwZSgpOwoKICAgICAgICAgICAgaWYgKHMxICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgICAgcGVnJHNhdmVkUG9zID0gczA7CiAgICAgICAgICAgICAgczEgPSBwZWckYzEwKHMxKTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgczAgPSBzMTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KCiAgICAgIHJldHVybiBzMDsKICAgIH0KCiAgICBmdW5jdGlvbiBwZWckcGFyc2VhcmdfdHlwZSgpIHsKICAgICAgdmFyIHMwLCBzMTsKICAgICAgczAgPSBwZWckcGFyc2V2YXJpYWJsZV9nZXQoKTsKCiAgICAgIGlmIChzMCA9PT0gcGVnJEZBSUxFRCkgewogICAgICAgIHMwID0gcGVnJHBhcnNlc2VyaWVzX3R5cGUoKTsKCiAgICAgICAgaWYgKHMwID09PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICBzMCA9IHBlZyRjdXJyUG9zOwogICAgICAgICAgczEgPSBwZWckcGFyc2VsaXRlcmFsKCk7CgogICAgICAgICAgaWYgKHMxICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgIHBlZyRzYXZlZFBvcyA9IHMwOwogICAgICAgICAgICBzMSA9IHBlZyRjMTEoczEpOwogICAgICAgICAgfQoKICAgICAgICAgIHMwID0gczE7CiAgICAgICAgfQogICAgICB9CgogICAgICByZXR1cm4gczA7CiAgICB9CgogICAgZnVuY3Rpb24gcGVnJHBhcnNldmFyaWFibGVfZ2V0KCkgewogICAgICB2YXIgczAsIHMxLCBzMjsKICAgICAgczAgPSBwZWckY3VyclBvczsKCiAgICAgIGlmIChpbnB1dC5jaGFyQ29kZUF0KHBlZyRjdXJyUG9zKSA9PT0gMzYpIHsKICAgICAgICBzMSA9IHBlZyRjMTI7CiAgICAgICAgcGVnJGN1cnJQb3MrKzsKICAgICAgfSBlbHNlIHsKICAgICAgICBzMSA9IHBlZyRGQUlMRUQ7CgogICAgICAgIGlmIChwZWckc2lsZW50RmFpbHMgPT09IDApIHsKICAgICAgICAgIHBlZyRmYWlsKHBlZyRjMTMpOwogICAgICAgIH0KICAgICAgfQoKICAgICAgaWYgKHMxICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgczIgPSBwZWckcGFyc2Vhcmd1bWVudF9uYW1lKCk7CgogICAgICAgIGlmIChzMiAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgcGVnJHNhdmVkUG9zID0gczA7CiAgICAgICAgICBzMSA9IHBlZyRjMTQoczIpOwogICAgICAgICAgczAgPSBzMTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDsKICAgICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgICB9CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDsKICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CiAgICAgIH0KCiAgICAgIHJldHVybiBzMDsKICAgIH0KCiAgICBmdW5jdGlvbiBwZWckcGFyc2V2YXJpYWJsZV9zZXQoKSB7CiAgICAgIHZhciBzMCwgczEsIHMyLCBzMywgczQsIHM1LCBzNjsKICAgICAgczAgPSBwZWckY3VyclBvczsKCiAgICAgIGlmIChpbnB1dC5jaGFyQ29kZUF0KHBlZyRjdXJyUG9zKSA9PT0gMzYpIHsKICAgICAgICBzMSA9IHBlZyRjMTI7CiAgICAgICAgcGVnJGN1cnJQb3MrKzsKICAgICAgfSBlbHNlIHsKICAgICAgICBzMSA9IHBlZyRGQUlMRUQ7CgogICAgICAgIGlmIChwZWckc2lsZW50RmFpbHMgPT09IDApIHsKICAgICAgICAgIHBlZyRmYWlsKHBlZyRjMTMpOwogICAgICAgIH0KICAgICAgfQoKICAgICAgaWYgKHMxICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgczIgPSBwZWckcGFyc2Vhcmd1bWVudF9uYW1lKCk7CgogICAgICAgIGlmIChzMiAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgczMgPSBwZWckcGFyc2VzcGFjZSgpOwoKICAgICAgICAgIGlmIChzMyA9PT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgICBzMyA9IG51bGw7CiAgICAgICAgICB9CgogICAgICAgICAgaWYgKHMzICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgIGlmIChpbnB1dC5jaGFyQ29kZUF0KHBlZyRjdXJyUG9zKSA9PT0gNjEpIHsKICAgICAgICAgICAgICBzNCA9IHBlZyRjNTsKICAgICAgICAgICAgICBwZWckY3VyclBvcysrOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIHM0ID0gcGVnJEZBSUxFRDsKCiAgICAgICAgICAgICAgaWYgKHBlZyRzaWxlbnRGYWlscyA9PT0gMCkgewogICAgICAgICAgICAgICAgcGVnJGZhaWwocGVnJGM2KTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmIChzNCAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgICAgIHM1ID0gcGVnJHBhcnNlc3BhY2UoKTsKCiAgICAgICAgICAgICAgaWYgKHM1ID09PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgICAgICBzNSA9IG51bGw7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBpZiAoczUgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgICAgIHM2ID0gcGVnJHBhcnNlYXJnX3R5cGUoKTsKCiAgICAgICAgICAgICAgICBpZiAoczYgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgICAgICAgcGVnJHNhdmVkUG9zID0gczA7CiAgICAgICAgICAgICAgICAgIHMxID0gcGVnJGMxNShzMiwgczYpOwogICAgICAgICAgICAgICAgICBzMCA9IHMxOwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDsKICAgICAgICAgICAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgICAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgICAgICAgfQogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDsKICAgICAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICAgICAgfQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICAgIH0KICAgICAgfSBlbHNlIHsKICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgfQoKICAgICAgcmV0dXJuIHMwOwogICAgfQoKICAgIGZ1bmN0aW9uIHBlZyRwYXJzZXNlcmllc190eXBlKCkgewogICAgICB2YXIgczA7CiAgICAgIHMwID0gcGVnJHBhcnNldmFyaWFibGVfc2V0KCk7CgogICAgICBpZiAoczAgPT09IHBlZyRGQUlMRUQpIHsKICAgICAgICBzMCA9IHBlZyRwYXJzZXZhcmlhYmxlX2dldCgpOwoKICAgICAgICBpZiAoczAgPT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgIHMwID0gcGVnJHBhcnNlZ3JvdXAoKTsKCiAgICAgICAgICBpZiAoczAgPT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgczAgPSBwZWckcGFyc2VjaGFpbigpOwoKICAgICAgICAgICAgaWYgKHMwID09PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgICAgczAgPSBwZWckcGFyc2VyZWZlcmVuY2UoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQoKICAgICAgcmV0dXJuIHMwOwogICAgfQoKICAgIGZ1bmN0aW9uIHBlZyRwYXJzZXNlcmllcygpIHsKICAgICAgdmFyIHMwLCBzMSwgczIsIHMzLCBzNCwgczUsIHM2LCBzNzsKICAgICAgczAgPSBwZWckY3VyclBvczsKICAgICAgczEgPSBwZWckcGFyc2VzZXJpZXNfdHlwZSgpOwoKICAgICAgaWYgKHMxICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgczIgPSBbXTsKICAgICAgICBzMyA9IHBlZyRjdXJyUG9zOwogICAgICAgIHM0ID0gcGVnJHBhcnNlc3BhY2UoKTsKCiAgICAgICAgaWYgKHM0ID09PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICBzNCA9IG51bGw7CiAgICAgICAgfQoKICAgICAgICBpZiAoczQgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgIGlmIChpbnB1dC5jaGFyQ29kZUF0KHBlZyRjdXJyUG9zKSA9PT0gNDQpIHsKICAgICAgICAgICAgczUgPSBwZWckYzE7CiAgICAgICAgICAgIHBlZyRjdXJyUG9zKys7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBzNSA9IHBlZyRGQUlMRUQ7CgogICAgICAgICAgICBpZiAocGVnJHNpbGVudEZhaWxzID09PSAwKSB7CiAgICAgICAgICAgICAgcGVnJGZhaWwocGVnJGMyKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQoKICAgICAgICAgIGlmIChzNSAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgICBzNiA9IHBlZyRwYXJzZXNwYWNlKCk7CgogICAgICAgICAgICBpZiAoczYgPT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgICBzNiA9IG51bGw7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmIChzNiAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgICAgIHM3ID0gcGVnJHBhcnNlc2VyaWVzX3R5cGUoKTsKCiAgICAgICAgICAgICAgaWYgKHM3ICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgICAgICBwZWckc2F2ZWRQb3MgPSBzMzsKICAgICAgICAgICAgICAgIHM0ID0gcGVnJGMxNihzMSwgczcpOwogICAgICAgICAgICAgICAgczMgPSBzNDsKICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgcGVnJGN1cnJQb3MgPSBzMzsKICAgICAgICAgICAgICAgIHMzID0gcGVnJEZBSUxFRDsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgcGVnJGN1cnJQb3MgPSBzMzsKICAgICAgICAgICAgICBzMyA9IHBlZyRGQUlMRUQ7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHBlZyRjdXJyUG9zID0gczM7CiAgICAgICAgICAgIHMzID0gcGVnJEZBSUxFRDsKICAgICAgICAgIH0KICAgICAgICB9IGVsc2UgewogICAgICAgICAgcGVnJGN1cnJQb3MgPSBzMzsKICAgICAgICAgIHMzID0gcGVnJEZBSUxFRDsKICAgICAgICB9CgogICAgICAgIHdoaWxlIChzMyAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgczIucHVzaChzMyk7CiAgICAgICAgICBzMyA9IHBlZyRjdXJyUG9zOwogICAgICAgICAgczQgPSBwZWckcGFyc2VzcGFjZSgpOwoKICAgICAgICAgIGlmIChzNCA9PT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgICBzNCA9IG51bGw7CiAgICAgICAgICB9CgogICAgICAgICAgaWYgKHM0ICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgIGlmIChpbnB1dC5jaGFyQ29kZUF0KHBlZyRjdXJyUG9zKSA9PT0gNDQpIHsKICAgICAgICAgICAgICBzNSA9IHBlZyRjMTsKICAgICAgICAgICAgICBwZWckY3VyclBvcysrOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIHM1ID0gcGVnJEZBSUxFRDsKCiAgICAgICAgICAgICAgaWYgKHBlZyRzaWxlbnRGYWlscyA9PT0gMCkgewogICAgICAgICAgICAgICAgcGVnJGZhaWwocGVnJGMyKTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmIChzNSAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgICAgIHM2ID0gcGVnJHBhcnNlc3BhY2UoKTsKCiAgICAgICAgICAgICAgaWYgKHM2ID09PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgICAgICBzNiA9IG51bGw7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBpZiAoczYgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgICAgIHM3ID0gcGVnJHBhcnNlc2VyaWVzX3R5cGUoKTsKCiAgICAgICAgICAgICAgICBpZiAoczcgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgICAgICAgcGVnJHNhdmVkUG9zID0gczM7CiAgICAgICAgICAgICAgICAgIHM0ID0gcGVnJGMxNihzMSwgczcpOwogICAgICAgICAgICAgICAgICBzMyA9IHM0OwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgcGVnJGN1cnJQb3MgPSBzMzsKICAgICAgICAgICAgICAgICAgczMgPSBwZWckRkFJTEVEOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBwZWckY3VyclBvcyA9IHMzOwogICAgICAgICAgICAgICAgczMgPSBwZWckRkFJTEVEOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICBwZWckY3VyclBvcyA9IHMzOwogICAgICAgICAgICAgIHMzID0gcGVnJEZBSUxFRDsKICAgICAgICAgICAgfQogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgcGVnJGN1cnJQb3MgPSBzMzsKICAgICAgICAgICAgczMgPSBwZWckRkFJTEVEOwogICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgaWYgKHMyICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICBpZiAoaW5wdXQuY2hhckNvZGVBdChwZWckY3VyclBvcykgPT09IDQ0KSB7CiAgICAgICAgICAgIHMzID0gcGVnJGMxOwogICAgICAgICAgICBwZWckY3VyclBvcysrOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgczMgPSBwZWckRkFJTEVEOwoKICAgICAgICAgICAgaWYgKHBlZyRzaWxlbnRGYWlscyA9PT0gMCkgewogICAgICAgICAgICAgIHBlZyRmYWlsKHBlZyRjMik7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KCiAgICAgICAgICBpZiAoczMgPT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgczMgPSBudWxsOwogICAgICAgICAgfQoKICAgICAgICAgIGlmIChzMyAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgICBwZWckc2F2ZWRQb3MgPSBzMDsKICAgICAgICAgICAgczEgPSBwZWckYzE3KHMxLCBzMik7CiAgICAgICAgICAgIHMwID0gczE7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CiAgICAgICAgICB9CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHBlZyRjdXJyUG9zID0gczA7CiAgICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CiAgICAgICAgfQogICAgICB9IGVsc2UgewogICAgICAgIHBlZyRjdXJyUG9zID0gczA7CiAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICB9CgogICAgICByZXR1cm4gczA7CiAgICB9CgogICAgZnVuY3Rpb24gcGVnJHBhcnNlZnVuY3Rpb25fbmFtZSgpIHsKICAgICAgdmFyIHMwLCBzMSwgczIsIHMzOwogICAgICBzMCA9IHBlZyRjdXJyUG9zOwogICAgICBzMSA9IFtdOwoKICAgICAgaWYgKHBlZyRjMTgudGVzdChpbnB1dC5jaGFyQXQocGVnJGN1cnJQb3MpKSkgewogICAgICAgIHMyID0gaW5wdXQuY2hhckF0KHBlZyRjdXJyUG9zKTsKICAgICAgICBwZWckY3VyclBvcysrOwogICAgICB9IGVsc2UgewogICAgICAgIHMyID0gcGVnJEZBSUxFRDsKCiAgICAgICAgaWYgKHBlZyRzaWxlbnRGYWlscyA9PT0gMCkgewogICAgICAgICAgcGVnJGZhaWwocGVnJGMxOSk7CiAgICAgICAgfQogICAgICB9CgogICAgICBpZiAoczIgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICB3aGlsZSAoczIgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgIHMxLnB1c2goczIpOwoKICAgICAgICAgIGlmIChwZWckYzE4LnRlc3QoaW5wdXQuY2hhckF0KHBlZyRjdXJyUG9zKSkpIHsKICAgICAgICAgICAgczIgPSBpbnB1dC5jaGFyQXQocGVnJGN1cnJQb3MpOwogICAgICAgICAgICBwZWckY3VyclBvcysrOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgczIgPSBwZWckRkFJTEVEOwoKICAgICAgICAgICAgaWYgKHBlZyRzaWxlbnRGYWlscyA9PT0gMCkgewogICAgICAgICAgICAgIHBlZyRmYWlsKHBlZyRjMTkpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9IGVsc2UgewogICAgICAgIHMxID0gcGVnJEZBSUxFRDsKICAgICAgfQoKICAgICAgaWYgKHMxICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgczIgPSBbXTsKCiAgICAgICAgaWYgKHBlZyRjMjAudGVzdChpbnB1dC5jaGFyQXQocGVnJGN1cnJQb3MpKSkgewogICAgICAgICAgczMgPSBpbnB1dC5jaGFyQXQocGVnJGN1cnJQb3MpOwogICAgICAgICAgcGVnJGN1cnJQb3MrKzsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgczMgPSBwZWckRkFJTEVEOwoKICAgICAgICAgIGlmIChwZWckc2lsZW50RmFpbHMgPT09IDApIHsKICAgICAgICAgICAgcGVnJGZhaWwocGVnJGMyMSk7CiAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICB3aGlsZSAoczMgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgIHMyLnB1c2goczMpOwoKICAgICAgICAgIGlmIChwZWckYzIwLnRlc3QoaW5wdXQuY2hhckF0KHBlZyRjdXJyUG9zKSkpIHsKICAgICAgICAgICAgczMgPSBpbnB1dC5jaGFyQXQocGVnJGN1cnJQb3MpOwogICAgICAgICAgICBwZWckY3VyclBvcysrOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgczMgPSBwZWckRkFJTEVEOwoKICAgICAgICAgICAgaWYgKHBlZyRzaWxlbnRGYWlscyA9PT0gMCkgewogICAgICAgICAgICAgIHBlZyRmYWlsKHBlZyRjMjEpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICBpZiAoczIgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgIHBlZyRzYXZlZFBvcyA9IHMwOwogICAgICAgICAgczEgPSBwZWckYzIyKHMxLCBzMik7CiAgICAgICAgICBzMCA9IHMxOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICAgIH0KICAgICAgfSBlbHNlIHsKICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgfQoKICAgICAgcmV0dXJuIHMwOwogICAgfQoKICAgIGZ1bmN0aW9uIHBlZyRwYXJzZWFyZ3VtZW50X25hbWUoKSB7CiAgICAgIHZhciBzMCwgczEsIHMyLCBzMzsKICAgICAgczAgPSBwZWckY3VyclBvczsKICAgICAgczEgPSBbXTsKCiAgICAgIGlmIChwZWckYzE4LnRlc3QoaW5wdXQuY2hhckF0KHBlZyRjdXJyUG9zKSkpIHsKICAgICAgICBzMiA9IGlucHV0LmNoYXJBdChwZWckY3VyclBvcyk7CiAgICAgICAgcGVnJGN1cnJQb3MrKzsKICAgICAgfSBlbHNlIHsKICAgICAgICBzMiA9IHBlZyRGQUlMRUQ7CgogICAgICAgIGlmIChwZWckc2lsZW50RmFpbHMgPT09IDApIHsKICAgICAgICAgIHBlZyRmYWlsKHBlZyRjMTkpOwogICAgICAgIH0KICAgICAgfQoKICAgICAgaWYgKHMyICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgd2hpbGUgKHMyICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICBzMS5wdXNoKHMyKTsKCiAgICAgICAgICBpZiAocGVnJGMxOC50ZXN0KGlucHV0LmNoYXJBdChwZWckY3VyclBvcykpKSB7CiAgICAgICAgICAgIHMyID0gaW5wdXQuY2hhckF0KHBlZyRjdXJyUG9zKTsKICAgICAgICAgICAgcGVnJGN1cnJQb3MrKzsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHMyID0gcGVnJEZBSUxFRDsKCiAgICAgICAgICAgIGlmIChwZWckc2lsZW50RmFpbHMgPT09IDApIHsKICAgICAgICAgICAgICBwZWckZmFpbChwZWckYzE5KTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSBlbHNlIHsKICAgICAgICBzMSA9IHBlZyRGQUlMRUQ7CiAgICAgIH0KCiAgICAgIGlmIChzMSAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgIHMyID0gW107CgogICAgICAgIGlmIChwZWckYzIwLnRlc3QoaW5wdXQuY2hhckF0KHBlZyRjdXJyUG9zKSkpIHsKICAgICAgICAgIHMzID0gaW5wdXQuY2hhckF0KHBlZyRjdXJyUG9zKTsKICAgICAgICAgIHBlZyRjdXJyUG9zKys7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHMzID0gcGVnJEZBSUxFRDsKCiAgICAgICAgICBpZiAocGVnJHNpbGVudEZhaWxzID09PSAwKSB7CiAgICAgICAgICAgIHBlZyRmYWlsKHBlZyRjMjEpOwogICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgd2hpbGUgKHMzICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICBzMi5wdXNoKHMzKTsKCiAgICAgICAgICBpZiAocGVnJGMyMC50ZXN0KGlucHV0LmNoYXJBdChwZWckY3VyclBvcykpKSB7CiAgICAgICAgICAgIHMzID0gaW5wdXQuY2hhckF0KHBlZyRjdXJyUG9zKTsKICAgICAgICAgICAgcGVnJGN1cnJQb3MrKzsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHMzID0gcGVnJEZBSUxFRDsKCiAgICAgICAgICAgIGlmIChwZWckc2lsZW50RmFpbHMgPT09IDApIHsKICAgICAgICAgICAgICBwZWckZmFpbChwZWckYzIxKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgaWYgKHMyICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICBwZWckc2F2ZWRQb3MgPSBzMDsKICAgICAgICAgIHMxID0gcGVnJGMyMyhzMSwgczIpOwogICAgICAgICAgczAgPSBzMTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDsKICAgICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgICB9CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDsKICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CiAgICAgIH0KCiAgICAgIHJldHVybiBzMDsKICAgIH0KCiAgICBmdW5jdGlvbiBwZWckcGFyc2VmdW5jdGlvbigpIHsKICAgICAgdmFyIHMwLCBzMSwgczIsIHMzLCBzNCwgczUsIHM2LCBzNywgczgsIHM5LCBzMTA7CiAgICAgIHBlZyRzaWxlbnRGYWlscysrOwogICAgICBzMCA9IHBlZyRjdXJyUG9zOwogICAgICBzMSA9IHBlZyRwYXJzZXNwYWNlKCk7CgogICAgICBpZiAoczEgPT09IHBlZyRGQUlMRUQpIHsKICAgICAgICBzMSA9IG51bGw7CiAgICAgIH0KCiAgICAgIGlmIChzMSAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgIGlmIChpbnB1dC5jaGFyQ29kZUF0KHBlZyRjdXJyUG9zKSA9PT0gNDYpIHsKICAgICAgICAgIHMyID0gcGVnJGMyNTsKICAgICAgICAgIHBlZyRjdXJyUG9zKys7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHMyID0gcGVnJEZBSUxFRDsKCiAgICAgICAgICBpZiAocGVnJHNpbGVudEZhaWxzID09PSAwKSB7CiAgICAgICAgICAgIHBlZyRmYWlsKHBlZyRjMjYpOwogICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgaWYgKHMyICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICBzMyA9IHBlZyRwYXJzZWZ1bmN0aW9uX25hbWUoKTsKCiAgICAgICAgICBpZiAoczMgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgczQgPSBwZWckcGFyc2VzcGFjZSgpOwoKICAgICAgICAgICAgaWYgKHM0ID09PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgICAgczQgPSBudWxsOwogICAgICAgICAgICB9CgogICAgICAgICAgICBpZiAoczQgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgICBpZiAoaW5wdXQuY2hhckNvZGVBdChwZWckY3VyclBvcykgPT09IDQwKSB7CiAgICAgICAgICAgICAgICBzNSA9IHBlZyRjMjc7CiAgICAgICAgICAgICAgICBwZWckY3VyclBvcysrOwogICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBzNSA9IHBlZyRGQUlMRUQ7CgogICAgICAgICAgICAgICAgaWYgKHBlZyRzaWxlbnRGYWlscyA9PT0gMCkgewogICAgICAgICAgICAgICAgICBwZWckZmFpbChwZWckYzI4KTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIGlmIChzNSAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgICAgICAgczYgPSBwZWckcGFyc2VzcGFjZSgpOwoKICAgICAgICAgICAgICAgIGlmIChzNiA9PT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgICAgICAgICBzNiA9IG51bGw7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgaWYgKHM2ICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgICAgICAgIHM3ID0gcGVnJHBhcnNlYXJnX2xpc3QoKTsKCiAgICAgICAgICAgICAgICAgIGlmIChzNyA9PT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgICAgICAgICAgIHM3ID0gbnVsbDsKICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgaWYgKHM3ICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgICAgICAgICAgczggPSBwZWckcGFyc2VzcGFjZSgpOwoKICAgICAgICAgICAgICAgICAgICBpZiAoczggPT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgICAgICAgICAgIHM4ID0gbnVsbDsKICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgIGlmIChzOCAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgICAgICAgICAgICAgaWYgKGlucHV0LmNoYXJDb2RlQXQocGVnJGN1cnJQb3MpID09PSA0MSkgewogICAgICAgICAgICAgICAgICAgICAgICBzOSA9IHBlZyRjMjk7CiAgICAgICAgICAgICAgICAgICAgICAgIHBlZyRjdXJyUG9zKys7CiAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICBzOSA9IHBlZyRGQUlMRUQ7CgogICAgICAgICAgICAgICAgICAgICAgICBpZiAocGVnJHNpbGVudEZhaWxzID09PSAwKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgcGVnJGZhaWwocGVnJGMzMCk7CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgICBpZiAoczkgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgczEwID0gcGVnJHBhcnNlc3BhY2UoKTsKCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzMTAgPT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICBzMTAgPSBudWxsOwogICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgICBpZiAoczEwICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgcGVnJHNhdmVkUG9zID0gczA7CiAgICAgICAgICAgICAgICAgICAgICAgICAgczEgPSBwZWckYzMxKHMzLCBzNyk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgczAgPSBzMTsKICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgICAgICAgICAgICAgICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDsKICAgICAgICAgICAgICAgICAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgICAgICAgICAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgICAgICAgICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDsKICAgICAgICAgICAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgICAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgICAgICAgfQogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDsKICAgICAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICAgICAgfQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICAgIH0KICAgICAgfSBlbHNlIHsKICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgfQoKICAgICAgaWYgKHMwID09PSBwZWckRkFJTEVEKSB7CiAgICAgICAgczAgPSBwZWckY3VyclBvczsKCiAgICAgICAgaWYgKGlucHV0LmNoYXJDb2RlQXQocGVnJGN1cnJQb3MpID09PSA0NikgewogICAgICAgICAgczEgPSBwZWckYzI1OwogICAgICAgICAgcGVnJGN1cnJQb3MrKzsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgczEgPSBwZWckRkFJTEVEOwoKICAgICAgICAgIGlmIChwZWckc2lsZW50RmFpbHMgPT09IDApIHsKICAgICAgICAgICAgcGVnJGZhaWwocGVnJGMyNik7CiAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICBpZiAoczEgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgIHMyID0gcGVnJHBhcnNlZnVuY3Rpb25fbmFtZSgpOwoKICAgICAgICAgIGlmIChzMiA9PT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgICBzMiA9IG51bGw7CiAgICAgICAgICB9CgogICAgICAgICAgaWYgKHMyICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgIHBlZyRzYXZlZFBvcyA9IHMwOwogICAgICAgICAgICBzMSA9IHBlZyRjMzIoczIpOwogICAgICAgICAgICBzMCA9IHMxOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDsKICAgICAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICAgICAgfQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICAgIH0KICAgICAgfQoKICAgICAgcGVnJHNpbGVudEZhaWxzLS07CgogICAgICBpZiAoczAgPT09IHBlZyRGQUlMRUQpIHsKICAgICAgICBzMSA9IHBlZyRGQUlMRUQ7CgogICAgICAgIGlmIChwZWckc2lsZW50RmFpbHMgPT09IDApIHsKICAgICAgICAgIHBlZyRmYWlsKHBlZyRjMjQpOwogICAgICAgIH0KICAgICAgfQoKICAgICAgcmV0dXJuIHMwOwogICAgfQoKICAgIGZ1bmN0aW9uIHBlZyRwYXJzZXJlZmVyZW5jZSgpIHsKICAgICAgdmFyIHMwLCBzMSwgczIsIHMzLCBzNDsKICAgICAgczAgPSBwZWckY3VyclBvczsKCiAgICAgIGlmIChpbnB1dC5jaGFyQ29kZUF0KHBlZyRjdXJyUG9zKSA9PT0gNjQpIHsKICAgICAgICBzMSA9IHBlZyRjMzM7CiAgICAgICAgcGVnJGN1cnJQb3MrKzsKICAgICAgfSBlbHNlIHsKICAgICAgICBzMSA9IHBlZyRGQUlMRUQ7CgogICAgICAgIGlmIChwZWckc2lsZW50RmFpbHMgPT09IDApIHsKICAgICAgICAgIHBlZyRmYWlsKHBlZyRjMzQpOwogICAgICAgIH0KICAgICAgfQoKICAgICAgaWYgKHMxICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgczIgPSBwZWckcGFyc2VpbnRlZ2VyKCk7CgogICAgICAgIGlmIChzMiAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgaWYgKGlucHV0LmNoYXJDb2RlQXQocGVnJGN1cnJQb3MpID09PSA1OCkgewogICAgICAgICAgICBzMyA9IHBlZyRjMzU7CiAgICAgICAgICAgIHBlZyRjdXJyUG9zKys7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBzMyA9IHBlZyRGQUlMRUQ7CgogICAgICAgICAgICBpZiAocGVnJHNpbGVudEZhaWxzID09PSAwKSB7CiAgICAgICAgICAgICAgcGVnJGZhaWwocGVnJGMzNik7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KCiAgICAgICAgICBpZiAoczMgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgczQgPSBwZWckcGFyc2VpbnRlZ2VyKCk7CgogICAgICAgICAgICBpZiAoczQgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgICBwZWckc2F2ZWRQb3MgPSBzMDsKICAgICAgICAgICAgICBzMSA9IHBlZyRjMzcoczIsIHM0KTsKICAgICAgICAgICAgICBzMCA9IHMxOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIHBlZyRjdXJyUG9zID0gczA7CiAgICAgICAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICAgICAgICB9CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CiAgICAgICAgICB9CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHBlZyRjdXJyUG9zID0gczA7CiAgICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CiAgICAgICAgfQogICAgICB9IGVsc2UgewogICAgICAgIHBlZyRjdXJyUG9zID0gczA7CiAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICB9CgogICAgICBpZiAoczAgPT09IHBlZyRGQUlMRUQpIHsKICAgICAgICBzMCA9IHBlZyRjdXJyUG9zOwoKICAgICAgICBpZiAoaW5wdXQuY2hhckNvZGVBdChwZWckY3VyclBvcykgPT09IDY0KSB7CiAgICAgICAgICBzMSA9IHBlZyRjMzM7CiAgICAgICAgICBwZWckY3VyclBvcysrOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBzMSA9IHBlZyRGQUlMRUQ7CgogICAgICAgICAgaWYgKHBlZyRzaWxlbnRGYWlscyA9PT0gMCkgewogICAgICAgICAgICBwZWckZmFpbChwZWckYzM0KTsKICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIGlmIChzMSAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgczIgPSBwZWckcGFyc2VpbnRlZ2VyKCk7CgogICAgICAgICAgaWYgKHMyICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgIHBlZyRzYXZlZFBvcyA9IHMwOwogICAgICAgICAgICBzMSA9IHBlZyRjMzgoczIpOwogICAgICAgICAgICBzMCA9IHMxOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDsKICAgICAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICAgICAgfQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICAgIH0KICAgICAgfQoKICAgICAgcmV0dXJuIHMwOwogICAgfQoKICAgIGZ1bmN0aW9uIHBlZyRwYXJzZWNoYWluKCkgewogICAgICB2YXIgczAsIHMxLCBzMiwgczMsIHM0OwogICAgICBzMCA9IHBlZyRjdXJyUG9zOwogICAgICBzMSA9IHBlZyRwYXJzZWZ1bmN0aW9uKCk7CgogICAgICBpZiAoczEgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICBzMiA9IHBlZyRwYXJzZXNwYWNlKCk7CgogICAgICAgIGlmIChzMiA9PT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgczIgPSBudWxsOwogICAgICAgIH0KCiAgICAgICAgaWYgKHMyICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICBzMyA9IFtdOwogICAgICAgICAgczQgPSBwZWckcGFyc2VmdW5jdGlvbigpOwoKICAgICAgICAgIHdoaWxlIChzNCAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgICBzMy5wdXNoKHM0KTsKICAgICAgICAgICAgczQgPSBwZWckcGFyc2VmdW5jdGlvbigpOwogICAgICAgICAgfQoKICAgICAgICAgIGlmIChzMyAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgICBwZWckc2F2ZWRQb3MgPSBzMDsKICAgICAgICAgICAgczEgPSBwZWckYzM5KHMxLCBzMyk7CiAgICAgICAgICAgIHMwID0gczE7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CiAgICAgICAgICB9CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHBlZyRjdXJyUG9zID0gczA7CiAgICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CiAgICAgICAgfQogICAgICB9IGVsc2UgewogICAgICAgIHBlZyRjdXJyUG9zID0gczA7CiAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICB9CgogICAgICByZXR1cm4gczA7CiAgICB9CgogICAgZnVuY3Rpb24gcGVnJHBhcnNlZ3JvdXAoKSB7CiAgICAgIHZhciBzMCwgczEsIHMyLCBzMywgczQsIHM1LCBzNiwgczc7CiAgICAgIHMwID0gcGVnJGN1cnJQb3M7CgogICAgICBpZiAoaW5wdXQuY2hhckNvZGVBdChwZWckY3VyclBvcykgPT09IDQwKSB7CiAgICAgICAgczEgPSBwZWckYzI3OwogICAgICAgIHBlZyRjdXJyUG9zKys7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgczEgPSBwZWckRkFJTEVEOwoKICAgICAgICBpZiAocGVnJHNpbGVudEZhaWxzID09PSAwKSB7CiAgICAgICAgICBwZWckZmFpbChwZWckYzI4KTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIGlmIChzMSAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgIHMyID0gcGVnJHBhcnNlc3BhY2UoKTsKCiAgICAgICAgaWYgKHMyID09PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICBzMiA9IG51bGw7CiAgICAgICAgfQoKICAgICAgICBpZiAoczIgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgIHMzID0gcGVnJHBhcnNlc2VyaWVzKCk7CgogICAgICAgICAgaWYgKHMzICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgIHM0ID0gcGVnJHBhcnNlc3BhY2UoKTsKCiAgICAgICAgICAgIGlmIChzNCA9PT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgICAgIHM0ID0gbnVsbDsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgaWYgKHM0ICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgICAgaWYgKGlucHV0LmNoYXJDb2RlQXQocGVnJGN1cnJQb3MpID09PSA0MSkgewogICAgICAgICAgICAgICAgczUgPSBwZWckYzI5OwogICAgICAgICAgICAgICAgcGVnJGN1cnJQb3MrKzsKICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgczUgPSBwZWckRkFJTEVEOwoKICAgICAgICAgICAgICAgIGlmIChwZWckc2lsZW50RmFpbHMgPT09IDApIHsKICAgICAgICAgICAgICAgICAgcGVnJGZhaWwocGVnJGMzMCk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBpZiAoczUgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgICAgIHM2ID0gW107CiAgICAgICAgICAgICAgICBzNyA9IHBlZyRwYXJzZWZ1bmN0aW9uKCk7CgogICAgICAgICAgICAgICAgd2hpbGUgKHM3ICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgICAgICAgIHM2LnB1c2goczcpOwogICAgICAgICAgICAgICAgICBzNyA9IHBlZyRwYXJzZWZ1bmN0aW9uKCk7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgaWYgKHM2ICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgICAgICAgIHBlZyRzYXZlZFBvcyA9IHMwOwogICAgICAgICAgICAgICAgICBzMSA9IHBlZyRjNDAoczMsIHM2KTsKICAgICAgICAgICAgICAgICAgczAgPSBzMTsKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgIHBlZyRjdXJyUG9zID0gczA7CiAgICAgICAgICAgICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDsKICAgICAgICAgICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDsKICAgICAgICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHBlZyRjdXJyUG9zID0gczA7CiAgICAgICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgICAgIH0KICAgICAgICB9IGVsc2UgewogICAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDsKICAgICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgICB9CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDsKICAgICAgICBzMCA9IHBlZyRGQUlMRUQ7CiAgICAgIH0KCiAgICAgIHJldHVybiBzMDsKICAgIH0KCiAgICBmdW5jdGlvbiBwZWckcGFyc2VsaXRlcmFsKCkgewogICAgICB2YXIgczAsIHMxLCBzMiwgczM7CiAgICAgIHBlZyRzaWxlbnRGYWlscysrOwogICAgICBzMCA9IHBlZyRjdXJyUG9zOwoKICAgICAgaWYgKGlucHV0LmNoYXJDb2RlQXQocGVnJGN1cnJQb3MpID09PSAzNCkgewogICAgICAgIHMxID0gcGVnJGM0MjsKICAgICAgICBwZWckY3VyclBvcysrOwogICAgICB9IGVsc2UgewogICAgICAgIHMxID0gcGVnJEZBSUxFRDsKCiAgICAgICAgaWYgKHBlZyRzaWxlbnRGYWlscyA9PT0gMCkgewogICAgICAgICAgcGVnJGZhaWwocGVnJGM0Myk7CiAgICAgICAgfQogICAgICB9CgogICAgICBpZiAoczEgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICBzMiA9IFtdOwogICAgICAgIHMzID0gcGVnJHBhcnNlZHFfY2hhcigpOwoKICAgICAgICB3aGlsZSAoczMgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgIHMyLnB1c2goczMpOwogICAgICAgICAgczMgPSBwZWckcGFyc2VkcV9jaGFyKCk7CiAgICAgICAgfQoKICAgICAgICBpZiAoczIgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgIGlmIChpbnB1dC5jaGFyQ29kZUF0KHBlZyRjdXJyUG9zKSA9PT0gMzQpIHsKICAgICAgICAgICAgczMgPSBwZWckYzQyOwogICAgICAgICAgICBwZWckY3VyclBvcysrOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgczMgPSBwZWckRkFJTEVEOwoKICAgICAgICAgICAgaWYgKHBlZyRzaWxlbnRGYWlscyA9PT0gMCkgewogICAgICAgICAgICAgIHBlZyRmYWlsKHBlZyRjNDMpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CgogICAgICAgICAgaWYgKHMzICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgIHBlZyRzYXZlZFBvcyA9IHMwOwogICAgICAgICAgICBzMSA9IHBlZyRjNDQoczIpOwogICAgICAgICAgICBzMCA9IHMxOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDsKICAgICAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICAgICAgfQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICAgIH0KICAgICAgfSBlbHNlIHsKICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgfQoKICAgICAgaWYgKHMwID09PSBwZWckRkFJTEVEKSB7CiAgICAgICAgczAgPSBwZWckY3VyclBvczsKCiAgICAgICAgaWYgKGlucHV0LmNoYXJDb2RlQXQocGVnJGN1cnJQb3MpID09PSAzOSkgewogICAgICAgICAgczEgPSBwZWckYzQ1OwogICAgICAgICAgcGVnJGN1cnJQb3MrKzsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgczEgPSBwZWckRkFJTEVEOwoKICAgICAgICAgIGlmIChwZWckc2lsZW50RmFpbHMgPT09IDApIHsKICAgICAgICAgICAgcGVnJGZhaWwocGVnJGM0Nik7CiAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICBpZiAoczEgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgIHMyID0gW107CiAgICAgICAgICBzMyA9IHBlZyRwYXJzZXNxX2NoYXIoKTsKCiAgICAgICAgICB3aGlsZSAoczMgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgczIucHVzaChzMyk7CiAgICAgICAgICAgIHMzID0gcGVnJHBhcnNlc3FfY2hhcigpOwogICAgICAgICAgfQoKICAgICAgICAgIGlmIChzMiAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgICBpZiAoaW5wdXQuY2hhckNvZGVBdChwZWckY3VyclBvcykgPT09IDM5KSB7CiAgICAgICAgICAgICAgczMgPSBwZWckYzQ1OwogICAgICAgICAgICAgIHBlZyRjdXJyUG9zKys7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgczMgPSBwZWckRkFJTEVEOwoKICAgICAgICAgICAgICBpZiAocGVnJHNpbGVudEZhaWxzID09PSAwKSB7CiAgICAgICAgICAgICAgICBwZWckZmFpbChwZWckYzQ2KTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmIChzMyAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgICAgIHBlZyRzYXZlZFBvcyA9IHMwOwogICAgICAgICAgICAgIHMxID0gcGVnJGM0NChzMik7CiAgICAgICAgICAgICAgczAgPSBzMTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgICAgICAgfQogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgcGVnJGN1cnJQb3MgPSBzMDsKICAgICAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICAgICAgfQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICAgIH0KCiAgICAgICAgaWYgKHMwID09PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICBzMCA9IHBlZyRjdXJyUG9zOwoKICAgICAgICAgIGlmIChpbnB1dC5zdWJzdHIocGVnJGN1cnJQb3MsIDQpID09PSBwZWckYzQ3KSB7CiAgICAgICAgICAgIHMxID0gcGVnJGM0NzsKICAgICAgICAgICAgcGVnJGN1cnJQb3MgKz0gNDsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHMxID0gcGVnJEZBSUxFRDsKCiAgICAgICAgICAgIGlmIChwZWckc2lsZW50RmFpbHMgPT09IDApIHsKICAgICAgICAgICAgICBwZWckZmFpbChwZWckYzQ4KTsKICAgICAgICAgICAgfQogICAgICAgICAgfQoKICAgICAgICAgIGlmIChzMSAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgICBwZWckc2F2ZWRQb3MgPSBzMDsKICAgICAgICAgICAgczEgPSBwZWckYzQ5KCk7CiAgICAgICAgICB9CgogICAgICAgICAgczAgPSBzMTsKCiAgICAgICAgICBpZiAoczAgPT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgczAgPSBwZWckY3VyclBvczsKCiAgICAgICAgICAgIGlmIChpbnB1dC5zdWJzdHIocGVnJGN1cnJQb3MsIDUpID09PSBwZWckYzUwKSB7CiAgICAgICAgICAgICAgczEgPSBwZWckYzUwOwogICAgICAgICAgICAgIHBlZyRjdXJyUG9zICs9IDU7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgczEgPSBwZWckRkFJTEVEOwoKICAgICAgICAgICAgICBpZiAocGVnJHNpbGVudEZhaWxzID09PSAwKSB7CiAgICAgICAgICAgICAgICBwZWckZmFpbChwZWckYzUxKTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmIChzMSAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgICAgIHBlZyRzYXZlZFBvcyA9IHMwOwogICAgICAgICAgICAgIHMxID0gcGVnJGM1MigpOwogICAgICAgICAgICB9CgogICAgICAgICAgICBzMCA9IHMxOwoKICAgICAgICAgICAgaWYgKHMwID09PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgICAgczAgPSBwZWckY3VyclBvczsKCiAgICAgICAgICAgICAgaWYgKGlucHV0LnN1YnN0cihwZWckY3VyclBvcywgNCkgPT09IHBlZyRjNTMpIHsKICAgICAgICAgICAgICAgIHMxID0gcGVnJGM1MzsKICAgICAgICAgICAgICAgIHBlZyRjdXJyUG9zICs9IDQ7CiAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHMxID0gcGVnJEZBSUxFRDsKCiAgICAgICAgICAgICAgICBpZiAocGVnJHNpbGVudEZhaWxzID09PSAwKSB7CiAgICAgICAgICAgICAgICAgIHBlZyRmYWlsKHBlZyRjNTQpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgaWYgKHMxICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgICAgICBwZWckc2F2ZWRQb3MgPSBzMDsKICAgICAgICAgICAgICAgIHMxID0gcGVnJGM1NSgpOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgczAgPSBzMTsKCiAgICAgICAgICAgICAgaWYgKHMwID09PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgICAgICBzMCA9IHBlZyRjdXJyUG9zOwogICAgICAgICAgICAgICAgczEgPSBbXTsKCiAgICAgICAgICAgICAgICBpZiAocGVnJGM1Ni50ZXN0KGlucHV0LmNoYXJBdChwZWckY3VyclBvcykpKSB7CiAgICAgICAgICAgICAgICAgIHMyID0gaW5wdXQuY2hhckF0KHBlZyRjdXJyUG9zKTsKICAgICAgICAgICAgICAgICAgcGVnJGN1cnJQb3MrKzsKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgIHMyID0gcGVnJEZBSUxFRDsKCiAgICAgICAgICAgICAgICAgIGlmIChwZWckc2lsZW50RmFpbHMgPT09IDApIHsKICAgICAgICAgICAgICAgICAgICBwZWckZmFpbChwZWckYzU3KTsKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIGlmIChzMiAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgICAgICAgICB3aGlsZSAoczIgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICAgICAgICAgICAgICBzMS5wdXNoKHMyKTsKCiAgICAgICAgICAgICAgICAgICAgaWYgKHBlZyRjNTYudGVzdChpbnB1dC5jaGFyQXQocGVnJGN1cnJQb3MpKSkgewogICAgICAgICAgICAgICAgICAgICAgczIgPSBpbnB1dC5jaGFyQXQocGVnJGN1cnJQb3MpOwogICAgICAgICAgICAgICAgICAgICAgcGVnJGN1cnJQb3MrKzsKICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgczIgPSBwZWckRkFJTEVEOwoKICAgICAgICAgICAgICAgICAgICAgIGlmIChwZWckc2lsZW50RmFpbHMgPT09IDApIHsKICAgICAgICAgICAgICAgICAgICAgICAgcGVnJGZhaWwocGVnJGM1Nyk7CiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICBzMSA9IHBlZyRGQUlMRUQ7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgaWYgKHMxICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICAgICAgICAgIHBlZyRzYXZlZFBvcyA9IHMwOwogICAgICAgICAgICAgICAgICBzMSA9IHBlZyRjNTgoczEpOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIHMwID0gczE7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CgogICAgICBwZWckc2lsZW50RmFpbHMtLTsKCiAgICAgIGlmIChzMCA9PT0gcGVnJEZBSUxFRCkgewogICAgICAgIHMxID0gcGVnJEZBSUxFRDsKCiAgICAgICAgaWYgKHBlZyRzaWxlbnRGYWlscyA9PT0gMCkgewogICAgICAgICAgcGVnJGZhaWwocGVnJGM0MSk7CiAgICAgICAgfQogICAgICB9CgogICAgICByZXR1cm4gczA7CiAgICB9CgogICAgZnVuY3Rpb24gcGVnJHBhcnNlc3BhY2UoKSB7CiAgICAgIHZhciBzMCwgczE7CiAgICAgIHMwID0gW107CgogICAgICBpZiAocGVnJGM1OS50ZXN0KGlucHV0LmNoYXJBdChwZWckY3VyclBvcykpKSB7CiAgICAgICAgczEgPSBpbnB1dC5jaGFyQXQocGVnJGN1cnJQb3MpOwogICAgICAgIHBlZyRjdXJyUG9zKys7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgczEgPSBwZWckRkFJTEVEOwoKICAgICAgICBpZiAocGVnJHNpbGVudEZhaWxzID09PSAwKSB7CiAgICAgICAgICBwZWckZmFpbChwZWckYzYwKTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIGlmIChzMSAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgIHdoaWxlIChzMSAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgczAucHVzaChzMSk7CgogICAgICAgICAgaWYgKHBlZyRjNTkudGVzdChpbnB1dC5jaGFyQXQocGVnJGN1cnJQb3MpKSkgewogICAgICAgICAgICBzMSA9IGlucHV0LmNoYXJBdChwZWckY3VyclBvcyk7CiAgICAgICAgICAgIHBlZyRjdXJyUG9zKys7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBzMSA9IHBlZyRGQUlMRUQ7CgogICAgICAgICAgICBpZiAocGVnJHNpbGVudEZhaWxzID09PSAwKSB7CiAgICAgICAgICAgICAgcGVnJGZhaWwocGVnJGM2MCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0gZWxzZSB7CiAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICB9CgogICAgICByZXR1cm4gczA7CiAgICB9CgogICAgZnVuY3Rpb24gcGVnJHBhcnNlZHFfY2hhcigpIHsKICAgICAgdmFyIHMwLCBzMSwgczI7CiAgICAgIHMwID0gcGVnJGN1cnJQb3M7CgogICAgICBpZiAoaW5wdXQuY2hhckNvZGVBdChwZWckY3VyclBvcykgPT09IDkyKSB7CiAgICAgICAgczEgPSBwZWckYzYxOwogICAgICAgIHBlZyRjdXJyUG9zKys7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgczEgPSBwZWckRkFJTEVEOwoKICAgICAgICBpZiAocGVnJHNpbGVudEZhaWxzID09PSAwKSB7CiAgICAgICAgICBwZWckZmFpbChwZWckYzYyKTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIGlmIChzMSAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgIGlmIChpbnB1dC5jaGFyQ29kZUF0KHBlZyRjdXJyUG9zKSA9PT0gMzQpIHsKICAgICAgICAgIHMyID0gcGVnJGM0MjsKICAgICAgICAgIHBlZyRjdXJyUG9zKys7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHMyID0gcGVnJEZBSUxFRDsKCiAgICAgICAgICBpZiAocGVnJHNpbGVudEZhaWxzID09PSAwKSB7CiAgICAgICAgICAgIHBlZyRmYWlsKHBlZyRjNDMpOwogICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgaWYgKHMyID09PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICBpZiAoaW5wdXQuY2hhckNvZGVBdChwZWckY3VyclBvcykgPT09IDkyKSB7CiAgICAgICAgICAgIHMyID0gcGVnJGM2MTsKICAgICAgICAgICAgcGVnJGN1cnJQb3MrKzsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHMyID0gcGVnJEZBSUxFRDsKCiAgICAgICAgICAgIGlmIChwZWckc2lsZW50RmFpbHMgPT09IDApIHsKICAgICAgICAgICAgICBwZWckZmFpbChwZWckYzYyKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgaWYgKHMyICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICBwZWckc2F2ZWRQb3MgPSBzMDsKICAgICAgICAgIHMxID0gcGVnJGM2MyhzMik7CiAgICAgICAgICBzMCA9IHMxOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICAgIH0KICAgICAgfSBlbHNlIHsKICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgfQoKICAgICAgaWYgKHMwID09PSBwZWckRkFJTEVEKSB7CiAgICAgICAgaWYgKHBlZyRjNjQudGVzdChpbnB1dC5jaGFyQXQocGVnJGN1cnJQb3MpKSkgewogICAgICAgICAgczAgPSBpbnB1dC5jaGFyQXQocGVnJGN1cnJQb3MpOwogICAgICAgICAgcGVnJGN1cnJQb3MrKzsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgczAgPSBwZWckRkFJTEVEOwoKICAgICAgICAgIGlmIChwZWckc2lsZW50RmFpbHMgPT09IDApIHsKICAgICAgICAgICAgcGVnJGZhaWwocGVnJGM2NSk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CgogICAgICByZXR1cm4gczA7CiAgICB9CgogICAgZnVuY3Rpb24gcGVnJHBhcnNlc3FfY2hhcigpIHsKICAgICAgdmFyIHMwLCBzMSwgczI7CiAgICAgIHMwID0gcGVnJGN1cnJQb3M7CgogICAgICBpZiAoaW5wdXQuY2hhckNvZGVBdChwZWckY3VyclBvcykgPT09IDkyKSB7CiAgICAgICAgczEgPSBwZWckYzYxOwogICAgICAgIHBlZyRjdXJyUG9zKys7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgczEgPSBwZWckRkFJTEVEOwoKICAgICAgICBpZiAocGVnJHNpbGVudEZhaWxzID09PSAwKSB7CiAgICAgICAgICBwZWckZmFpbChwZWckYzYyKTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIGlmIChzMSAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgIGlmIChpbnB1dC5jaGFyQ29kZUF0KHBlZyRjdXJyUG9zKSA9PT0gMzkpIHsKICAgICAgICAgIHMyID0gcGVnJGM0NTsKICAgICAgICAgIHBlZyRjdXJyUG9zKys7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHMyID0gcGVnJEZBSUxFRDsKCiAgICAgICAgICBpZiAocGVnJHNpbGVudEZhaWxzID09PSAwKSB7CiAgICAgICAgICAgIHBlZyRmYWlsKHBlZyRjNDYpOwogICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgaWYgKHMyID09PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICBpZiAoaW5wdXQuY2hhckNvZGVBdChwZWckY3VyclBvcykgPT09IDkyKSB7CiAgICAgICAgICAgIHMyID0gcGVnJGM2MTsKICAgICAgICAgICAgcGVnJGN1cnJQb3MrKzsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHMyID0gcGVnJEZBSUxFRDsKCiAgICAgICAgICAgIGlmIChwZWckc2lsZW50RmFpbHMgPT09IDApIHsKICAgICAgICAgICAgICBwZWckZmFpbChwZWckYzYyKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgaWYgKHMyICE9PSBwZWckRkFJTEVEKSB7CiAgICAgICAgICBwZWckc2F2ZWRQb3MgPSBzMDsKICAgICAgICAgIHMxID0gcGVnJGM2MyhzMik7CiAgICAgICAgICBzMCA9IHMxOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgICAgczAgPSBwZWckRkFJTEVEOwogICAgICAgIH0KICAgICAgfSBlbHNlIHsKICAgICAgICBwZWckY3VyclBvcyA9IHMwOwogICAgICAgIHMwID0gcGVnJEZBSUxFRDsKICAgICAgfQoKICAgICAgaWYgKHMwID09PSBwZWckRkFJTEVEKSB7CiAgICAgICAgaWYgKHBlZyRjNjYudGVzdChpbnB1dC5jaGFyQXQocGVnJGN1cnJQb3MpKSkgewogICAgICAgICAgczAgPSBpbnB1dC5jaGFyQXQocGVnJGN1cnJQb3MpOwogICAgICAgICAgcGVnJGN1cnJQb3MrKzsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgczAgPSBwZWckRkFJTEVEOwoKICAgICAgICAgIGlmIChwZWckc2lsZW50RmFpbHMgPT09IDApIHsKICAgICAgICAgICAgcGVnJGZhaWwocGVnJGM2Nyk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CgogICAgICByZXR1cm4gczA7CiAgICB9CgogICAgZnVuY3Rpb24gcGVnJHBhcnNlaW50ZWdlcigpIHsKICAgICAgdmFyIHMwLCBzMSwgczI7CiAgICAgIHMwID0gcGVnJGN1cnJQb3M7CiAgICAgIHMxID0gW107CgogICAgICBpZiAocGVnJGM2OC50ZXN0KGlucHV0LmNoYXJBdChwZWckY3VyclBvcykpKSB7CiAgICAgICAgczIgPSBpbnB1dC5jaGFyQXQocGVnJGN1cnJQb3MpOwogICAgICAgIHBlZyRjdXJyUG9zKys7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgczIgPSBwZWckRkFJTEVEOwoKICAgICAgICBpZiAocGVnJHNpbGVudEZhaWxzID09PSAwKSB7CiAgICAgICAgICBwZWckZmFpbChwZWckYzY5KTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIGlmIChzMiAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgIHdoaWxlIChzMiAhPT0gcGVnJEZBSUxFRCkgewogICAgICAgICAgczEucHVzaChzMik7CgogICAgICAgICAgaWYgKHBlZyRjNjgudGVzdChpbnB1dC5jaGFyQXQocGVnJGN1cnJQb3MpKSkgewogICAgICAgICAgICBzMiA9IGlucHV0LmNoYXJBdChwZWckY3VyclBvcyk7CiAgICAgICAgICAgIHBlZyRjdXJyUG9zKys7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBzMiA9IHBlZyRGQUlMRUQ7CgogICAgICAgICAgICBpZiAocGVnJHNpbGVudEZhaWxzID09PSAwKSB7CiAgICAgICAgICAgICAgcGVnJGZhaWwocGVnJGM2OSk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0gZWxzZSB7CiAgICAgICAgczEgPSBwZWckRkFJTEVEOwogICAgICB9CgogICAgICBpZiAoczEgIT09IHBlZyRGQUlMRUQpIHsKICAgICAgICBwZWckc2F2ZWRQb3MgPSBzMDsKICAgICAgICBzMSA9IHBlZyRjNzAoczEpOwogICAgICB9CgogICAgICBzMCA9IHMxOwogICAgICByZXR1cm4gczA7CiAgICB9CgogICAgZnVuY3Rpb24gbHRvbyhsaXRlcmFsKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgdHlwZTogJ2xpdGVyYWwnLAogICAgICAgIHZhbHVlOiBsaXRlcmFsCiAgICAgIH07CiAgICB9CgogICAgZnVuY3Rpb24gc2ltcGxlTG9jYXRpb24obG9jYXRpb24pIHsKICAgICAgLy8gUmV0dXJucyBhbiBvYmplY3QgcmVwcmVzZW50aW5nIHRoZSBwb3NpdGlvbiBvZiB0aGUgZnVuY3Rpb24gd2l0aGluIHRoZSBleHByZXNzaW9uLAogICAgICAvLyBkZW1hcmNhdGVkIGJ5IHRoZSBwb3NpdGlvbiBvZiBpdHMgZmlyc3QgY2hhcmFjdGVyIGFuZCBsYXN0IGNoYXJhY3Rlci4gV2UgY2FsY3VsYXRlIHRoZXNlIHZhbHVlcwogICAgICAvLyB1c2luZyB0aGUgb2Zmc2V0IGJlY2F1c2UgdGhlIGV4cHJlc3Npb24gY291bGQgc3BhbiBtdWx0aXBsZSBsaW5lcywgYW5kIHdlIGRvbid0IHdhbnQgdG8gZGVhbAogICAgICAvLyB3aXRoIGNvbHVtbiBhbmQgbGluZSB2YWx1ZXMuCiAgICAgIHJldHVybiB7CiAgICAgICAgbWluOiBsb2NhdGlvbi5zdGFydC5vZmZzZXQsCiAgICAgICAgbWF4OiBsb2NhdGlvbi5lbmQub2Zmc2V0CiAgICAgIH07CiAgICB9CgogICAgdmFyIGN1cnJlbnRGdW5jdGlvbjsKICAgIHZhciBjdXJyZW50QXJncyA9IFtdOwogICAgdmFyIGZ1bmN0aW9ucyA9IFtdOwogICAgdmFyIGFyZ3MgPSBbXTsKICAgIHZhciB2YXJpYWJsZXMgPSB7fTsKICAgIHBlZyRyZXN1bHQgPSBwZWckc3RhcnRSdWxlRnVuY3Rpb24oKTsKCiAgICBpZiAocGVnJHJlc3VsdCAhPT0gcGVnJEZBSUxFRCAmJiBwZWckY3VyclBvcyA9PT0gaW5wdXQubGVuZ3RoKSB7CiAgICAgIHJldHVybiBwZWckcmVzdWx0OwogICAgfSBlbHNlIHsKICAgICAgaWYgKHBlZyRyZXN1bHQgIT09IHBlZyRGQUlMRUQgJiYgcGVnJGN1cnJQb3MgPCBpbnB1dC5sZW5ndGgpIHsKICAgICAgICBwZWckZmFpbCh7CiAgICAgICAgICB0eXBlOiAiZW5kIiwKICAgICAgICAgIGRlc2NyaXB0aW9uOiAiZW5kIG9mIGlucHV0IgogICAgICAgIH0pOwogICAgICB9CgogICAgICB0aHJvdyBwZWckYnVpbGRFeGNlcHRpb24obnVsbCwgcGVnJG1heEZhaWxFeHBlY3RlZCwgcGVnJG1heEZhaWxQb3MgPCBpbnB1dC5sZW5ndGggPyBpbnB1dC5jaGFyQXQocGVnJG1heEZhaWxQb3MpIDogbnVsbCwgcGVnJG1heEZhaWxQb3MgPCBpbnB1dC5sZW5ndGggPyBwZWckY29tcHV0ZUxvY2F0aW9uKHBlZyRtYXhGYWlsUG9zLCBwZWckbWF4RmFpbFBvcyArIDEpIDogcGVnJGNvbXB1dGVMb2NhdGlvbihwZWckbWF4RmFpbFBvcywgcGVnJG1heEZhaWxQb3MpKTsKICAgIH0KICB9CgogIHJldHVybiB7CiAgICBTeW50YXhFcnJvcjogcGVnJFN5bnRheEVycm9yLAogICAgcGFyc2U6IHBlZyRwYXJzZQogIH07Cn0oKTs="},null]}