{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/canvas/public/components/element_wrapper/index.js","dependencies":[{"path":"x-pack/legacy/plugins/canvas/public/components/element_wrapper/index.js","mtime":1589249551967},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLkVsZW1lbnRXcmFwcGVyID0gdm9pZCAwOwoKdmFyIF9wcm9wVHlwZXMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoInByb3AtdHlwZXMiKSk7Cgp2YXIgX3JlYWN0UmVkdXggPSByZXF1aXJlKCJyZWFjdC1yZWR1eCIpOwoKdmFyIF9yZWNvbXBvc2UgPSByZXF1aXJlKCJyZWNvbXBvc2UiKTsKCnZhciBfcmVhY3RGYXN0Q29tcGFyZSA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgicmVhY3QtZmFzdC1jb21wYXJlIikpOwoKdmFyIF93b3JrcGFkID0gcmVxdWlyZSgiLi4vLi4vc3RhdGUvc2VsZWN0b3JzL3dvcmtwYWQiKTsKCnZhciBfcmVzb2x2ZWRfYXJnID0gcmVxdWlyZSgiLi4vLi4vbGliL3Jlc29sdmVkX2FyZyIpOwoKdmFyIF9lbGVtZW50X3dyYXBwZXIgPSByZXF1aXJlKCIuL2VsZW1lbnRfd3JhcHBlciIpOwoKdmFyIF9oYW5kbGVycyA9IHJlcXVpcmUoIi4vbGliL2hhbmRsZXJzIik7CgpmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfQoKZnVuY3Rpb24gb3duS2V5cyhvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7IHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCk7IGlmIChlbnVtZXJhYmxlT25seSkgc3ltYm9scyA9IHN5bWJvbHMuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHsgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7IH0pOyBrZXlzLnB1c2guYXBwbHkoa2V5cywgc3ltYm9scyk7IH0gcmV0dXJuIGtleXM7IH0KCmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV0gIT0gbnVsbCA/IGFyZ3VtZW50c1tpXSA6IHt9OyBpZiAoaSAlIDIpIHsgb3duS2V5cyhzb3VyY2UsIHRydWUpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTsgfSk7IH0gZWxzZSBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMpIHsgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKTsgfSBlbHNlIHsgb3duS2V5cyhzb3VyY2UpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBrZXkpKTsgfSk7IH0gfSByZXR1cm4gdGFyZ2V0OyB9CgpmdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7IGlmIChrZXkgaW4gb2JqKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgeyB2YWx1ZTogdmFsdWUsIGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUgfSk7IH0gZWxzZSB7IG9ialtrZXldID0gdmFsdWU7IH0gcmV0dXJuIG9iajsgfQoKZnVuY3Rpb24gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKHNvdXJjZSwgZXhjbHVkZWQpIHsgaWYgKHNvdXJjZSA9PSBudWxsKSByZXR1cm4ge307IHZhciB0YXJnZXQgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShzb3VyY2UsIGV4Y2x1ZGVkKTsgdmFyIGtleSwgaTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIHNvdXJjZVN5bWJvbEtleXMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKHNvdXJjZSk7IGZvciAoaSA9IDA7IGkgPCBzb3VyY2VTeW1ib2xLZXlzLmxlbmd0aDsgaSsrKSB7IGtleSA9IHNvdXJjZVN5bWJvbEtleXNbaV07IGlmIChleGNsdWRlZC5pbmRleE9mKGtleSkgPj0gMCkgY29udGludWU7IGlmICghT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZS5jYWxsKHNvdXJjZSwga2V5KSkgY29udGludWU7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSByZXR1cm4gdGFyZ2V0OyB9CgpmdW5jdGlvbiBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShzb3VyY2UsIGV4Y2x1ZGVkKSB7IGlmIChzb3VyY2UgPT0gbnVsbCkgcmV0dXJuIHt9OyB2YXIgdGFyZ2V0ID0ge307IHZhciBzb3VyY2VLZXlzID0gT2JqZWN0LmtleXMoc291cmNlKTsgdmFyIGtleSwgaTsgZm9yIChpID0gMDsgaSA8IHNvdXJjZUtleXMubGVuZ3RoOyBpKyspIHsga2V5ID0gc291cmNlS2V5c1tpXTsgaWYgKGV4Y2x1ZGVkLmluZGV4T2Yoa2V5KSA+PSAwKSBjb250aW51ZTsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSByZXR1cm4gdGFyZ2V0OyB9CgpmdW5jdGlvbiBzZWxlY3RvckZhY3RvcnkoZGlzcGF0Y2gpIHsKICB2YXIgcmVzdWx0ID0ge307CiAgdmFyIGNyZWF0ZUhhbmRsZXJzID0gKDAsIF9oYW5kbGVycy5jcmVhdGVIYW5kbGVycykoZGlzcGF0Y2gpOwogIHJldHVybiBmdW5jdGlvbiAobmV4dFN0YXRlLCBuZXh0T3duUHJvcHMpIHsKICAgIHZhciBlbGVtZW50ID0gbmV4dE93blByb3BzLmVsZW1lbnQsCiAgICAgICAgcmVzdE93blByb3BzID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKG5leHRPd25Qcm9wcywgWyJlbGVtZW50Il0pOwoKICAgIHZhciB0cmFuc2Zvcm1NYXRyaXggPSBlbGVtZW50LnRyYW5zZm9ybU1hdHJpeCwKICAgICAgICB3aWR0aCA9IGVsZW1lbnQud2lkdGgsCiAgICAgICAgaGVpZ2h0ID0gZWxlbWVudC5oZWlnaHQ7CiAgICB2YXIgcmVzb2x2ZWRBcmcgPSAoMCwgX3dvcmtwYWQuZ2V0UmVzb2x2ZWRBcmdzKShuZXh0U3RhdGUsIGVsZW1lbnQuaWQsICdleHByZXNzaW9uUmVuZGVyYWJsZScpOwogICAgdmFyIHNlbGVjdGVkUGFnZSA9ICgwLCBfd29ya3BhZC5nZXRTZWxlY3RlZFBhZ2UpKG5leHRTdGF0ZSk7IC8vIGJ1aWxkIGludGVyaW0gcHJvcHMgb2JqZWN0CgogICAgdmFyIG5leHRSZXN1bHQgPSBfb2JqZWN0U3ByZWFkKHt9LCByZXN0T3duUHJvcHMsIHsKICAgICAgLy8gc3RhdGUgYW5kIHN0YXRlLWRlcml2ZWQgcHJvcHMKICAgICAgc2VsZWN0ZWRQYWdlOiBzZWxlY3RlZFBhZ2UsCiAgICAgIHN0YXRlOiAoMCwgX3Jlc29sdmVkX2FyZy5nZXRTdGF0ZSkocmVzb2x2ZWRBcmcpLAogICAgICByZW5kZXJhYmxlOiAoMCwgX3Jlc29sdmVkX2FyZy5nZXRWYWx1ZSkocmVzb2x2ZWRBcmcpLAogICAgICAvLyBwYXNzIGFsb25nIHRoZSBoYW5kbGVycyBjcmVhdGlvbiBmdW5jdGlvbgogICAgICBjcmVhdGVIYW5kbGVyczogY3JlYXRlSGFuZGxlcnMsCiAgICAgIC8vIHJlcXVpcmVkIHBhcnRzIG9mIHRoZSBlbGVtZW50IG9iamVjdAogICAgICB0cmFuc2Zvcm1NYXRyaXg6IHRyYW5zZm9ybU1hdHJpeCwKICAgICAgd2lkdGg6IHdpZHRoLAogICAgICBoZWlnaHQ6IGhlaWdodCwKICAgICAgLy8gcGFzcyBhbG9uZyBvbmx5IHRoZSB1c2VmdWwgcGFydHMgb2YgdGhlIGVsZW1lbnQgb2JqZWN0CiAgICAgIC8vIHNvIGhhbmRsZXJzIG9iamVjdCBjYW4gYmUgY3JlYXRlZAogICAgICBlbGVtZW50OiB7CiAgICAgICAgaWQ6IGVsZW1lbnQuaWQsCiAgICAgICAgZmlsdGVyOiBlbGVtZW50LmZpbHRlciwKICAgICAgICBleHByZXNzaW9uOiBlbGVtZW50LmV4cHJlc3Npb24KICAgICAgfQogICAgfSk7IC8vIHVwZGF0ZSBwcm9wcyBvbmx5IGlmIHNvbWV0aGluZyBhY3R1YWxseSBjaGFuZ2VkCgoKICAgIGlmICghKDAsIF9yZWFjdEZhc3RDb21wYXJlLmRlZmF1bHQpKHJlc3VsdCwgbmV4dFJlc3VsdCkpIHsKICAgICAgcmVzdWx0ID0gbmV4dFJlc3VsdDsKICAgIH0KCiAgICByZXR1cm4gcmVzdWx0OwogIH07Cn0KCnZhciBFbGVtZW50V3JhcHBlciA9ICgwLCBfcmVjb21wb3NlLmNvbXBvc2UpKCgwLCBfcmVhY3RSZWR1eC5jb25uZWN0QWR2YW5jZWQpKHNlbGVjdG9yRmFjdG9yeSksICgwLCBfcmVjb21wb3NlLndpdGhQcm9wc09uQ2hhbmdlKShmdW5jdGlvbiAocHJvcHMsIG5leHRQcm9wcykgewogIHJldHVybiAhKDAsIF9yZWFjdEZhc3RDb21wYXJlLmRlZmF1bHQpKHByb3BzLmVsZW1lbnQsIG5leHRQcm9wcy5lbGVtZW50KTsKfSwgZnVuY3Rpb24gKHByb3BzKSB7CiAgdmFyIGVsZW1lbnQgPSBwcm9wcy5lbGVtZW50LAogICAgICBjcmVhdGVIYW5kbGVycyA9IHByb3BzLmNyZWF0ZUhhbmRsZXJzOwogIHZhciBoYW5kbGVycyA9IGNyZWF0ZUhhbmRsZXJzKGVsZW1lbnQpOyAvLyB0aGlzIHJlbW92ZXMgZWxlbWVudCBhbmQgY3JlYXRlSGFuZGxlcnMgZnJvbSBwYXNzZWQgcHJvcHMKCiAgcmV0dXJuIHsKICAgIGhhbmRsZXJzOiBoYW5kbGVycwogIH07Cn0pLCAoMCwgX3JlY29tcG9zZS5tYXBQcm9wcykoZnVuY3Rpb24gKHByb3BzKSB7CiAgLy8gcmVtb3ZlIGVsZW1lbnQgYW5kIGNyZWF0ZUhhbmRsZXJzIGZyb20gcHJvcHMgcGFzc2VkIHRvIGNvbXBvbmVudAogIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnVzZWQtdmFycwogIHZhciBlbGVtZW50ID0gcHJvcHMuZWxlbWVudCwKICAgICAgY3JlYXRlSGFuZGxlcnMgPSBwcm9wcy5jcmVhdGVIYW5kbGVycywKICAgICAgc2VsZWN0ZWRQYWdlID0gcHJvcHMuc2VsZWN0ZWRQYWdlLAogICAgICByZXN0UHJvcHMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMocHJvcHMsIFsiZWxlbWVudCIsICJjcmVhdGVIYW5kbGVycyIsICJzZWxlY3RlZFBhZ2UiXSk7CgogIHJldHVybiByZXN0UHJvcHM7Cn0pKShfZWxlbWVudF93cmFwcGVyLkVsZW1lbnRXcmFwcGVyKTsKZXhwb3J0cy5FbGVtZW50V3JhcHBlciA9IEVsZW1lbnRXcmFwcGVyOwpFbGVtZW50V3JhcHBlci5wcm9wVHlwZXMgPSB7CiAgZWxlbWVudDogX3Byb3BUeXBlcy5kZWZhdWx0LnNoYXBlKHsKICAgIGlkOiBfcHJvcFR5cGVzLmRlZmF1bHQuc3RyaW5nLmlzUmVxdWlyZWQsCiAgICB0cmFuc2Zvcm1NYXRyaXg6IF9wcm9wVHlwZXMuZGVmYXVsdC5hcnJheU9mKF9wcm9wVHlwZXMuZGVmYXVsdC5udW1iZXIpLmlzUmVxdWlyZWQsCiAgICB3aWR0aDogX3Byb3BUeXBlcy5kZWZhdWx0Lm51bWJlci5pc1JlcXVpcmVkLAogICAgaGVpZ2h0OiBfcHJvcFR5cGVzLmRlZmF1bHQubnVtYmVyLmlzUmVxdWlyZWQsCiAgICAvLyBzb21ldGltZXMgd2UgZ2V0IGEgc2hhcGUsIHdoaWNoIGxhY2tzIGFuIGV4cHJlc3Npb24KICAgIC8vIHNvIGVsZW1lbnQgcHJvcGVydGllcyBjYW4gbm90IGJlIG1hcmtlZCBhcyByZXF1aXJlZAogICAgZXhwcmVzc2lvbjogX3Byb3BUeXBlcy5kZWZhdWx0LnN0cmluZywKICAgIGZpbHRlcjogX3Byb3BUeXBlcy5kZWZhdWx0LnN0cmluZwogIH0pLmlzUmVxdWlyZWQKfTs="},null]}