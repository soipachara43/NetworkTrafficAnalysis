{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/siem/public/components/page/overview/overview_host_stats/index.js","dependencies":[{"path":"x-pack/legacy/plugins/siem/public/components/page/overview/overview_host_stats/index.js","mtime":1589249553112},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLk92ZXJ2aWV3SG9zdFN0YXRzID0gZXhwb3J0cy5nZXRPdmVydmlld0hvc3RTdGF0cyA9IHZvaWQgMDsKCnZhciBfZXVpID0gcmVxdWlyZSgiQGVsYXN0aWMvZXVpIik7Cgp2YXIgX3JlYWN0ID0gcmVxdWlyZSgiQGtibi9pMThuL3JlYWN0Iik7Cgp2YXIgX3JlYWN0MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgicmVhY3QiKSk7Cgp2YXIgX3N0eWxlZENvbXBvbmVudHMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoInN0eWxlZC1jb21wb25lbnRzIikpOwoKdmFyIF9zdGF0X3ZhbHVlID0gcmVxdWlyZSgiLi4vc3RhdF92YWx1ZSIpOwoKZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsKICByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogewogICAgZGVmYXVsdDogb2JqCiAgfTsKfQovKgogKiBDb3B5cmlnaHQgRWxhc3RpY3NlYXJjaCBCLlYuIGFuZC9vciBsaWNlbnNlZCB0byBFbGFzdGljc2VhcmNoIEIuVi4gdW5kZXIgb25lCiAqIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiBMaWNlbnNlZCB1bmRlciB0aGUgRWxhc3RpYyBMaWNlbnNlOwogKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIEVsYXN0aWMgTGljZW5zZS4KICovCgoKdmFyIGdldE92ZXJ2aWV3SG9zdFN0YXRzID0gZnVuY3Rpb24gZ2V0T3ZlcnZpZXdIb3N0U3RhdHMoZGF0YSkgewogIHZhciBfZGF0YSRhdWRpdGJlYXRBdWRpdGQsIF9kYXRhJGF1ZGl0YmVhdEZJTSwgX2RhdGEkYXVkaXRiZWF0TG9naW4sIF9kYXRhJGF1ZGl0YmVhdFBhY2thZywgX2RhdGEkYXVkaXRiZWF0UHJvY2VzLCBfZGF0YSRhdWRpdGJlYXRVc2VyLCBfZGF0YSRlbmRnYW1lRG5zLCBfZGF0YSRlbmRnYW1lRmlsZSwgX2RhdGEkZW5kZ2FtZUltYWdlTG9hLCBfZGF0YSRlbmRnYW1lTmV0d29yaywgX2RhdGEkZW5kZ2FtZVByb2Nlc3MsIF9kYXRhJGVuZGdhbWVSZWdpc3RyeSwgX2RhdGEkZW5kZ2FtZVNlY3VyaXR5LCBfZGF0YSRmaWxlYmVhdFN5c3RlbU0sIF9kYXRhJHdpbmxvZ2JlYXRTZWN1ciwgX2RhdGEkd2lubG9nYmVhdE1XU3lzOwoKICByZXR1cm4gW3sKICAgIGNvdW50OiAoX2RhdGEkYXVkaXRiZWF0QXVkaXRkID0gZGF0YS5hdWRpdGJlYXRBdWRpdGQpICE9PSBudWxsICYmIF9kYXRhJGF1ZGl0YmVhdEF1ZGl0ZCAhPT0gdm9pZCAwID8gX2RhdGEkYXVkaXRiZWF0QXVkaXRkIDogMCwKICAgIHRpdGxlOiBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChfcmVhY3QuRm9ybWF0dGVkTWVzc2FnZSwgewogICAgICBpZDogInhwYWNrLnNpZW0ub3ZlcnZpZXcuYXVkaXRCZWF0QXVkaXRUaXRsZSIsCiAgICAgIGRlZmF1bHRNZXNzYWdlOiAiQXVkaXQiCiAgICB9KSwKICAgIGlkOiAnYXVkaXRiZWF0QXVkaXRkJwogIH0sIHsKICAgIGNvdW50OiAoX2RhdGEkYXVkaXRiZWF0RklNID0gZGF0YS5hdWRpdGJlYXRGSU0pICE9PSBudWxsICYmIF9kYXRhJGF1ZGl0YmVhdEZJTSAhPT0gdm9pZCAwID8gX2RhdGEkYXVkaXRiZWF0RklNIDogMCwKICAgIHRpdGxlOiBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChfcmVhY3QuRm9ybWF0dGVkTWVzc2FnZSwgewogICAgICBpZDogInhwYWNrLnNpZW0ub3ZlcnZpZXcuYXVkaXRCZWF0RmltVGl0bGUiLAogICAgICBkZWZhdWx0TWVzc2FnZTogIkZpbGUgSW50ZWdyaXR5IE1vZHVsZSIKICAgIH0pLAogICAgaWQ6ICdhdWRpdGJlYXRGSU0nCiAgfSwgewogICAgY291bnQ6IChfZGF0YSRhdWRpdGJlYXRMb2dpbiA9IGRhdGEuYXVkaXRiZWF0TG9naW4pICE9PSBudWxsICYmIF9kYXRhJGF1ZGl0YmVhdExvZ2luICE9PSB2b2lkIDAgPyBfZGF0YSRhdWRpdGJlYXRMb2dpbiA6IDAsCiAgICB0aXRsZTogX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3JlYWN0LkZvcm1hdHRlZE1lc3NhZ2UsIHsKICAgICAgaWQ6ICJ4cGFjay5zaWVtLm92ZXJ2aWV3LmF1ZGl0QmVhdExvZ2luVGl0bGUiLAogICAgICBkZWZhdWx0TWVzc2FnZTogIkxvZ2luIgogICAgfSksCiAgICBpZDogJ2F1ZGl0YmVhdExvZ2luJwogIH0sIHsKICAgIGNvdW50OiAoX2RhdGEkYXVkaXRiZWF0UGFja2FnID0gZGF0YS5hdWRpdGJlYXRQYWNrYWdlKSAhPT0gbnVsbCAmJiBfZGF0YSRhdWRpdGJlYXRQYWNrYWcgIT09IHZvaWQgMCA/IF9kYXRhJGF1ZGl0YmVhdFBhY2thZyA6IDAsCiAgICB0aXRsZTogX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3JlYWN0LkZvcm1hdHRlZE1lc3NhZ2UsIHsKICAgICAgaWQ6ICJ4cGFjay5zaWVtLm92ZXJ2aWV3LmF1ZGl0QmVhdFBhY2thZ2VUaXRsZSIsCiAgICAgIGRlZmF1bHRNZXNzYWdlOiAiUGFja2FnZSIKICAgIH0pLAogICAgaWQ6ICdhdWRpdGJlYXRQYWNrYWdlJwogIH0sIHsKICAgIGNvdW50OiAoX2RhdGEkYXVkaXRiZWF0UHJvY2VzID0gZGF0YS5hdWRpdGJlYXRQcm9jZXNzKSAhPT0gbnVsbCAmJiBfZGF0YSRhdWRpdGJlYXRQcm9jZXMgIT09IHZvaWQgMCA/IF9kYXRhJGF1ZGl0YmVhdFByb2NlcyA6IDAsCiAgICB0aXRsZTogX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3JlYWN0LkZvcm1hdHRlZE1lc3NhZ2UsIHsKICAgICAgaWQ6ICJ4cGFjay5zaWVtLm92ZXJ2aWV3LmF1ZGl0QmVhdFByb2Nlc3NUaXRsZSIsCiAgICAgIGRlZmF1bHRNZXNzYWdlOiAiUHJvY2VzcyIKICAgIH0pLAogICAgaWQ6ICdhdWRpdGJlYXRQcm9jZXNzJwogIH0sIHsKICAgIGNvdW50OiAoX2RhdGEkYXVkaXRiZWF0VXNlciA9IGRhdGEuYXVkaXRiZWF0VXNlcikgIT09IG51bGwgJiYgX2RhdGEkYXVkaXRiZWF0VXNlciAhPT0gdm9pZCAwID8gX2RhdGEkYXVkaXRiZWF0VXNlciA6IDAsCiAgICB0aXRsZTogX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3JlYWN0LkZvcm1hdHRlZE1lc3NhZ2UsIHsKICAgICAgaWQ6ICJ4cGFjay5zaWVtLm92ZXJ2aWV3LmF1ZGl0QmVhdFVzZXJUaXRsZSIsCiAgICAgIGRlZmF1bHRNZXNzYWdlOiAiVXNlciIKICAgIH0pLAogICAgaWQ6ICdhdWRpdGJlYXRVc2VyJwogIH0sIHsKICAgIGNvdW50OiAoX2RhdGEkZW5kZ2FtZURucyA9IGRhdGEuZW5kZ2FtZURucykgIT09IG51bGwgJiYgX2RhdGEkZW5kZ2FtZURucyAhPT0gdm9pZCAwID8gX2RhdGEkZW5kZ2FtZURucyA6IDAsCiAgICB0aXRsZTogX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3JlYWN0LkZvcm1hdHRlZE1lc3NhZ2UsIHsKICAgICAgaWQ6ICJ4cGFjay5zaWVtLm92ZXJ2aWV3LmVuZGdhbWVEbnNUaXRsZSIsCiAgICAgIGRlZmF1bHRNZXNzYWdlOiAiRE5TIgogICAgfSksCiAgICBpZDogJ2VuZGdhbWVEbnMnCiAgfSwgewogICAgY291bnQ6IChfZGF0YSRlbmRnYW1lRmlsZSA9IGRhdGEuZW5kZ2FtZUZpbGUpICE9PSBudWxsICYmIF9kYXRhJGVuZGdhbWVGaWxlICE9PSB2b2lkIDAgPyBfZGF0YSRlbmRnYW1lRmlsZSA6IDAsCiAgICB0aXRsZTogX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3JlYWN0LkZvcm1hdHRlZE1lc3NhZ2UsIHsKICAgICAgaWQ6ICJ4cGFjay5zaWVtLm92ZXJ2aWV3LmVuZGdhbWVGaWxlVGl0bGUiLAogICAgICBkZWZhdWx0TWVzc2FnZTogIkZpbGUiCiAgICB9KSwKICAgIGlkOiAnZW5kZ2FtZUZpbGUnCiAgfSwgewogICAgY291bnQ6IChfZGF0YSRlbmRnYW1lSW1hZ2VMb2EgPSBkYXRhLmVuZGdhbWVJbWFnZUxvYWQpICE9PSBudWxsICYmIF9kYXRhJGVuZGdhbWVJbWFnZUxvYSAhPT0gdm9pZCAwID8gX2RhdGEkZW5kZ2FtZUltYWdlTG9hIDogMCwKICAgIHRpdGxlOiBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChfcmVhY3QuRm9ybWF0dGVkTWVzc2FnZSwgewogICAgICBpZDogInhwYWNrLnNpZW0ub3ZlcnZpZXcuZW5kZ2FtZUltYWdlTG9hZFRpdGxlIiwKICAgICAgZGVmYXVsdE1lc3NhZ2U6ICJJbWFnZSBMb2FkIgogICAgfSksCiAgICBpZDogJ2VuZGdhbWVJbWFnZUxvYWQnCiAgfSwgewogICAgY291bnQ6IChfZGF0YSRlbmRnYW1lTmV0d29yayA9IGRhdGEuZW5kZ2FtZU5ldHdvcmspICE9PSBudWxsICYmIF9kYXRhJGVuZGdhbWVOZXR3b3JrICE9PSB2b2lkIDAgPyBfZGF0YSRlbmRnYW1lTmV0d29yayA6IDAsCiAgICB0aXRsZTogX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3JlYWN0LkZvcm1hdHRlZE1lc3NhZ2UsIHsKICAgICAgaWQ6ICJ4cGFjay5zaWVtLm92ZXJ2aWV3LmVuZGdhbWVOZXR3b3JrVGl0bGUiLAogICAgICBkZWZhdWx0TWVzc2FnZTogIk5ldHdvcmsiCiAgICB9KSwKICAgIGlkOiAnZW5kZ2FtZU5ldHdvcmsnCiAgfSwgewogICAgY291bnQ6IChfZGF0YSRlbmRnYW1lUHJvY2VzcyA9IGRhdGEuZW5kZ2FtZVByb2Nlc3MpICE9PSBudWxsICYmIF9kYXRhJGVuZGdhbWVQcm9jZXNzICE9PSB2b2lkIDAgPyBfZGF0YSRlbmRnYW1lUHJvY2VzcyA6IDAsCiAgICB0aXRsZTogX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3JlYWN0LkZvcm1hdHRlZE1lc3NhZ2UsIHsKICAgICAgaWQ6ICJ4cGFjay5zaWVtLm92ZXJ2aWV3LmVuZGdhbWVQcm9jZXNzVGl0bGUiLAogICAgICBkZWZhdWx0TWVzc2FnZTogIlByb2Nlc3MiCiAgICB9KSwKICAgIGlkOiAnZW5kZ2FtZVByb2Nlc3MnCiAgfSwgewogICAgY291bnQ6IChfZGF0YSRlbmRnYW1lUmVnaXN0cnkgPSBkYXRhLmVuZGdhbWVSZWdpc3RyeSkgIT09IG51bGwgJiYgX2RhdGEkZW5kZ2FtZVJlZ2lzdHJ5ICE9PSB2b2lkIDAgPyBfZGF0YSRlbmRnYW1lUmVnaXN0cnkgOiAwLAogICAgdGl0bGU6IF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9yZWFjdC5Gb3JtYXR0ZWRNZXNzYWdlLCB7CiAgICAgIGlkOiAieHBhY2suc2llbS5vdmVydmlldy5lbmRnYW1lUmVnaXN0cnlUaXRsZSIsCiAgICAgIGRlZmF1bHRNZXNzYWdlOiAiUmVnaXN0cnkiCiAgICB9KSwKICAgIGlkOiAnZW5kZ2FtZVJlZ2lzdHJ5JwogIH0sIHsKICAgIGNvdW50OiAoX2RhdGEkZW5kZ2FtZVNlY3VyaXR5ID0gZGF0YS5lbmRnYW1lU2VjdXJpdHkpICE9PSBudWxsICYmIF9kYXRhJGVuZGdhbWVTZWN1cml0eSAhPT0gdm9pZCAwID8gX2RhdGEkZW5kZ2FtZVNlY3VyaXR5IDogMCwKICAgIHRpdGxlOiBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChfcmVhY3QuRm9ybWF0dGVkTWVzc2FnZSwgewogICAgICBpZDogInhwYWNrLnNpZW0ub3ZlcnZpZXcuZW5kZ2FtZVNlY3VyaXR5VGl0bGUiLAogICAgICBkZWZhdWx0TWVzc2FnZTogIlNlY3VyaXR5IgogICAgfSksCiAgICBpZDogJ2VuZGdhbWVTZWN1cml0eScKICB9LCB7CiAgICBjb3VudDogKF9kYXRhJGZpbGViZWF0U3lzdGVtTSA9IGRhdGEuZmlsZWJlYXRTeXN0ZW1Nb2R1bGUpICE9PSBudWxsICYmIF9kYXRhJGZpbGViZWF0U3lzdGVtTSAhPT0gdm9pZCAwID8gX2RhdGEkZmlsZWJlYXRTeXN0ZW1NIDogMCwKICAgIHRpdGxlOiBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChfcmVhY3QuRm9ybWF0dGVkTWVzc2FnZSwgewogICAgICBpZDogInhwYWNrLnNpZW0ub3ZlcnZpZXcuZmlsZWJlYXRTeXN0ZW1Nb2R1bGVUaXRsZSIsCiAgICAgIGRlZmF1bHRNZXNzYWdlOiAiU3lzdGVtIE1vZHVsZSIKICAgIH0pLAogICAgaWQ6ICdmaWxlYmVhdFN5c3RlbU1vZHVsZScKICB9LCB7CiAgICBjb3VudDogKF9kYXRhJHdpbmxvZ2JlYXRTZWN1ciA9IGRhdGEud2lubG9nYmVhdFNlY3VyaXR5KSAhPT0gbnVsbCAmJiBfZGF0YSR3aW5sb2diZWF0U2VjdXIgIT09IHZvaWQgMCA/IF9kYXRhJHdpbmxvZ2JlYXRTZWN1ciA6IDAsCiAgICB0aXRsZTogX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3JlYWN0LkZvcm1hdHRlZE1lc3NhZ2UsIHsKICAgICAgaWQ6ICJ4cGFjay5zaWVtLm92ZXJ2aWV3LndpbmxvZ2JlYXRTZWN1cml0eVRpdGxlIiwKICAgICAgZGVmYXVsdE1lc3NhZ2U6ICJTZWN1cml0eSIKICAgIH0pLAogICAgaWQ6ICd3aW5sb2diZWF0U2VjdXJpdHknCiAgfSwgewogICAgY291bnQ6IChfZGF0YSR3aW5sb2diZWF0TVdTeXMgPSBkYXRhLndpbmxvZ2JlYXRNV1N5c21vbk9wZXJhdGlvbmFsKSAhPT0gbnVsbCAmJiBfZGF0YSR3aW5sb2diZWF0TVdTeXMgIT09IHZvaWQgMCA/IF9kYXRhJHdpbmxvZ2JlYXRNV1N5cyA6IDAsCiAgICB0aXRsZTogX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3JlYWN0LkZvcm1hdHRlZE1lc3NhZ2UsIHsKICAgICAgaWQ6ICJ4cGFjay5zaWVtLm92ZXJ2aWV3LndpbmxvZ2JlYXRNV1N5c21vbk9wZXJhdGlvbmFsIiwKICAgICAgZGVmYXVsdE1lc3NhZ2U6ICJNaWNyb3NvZnQtV2luZG93cy1TeXNtb24vT3BlcmF0aW9uYWwiCiAgICB9KSwKICAgIGlkOiAnd2lubG9nYmVhdE1XU3lzbW9uT3BlcmF0aW9uYWwnCiAgfV07Cn07CgpleHBvcnRzLmdldE92ZXJ2aWV3SG9zdFN0YXRzID0gZ2V0T3ZlcnZpZXdIb3N0U3RhdHM7Cgp2YXIgSG9zdFN0YXRzQ29udGFpbmVyID0gX3N0eWxlZENvbXBvbmVudHMuZGVmYXVsdC5kaXYud2l0aENvbmZpZyh7CiAgZGlzcGxheU5hbWU6ICJIb3N0U3RhdHNDb250YWluZXIiLAogIGNvbXBvbmVudElkOiAic2ozenZyLTAiCn0pKFsiLmFjY29yZGlvbi1idXR0b257d2lkdGg6MTAwJTt9Il0pOwoKdmFyIGhvc3RTdGF0R3JvdXBzID0gW3sKICBncm91cElkOiAnYXVkaXRiZWF0JywKICBuYW1lOiBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChfcmVhY3QuRm9ybWF0dGVkTWVzc2FnZSwgewogICAgaWQ6ICJ4cGFjay5zaWVtLm92ZXJ2aWV3Lmhvc3RTdGF0R3JvdXBBdWRpdGJlYXQiLAogICAgZGVmYXVsdE1lc3NhZ2U6ICJBdWRpdGJlYXQiCiAgfSksCiAgc3RhdElkczogWydhdWRpdGJlYXRBdWRpdGQnLCAnYXVkaXRiZWF0RklNJywgJ2F1ZGl0YmVhdExvZ2luJywgJ2F1ZGl0YmVhdFBhY2thZ2UnLCAnYXVkaXRiZWF0UHJvY2VzcycsICdhdWRpdGJlYXRVc2VyJ10KfSwgewogIGdyb3VwSWQ6ICdlbmRnYW1lJywKICBuYW1lOiBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChfcmVhY3QuRm9ybWF0dGVkTWVzc2FnZSwgewogICAgaWQ6ICJ4cGFjay5zaWVtLm92ZXJ2aWV3Lmhvc3RTdGF0R3JvdXBFbGFzdGljRW5kcG9pbnRTZWN1cml0eSIsCiAgICBkZWZhdWx0TWVzc2FnZTogIkVsYXN0aWMgRW5kcG9pbnQgU2VjdXJpdHkiCiAgfSksCiAgc3RhdElkczogWydlbmRnYW1lRG5zJywgJ2VuZGdhbWVGaWxlJywgJ2VuZGdhbWVJbWFnZUxvYWQnLCAnZW5kZ2FtZU5ldHdvcmsnLCAnZW5kZ2FtZVByb2Nlc3MnLCAnZW5kZ2FtZVJlZ2lzdHJ5JywgJ2VuZGdhbWVTZWN1cml0eSddCn0sIHsKICBncm91cElkOiAnZmlsZWJlYXQnLAogIG5hbWU6IF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9yZWFjdC5Gb3JtYXR0ZWRNZXNzYWdlLCB7CiAgICBpZDogInhwYWNrLnNpZW0ub3ZlcnZpZXcuaG9zdFN0YXRHcm91cEZpbGViZWF0IiwKICAgIGRlZmF1bHRNZXNzYWdlOiAiRmlsZWJlYXQiCiAgfSksCiAgc3RhdElkczogWydmaWxlYmVhdFN5c3RlbU1vZHVsZSddCn0sIHsKICBncm91cElkOiAnd2lubG9nYmVhdCcsCiAgbmFtZTogX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3JlYWN0LkZvcm1hdHRlZE1lc3NhZ2UsIHsKICAgIGlkOiAieHBhY2suc2llbS5vdmVydmlldy5ob3N0U3RhdEdyb3VwV2lubG9nYmVhdCIsCiAgICBkZWZhdWx0TWVzc2FnZTogIldpbmxvZ2JlYXQiCiAgfSksCiAgc3RhdElkczogWyd3aW5sb2diZWF0U2VjdXJpdHknLCAnd2lubG9nYmVhdE1XU3lzbW9uT3BlcmF0aW9uYWwnXQp9XTsKCnZhciBUaXRsZSA9IF9zdHlsZWRDb21wb25lbnRzLmRlZmF1bHQuZGl2LndpdGhDb25maWcoewogIGRpc3BsYXlOYW1lOiAiVGl0bGUiLAogIGNvbXBvbmVudElkOiAic2ozenZyLTEiCn0pKFsibWFyZ2luLWxlZnQ6MjRweDsiXSk7Cgp2YXIgQWNjb3JkaW9uQ29udGVudCA9IF9zdHlsZWRDb21wb25lbnRzLmRlZmF1bHQuZGl2LndpdGhDb25maWcoewogIGRpc3BsYXlOYW1lOiAiQWNjb3JkaW9uQ29udGVudCIsCiAgY29tcG9uZW50SWQ6ICJzajN6dnItMiIKfSkoWyJtYXJnaW4tdG9wOjhweDsiXSk7Cgp2YXIgT3ZlcnZpZXdIb3N0U3RhdHNDb21wb25lbnQgPSBmdW5jdGlvbiBPdmVydmlld0hvc3RTdGF0c0NvbXBvbmVudChfcmVmKSB7CiAgdmFyIGRhdGEgPSBfcmVmLmRhdGEsCiAgICAgIGxvYWRpbmcgPSBfcmVmLmxvYWRpbmc7CiAgdmFyIGFsbEhvc3RTdGF0cyA9IGdldE92ZXJ2aWV3SG9zdFN0YXRzKGRhdGEpOwogIHZhciBhbGxIb3N0U3RhdHNDb3VudCA9IGFsbEhvc3RTdGF0cy5yZWR1Y2UoZnVuY3Rpb24gKHRvdGFsLCBzdGF0KSB7CiAgICByZXR1cm4gdG90YWwgKyBzdGF0LmNvdW50OwogIH0sIDApOwogIHJldHVybiBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChIb3N0U3RhdHNDb250YWluZXIsIHsKICAgICJkYXRhLXRlc3Qtc3ViaiI6ICJvdmVydmlldy1ob3N0cy1zdGF0cyIKICB9LCBob3N0U3RhdEdyb3Vwcy5tYXAoZnVuY3Rpb24gKHN0YXRHcm91cCwgaSkgewogICAgdmFyIHN0YXRzRm9yR3JvdXAgPSBhbGxIb3N0U3RhdHMuZmlsdGVyKGZ1bmN0aW9uIChzKSB7CiAgICAgIHJldHVybiBzdGF0R3JvdXAuc3RhdElkcy5pbmNsdWRlcyhzLmlkKTsKICAgIH0pOwogICAgdmFyIHN0YXRzRm9yR3JvdXBDb3VudCA9IHN0YXRzRm9yR3JvdXAucmVkdWNlKGZ1bmN0aW9uICh0b3RhbCwgc3RhdCkgewogICAgICByZXR1cm4gdG90YWwgKyBzdGF0LmNvdW50OwogICAgfSwgMCk7CiAgICByZXR1cm4gX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3JlYWN0Mi5kZWZhdWx0LkZyYWdtZW50LCB7CiAgICAgIGtleTogc3RhdEdyb3VwLmdyb3VwSWQKICAgIH0sIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpSG9yaXpvbnRhbFJ1bGUsIHsKICAgICAgbWFyZ2luOiAieHMiCiAgICB9KSwgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlBY2NvcmRpb24sIHsKICAgICAgaWQ6ICJob3N0LXN0YXQtYWNjb3JkaW9uLWdyb3VwIi5jb25jYXQoc3RhdEdyb3VwLmdyb3VwSWQpLAogICAgICBidXR0b25Db250ZW50OiBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUZsZXhHcm91cCwgewogICAgICAgIGd1dHRlclNpemU6ICJub25lIiwKICAgICAgICBqdXN0aWZ5Q29udGVudDogInNwYWNlQmV0d2VlbiIKICAgICAgfSwgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlGbGV4SXRlbSwgewogICAgICAgIGdyb3c6IGZhbHNlCiAgICAgIH0sIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpVGV4dCwgbnVsbCwgc3RhdEdyb3VwLm5hbWUpKSwgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlGbGV4SXRlbSwgewogICAgICAgIGdyb3c6IGZhbHNlCiAgICAgIH0sIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9zdGF0X3ZhbHVlLlN0YXRWYWx1ZSwgewogICAgICAgIGNvdW50OiBzdGF0c0Zvckdyb3VwQ291bnQsCiAgICAgICAgaXNHcm91cFN0YXQ6IHRydWUsCiAgICAgICAgaXNMb2FkaW5nOiBsb2FkaW5nLAogICAgICAgIG1heDogYWxsSG9zdFN0YXRzQ291bnQKICAgICAgfSkpKSwKICAgICAgYnV0dG9uQ29udGVudENsYXNzTmFtZTogImFjY29yZGlvbi1idXR0b24iCiAgICB9LCBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChBY2NvcmRpb25Db250ZW50LCBudWxsLCBzdGF0c0Zvckdyb3VwLm1hcChmdW5jdGlvbiAoc3RhdCkgewogICAgICByZXR1cm4gX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlGbGV4R3JvdXAsIHsKICAgICAgICBrZXk6IHN0YXQuaWQsCiAgICAgICAganVzdGlmeUNvbnRlbnQ6ICJzcGFjZUJldHdlZW4iCiAgICAgIH0sIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpRmxleEl0ZW0sIHsKICAgICAgICBncm93OiBmYWxzZQogICAgICB9LCBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aVRleHQsIHsKICAgICAgICBjb2xvcjogInN1YmR1ZWQiLAogICAgICAgIHNpemU6ICJzIgogICAgICB9LCBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChUaXRsZSwgbnVsbCwgc3RhdC50aXRsZSkpKSwgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlGbGV4SXRlbSwgewogICAgICAgICJkYXRhLXRlc3Qtc3ViaiI6ICJob3N0LXN0YXQtIi5jb25jYXQoc3RhdC5pZCksCiAgICAgICAgZ3JvdzogZmFsc2UKICAgICAgfSwgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3N0YXRfdmFsdWUuU3RhdFZhbHVlLCB7CiAgICAgICAgY291bnQ6IHN0YXQuY291bnQsCiAgICAgICAgaXNHcm91cFN0YXQ6IGZhbHNlLAogICAgICAgIGlzTG9hZGluZzogbG9hZGluZywKICAgICAgICBtYXg6IHN0YXRzRm9yR3JvdXBDb3VudAogICAgICB9KSkpOwogICAgfSkpKSk7CiAgfSkpOwp9OwoKdmFyIE92ZXJ2aWV3SG9zdFN0YXRzID0gX3JlYWN0Mi5kZWZhdWx0Lm1lbW8oT3ZlcnZpZXdIb3N0U3RhdHNDb21wb25lbnQpOwoKZXhwb3J0cy5PdmVydmlld0hvc3RTdGF0cyA9IE92ZXJ2aWV3SG9zdFN0YXRzOw=="},null]}