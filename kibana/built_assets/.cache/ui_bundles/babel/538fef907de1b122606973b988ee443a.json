{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/siem/public/components/page/network/kpi_network/index.js","dependencies":[{"path":"x-pack/legacy/plugins/siem/public/components/page/network/kpi_network/index.js","mtime":1589249553092},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLktwaU5ldHdvcmtDb21wb25lbnQgPSBleHBvcnRzLktwaU5ldHdvcmtCYXNlQ29tcG9uZW50ID0gZXhwb3J0cy5maWVsZFRpdGxlQ2hhcnRNYXBwaW5nID0gdm9pZCAwOwoKdmFyIF9yZWFjdCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgicmVhY3QiKSk7Cgp2YXIgX2V1aSA9IHJlcXVpcmUoIkBlbGFzdGljL2V1aSIpOwoKdmFyIF9zdHlsZWRDb21wb25lbnRzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCJzdHlsZWQtY29tcG9uZW50cyIpKTsKCnZhciBfZnAgPSByZXF1aXJlKCJsb2Rhc2gvZnAiKTsKCnZhciBfc3RhdF9pdGVtcyA9IHJlcXVpcmUoIi4uLy4uLy4uLy4uL2NvbXBvbmVudHMvc3RhdF9pdGVtcyIpOwoKdmFyIGkxOG4gPSBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChyZXF1aXJlKCIuL3RyYW5zbGF0aW9ucyIpKTsKCmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKG9iaikgewogIGlmIChvYmogJiYgb2JqLl9fZXNNb2R1bGUpIHsKICAgIHJldHVybiBvYmo7CiAgfSBlbHNlIHsKICAgIHZhciBuZXdPYmogPSB7fTsKCiAgICBpZiAob2JqICE9IG51bGwpIHsKICAgICAgZm9yICh2YXIga2V5IGluIG9iaikgewogICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBrZXkpKSB7CiAgICAgICAgICB2YXIgZGVzYyA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSAmJiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID8gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmosIGtleSkgOiB7fTsKCiAgICAgICAgICBpZiAoZGVzYy5nZXQgfHwgZGVzYy5zZXQpIHsKICAgICAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG5ld09iaiwga2V5LCBkZXNjKTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIG5ld09ialtrZXldID0gb2JqW2tleV07CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9CgogICAgbmV3T2JqLmRlZmF1bHQgPSBvYmo7CiAgICByZXR1cm4gbmV3T2JqOwogIH0KfQoKZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsKICByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogewogICAgZGVmYXVsdDogb2JqCiAgfTsKfQovKgogKiBDb3B5cmlnaHQgRWxhc3RpY3NlYXJjaCBCLlYuIGFuZC9vciBsaWNlbnNlZCB0byBFbGFzdGljc2VhcmNoIEIuVi4gdW5kZXIgb25lCiAqIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiBMaWNlbnNlZCB1bmRlciB0aGUgRWxhc3RpYyBMaWNlbnNlOwogKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIEVsYXN0aWMgTGljZW5zZS4KICovCgoKdmFyIGtpcHNQZXJSb3cgPSAyOwp2YXIga3BpV2lkZ2V0SGVpZ2h0ID0gMjI4Owp2YXIgZXVpVmlzQ29sb3JQYWxldHRlID0gKDAsIF9ldWkuZXVpUGFsZXR0ZUNvbG9yQmxpbmQpKCk7CnZhciBldWlDb2xvclZpczEgPSBldWlWaXNDb2xvclBhbGV0dGVbMV07CnZhciBldWlDb2xvclZpczIgPSBldWlWaXNDb2xvclBhbGV0dGVbMl07CnZhciBldWlDb2xvclZpczMgPSBldWlWaXNDb2xvclBhbGV0dGVbM107CnZhciBmaWVsZFRpdGxlQ2hhcnRNYXBwaW5nID0gW3sKICBrZXk6ICdVbmlxdWVJcHMnLAogIGluZGV4OiAyLAogIGZpZWxkczogW3sKICAgIGtleTogJ3VuaXF1ZVNvdXJjZVByaXZhdGVJcHMnLAogICAgdmFsdWU6IG51bGwsCiAgICBuYW1lOiBpMThuLlNPVVJDRV9DSEFSVF9MQUJFTCwKICAgIGRlc2NyaXB0aW9uOiBpMThuLlNPVVJDRV9VTklUX0xBQkVMLAogICAgY29sb3I6IGV1aUNvbG9yVmlzMiwKICAgIGljb246ICd2aXNNYXBDb29yZGluYXRlJwogIH0sIHsKICAgIGtleTogJ3VuaXF1ZURlc3RpbmF0aW9uUHJpdmF0ZUlwcycsCiAgICB2YWx1ZTogbnVsbCwKICAgIG5hbWU6IGkxOG4uREVTVElOQVRJT05fQ0hBUlRfTEFCRUwsCiAgICBkZXNjcmlwdGlvbjogaTE4bi5ERVNUSU5BVElPTl9VTklUX0xBQkVMLAogICAgY29sb3I6IGV1aUNvbG9yVmlzMywKICAgIGljb246ICd2aXNNYXBDb29yZGluYXRlJwogIH1dLAogIGRlc2NyaXB0aW9uOiBpMThuLlVOSVFVRV9QUklWQVRFX0lQUywKICBlbmFibGVBcmVhQ2hhcnQ6IHRydWUsCiAgZW5hYmxlQmFyQ2hhcnQ6IHRydWUsCiAgZ3JvdzogMgp9XTsKZXhwb3J0cy5maWVsZFRpdGxlQ2hhcnRNYXBwaW5nID0gZmllbGRUaXRsZUNoYXJ0TWFwcGluZzsKdmFyIGZpZWxkVGl0bGVNYXRyaXhNYXBwaW5nID0gW3sKICBrZXk6ICduZXR3b3JrRXZlbnRzJywKICBpbmRleDogMCwKICBmaWVsZHM6IFt7CiAgICBrZXk6ICduZXR3b3JrRXZlbnRzJywKICAgIHZhbHVlOiBudWxsLAogICAgY29sb3I6IGV1aUNvbG9yVmlzMQogIH1dLAogIGRlc2NyaXB0aW9uOiBpMThuLk5FVFdPUktfRVZFTlRTLAogIGdyb3c6IDEKfSwgewogIGtleTogJ2Ruc1F1ZXJpZXMnLAogIGluZGV4OiAxLAogIGZpZWxkczogW3sKICAgIGtleTogJ2Ruc1F1ZXJpZXMnLAogICAgdmFsdWU6IG51bGwKICB9XSwKICBkZXNjcmlwdGlvbjogaTE4bi5ETlNfUVVFUklFUwp9LCB7CiAga2V5OiAndW5pcXVlRmxvd0lkJywKICBpbmRleDogMywKICBmaWVsZHM6IFt7CiAgICBrZXk6ICd1bmlxdWVGbG93SWQnLAogICAgdmFsdWU6IG51bGwKICB9XSwKICBkZXNjcmlwdGlvbjogaTE4bi5VTklRVUVfRkxPV19JRFMKfSwgewogIGtleTogJ3Rsc0hhbmRzaGFrZXMnLAogIGluZGV4OiA0LAogIGZpZWxkczogW3sKICAgIGtleTogJ3Rsc0hhbmRzaGFrZXMnLAogICAgdmFsdWU6IG51bGwKICB9XSwKICBkZXNjcmlwdGlvbjogaTE4bi5UTFNfSEFORFNIQUtFUwp9XTsKdmFyIEZsZXhHcm91cCA9ICgwLCBfc3R5bGVkQ29tcG9uZW50cy5kZWZhdWx0KShfZXVpLkV1aUZsZXhHcm91cCkud2l0aENvbmZpZyh7CiAgZGlzcGxheU5hbWU6ICJGbGV4R3JvdXAiLAogIGNvbXBvbmVudElkOiAic2MtMWxlbWhvMC0wIgp9KShbIm1pbi1oZWlnaHQ6IiwgInB4OyJdLCBrcGlXaWRnZXRIZWlnaHQpOwpGbGV4R3JvdXAuZGlzcGxheU5hbWUgPSAnRmxleEdyb3VwJzsKCnZhciBLcGlOZXR3b3JrQmFzZUNvbXBvbmVudCA9IF9yZWFjdC5kZWZhdWx0Lm1lbW8oZnVuY3Rpb24gKF9yZWYpIHsKICB2YXIgZmllbGRzTWFwcGluZyA9IF9yZWYuZmllbGRzTWFwcGluZywKICAgICAgZGF0YSA9IF9yZWYuZGF0YSwKICAgICAgaWQgPSBfcmVmLmlkLAogICAgICBmcm9tID0gX3JlZi5mcm9tLAogICAgICB0byA9IF9yZWYudG8sCiAgICAgIG5hcnJvd0RhdGVSYW5nZSA9IF9yZWYubmFycm93RGF0ZVJhbmdlOwogIHZhciBzdGF0SXRlbXNQcm9wcyA9ICgwLCBfc3RhdF9pdGVtcy51c2VLcGlNYXRyaXhTdGF0dXMpKGZpZWxkc01hcHBpbmcsIGRhdGEsIGlkLCBmcm9tLCB0bywgbmFycm93RGF0ZVJhbmdlKTsKICByZXR1cm4gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUZsZXhHcm91cCwgewogICAgd3JhcDogdHJ1ZQogIH0sIHN0YXRJdGVtc1Byb3BzLm1hcChmdW5jdGlvbiAobWFwcGVkU3RhdEl0ZW1Qcm9wcywgaWR4KSB7CiAgICByZXR1cm4gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfc3RhdF9pdGVtcy5TdGF0SXRlbXNDb21wb25lbnQsIG1hcHBlZFN0YXRJdGVtUHJvcHMpOwogIH0pKTsKfSk7CgpleHBvcnRzLktwaU5ldHdvcmtCYXNlQ29tcG9uZW50ID0gS3BpTmV0d29ya0Jhc2VDb21wb25lbnQ7CktwaU5ldHdvcmtCYXNlQ29tcG9uZW50LmRpc3BsYXlOYW1lID0gJ0twaU5ldHdvcmtCYXNlQ29tcG9uZW50JzsKCnZhciBLcGlOZXR3b3JrQ29tcG9uZW50ID0gX3JlYWN0LmRlZmF1bHQubWVtbyhmdW5jdGlvbiAoX3JlZjIpIHsKICB2YXIgZGF0YSA9IF9yZWYyLmRhdGEsCiAgICAgIGZyb20gPSBfcmVmMi5mcm9tLAogICAgICBpZCA9IF9yZWYyLmlkLAogICAgICBsb2FkaW5nID0gX3JlZjIubG9hZGluZywKICAgICAgdG8gPSBfcmVmMi50bywKICAgICAgbmFycm93RGF0ZVJhbmdlID0gX3JlZjIubmFycm93RGF0ZVJhbmdlOwogIHJldHVybiBsb2FkaW5nID8gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChGbGV4R3JvdXAsIHsKICAgIGp1c3RpZnlDb250ZW50OiAiY2VudGVyIiwKICAgIGFsaWduSXRlbXM6ICJjZW50ZXIiCiAgfSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUZsZXhJdGVtLCB7CiAgICBncm93OiBmYWxzZQogIH0sIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlMb2FkaW5nU3Bpbm5lciwgewogICAgc2l6ZTogInhsIgogIH0pKSkgOiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpRmxleEdyb3VwLCB7CiAgICB3cmFwOiB0cnVlCiAgfSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUZsZXhJdGVtLCB7CiAgICBncm93OiAxCiAgfSwgKDAsIF9mcC5jaHVuaykoa2lwc1BlclJvdywgZmllbGRUaXRsZU1hdHJpeE1hcHBpbmcpLm1hcChmdW5jdGlvbiAobWFwcGluZ3NQZXJMaW5lLCBpZHgpIHsKICAgIHJldHVybiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9yZWFjdC5kZWZhdWx0LkZyYWdtZW50LCB7CiAgICAgIGtleTogImtwaS1uZXR3b3JrLXJvdy0iLmNvbmNhdChpZHgpCiAgICB9LCBpZHggJSBraXBzUGVyUm93ID09PSAxICYmIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlTcGFjZXIsIHsKICAgICAgc2l6ZTogImwiCiAgICB9KSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChLcGlOZXR3b3JrQmFzZUNvbXBvbmVudCwgewogICAgICBkYXRhOiBkYXRhLAogICAgICBpZDogaWQsCiAgICAgIGZpZWxkc01hcHBpbmc6IG1hcHBpbmdzUGVyTGluZSwKICAgICAgZnJvbTogZnJvbSwKICAgICAgdG86IHRvLAogICAgICBuYXJyb3dEYXRlUmFuZ2U6IG5hcnJvd0RhdGVSYW5nZQogICAgfSkpOwogIH0pKSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUZsZXhJdGVtLCB7CiAgICBncm93OiAxCiAgfSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChLcGlOZXR3b3JrQmFzZUNvbXBvbmVudCwgewogICAgZGF0YTogZGF0YSwKICAgIGlkOiBpZCwKICAgIGZpZWxkc01hcHBpbmc6IGZpZWxkVGl0bGVDaGFydE1hcHBpbmcsCiAgICBmcm9tOiBmcm9tLAogICAgdG86IHRvLAogICAgbmFycm93RGF0ZVJhbmdlOiBuYXJyb3dEYXRlUmFuZ2UKICB9KSkpOwp9KTsKCmV4cG9ydHMuS3BpTmV0d29ya0NvbXBvbmVudCA9IEtwaU5ldHdvcmtDb21wb25lbnQ7CktwaU5ldHdvcmtDb21wb25lbnQuZGlzcGxheU5hbWUgPSAnS3BpTmV0d29ya0NvbXBvbmVudCc7"},null]}