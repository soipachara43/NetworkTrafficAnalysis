{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/siem/public/components/timeline/footer/last_updated.js","dependencies":[{"path":"x-pack/legacy/plugins/siem/public/components/timeline/footer/last_updated.js","mtime":1589249553196},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLkxhc3RVcGRhdGVkQXQgPSBleHBvcnRzLlVwZGF0ZWQgPSB2b2lkIDA7Cgp2YXIgX2V1aSA9IHJlcXVpcmUoIkBlbGFzdGljL2V1aSIpOwoKdmFyIF9yZWFjdCA9IHJlcXVpcmUoIkBrYm4vaTE4bi9yZWFjdCIpOwoKdmFyIF9yZWFjdDIgPSBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChyZXF1aXJlKCJyZWFjdCIpKTsKCnZhciBpMThuID0gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQocmVxdWlyZSgiLi90cmFuc2xhdGlvbnMiKSk7CgpmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChvYmopIHsKICBpZiAob2JqICYmIG9iai5fX2VzTW9kdWxlKSB7CiAgICByZXR1cm4gb2JqOwogIH0gZWxzZSB7CiAgICB2YXIgbmV3T2JqID0ge307CgogICAgaWYgKG9iaiAhPSBudWxsKSB7CiAgICAgIGZvciAodmFyIGtleSBpbiBvYmopIHsKICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwga2V5KSkgewogICAgICAgICAgdmFyIGRlc2MgPSBPYmplY3QuZGVmaW5lUHJvcGVydHkgJiYgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvciA/IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqLCBrZXkpIDoge307CgogICAgICAgICAgaWYgKGRlc2MuZ2V0IHx8IGRlc2Muc2V0KSB7CiAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShuZXdPYmosIGtleSwgZGVzYyk7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBuZXdPYmpba2V5XSA9IG9ialtrZXldOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfQoKICAgIG5ld09iai5kZWZhdWx0ID0gb2JqOwogICAgcmV0dXJuIG5ld09iajsKICB9Cn0KCmZ1bmN0aW9uIF9zbGljZWRUb0FycmF5KGFyciwgaSkgewogIHJldHVybiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB8fCBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB8fCBfbm9uSXRlcmFibGVSZXN0KCk7Cn0KCmZ1bmN0aW9uIF9ub25JdGVyYWJsZVJlc3QoKSB7CiAgdGhyb3cgbmV3IFR5cGVFcnJvcigiSW52YWxpZCBhdHRlbXB0IHRvIGRlc3RydWN0dXJlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZSIpOwp9CgpmdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB7CiAgdmFyIF9hcnIgPSBbXTsKICB2YXIgX24gPSB0cnVlOwogIHZhciBfZCA9IGZhbHNlOwogIHZhciBfZSA9IHVuZGVmaW5lZDsKCiAgdHJ5IHsKICAgIGZvciAodmFyIF9pID0gYXJyW1N5bWJvbC5pdGVyYXRvcl0oKSwgX3M7ICEoX24gPSAoX3MgPSBfaS5uZXh0KCkpLmRvbmUpOyBfbiA9IHRydWUpIHsKICAgICAgX2Fyci5wdXNoKF9zLnZhbHVlKTsKCiAgICAgIGlmIChpICYmIF9hcnIubGVuZ3RoID09PSBpKSBicmVhazsKICAgIH0KICB9IGNhdGNoIChlcnIpIHsKICAgIF9kID0gdHJ1ZTsKICAgIF9lID0gZXJyOwogIH0gZmluYWxseSB7CiAgICB0cnkgewogICAgICBpZiAoIV9uICYmIF9pWyJyZXR1cm4iXSAhPSBudWxsKSBfaVsicmV0dXJuIl0oKTsKICAgIH0gZmluYWxseSB7CiAgICAgIGlmIChfZCkgdGhyb3cgX2U7CiAgICB9CiAgfQoKICByZXR1cm4gX2FycjsKfQoKZnVuY3Rpb24gX2FycmF5V2l0aEhvbGVzKGFycikgewogIGlmIChBcnJheS5pc0FycmF5KGFycikpIHJldHVybiBhcnI7Cn0KCnZhciBVcGRhdGVkID0gX3JlYWN0Mi5kZWZhdWx0Lm1lbW8oZnVuY3Rpb24gKF9yZWYpIHsKICB2YXIgZGF0ZSA9IF9yZWYuZGF0ZSwKICAgICAgcHJlZml4ID0gX3JlZi5wcmVmaXgsCiAgICAgIHVwZGF0ZWRBdCA9IF9yZWYudXBkYXRlZEF0OwogIHJldHVybiBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChfcmVhY3QyLmRlZmF1bHQuRnJhZ21lbnQsIG51bGwsIHByZWZpeCwgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3JlYWN0LkZvcm1hdHRlZFJlbGF0aXZlLCB7CiAgICAiZGF0YS10ZXN0LXN1YmoiOiAibGFzdC11cGRhdGVkLWF0LWRhdGUiLAogICAga2V5OiAiZm9ybWF0ZWRSZWxhdGl2ZS0iLmNvbmNhdChkYXRlKSwKICAgIHZhbHVlOiBuZXcgRGF0ZSh1cGRhdGVkQXQpCiAgfSkpOwp9KTsKCmV4cG9ydHMuVXBkYXRlZCA9IFVwZGF0ZWQ7ClVwZGF0ZWQuZGlzcGxheU5hbWUgPSAnVXBkYXRlZCc7CnZhciBwcmVmaXggPSAiICIuY29uY2F0KGkxOG4uVVBEQVRFRCwgIiAiKTsKCnZhciBMYXN0VXBkYXRlZEF0ID0gX3JlYWN0Mi5kZWZhdWx0Lm1lbW8oZnVuY3Rpb24gKF9yZWYyKSB7CiAgdmFyIF9yZWYyJGNvbXBhY3QgPSBfcmVmMi5jb21wYWN0LAogICAgICBjb21wYWN0ID0gX3JlZjIkY29tcGFjdCA9PT0gdm9pZCAwID8gZmFsc2UgOiBfcmVmMiRjb21wYWN0LAogICAgICB1cGRhdGVkQXQgPSBfcmVmMi51cGRhdGVkQXQ7CgogIHZhciBfdXNlU3RhdGUgPSAoMCwgX3JlYWN0Mi51c2VTdGF0ZSkoRGF0ZS5ub3coKSksCiAgICAgIF91c2VTdGF0ZTIgPSBfc2xpY2VkVG9BcnJheShfdXNlU3RhdGUsIDIpLAogICAgICBkYXRlID0gX3VzZVN0YXRlMlswXSwKICAgICAgc2V0RGF0ZSA9IF91c2VTdGF0ZTJbMV07CgogIGZ1bmN0aW9uIHRpY2soKSB7CiAgICBzZXREYXRlKERhdGUubm93KCkpOwogIH0KCiAgKDAsIF9yZWFjdDIudXNlRWZmZWN0KShmdW5jdGlvbiAoKSB7CiAgICB2YXIgdGltZXJJRCA9IHNldEludGVydmFsKGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIHRpY2soKTsKICAgIH0sIDEwMDAwKTsKICAgIHJldHVybiBmdW5jdGlvbiAoKSB7CiAgICAgIGNsZWFySW50ZXJ2YWwodGltZXJJRCk7CiAgICB9OwogIH0sIFtdKTsKICByZXR1cm4gX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlUb29sVGlwLCB7CiAgICAiZGF0YS10ZXN0LXN1YmoiOiAidGltZWxpbmUtc3RyZWFtLXRvb2wtdGlwIiwKICAgIGNvbnRlbnQ6IF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9yZWFjdDIuZGVmYXVsdC5GcmFnbWVudCwgbnVsbCwgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoVXBkYXRlZCwgewogICAgICBkYXRlOiBkYXRlLAogICAgICBwcmVmaXg6IHByZWZpeCwKICAgICAgdXBkYXRlZEF0OiB1cGRhdGVkQXQKICAgIH0pKQogIH0sIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpVGV4dCwgewogICAgc2l6ZTogInMiCiAgfSwgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlJY29uLCB7CiAgICAiZGF0YS10ZXN0LXN1YmoiOiAibGFzdC11cGRhdGVkLWF0LWNsb2NrLWljb24iLAogICAgdHlwZTogImNsb2NrIgogIH0pLCAhY29tcGFjdCA/IF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFVwZGF0ZWQsIHsKICAgIGRhdGU6IGRhdGUsCiAgICBwcmVmaXg6IHByZWZpeCwKICAgIHVwZGF0ZWRBdDogdXBkYXRlZEF0CiAgfSkgOiBudWxsKSk7Cn0pOwoKZXhwb3J0cy5MYXN0VXBkYXRlZEF0ID0gTGFzdFVwZGF0ZWRBdDsKTGFzdFVwZGF0ZWRBdC5kaXNwbGF5TmFtZSA9ICdMYXN0VXBkYXRlZEF0Jzs="},null]}