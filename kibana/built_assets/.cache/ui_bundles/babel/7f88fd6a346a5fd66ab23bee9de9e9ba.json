{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/monitoring/public/np_imports/angular/angular_config.js","dependencies":[{"path":"x-pack/legacy/plugins/monitoring/public/np_imports/angular/angular_config.js","mtime":1589249552604},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmNvbmZpZ3VyZUFwcEFuZ3VsYXJNb2R1bGUgPSB2b2lkIDA7Cgp2YXIgX2pxdWVyeSA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgianF1ZXJ5IikpOwoKdmFyIF9sb2Rhc2ggPSByZXF1aXJlKCJsb2Rhc2giKTsKCnZhciBSeCA9IF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKHJlcXVpcmUoInJ4anMiKSk7CgpmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChvYmopIHsKICBpZiAob2JqICYmIG9iai5fX2VzTW9kdWxlKSB7CiAgICByZXR1cm4gb2JqOwogIH0gZWxzZSB7CiAgICB2YXIgbmV3T2JqID0ge307CgogICAgaWYgKG9iaiAhPSBudWxsKSB7CiAgICAgIGZvciAodmFyIGtleSBpbiBvYmopIHsKICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwga2V5KSkgewogICAgICAgICAgdmFyIGRlc2MgPSBPYmplY3QuZGVmaW5lUHJvcGVydHkgJiYgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvciA/IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqLCBrZXkpIDoge307CgogICAgICAgICAgaWYgKGRlc2MuZ2V0IHx8IGRlc2Muc2V0KSB7CiAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShuZXdPYmosIGtleSwgZGVzYyk7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBuZXdPYmpba2V5XSA9IG9ialtrZXldOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfQoKICAgIG5ld09iai5kZWZhdWx0ID0gb2JqOwogICAgcmV0dXJuIG5ld09iajsKICB9Cn0KCmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7CiAgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsKICAgIGRlZmF1bHQ6IG9iagogIH07Cn0KLyoKICogQ29weXJpZ2h0IEVsYXN0aWNzZWFyY2ggQi5WLiBhbmQvb3IgbGljZW5zZWQgdG8gRWxhc3RpY3NlYXJjaCBCLlYuIHVuZGVyIG9uZQogKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gTGljZW5zZWQgdW5kZXIgdGhlIEVsYXN0aWMgTGljZW5zZTsKICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBFbGFzdGljIExpY2Vuc2UuCiAqLwoKCnZhciBpc1N5c3RlbUFwaVJlcXVlc3QgPSBmdW5jdGlvbiBpc1N5c3RlbUFwaVJlcXVlc3QocmVxdWVzdCkgewogIHJldHVybiBCb29sZWFuKHJlcXVlc3QgJiYgcmVxdWVzdC5oZWFkZXJzICYmICEhcmVxdWVzdC5oZWFkZXJzWydrYm4tc3lzdGVtLWFwaSddKTsKfTsKCnZhciBjb25maWd1cmVBcHBBbmd1bGFyTW9kdWxlID0gZnVuY3Rpb24gY29uZmlndXJlQXBwQW5ndWxhck1vZHVsZShhbmd1bGFyTW9kdWxlLCBuZXdQbGF0Zm9ybSkgewogIHZhciBsZWdhY3lNZXRhZGF0YSA9IG5ld1BsYXRmb3JtLmluamVjdGVkTWV0YWRhdGEuZ2V0TGVnYWN5TWV0YWRhdGEoKTsKICAoMCwgX2xvZGFzaC5mb3JPd24pKG5ld1BsYXRmb3JtLmluamVjdGVkTWV0YWRhdGEuZ2V0SW5qZWN0ZWRWYXJzKCksIGZ1bmN0aW9uICh2YWwsIG5hbWUpIHsKICAgIGlmIChuYW1lICE9PSB1bmRlZmluZWQpIHsKICAgICAgLy8gVGhlIGxlZ2FjeSBwbGF0Zm9ybSBtb2RpZmllcyBzb21lIG9mIHRoZXNlIHZhbHVlcywgY2xvbmUgdG8gYW4gdW5mcm96ZW4gb2JqZWN0LgogICAgICBhbmd1bGFyTW9kdWxlLnZhbHVlKG5hbWUsICgwLCBfbG9kYXNoLmNsb25lRGVlcCkodmFsKSk7CiAgICB9CiAgfSk7CiAgYW5ndWxhck1vZHVsZS52YWx1ZSgna2JuVmVyc2lvbicsIG5ld1BsYXRmb3JtLmluamVjdGVkTWV0YWRhdGEuZ2V0S2liYW5hVmVyc2lvbigpKS52YWx1ZSgnYnVpbGROdW0nLCBsZWdhY3lNZXRhZGF0YS5idWlsZE51bSkudmFsdWUoJ2J1aWxkU2hhJywgbGVnYWN5TWV0YWRhdGEuYnVpbGRTaGEpLnZhbHVlKCdzZXJ2ZXJOYW1lJywgbGVnYWN5TWV0YWRhdGEuc2VydmVyTmFtZSkudmFsdWUoJ2VzVXJsJywgZ2V0RXNVcmwobmV3UGxhdGZvcm0pKS52YWx1ZSgndWlDYXBhYmlsaXRpZXMnLCBuZXdQbGF0Zm9ybS5hcHBsaWNhdGlvbi5jYXBhYmlsaXRpZXMpLmNvbmZpZyhzZXR1cENvbXBpbGVQcm92aWRlcihuZXdQbGF0Zm9ybSkpLmNvbmZpZyhzZXR1cExvY2F0aW9uUHJvdmlkZXIoKSkuY29uZmlnKCRzZXR1cFhzcmZSZXF1ZXN0SW50ZXJjZXB0b3IobmV3UGxhdGZvcm0pKS5ydW4oY2FwdHVyZSRodHRwTG9hZGluZ0NvdW50KG5ld1BsYXRmb3JtKSkucnVuKCRzZXR1cFVJQ2FwYWJpbGl0eVJlZGlyZWN0KG5ld1BsYXRmb3JtKSk7Cn07CgpleHBvcnRzLmNvbmZpZ3VyZUFwcEFuZ3VsYXJNb2R1bGUgPSBjb25maWd1cmVBcHBBbmd1bGFyTW9kdWxlOwoKdmFyIGdldEVzVXJsID0gZnVuY3Rpb24gZ2V0RXNVcmwobmV3UGxhdGZvcm0pIHsKICB2YXIgYSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKTsKICBhLmhyZWYgPSBuZXdQbGF0Zm9ybS5odHRwLmJhc2VQYXRoLnByZXBlbmQoJy9lbGFzdGljc2VhcmNoJyk7CiAgdmFyIHByb3RvY29sUG9ydCA9IC9odHRwcy8udGVzdChhLnByb3RvY29sKSA/IDQ0MyA6IDgwOwogIHZhciBwb3J0ID0gYS5wb3J0IHx8IHByb3RvY29sUG9ydDsKICByZXR1cm4gewogICAgaG9zdDogYS5ob3N0bmFtZSwKICAgIHBvcnQ6IHBvcnQsCiAgICBwcm90b2NvbDogYS5wcm90b2NvbCwKICAgIHBhdGhuYW1lOiBhLnBhdGhuYW1lCiAgfTsKfTsKCnZhciBzZXR1cENvbXBpbGVQcm92aWRlciA9IGZ1bmN0aW9uIHNldHVwQ29tcGlsZVByb3ZpZGVyKG5ld1BsYXRmb3JtKSB7CiAgcmV0dXJuIGZ1bmN0aW9uICgkY29tcGlsZVByb3ZpZGVyKSB7CiAgICBpZiAoIW5ld1BsYXRmb3JtLmluamVjdGVkTWV0YWRhdGEuZ2V0TGVnYWN5TWV0YWRhdGEoKS5kZXZNb2RlKSB7CiAgICAgICRjb21waWxlUHJvdmlkZXIuZGVidWdJbmZvRW5hYmxlZChmYWxzZSk7CiAgICB9CiAgfTsKfTsKCnZhciBzZXR1cExvY2F0aW9uUHJvdmlkZXIgPSBmdW5jdGlvbiBzZXR1cExvY2F0aW9uUHJvdmlkZXIoKSB7CiAgcmV0dXJuIGZ1bmN0aW9uICgkbG9jYXRpb25Qcm92aWRlcikgewogICAgJGxvY2F0aW9uUHJvdmlkZXIuaHRtbDVNb2RlKHsKICAgICAgZW5hYmxlZDogZmFsc2UsCiAgICAgIHJlcXVpcmVCYXNlOiBmYWxzZSwKICAgICAgcmV3cml0ZUxpbmtzOiBmYWxzZQogICAgfSk7CiAgICAkbG9jYXRpb25Qcm92aWRlci5oYXNoUHJlZml4KCcnKTsKICB9Owp9OwoKdmFyICRzZXR1cFhzcmZSZXF1ZXN0SW50ZXJjZXB0b3IgPSBmdW5jdGlvbiAkc2V0dXBYc3JmUmVxdWVzdEludGVyY2VwdG9yKG5ld1BsYXRmb3JtKSB7CiAgdmFyIHZlcnNpb24gPSBuZXdQbGF0Zm9ybS5pbmplY3RlZE1ldGFkYXRhLmdldExlZ2FjeU1ldGFkYXRhKCkudmVyc2lvbjsgLy8gQ29uZmlndXJlIGpRdWVyeSBwcmVmaWx0ZXIKCiAgX2pxdWVyeS5kZWZhdWx0LmFqYXhQcmVmaWx0ZXIoZnVuY3Rpb24gKF9yZWYsIG9yaWdpbmFsT3B0aW9ucywganFYSFIpIHsKICAgIHZhciBfcmVmJGtiblhzcmZUb2tlbiA9IF9yZWYua2JuWHNyZlRva2VuLAogICAgICAgIGtiblhzcmZUb2tlbiA9IF9yZWYka2JuWHNyZlRva2VuID09PSB2b2lkIDAgPyB0cnVlIDogX3JlZiRrYm5Yc3JmVG9rZW47CgogICAgaWYgKGtiblhzcmZUb2tlbikgewogICAgICBqcVhIUi5zZXRSZXF1ZXN0SGVhZGVyKCdrYm4tdmVyc2lvbicsIHZlcnNpb24pOwogICAgfQogIH0pOwoKICByZXR1cm4gZnVuY3Rpb24gKCRodHRwUHJvdmlkZXIpIHsKICAgIC8vIENvbmZpZ3VyZSAkaHR0cFByb3ZpZGVyIGludGVyY2VwdG9yCiAgICAkaHR0cFByb3ZpZGVyLmludGVyY2VwdG9ycy5wdXNoKGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICByZXF1ZXN0OiBmdW5jdGlvbiByZXF1ZXN0KG9wdHMpIHsKICAgICAgICAgIHZhciBfcmVmMiA9IG9wdHMsCiAgICAgICAgICAgICAgX3JlZjIka2JuWHNyZlRva2VuID0gX3JlZjIua2JuWHNyZlRva2VuLAogICAgICAgICAgICAgIGtiblhzcmZUb2tlbiA9IF9yZWYyJGtiblhzcmZUb2tlbiA9PT0gdm9pZCAwID8gdHJ1ZSA6IF9yZWYyJGtiblhzcmZUb2tlbjsKCiAgICAgICAgICBpZiAoa2JuWHNyZlRva2VuKSB7CiAgICAgICAgICAgICgwLCBfbG9kYXNoLnNldCkob3B0cywgWydoZWFkZXJzJywgJ2tibi12ZXJzaW9uJ10sIHZlcnNpb24pOwogICAgICAgICAgfQoKICAgICAgICAgIHJldHVybiBvcHRzOwogICAgICAgIH0KICAgICAgfTsKICAgIH0pOwogIH07Cn07Ci8qKgogKiBJbmplY3RlZCBpbnRvIGFuZ3VsYXIgbW9kdWxlIGJ5IHVpL2Nocm9tZSBhbmd1bGFyIGludGVncmF0aW9uCiAqIGFuZCBhZGRzIGEgcm9vdC1sZXZlbCB3YXRjaGVyIHRoYXQgd2lsbCBjYXB0dXJlIHRoZSBjb3VudCBvZgogKiBhY3RpdmUgJGh0dHAgcmVxdWVzdHMgb24gZWFjaCBkaWdlc3QgbG9vcCBhbmQgZXhwb3NlIHRoZSBjb3VudCB0bwogKiB0aGUgY29yZS5sb2FkaW5nQ291bnQgYXBpCiAqIEBwYXJhbSAge0FuZ3VsYXIuU2NvcGV9ICRyb290U2NvcGUKICogQHBhcmFtICB7SHR0cFNlcnZpY2V9ICRodHRwCiAqIEByZXR1cm4ge3VuZGVmaW5lZH0KICovCgoKdmFyIGNhcHR1cmUkaHR0cExvYWRpbmdDb3VudCA9IGZ1bmN0aW9uIGNhcHR1cmUkaHR0cExvYWRpbmdDb3VudChuZXdQbGF0Zm9ybSkgewogIHJldHVybiBmdW5jdGlvbiAoJHJvb3RTY29wZSwgJGh0dHApIHsKICAgIG5ld1BsYXRmb3JtLmh0dHAuYWRkTG9hZGluZ0NvdW50U291cmNlKG5ldyBSeC5PYnNlcnZhYmxlKGZ1bmN0aW9uIChvYnNlcnZlcikgewogICAgICB2YXIgdW53YXRjaCA9ICRyb290U2NvcGUuJHdhdGNoKGZ1bmN0aW9uICgpIHsKICAgICAgICB2YXIgcmVxcyA9ICRodHRwLnBlbmRpbmdSZXF1ZXN0cyB8fCBbXTsKICAgICAgICBvYnNlcnZlci5uZXh0KHJlcXMuZmlsdGVyKGZ1bmN0aW9uIChyZXEpIHsKICAgICAgICAgIHJldHVybiAhaXNTeXN0ZW1BcGlSZXF1ZXN0KHJlcSk7CiAgICAgICAgfSkubGVuZ3RoKTsKICAgICAgfSk7CiAgICAgIHJldHVybiB1bndhdGNoOwogICAgfSkpOwogIH07Cn07Ci8qKgogKiBpbnRlZ3JhdGVzIHdpdGggYW5ndWxhciB0byBhdXRvbWF0aWNhbGx5IHJlZGlyZWN0IHRvIGhvbWUgaWYgcmVxdWlyZWQKICogY2FwYWJpbGl0eSBpcyBub3QgbWV0CiAqLwoKCnZhciAkc2V0dXBVSUNhcGFiaWxpdHlSZWRpcmVjdCA9IGZ1bmN0aW9uICRzZXR1cFVJQ2FwYWJpbGl0eVJlZGlyZWN0KG5ld1BsYXRmb3JtKSB7CiAgcmV0dXJuIGZ1bmN0aW9uICgkcm9vdFNjb3BlLCAkaW5qZWN0b3IpIHsKICAgIHZhciBpc0tpYmFuYUFwcFJvdXRlID0gd2luZG93LmxvY2F0aW9uLnBhdGhuYW1lLmVuZHNXaXRoKCcvYXBwL2tpYmFuYScpOyAvLyB0aGlzIGZlYXR1cmUgb25seSB3b3JrcyB3aXRoaW4ga2liYW5hIGFwcCBmb3Igbm93IGFmdGVyIGV2ZXJ5dGhpbmcgaXMKICAgIC8vIHN3aXRjaGVkIHRvIHRoZSBhcHBsaWNhdGlvbiBzZXJ2aWNlLCB0aGlzIGNhbiBiZSBjaGFuZ2VkIHRvIGhhbmRsZSBhbGwKICAgIC8vIGFwcHMuCgogICAgaWYgKCFpc0tpYmFuYUFwcFJvdXRlKSB7CiAgICAgIHJldHVybjsKICAgIH0KCiAgICAkcm9vdFNjb3BlLiRvbignJHJvdXRlQ2hhbmdlU3RhcnQnLCBmdW5jdGlvbiAoZXZlbnQpIHsKICAgICAgdmFyIF9yZWYzID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiB7fSwKICAgICAgICAgIHJvdXRlID0gX3JlZjMuJCRyb3V0ZTsKCiAgICAgIGlmICghcm91dGUgfHwgIXJvdXRlLnJlcXVpcmVVSUNhcGFiaWxpdHkpIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIGlmICghKDAsIF9sb2Rhc2guZ2V0KShuZXdQbGF0Zm9ybS5hcHBsaWNhdGlvbi5jYXBhYmlsaXRpZXMsIHJvdXRlLnJlcXVpcmVVSUNhcGFiaWxpdHkpKSB7CiAgICAgICAgJGluamVjdG9yLmdldCgna2JuVXJsJykuY2hhbmdlKCcvaG9tZScpOwogICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7CiAgICAgIH0KICAgIH0pOwogIH07Cn07"},null]}