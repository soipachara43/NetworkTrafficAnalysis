{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/siem/public/components/timeline/body/renderers/suricata/suricata_signature.js","dependencies":[{"path":"x-pack/legacy/plugins/siem/public/components/timeline/body/renderers/suricata/suricata_signature.js","mtime":1589249553176},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLlN1cmljYXRhU2lnbmF0dXJlID0gZXhwb3J0cy5EcmFnZ2FibGVTaWduYXR1cmVJZCA9IGV4cG9ydHMuVG9rZW5zID0gZXhwb3J0cy5TVVJJQ0FUQV9TSUdOQVRVUkVfSURfRklFTERfTkFNRSA9IGV4cG9ydHMuU1VSSUNBVEFfU0lHTkFUVVJFX0ZJRUxEX05BTUUgPSB2b2lkIDA7Cgp2YXIgX2V1aSA9IHJlcXVpcmUoIkBlbGFzdGljL2V1aSIpOwoKdmFyIF9yZWFjdCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgicmVhY3QiKSk7Cgp2YXIgX3N0eWxlZENvbXBvbmVudHMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoInN0eWxlZC1jb21wb25lbnRzIikpOwoKdmFyIF9kcmFnZ2FibGVfd3JhcHBlciA9IHJlcXVpcmUoIi4uLy4uLy4uLy4uL2RyYWdfYW5kX2Ryb3AvZHJhZ2dhYmxlX3dyYXBwZXIiKTsKCnZhciBfaGVscGVycyA9IHJlcXVpcmUoIi4uLy4uLy4uLy4uL2RyYWdfYW5kX2Ryb3AvaGVscGVycyIpOwoKdmFyIF9leHRlcm5hbF9saW5rX2ljb24gPSByZXF1aXJlKCIuLi8uLi8uLi8uLi9leHRlcm5hbF9saW5rX2ljb24iKTsKCnZhciBfbGlua3MgPSByZXF1aXJlKCIuLi8uLi8uLi8uLi9saW5rcyIpOwoKdmFyIF9wcm92aWRlciA9IHJlcXVpcmUoIi4uLy4uLy4uLy4uL3RpbWVsaW5lL2RhdGFfcHJvdmlkZXJzL3Byb3ZpZGVyIik7Cgp2YXIgX2hlbHBlcnMyID0gcmVxdWlyZSgiLi4vaGVscGVycyIpOwoKdmFyIF9zdXJpY2F0YV9saW5rcyA9IHJlcXVpcmUoIi4vc3VyaWNhdGFfbGlua3MiKTsKCnZhciBfZHJhZ2dhYmxlcyA9IHJlcXVpcmUoIi4uLy4uLy4uLy4uL2RyYWdnYWJsZXMiKTsKCnZhciBfZGF0YV9wcm92aWRlciA9IHJlcXVpcmUoIi4uLy4uLy4uL2RhdGFfcHJvdmlkZXJzL2RhdGFfcHJvdmlkZXIiKTsKCmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7CiAgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsKICAgIGRlZmF1bHQ6IG9iagogIH07Cn0KLyoKICogQ29weXJpZ2h0IEVsYXN0aWNzZWFyY2ggQi5WLiBhbmQvb3IgbGljZW5zZWQgdG8gRWxhc3RpY3NlYXJjaCBCLlYuIHVuZGVyIG9uZQogKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gTGljZW5zZWQgdW5kZXIgdGhlIEVsYXN0aWMgTGljZW5zZTsKICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBFbGFzdGljIExpY2Vuc2UuCiAqLwoKCnZhciBTVVJJQ0FUQV9TSUdOQVRVUkVfRklFTERfTkFNRSA9ICdzdXJpY2F0YS5ldmUuYWxlcnQuc2lnbmF0dXJlJzsKZXhwb3J0cy5TVVJJQ0FUQV9TSUdOQVRVUkVfRklFTERfTkFNRSA9IFNVUklDQVRBX1NJR05BVFVSRV9GSUVMRF9OQU1FOwp2YXIgU1VSSUNBVEFfU0lHTkFUVVJFX0lEX0ZJRUxEX05BTUUgPSAnc3VyaWNhdGEuZXZlLmFsZXJ0LnNpZ25hdHVyZV9pZCc7CmV4cG9ydHMuU1VSSUNBVEFfU0lHTkFUVVJFX0lEX0ZJRUxEX05BTUUgPSBTVVJJQ0FUQV9TSUdOQVRVUkVfSURfRklFTERfTkFNRTsKdmFyIFNpZ25hdHVyZUZsZXhJdGVtID0gKDAsIF9zdHlsZWRDb21wb25lbnRzLmRlZmF1bHQpKF9ldWkuRXVpRmxleEl0ZW0pLndpdGhDb25maWcoewogIGRpc3BsYXlOYW1lOiAiU2lnbmF0dXJlRmxleEl0ZW0iLAogIGNvbXBvbmVudElkOiAic2MtMWV5dWZmaS0wIgp9KShbIm1pbi13aWR0aDo3N3B4OyJdKTsKU2lnbmF0dXJlRmxleEl0ZW0uZGlzcGxheU5hbWUgPSAnU2lnbmF0dXJlRmxleEl0ZW0nOwp2YXIgQmFkZ2UgPSAoMCwgX3N0eWxlZENvbXBvbmVudHMuZGVmYXVsdCkoX2V1aS5FdWlCYWRnZSkud2l0aENvbmZpZyh7CiAgZGlzcGxheU5hbWU6ICJCYWRnZSIsCiAgY29tcG9uZW50SWQ6ICJzYy0xZXl1ZmZpLTEiCn0pKFsidmVydGljYWwtYWxpZ246dG9wOyJdKTsKQmFkZ2UuZGlzcGxheU5hbWUgPSAnQmFkZ2UnOwp2YXIgTGlua0ZsZXhJdGVtID0gKDAsIF9zdHlsZWRDb21wb25lbnRzLmRlZmF1bHQpKF9ldWkuRXVpRmxleEl0ZW0pLndpdGhDb25maWcoewogIGRpc3BsYXlOYW1lOiAiTGlua0ZsZXhJdGVtIiwKICBjb21wb25lbnRJZDogInNjLTFleXVmZmktMiIKfSkoWyJtYXJnaW4tbGVmdDo2cHg7Il0pOwpMaW5rRmxleEl0ZW0uZGlzcGxheU5hbWUgPSAnTGlua0ZsZXhJdGVtJzsKCnZhciBUb2tlbnMgPSBfcmVhY3QuZGVmYXVsdC5tZW1vKGZ1bmN0aW9uIChfcmVmKSB7CiAgdmFyIHRva2VucyA9IF9yZWYudG9rZW5zOwogIHJldHVybiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9yZWFjdC5kZWZhdWx0LkZyYWdtZW50LCBudWxsLCB0b2tlbnMubWFwKGZ1bmN0aW9uICh0b2tlbikgewogICAgcmV0dXJuIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2hlbHBlcnMyLlRva2Vuc0ZsZXhJdGVtLCB7CiAgICAgIGtleTogdG9rZW4sCiAgICAgIGdyb3c6IGZhbHNlCiAgICB9LCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpQmFkZ2UsIHsKICAgICAgaWNvblR5cGU6ICJ0YWciLAogICAgICBjb2xvcjogImhvbGxvdyIKICAgIH0sIHRva2VuKSk7CiAgfSkpOwp9KTsKCmV4cG9ydHMuVG9rZW5zID0gVG9rZW5zOwpUb2tlbnMuZGlzcGxheU5hbWUgPSAnVG9rZW5zJzsKCnZhciBEcmFnZ2FibGVTaWduYXR1cmVJZCA9IF9yZWFjdC5kZWZhdWx0Lm1lbW8oZnVuY3Rpb24gKF9yZWYyKSB7CiAgdmFyIGlkID0gX3JlZjIuaWQsCiAgICAgIHNpZ25hdHVyZUlkID0gX3JlZjIuc2lnbmF0dXJlSWQ7CiAgcmV0dXJuIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoU2lnbmF0dXJlRmxleEl0ZW0sIHsKICAgIGdyb3c6IGZhbHNlCiAgfSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZHJhZ2dhYmxlX3dyYXBwZXIuRHJhZ2dhYmxlV3JhcHBlciwgewogICAgZGF0YVByb3ZpZGVyOiB7CiAgICAgIGFuZDogW10sCiAgICAgIGVuYWJsZWQ6IHRydWUsCiAgICAgIGlkOiAoMCwgX2hlbHBlcnMuZXNjYXBlRGF0YVByb3ZpZGVySWQpKCJzdXJpY2F0YS1kcmFnZ2FibGUtc2lnbmF0dXJlLWlkLSIuY29uY2F0KGlkLCAiLXNpZy0iKS5jb25jYXQoc2lnbmF0dXJlSWQpKSwKICAgICAgbmFtZTogU3RyaW5nKHNpZ25hdHVyZUlkKSwKICAgICAgZXhjbHVkZWQ6IGZhbHNlLAogICAgICBrcWxRdWVyeTogJycsCiAgICAgIHF1ZXJ5TWF0Y2g6IHsKICAgICAgICBmaWVsZDogU1VSSUNBVEFfU0lHTkFUVVJFX0lEX0ZJRUxEX05BTUUsCiAgICAgICAgdmFsdWU6IHNpZ25hdHVyZUlkLAogICAgICAgIG9wZXJhdG9yOiBfZGF0YV9wcm92aWRlci5JU19PUEVSQVRPUgogICAgICB9CiAgICB9LAogICAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIoZGF0YVByb3ZpZGVyLCBfLCBzbmFwc2hvdCkgewogICAgICByZXR1cm4gc25hcHNob3QuaXNEcmFnZ2luZyA/IF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2RyYWdnYWJsZV93cmFwcGVyLkRyYWdFZmZlY3RzLCBudWxsLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9wcm92aWRlci5Qcm92aWRlciwgewogICAgICAgIGRhdGFQcm92aWRlcjogZGF0YVByb3ZpZGVyCiAgICAgIH0pKSA6IF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlUb29sVGlwLCB7CiAgICAgICAgImRhdGEtdGVzdC1zdWJqIjogInNpZ25hdHVyZS1pZC10b29sdGlwIiwKICAgICAgICBjb250ZW50OiBTVVJJQ0FUQV9TSUdOQVRVUkVfSURfRklFTERfTkFNRQogICAgICB9LCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KEJhZGdlLCB7CiAgICAgICAgaWNvblR5cGU6ICJudW1iZXIiLAogICAgICAgIGNvbG9yOiAiaG9sbG93IgogICAgICB9LCBzaWduYXR1cmVJZCkpOwogICAgfQogIH0pKTsKfSk7CgpleHBvcnRzLkRyYWdnYWJsZVNpZ25hdHVyZUlkID0gRHJhZ2dhYmxlU2lnbmF0dXJlSWQ7CkRyYWdnYWJsZVNpZ25hdHVyZUlkLmRpc3BsYXlOYW1lID0gJ0RyYWdnYWJsZVNpZ25hdHVyZUlkJzsKCnZhciBTdXJpY2F0YVNpZ25hdHVyZSA9IF9yZWFjdC5kZWZhdWx0Lm1lbW8oZnVuY3Rpb24gKF9yZWYzKSB7CiAgdmFyIGNvbnRleHRJZCA9IF9yZWYzLmNvbnRleHRJZCwKICAgICAgaWQgPSBfcmVmMy5pZCwKICAgICAgc2lnbmF0dXJlID0gX3JlZjMuc2lnbmF0dXJlLAogICAgICBzaWduYXR1cmVJZCA9IF9yZWYzLnNpZ25hdHVyZUlkOwogIHZhciB0b2tlbnMgPSAoMCwgX3N1cmljYXRhX2xpbmtzLmdldEJlZ2lubmluZ1Rva2Vucykoc2lnbmF0dXJlKTsKICByZXR1cm4gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUZsZXhHcm91cCwgewogICAganVzdGlmeUNvbnRlbnQ6ICJjZW50ZXIiLAogICAgZ3V0dGVyU2l6ZTogIm5vbmUiLAogICAgd3JhcDogdHJ1ZQogIH0sIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoRHJhZ2dhYmxlU2lnbmF0dXJlSWQsIHsKICAgIGlkOiAiZHJhZ2dhYmxlLXNpZ25hdHVyZS1pZC0iLmNvbmNhdChjb250ZXh0SWQsICItIikuY29uY2F0KGlkKSwKICAgIHNpZ25hdHVyZUlkOiBzaWduYXR1cmVJZAogIH0pLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFRva2VucywgewogICAgdG9rZW5zOiB0b2tlbnMKICB9KSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChMaW5rRmxleEl0ZW0sIHsKICAgIGdyb3c6IGZhbHNlCiAgfSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZHJhZ2dhYmxlcy5EZWZhdWx0RHJhZ2dhYmxlLCB7CiAgICAiZGF0YS10ZXN0LXN1YmoiOiAiZHJhZ2dhYmxlLXNpZ25hdHVyZS1saW5rIiwKICAgIGZpZWxkOiBTVVJJQ0FUQV9TSUdOQVRVUkVfRklFTERfTkFNRSwKICAgIGlkOiAic3VyaWNhdGEtc2lnbmF0dXJlLWRlZmF1bHQtZHJhZ2dhYmxlLSIuY29uY2F0KGNvbnRleHRJZCwgIi0iKS5jb25jYXQoaWQsICItIikuY29uY2F0KFNVUklDQVRBX1NJR05BVFVSRV9GSUVMRF9OQU1FKSwKICAgIHZhbHVlOiBzaWduYXR1cmUKICB9LCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KCJkaXYiLCBudWxsLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9saW5rcy5Hb29nbGVMaW5rLCB7CiAgICBsaW5rOiBzaWduYXR1cmUKICB9LCBzaWduYXR1cmUuc3BsaXQoJyAnKS5zcGxpY2UodG9rZW5zLmxlbmd0aCkuam9pbignICcpKSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXh0ZXJuYWxfbGlua19pY29uLkV4dGVybmFsTGlua0ljb24sIG51bGwpKSkpKTsKfSk7CgpleHBvcnRzLlN1cmljYXRhU2lnbmF0dXJlID0gU3VyaWNhdGFTaWduYXR1cmU7ClN1cmljYXRhU2lnbmF0dXJlLmRpc3BsYXlOYW1lID0gJ1N1cmljYXRhU2lnbmF0dXJlJzs="},null]}