{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/monitoring/public/components/chart/monitoring_timeseries_container.js","dependencies":[{"path":"x-pack/legacy/plugins/monitoring/public/components/chart/monitoring_timeseries_container.js","mtime":1589249552516},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLk1vbml0b3JpbmdUaW1lc2VyaWVzQ29udGFpbmVyID0gTW9uaXRvcmluZ1RpbWVzZXJpZXNDb250YWluZXI7Cgp2YXIgX3JlYWN0ID0gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQocmVxdWlyZSgicmVhY3QiKSk7Cgp2YXIgX2xvZGFzaCA9IHJlcXVpcmUoImxvZGFzaCIpOwoKdmFyIF9nZXRfdGl0bGUgPSByZXF1aXJlKCIuL2dldF90aXRsZSIpOwoKdmFyIF9nZXRfdW5pdHMgPSByZXF1aXJlKCIuL2dldF91bml0cyIpOwoKdmFyIF9tb25pdG9yaW5nX3RpbWVzZXJpZXMgPSByZXF1aXJlKCIuL21vbml0b3JpbmdfdGltZXNlcmllcyIpOwoKdmFyIF9pbmZvX3Rvb2x0aXAgPSByZXF1aXJlKCIuL2luZm9fdG9vbHRpcCIpOwoKdmFyIF9ldWkgPSByZXF1aXJlKCJAZWxhc3RpYy9ldWkiKTsKCnZhciBfcmVhY3QyID0gcmVxdWlyZSgiQGtibi9pMThuL3JlYWN0Iik7Cgp2YXIgX2kxOG4gPSByZXF1aXJlKCJAa2JuL2kxOG4iKTsKCmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKG9iaikgeyBpZiAob2JqICYmIG9iai5fX2VzTW9kdWxlKSB7IHJldHVybiBvYmo7IH0gZWxzZSB7IHZhciBuZXdPYmogPSB7fTsgaWYgKG9iaiAhPSBudWxsKSB7IGZvciAodmFyIGtleSBpbiBvYmopIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGtleSkpIHsgdmFyIGRlc2MgPSBPYmplY3QuZGVmaW5lUHJvcGVydHkgJiYgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvciA/IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqLCBrZXkpIDoge307IGlmIChkZXNjLmdldCB8fCBkZXNjLnNldCkgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkobmV3T2JqLCBrZXksIGRlc2MpOyB9IGVsc2UgeyBuZXdPYmpba2V5XSA9IG9ialtrZXldOyB9IH0gfSB9IG5ld09iai5kZWZhdWx0ID0gb2JqOyByZXR1cm4gbmV3T2JqOyB9IH0KCi8qCiAqIENvcHlyaWdodCBFbGFzdGljc2VhcmNoIEIuVi4gYW5kL29yIGxpY2Vuc2VkIHRvIEVsYXN0aWNzZWFyY2ggQi5WLiB1bmRlciBvbmUKICogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuIExpY2Vuc2VkIHVuZGVyIHRoZSBFbGFzdGljIExpY2Vuc2U7CiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgRWxhc3RpYyBMaWNlbnNlLgogKi8KdmFyIHpvb21PdXRCdG4gPSBmdW5jdGlvbiB6b29tT3V0QnRuKHpvb21JbmZvKSB7CiAgaWYgKCF6b29tSW5mbyB8fCAhem9vbUluZm8uc2hvd1pvb21PdXRCdG4oKSkgewogICAgcmV0dXJuIG51bGw7CiAgfQoKICByZXR1cm4gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUZsZXhJdGVtLCB7CiAgICBjbGFzc05hbWU6ICJtb25SaHl0aG1DaGFydF9fem9vbSIKICB9LCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpVGV4dEFsaWduLCB7CiAgICB0ZXh0QWxpZ246ICJyaWdodCIKICB9LCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpQnV0dG9uRW1wdHksIHsKICAgIGNvbG9yOiAicHJpbWFyeSIsCiAgICBzaXplOiAicyIsCiAgICBpY29uVHlwZTogIm1hZ25pZnlXaXRoTWludXMiLAogICAgb25DbGljazogem9vbUluZm8uem9vbU91dEhhbmRsZXIKICB9LCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9yZWFjdDIuRm9ybWF0dGVkTWVzc2FnZSwgewogICAgaWQ6ICJ4cGFjay5tb25pdG9yaW5nLmNoYXJ0LnRpbWVTZXJpZXMuem9vbU91dCIsCiAgICBkZWZhdWx0TWVzc2FnZTogIlpvb20gb3V0IgogIH0pKSkpOwp9OwoKZnVuY3Rpb24gTW9uaXRvcmluZ1RpbWVzZXJpZXNDb250YWluZXIoX3JlZikgewogIHZhciBzZXJpZXMgPSBfcmVmLnNlcmllcywKICAgICAgb25CcnVzaCA9IF9yZWYub25CcnVzaCwKICAgICAgem9vbUluZm8gPSBfcmVmLnpvb21JbmZvOwoKICBpZiAoc2VyaWVzID09PSB1bmRlZmluZWQpIHsKICAgIHJldHVybiBudWxsOyAvLyBzdGlsbCBsb2FkaW5nCiAgfQoKICB2YXIgdGl0bGUgPSAoMCwgX2dldF90aXRsZS5nZXRUaXRsZSkoc2VyaWVzKTsKICB2YXIgdGl0bGVGb3JBcmlhSWRzID0gdGl0bGUucmVwbGFjZSgvXHMrLywgJy0tJyk7CiAgdmFyIHVuaXRzID0gKDAsIF9nZXRfdW5pdHMuZ2V0VW5pdHMpKHNlcmllcyk7CiAgdmFyIGJ1Y2tldFNpemUgPSAoMCwgX2xvZGFzaC5nZXQpKCgwLCBfbG9kYXNoLmZpcnN0KShzZXJpZXMpLCAnYnVja2V0X3NpemUnKTsgLy8gYnVja2V0IHNpemUgd2lsbCBiZSB0aGUgc2FtZSBmb3IgYWxsIG1ldHJpY3MgaW4gYWxsIHNlcmllcwoKICB2YXIgc2VyaWVzU2NyZWVuUmVhZGVyVGV4dExpc3QgPSBbX2kxOG4uaTE4bi50cmFuc2xhdGUoJ3hwYWNrLm1vbml0b3JpbmcuY2hhcnQuc2VyaWVzU2NyZWVuUmVhZGVyTGlzdERlc2NyaXB0aW9uJywgewogICAgZGVmYXVsdE1lc3NhZ2U6ICdJbnRlcnZhbDoge2J1Y2tldFNpemV9JywKICAgIHZhbHVlczogewogICAgICBidWNrZXRTaXplOiBidWNrZXRTaXplCiAgICB9CiAgfSldLmNvbmNhdChzZXJpZXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7CiAgICByZXR1cm4gIiIuY29uY2F0KGl0ZW0ubWV0cmljLmxhYmVsLCAiOiAiKS5jb25jYXQoaXRlbS5tZXRyaWMuZGVzY3JpcHRpb24pOwogIH0pKTsKICByZXR1cm4gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUZsZXhHcm91cCwgewogICAgZGlyZWN0aW9uOiAiY29sdW1uIiwKICAgIGd1dHRlclNpemU6ICJzIiwKICAgIGNsYXNzTmFtZTogIm1vblJoeXRobUNoYXJ0X193cmFwcGVyIgogIH0sIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlGbGV4SXRlbSwgewogICAgZ3JvdzogZmFsc2UKICB9LCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpRmxleEdyb3VwLCB7CiAgICBndXR0ZXJTaXplOiAicyIsCiAgICBhbGlnbkl0ZW1zOiAiY2VudGVyIgogIH0sIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlGbGV4SXRlbSwgewogICAgZ3JvdzogZmFsc2UKICB9LCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpVGl0bGUsIHsKICAgIHNpemU6ICJzIiwKICAgIHRhYkluZGV4OiAiMCIKICB9LCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KCJoMiIsIG51bGwsICgwLCBfZ2V0X3RpdGxlLmdldFRpdGxlKShzZXJpZXMpLCB1bml0cyA/ICIgKCIuY29uY2F0KHVuaXRzLCAiKSIpIDogJycsIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlTY3JlZW5SZWFkZXJPbmx5LCBudWxsLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KCJzcGFuIiwgbnVsbCwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfcmVhY3QyLkZvcm1hdHRlZE1lc3NhZ2UsIHsKICAgIGlkOiAieHBhY2subW9uaXRvcmluZy5jaGFydC5zY3JlZW5SZWFkZXJVbmFjY2Vzc2libGVUaXRsZSIsCiAgICBkZWZhdWx0TWVzc2FnZTogIlRoaXMgY2hhcnQgaXMgbm90IHNjcmVlbiByZWFkZXIgYWNjZXNzaWJsZSIKICB9KSkpKSkpLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpRmxleEl0ZW0sIHsKICAgIGdyb3c6IGZhbHNlCiAgfSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfcmVhY3QuRnJhZ21lbnQsIG51bGwsIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlJY29uVGlwLCB7CiAgICBhbmNob3JDbGFzc05hbWU6ICJldWktdGV4dFJpZ2h0IGV1aS1hbGlnbk1pZGRsZSBtb25DaGFydF9fdG9vbHRpcFRyaWdnZXIiLAogICAgdHlwZTogImlJbkNpcmNsZSIsCiAgICBwb3NpdGlvbjogInJpZ2h0IiwKICAgIGNvbnRlbnQ6IF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2luZm9fdG9vbHRpcC5JbmZvVG9vbHRpcCwgewogICAgICBzZXJpZXM6IHNlcmllcywKICAgICAgYnVja2V0U2l6ZTogYnVja2V0U2l6ZQogICAgfSkKICB9KSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aVNjcmVlblJlYWRlck9ubHksIG51bGwsIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoInNwYW4iLCB7CiAgICBpZDogIm1vbml0b3JpbmdDaGFydCIuY29uY2F0KHRpdGxlRm9yQXJpYUlkcykKICB9LCBzZXJpZXNTY3JlZW5SZWFkZXJUZXh0TGlzdC5qb2luKCcuICcpKSkpKSwgem9vbU91dEJ0bih6b29tSW5mbykpKSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUZsZXhJdGVtLCB7CiAgICBzdHlsZTogewogICAgICBtaW5IZWlnaHQ6ICcyMDBweCcKICAgIH0KICB9LCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9tb25pdG9yaW5nX3RpbWVzZXJpZXMuTW9uaXRvcmluZ1RpbWVzZXJpZXMsIHsKICAgIHNlcmllczogc2VyaWVzLAogICAgb25CcnVzaDogb25CcnVzaAogIH0pKSk7Cn0="},null]}