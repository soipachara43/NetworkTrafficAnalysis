{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/siem/public/components/open_timeline/edit_timeline_batch_actions.js","dependencies":[{"path":"x-pack/legacy/plugins/siem/public/components/open_timeline/edit_timeline_batch_actions.js","mtime":1589249553064},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLnVzZUVkaXRUaW1lbGluQmF0Y2hBY3Rpb25zID0gdm9pZCAwOwoKdmFyIF9ldWkgPSByZXF1aXJlKCJAZWxhc3RpYy9ldWkiKTsKCnZhciBfcmVhY3QgPSBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChyZXF1aXJlKCJyZWFjdCIpKTsKCnZhciBfZnAgPSByZXF1aXJlKCJsb2Rhc2gvZnAiKTsKCnZhciBpMThuID0gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQocmVxdWlyZSgiLi90cmFuc2xhdGlvbnMiKSk7Cgp2YXIgX2V4cG9ydF90aW1lbGluZSA9IHJlcXVpcmUoIi4vZXhwb3J0X3RpbWVsaW5lIik7Cgp2YXIgX2VkaXRfdGltZWxpbmVfYWN0aW9ucyA9IHJlcXVpcmUoIi4vZWRpdF90aW1lbGluZV9hY3Rpb25zIik7CgpmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChvYmopIHsKICBpZiAob2JqICYmIG9iai5fX2VzTW9kdWxlKSB7CiAgICByZXR1cm4gb2JqOwogIH0gZWxzZSB7CiAgICB2YXIgbmV3T2JqID0ge307CgogICAgaWYgKG9iaiAhPSBudWxsKSB7CiAgICAgIGZvciAodmFyIGtleSBpbiBvYmopIHsKICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwga2V5KSkgewogICAgICAgICAgdmFyIGRlc2MgPSBPYmplY3QuZGVmaW5lUHJvcGVydHkgJiYgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvciA/IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqLCBrZXkpIDoge307CgogICAgICAgICAgaWYgKGRlc2MuZ2V0IHx8IGRlc2Muc2V0KSB7CiAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShuZXdPYmosIGtleSwgZGVzYyk7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBuZXdPYmpba2V5XSA9IG9ialtrZXldOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfQoKICAgIG5ld09iai5kZWZhdWx0ID0gb2JqOwogICAgcmV0dXJuIG5ld09iajsKICB9Cn0KCmZ1bmN0aW9uIF90b0NvbnN1bWFibGVBcnJheShhcnIpIHsKICByZXR1cm4gX2FycmF5V2l0aG91dEhvbGVzKGFycikgfHwgX2l0ZXJhYmxlVG9BcnJheShhcnIpIHx8IF9ub25JdGVyYWJsZVNwcmVhZCgpOwp9CgpmdW5jdGlvbiBfbm9uSXRlcmFibGVTcHJlYWQoKSB7CiAgdGhyb3cgbmV3IFR5cGVFcnJvcigiSW52YWxpZCBhdHRlbXB0IHRvIHNwcmVhZCBub24taXRlcmFibGUgaW5zdGFuY2UiKTsKfQoKZnVuY3Rpb24gX2l0ZXJhYmxlVG9BcnJheShpdGVyKSB7CiAgaWYgKFN5bWJvbC5pdGVyYXRvciBpbiBPYmplY3QoaXRlcikgfHwgT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGl0ZXIpID09PSAiW29iamVjdCBBcmd1bWVudHNdIikgcmV0dXJuIEFycmF5LmZyb20oaXRlcik7Cn0KCmZ1bmN0aW9uIF9hcnJheVdpdGhvdXRIb2xlcyhhcnIpIHsKICBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSB7CiAgICBmb3IgKHZhciBpID0gMCwgYXJyMiA9IG5ldyBBcnJheShhcnIubGVuZ3RoKTsgaSA8IGFyci5sZW5ndGg7IGkrKykgewogICAgICBhcnIyW2ldID0gYXJyW2ldOwogICAgfQoKICAgIHJldHVybiBhcnIyOwogIH0KfQoKdmFyIGdldEV4cG9ydGVkSWRzID0gZnVuY3Rpb24gZ2V0RXhwb3J0ZWRJZHMoc2VsZWN0ZWRUaW1lbGluZXMpIHsKICB2YXIgYXJyYXkgPSBBcnJheS5pc0FycmF5KHNlbGVjdGVkVGltZWxpbmVzKSA/IHNlbGVjdGVkVGltZWxpbmVzIDogW3NlbGVjdGVkVGltZWxpbmVzXTsKICByZXR1cm4gYXJyYXkucmVkdWNlKGZ1bmN0aW9uIChhY2MsIGl0ZW0pIHsKICAgIHJldHVybiBpdGVtLnNhdmVkT2JqZWN0SWQgIT0gbnVsbCA/IFtdLmNvbmNhdChfdG9Db25zdW1hYmxlQXJyYXkoYWNjKSwgW2l0ZW0uc2F2ZWRPYmplY3RJZF0pIDogX3RvQ29uc3VtYWJsZUFycmF5KGFjYyk7CiAgfSwgW10pOwp9OwoKdmFyIHVzZUVkaXRUaW1lbGluQmF0Y2hBY3Rpb25zID0gZnVuY3Rpb24gdXNlRWRpdFRpbWVsaW5CYXRjaEFjdGlvbnMoX3JlZikgewogIHZhciBkZWxldGVUaW1lbGluZXMgPSBfcmVmLmRlbGV0ZVRpbWVsaW5lcywKICAgICAgc2VsZWN0ZWRJdGVtcyA9IF9yZWYuc2VsZWN0ZWRJdGVtcywKICAgICAgdGFibGVSZWYgPSBfcmVmLnRhYmxlUmVmOwoKICB2YXIgX3VzZUVkaXRUaW1lbGluZUFjdGlvID0gKDAsIF9lZGl0X3RpbWVsaW5lX2FjdGlvbnMudXNlRWRpdFRpbWVsaW5lQWN0aW9ucykoKSwKICAgICAgZW5hYmxlRXhwb3J0VGltZWxpbmVEb3dubG9hZGVyID0gX3VzZUVkaXRUaW1lbGluZUFjdGlvLmVuYWJsZUV4cG9ydFRpbWVsaW5lRG93bmxvYWRlciwKICAgICAgZGlzYWJsZUV4cG9ydFRpbWVsaW5lRG93bmxvYWRlciA9IF91c2VFZGl0VGltZWxpbmVBY3Rpby5kaXNhYmxlRXhwb3J0VGltZWxpbmVEb3dubG9hZGVyLAogICAgICBpc0VuYWJsZURvd25sb2FkZXIgPSBfdXNlRWRpdFRpbWVsaW5lQWN0aW8uaXNFbmFibGVEb3dubG9hZGVyLAogICAgICBpc0RlbGV0ZVRpbWVsaW5lTW9kYWxPcGVuID0gX3VzZUVkaXRUaW1lbGluZUFjdGlvLmlzRGVsZXRlVGltZWxpbmVNb2RhbE9wZW4sCiAgICAgIG9uT3BlbkRlbGV0ZVRpbWVsaW5lTW9kYWwgPSBfdXNlRWRpdFRpbWVsaW5lQWN0aW8ub25PcGVuRGVsZXRlVGltZWxpbmVNb2RhbCwKICAgICAgb25DbG9zZURlbGV0ZVRpbWVsaW5lTW9kYWwgPSBfdXNlRWRpdFRpbWVsaW5lQWN0aW8ub25DbG9zZURlbGV0ZVRpbWVsaW5lTW9kYWw7CgogIHZhciBvbkNvbXBsZXRlQmF0Y2hBY3Rpb25zID0gKDAsIF9yZWFjdC51c2VDYWxsYmFjaykoZnVuY3Rpb24gKGNsb3NlUG9wb3ZlcikgewogICAgaWYgKGNsb3NlUG9wb3ZlciAhPSBudWxsKSBjbG9zZVBvcG92ZXIoKTsKCiAgICBpZiAodGFibGVSZWYgIT0gbnVsbCAmJiB0YWJsZVJlZi5jdXJyZW50ICE9IG51bGwpIHsKICAgICAgdGFibGVSZWYuY3VycmVudC5jaGFuZ2VTZWxlY3Rpb24oW10pOwogICAgfQoKICAgIGRpc2FibGVFeHBvcnRUaW1lbGluZURvd25sb2FkZXIoKTsKICAgIG9uQ2xvc2VEZWxldGVUaW1lbGluZU1vZGFsKCk7CiAgfSwgW2Rpc2FibGVFeHBvcnRUaW1lbGluZURvd25sb2FkZXIsIG9uQ2xvc2VEZWxldGVUaW1lbGluZU1vZGFsLCB0YWJsZVJlZi5jdXJyZW50XSk7CiAgdmFyIHNlbGVjdGVkSWRzID0gKDAsIF9yZWFjdC51c2VNZW1vKShmdW5jdGlvbiAoKSB7CiAgICByZXR1cm4gZ2V0RXhwb3J0ZWRJZHMoc2VsZWN0ZWRJdGVtcyAhPT0gbnVsbCAmJiBzZWxlY3RlZEl0ZW1zICE9PSB2b2lkIDAgPyBzZWxlY3RlZEl0ZW1zIDogW10pOwogIH0sIFtzZWxlY3RlZEl0ZW1zXSk7CiAgdmFyIGhhbmRsZUVuYWJsZUV4cG9ydFRpbWVsaW5lRG93bmxvYWRlciA9ICgwLCBfcmVhY3QudXNlQ2FsbGJhY2spKGZ1bmN0aW9uICgpIHsKICAgIHJldHVybiBlbmFibGVFeHBvcnRUaW1lbGluZURvd25sb2FkZXIoKTsKICB9LCBbZW5hYmxlRXhwb3J0VGltZWxpbmVEb3dubG9hZGVyXSk7CiAgdmFyIGhhbmRsZU9uT3BlbkRlbGV0ZVRpbWVsaW5lTW9kYWwgPSAoMCwgX3JlYWN0LnVzZUNhbGxiYWNrKShmdW5jdGlvbiAoKSB7CiAgICByZXR1cm4gb25PcGVuRGVsZXRlVGltZWxpbmVNb2RhbCgpOwogIH0sIFtvbk9wZW5EZWxldGVUaW1lbGluZU1vZGFsXSk7CiAgdmFyIGdldEJhdGNoSXRlbXNQb3BvdmVyQ29udGVudCA9ICgwLCBfcmVhY3QudXNlQ2FsbGJhY2spKGZ1bmN0aW9uIChjbG9zZVBvcG92ZXIpIHsKICAgIHZhciBfcmVmMiwgX3JlZjMsIF9zZWxlY3RlZEl0ZW1zJDsKCiAgICB2YXIgaXNEaXNhYmxlZCA9ICgwLCBfZnAuaXNFbXB0eSkoc2VsZWN0ZWRJdGVtcyk7CiAgICByZXR1cm4gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfcmVhY3QuZGVmYXVsdC5GcmFnbWVudCwgbnVsbCwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXhwb3J0X3RpbWVsaW5lLkVkaXRUaW1lbGluZUFjdGlvbnMsIHsKICAgICAgZGVsZXRlVGltZWxpbmVzOiBkZWxldGVUaW1lbGluZXMsCiAgICAgIGlkczogc2VsZWN0ZWRJZHMsCiAgICAgIGlzRW5hYmxlRG93bmxvYWRlcjogaXNFbmFibGVEb3dubG9hZGVyLAogICAgICBpc0RlbGV0ZVRpbWVsaW5lTW9kYWxPcGVuOiBpc0RlbGV0ZVRpbWVsaW5lTW9kYWxPcGVuLAogICAgICBvbkNvbXBsZXRlOiBvbkNvbXBsZXRlQmF0Y2hBY3Rpb25zLmJpbmQobnVsbCwgY2xvc2VQb3BvdmVyKSwKICAgICAgdGl0bGU6IChzZWxlY3RlZEl0ZW1zID09PSBudWxsIHx8IHNlbGVjdGVkSXRlbXMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHNlbGVjdGVkSXRlbXMubGVuZ3RoKSAhPT0gMSA/IGkxOG4uU0VMRUNURURfVElNRUxJTkVTKChfcmVmMiA9IHNlbGVjdGVkSXRlbXMgPT09IG51bGwgfHwgc2VsZWN0ZWRJdGVtcyA9PT0gdm9pZCAwID8gdm9pZCAwIDogc2VsZWN0ZWRJdGVtcy5sZW5ndGgpICE9PSBudWxsICYmIF9yZWYyICE9PSB2b2lkIDAgPyBfcmVmMiA6IDApIDogKF9yZWYzID0gKF9zZWxlY3RlZEl0ZW1zJCA9IHNlbGVjdGVkSXRlbXNbMF0pID09PSBudWxsIHx8IF9zZWxlY3RlZEl0ZW1zJCA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3NlbGVjdGVkSXRlbXMkLnRpdGxlKSAhPT0gbnVsbCAmJiBfcmVmMyAhPT0gdm9pZCAwID8gX3JlZjMgOiAnJwogICAgfSksIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlDb250ZXh0TWVudVBhbmVsLCB7CiAgICAgIGl0ZW1zOiBbX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUNvbnRleHRNZW51SXRlbSwgewogICAgICAgIGRpc2FibGVkOiBpc0Rpc2FibGVkLAogICAgICAgIGljb246ICJleHBvcnRBY3Rpb24iLAogICAgICAgIGtleTogIkV4cG9ydEl0ZW1LZXkiLAogICAgICAgIG9uQ2xpY2s6IGhhbmRsZUVuYWJsZUV4cG9ydFRpbWVsaW5lRG93bmxvYWRlcgogICAgICB9LCBpMThuLkVYUE9SVF9TRUxFQ1RFRCksIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlDb250ZXh0TWVudUl0ZW0sIHsKICAgICAgICBkaXNhYmxlZDogaXNEaXNhYmxlZCwKICAgICAgICBpY29uOiAidHJhc2giLAogICAgICAgIGtleTogIkRlbGV0ZUl0ZW1LZXkiLAogICAgICAgIG9uQ2xpY2s6IGhhbmRsZU9uT3BlbkRlbGV0ZVRpbWVsaW5lTW9kYWwKICAgICAgfSwgaTE4bi5ERUxFVEVfU0VMRUNURUQpXQogICAgfSkpOwogIH0sIFtkZWxldGVUaW1lbGluZXMsIGlzRW5hYmxlRG93bmxvYWRlciwgaXNEZWxldGVUaW1lbGluZU1vZGFsT3Blbiwgc2VsZWN0ZWRJZHMsIHNlbGVjdGVkSXRlbXMsIGhhbmRsZUVuYWJsZUV4cG9ydFRpbWVsaW5lRG93bmxvYWRlciwgaGFuZGxlT25PcGVuRGVsZXRlVGltZWxpbmVNb2RhbCwgb25Db21wbGV0ZUJhdGNoQWN0aW9uc10pOwogIHJldHVybiB7CiAgICBvbkNvbXBsZXRlQmF0Y2hBY3Rpb25zOiBvbkNvbXBsZXRlQmF0Y2hBY3Rpb25zLAogICAgZ2V0QmF0Y2hJdGVtc1BvcG92ZXJDb250ZW50OiBnZXRCYXRjaEl0ZW1zUG9wb3ZlckNvbnRlbnQKICB9Owp9OwoKZXhwb3J0cy51c2VFZGl0VGltZWxpbkJhdGNoQWN0aW9ucyA9IHVzZUVkaXRUaW1lbGluQmF0Y2hBY3Rpb25zOw=="},null]}