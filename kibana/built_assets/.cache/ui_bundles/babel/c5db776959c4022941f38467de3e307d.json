{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/lens/public/indexpattern_datasource/dimension_panel/dimension_panel.js","dependencies":[{"path":"x-pack/legacy/plugins/lens/public/indexpattern_datasource/dimension_panel/dimension_panel.js","mtime":1589249552312},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmNhbkhhbmRsZURyb3AgPSBjYW5IYW5kbGVEcm9wOwpleHBvcnRzLm9uRHJvcCA9IG9uRHJvcDsKZXhwb3J0cy5JbmRleFBhdHRlcm5EaW1lbnNpb25FZGl0b3IgPSBleHBvcnRzLkluZGV4UGF0dGVybkRpbWVuc2lvblRyaWdnZXIgPSBleHBvcnRzLkluZGV4UGF0dGVybkRpbWVuc2lvbkVkaXRvckNvbXBvbmVudCA9IGV4cG9ydHMuSW5kZXhQYXR0ZXJuRGltZW5zaW9uVHJpZ2dlckNvbXBvbmVudCA9IHZvaWQgMDsKCnZhciBfbG9kYXNoID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCJsb2Rhc2giKSk7Cgp2YXIgX3JlYWN0ID0gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQocmVxdWlyZSgicmVhY3QiKSk7Cgp2YXIgX2kxOG4gPSByZXF1aXJlKCJAa2JuL2kxOG4iKTsKCnZhciBfZXVpID0gcmVxdWlyZSgiQGVsYXN0aWMvZXVpIik7Cgp2YXIgX29wZXJhdGlvbnMgPSByZXF1aXJlKCIuLi9vcGVyYXRpb25zIik7Cgp2YXIgX3BvcG92ZXJfZWRpdG9yID0gcmVxdWlyZSgiLi9wb3BvdmVyX2VkaXRvciIpOwoKdmFyIF9zdGF0ZV9oZWxwZXJzID0gcmVxdWlyZSgiLi4vc3RhdGVfaGVscGVycyIpOwoKdmFyIF91dGlscyA9IHJlcXVpcmUoIi4uL3V0aWxzIik7Cgp2YXIgX2xlbnNfdWlfdGVsZW1ldHJ5ID0gcmVxdWlyZSgiLi4vLi4vbGVuc191aV90ZWxlbWV0cnkiKTsKCmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKG9iaikgewogIGlmIChvYmogJiYgb2JqLl9fZXNNb2R1bGUpIHsKICAgIHJldHVybiBvYmo7CiAgfSBlbHNlIHsKICAgIHZhciBuZXdPYmogPSB7fTsKCiAgICBpZiAob2JqICE9IG51bGwpIHsKICAgICAgZm9yICh2YXIga2V5IGluIG9iaikgewogICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBrZXkpKSB7CiAgICAgICAgICB2YXIgZGVzYyA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSAmJiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID8gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmosIGtleSkgOiB7fTsKCiAgICAgICAgICBpZiAoZGVzYy5nZXQgfHwgZGVzYy5zZXQpIHsKICAgICAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG5ld09iaiwga2V5LCBkZXNjKTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIG5ld09ialtrZXldID0gb2JqW2tleV07CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9CgogICAgbmV3T2JqLmRlZmF1bHQgPSBvYmo7CiAgICByZXR1cm4gbmV3T2JqOwogIH0KfQoKZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsKICByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogewogICAgZGVmYXVsdDogb2JqCiAgfTsKfQoKZnVuY3Rpb24gX2V4dGVuZHMoKSB7CiAgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHsKICAgIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7CiAgICAgIHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07CgogICAgICBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7CiAgICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsKICAgICAgICAgIHRhcmdldFtrZXldID0gc291cmNlW2tleV07CiAgICAgICAgfQogICAgICB9CiAgICB9CgogICAgcmV0dXJuIHRhcmdldDsKICB9OwoKICByZXR1cm4gX2V4dGVuZHMuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKfSAvLyBUT0RPOiBUaGlzIGNvZGUgaGFzIGhpc3RvcmljYWxseSBiZWVuIG1lbW9pemVkLCBhcyBhIHBvdGVudGlhbGx5IHBlcmZvcm1hbmNlCi8vIHNlbnNpdGl2ZSB0YXNrLiBJZiB3ZSBjYW4gYWRkIG1lbW9pemF0aW9uIHdpdGhvdXQgYnJlYWtpbmcgdGhlIGJlaGF2aW9yLCB3ZSBzaG91bGQuCgoKdmFyIGdldE9wZXJhdGlvbkZpZWxkU3VwcG9ydE1hdHJpeCA9IGZ1bmN0aW9uIGdldE9wZXJhdGlvbkZpZWxkU3VwcG9ydE1hdHJpeChwcm9wcykgewogIHZhciBsYXllcklkID0gcHJvcHMubGF5ZXJJZDsKICB2YXIgY3VycmVudEluZGV4UGF0dGVybiA9IHByb3BzLnN0YXRlLmluZGV4UGF0dGVybnNbcHJvcHMuc3RhdGUubGF5ZXJzW2xheWVySWRdLmluZGV4UGF0dGVybklkXTsKICB2YXIgZmlsdGVyZWRPcGVyYXRpb25zQnlNZXRhZGF0YSA9ICgwLCBfb3BlcmF0aW9ucy5nZXRBdmFpbGFibGVPcGVyYXRpb25zQnlNZXRhZGF0YSkoY3VycmVudEluZGV4UGF0dGVybikuZmlsdGVyKGZ1bmN0aW9uIChvcGVyYXRpb24pIHsKICAgIHJldHVybiBwcm9wcy5maWx0ZXJPcGVyYXRpb25zKG9wZXJhdGlvbi5vcGVyYXRpb25NZXRhRGF0YSk7CiAgfSk7CiAgdmFyIHN1cHBvcnRlZE9wZXJhdGlvbnNCeUZpZWxkID0ge307CiAgdmFyIHN1cHBvcnRlZEZpZWxkc0J5T3BlcmF0aW9uID0ge307CiAgZmlsdGVyZWRPcGVyYXRpb25zQnlNZXRhZGF0YS5mb3JFYWNoKGZ1bmN0aW9uIChfcmVmKSB7CiAgICB2YXIgb3BlcmF0aW9ucyA9IF9yZWYub3BlcmF0aW9uczsKICAgIG9wZXJhdGlvbnMuZm9yRWFjaChmdW5jdGlvbiAob3BlcmF0aW9uKSB7CiAgICAgIGlmIChzdXBwb3J0ZWRPcGVyYXRpb25zQnlGaWVsZFtvcGVyYXRpb24uZmllbGRdKSB7CiAgICAgICAgc3VwcG9ydGVkT3BlcmF0aW9uc0J5RmllbGRbb3BlcmF0aW9uLmZpZWxkXS5wdXNoKG9wZXJhdGlvbi5vcGVyYXRpb25UeXBlKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBzdXBwb3J0ZWRPcGVyYXRpb25zQnlGaWVsZFtvcGVyYXRpb24uZmllbGRdID0gW29wZXJhdGlvbi5vcGVyYXRpb25UeXBlXTsKICAgICAgfQoKICAgICAgaWYgKHN1cHBvcnRlZEZpZWxkc0J5T3BlcmF0aW9uW29wZXJhdGlvbi5vcGVyYXRpb25UeXBlXSkgewogICAgICAgIHN1cHBvcnRlZEZpZWxkc0J5T3BlcmF0aW9uW29wZXJhdGlvbi5vcGVyYXRpb25UeXBlXS5wdXNoKG9wZXJhdGlvbi5maWVsZCk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgc3VwcG9ydGVkRmllbGRzQnlPcGVyYXRpb25bb3BlcmF0aW9uLm9wZXJhdGlvblR5cGVdID0gW29wZXJhdGlvbi5maWVsZF07CiAgICAgIH0KICAgIH0pOwogIH0pOwogIHJldHVybiB7CiAgICBvcGVyYXRpb25CeUZpZWxkOiBfbG9kYXNoLmRlZmF1bHQubWFwVmFsdWVzKHN1cHBvcnRlZE9wZXJhdGlvbnNCeUZpZWxkLCBfbG9kYXNoLmRlZmF1bHQudW5pcSksCiAgICBmaWVsZEJ5T3BlcmF0aW9uOiBfbG9kYXNoLmRlZmF1bHQubWFwVmFsdWVzKHN1cHBvcnRlZEZpZWxkc0J5T3BlcmF0aW9uLCBfbG9kYXNoLmRlZmF1bHQudW5pcSkKICB9Owp9OwoKZnVuY3Rpb24gY2FuSGFuZGxlRHJvcChwcm9wcykgewogIHZhciBvcGVyYXRpb25GaWVsZFN1cHBvcnRNYXRyaXggPSBnZXRPcGVyYXRpb25GaWVsZFN1cHBvcnRNYXRyaXgocHJvcHMpOwogIHZhciBkcmFnZ2luZyA9IHByb3BzLmRyYWdEcm9wQ29udGV4dC5kcmFnZ2luZzsKICB2YXIgbGF5ZXJJbmRleFBhdHRlcm5JZCA9IHByb3BzLnN0YXRlLmxheWVyc1twcm9wcy5sYXllcklkXS5pbmRleFBhdHRlcm5JZDsKCiAgZnVuY3Rpb24gaGFzT3BlcmF0aW9uRm9yRmllbGQoZmllbGQpIHsKICAgIHJldHVybiBCb29sZWFuKG9wZXJhdGlvbkZpZWxkU3VwcG9ydE1hdHJpeC5vcGVyYXRpb25CeUZpZWxkW2ZpZWxkLm5hbWVdKTsKICB9CgogIHJldHVybiAoMCwgX3V0aWxzLmlzRHJhZ2dlZEZpZWxkKShkcmFnZ2luZykgJiYgbGF5ZXJJbmRleFBhdHRlcm5JZCA9PT0gZHJhZ2dpbmcuaW5kZXhQYXR0ZXJuSWQgJiYgQm9vbGVhbihoYXNPcGVyYXRpb25Gb3JGaWVsZChkcmFnZ2luZy5maWVsZCkpOwp9CgpmdW5jdGlvbiBvbkRyb3AocHJvcHMpIHsKICB2YXIgX3Byb3BzJHN0YXRlJGxheWVycyRsOwoKICB2YXIgb3BlcmF0aW9uRmllbGRTdXBwb3J0TWF0cml4ID0gZ2V0T3BlcmF0aW9uRmllbGRTdXBwb3J0TWF0cml4KHByb3BzKTsKICB2YXIgZHJvcHBlZEl0ZW0gPSBwcm9wcy5kcm9wcGVkSXRlbTsKCiAgZnVuY3Rpb24gaGFzT3BlcmF0aW9uRm9yRmllbGQoZmllbGQpIHsKICAgIHJldHVybiBCb29sZWFuKG9wZXJhdGlvbkZpZWxkU3VwcG9ydE1hdHJpeC5vcGVyYXRpb25CeUZpZWxkW2ZpZWxkLm5hbWVdKTsKICB9CgogIGlmICghKDAsIF91dGlscy5pc0RyYWdnZWRGaWVsZCkoZHJvcHBlZEl0ZW0pIHx8ICFoYXNPcGVyYXRpb25Gb3JGaWVsZChkcm9wcGVkSXRlbS5maWVsZCkpIHsKICAgIC8vIFRPRE86IFdoYXQgZG8gd2UgZG8gaWYgd2UgY291bGRuJ3QgZmluZCBhIGNvbHVtbj8KICAgIHJldHVybiBmYWxzZTsKICB9CgogIHZhciBvcGVyYXRpb25zRm9yTmV3RmllbGQgPSBvcGVyYXRpb25GaWVsZFN1cHBvcnRNYXRyaXgub3BlcmF0aW9uQnlGaWVsZFtkcm9wcGVkSXRlbS5maWVsZC5uYW1lXTsKICB2YXIgbGF5ZXJJZCA9IHByb3BzLmxheWVySWQ7CiAgdmFyIHNlbGVjdGVkQ29sdW1uID0gcHJvcHMuc3RhdGUubGF5ZXJzW2xheWVySWRdLmNvbHVtbnNbcHJvcHMuY29sdW1uSWRdIHx8IG51bGw7CiAgdmFyIGN1cnJlbnRJbmRleFBhdHRlcm4gPSBwcm9wcy5zdGF0ZS5pbmRleFBhdHRlcm5zWyhfcHJvcHMkc3RhdGUkbGF5ZXJzJGwgPSBwcm9wcy5zdGF0ZS5sYXllcnNbbGF5ZXJJZF0pID09PSBudWxsIHx8IF9wcm9wcyRzdGF0ZSRsYXllcnMkbCA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3Byb3BzJHN0YXRlJGxheWVycyRsLmluZGV4UGF0dGVybklkXTsgLy8gV2UgbmVlZCB0byBjaGVjayBpZiBkcmFnZ2luZyBpbiBhIG5ldyBmaWVsZCwgd2FzIGp1c3QgYSBmaWVsZCBjaGFuZ2Ugb24gdGhlIHNhbWUKICAvLyBpbmRleCBwYXR0ZXJuIGFuZCBvbiB0aGUgc2FtZSBvcGVyYXRpb25zICh0aGVyZWZvcmUgY2hlY2tpbmcgaWYgdGhlIG5ldyBmaWVsZCBzdXBwb3J0cwogIC8vIG91ciBwcmV2aW91cyBvcGVyYXRpb24pCgogIHZhciBoYXNGaWVsZENoYW5nZWQgPSBzZWxlY3RlZENvbHVtbiAmJiAoMCwgX3V0aWxzLmhhc0ZpZWxkKShzZWxlY3RlZENvbHVtbikgJiYgc2VsZWN0ZWRDb2x1bW4uc291cmNlRmllbGQgIT09IGRyb3BwZWRJdGVtLmZpZWxkLm5hbWUgJiYgb3BlcmF0aW9uc0Zvck5ld0ZpZWxkICYmIG9wZXJhdGlvbnNGb3JOZXdGaWVsZC5pbmNsdWRlcyhzZWxlY3RlZENvbHVtbi5vcGVyYXRpb25UeXBlKTsgLy8gSWYgb25seSB0aGUgZmllbGQgaGFzIGNoYW5nZWQgdXNlIHRoZSBvbkZpZWxkQ2hhbmdlIG1ldGhvZCBvbiB0aGUgb3BlcmF0aW9uIHRvIGdldCB0aGUKICAvLyBuZXcgY29sdW1uLCBvdGhlcndpc2UgdXNlIHRoZSByZWd1bGFyIGJ1aWxkQ29sdW1uIHRvIGdldCBhIG5ldyBjb2x1bW4uCgogIHZhciBuZXdDb2x1bW4gPSBoYXNGaWVsZENoYW5nZWQgPyAoMCwgX29wZXJhdGlvbnMuY2hhbmdlRmllbGQpKHNlbGVjdGVkQ29sdW1uLCBjdXJyZW50SW5kZXhQYXR0ZXJuLCBkcm9wcGVkSXRlbS5maWVsZCkgOiAoMCwgX29wZXJhdGlvbnMuYnVpbGRDb2x1bW4pKHsKICAgIG9wOiBvcGVyYXRpb25zRm9yTmV3RmllbGQgPyBvcGVyYXRpb25zRm9yTmV3RmllbGRbMF0gOiB1bmRlZmluZWQsCiAgICBjb2x1bW5zOiBwcm9wcy5zdGF0ZS5sYXllcnNbcHJvcHMubGF5ZXJJZF0uY29sdW1ucywKICAgIGluZGV4UGF0dGVybjogY3VycmVudEluZGV4UGF0dGVybiwKICAgIGxheWVySWQ6IGxheWVySWQsCiAgICBzdWdnZXN0ZWRQcmlvcml0eTogcHJvcHMuc3VnZ2VzdGVkUHJpb3JpdHksCiAgICBmaWVsZDogZHJvcHBlZEl0ZW0uZmllbGQsCiAgICBwcmV2aW91c0NvbHVtbjogc2VsZWN0ZWRDb2x1bW4KICB9KTsKICAoMCwgX2xlbnNfdWlfdGVsZW1ldHJ5LnRyYWNrVWlFdmVudCkoJ2Ryb3Bfb250b19kaW1lbnNpb24nKTsKICB2YXIgaGFzRGF0YSA9IE9iamVjdC52YWx1ZXMocHJvcHMuc3RhdGUubGF5ZXJzKS5zb21lKGZ1bmN0aW9uIChfcmVmMikgewogICAgdmFyIGNvbHVtbnMgPSBfcmVmMi5jb2x1bW5zOwogICAgcmV0dXJuIGNvbHVtbnMubGVuZ3RoOwogIH0pOwogICgwLCBfbGVuc191aV90ZWxlbWV0cnkudHJhY2tVaUV2ZW50KShoYXNEYXRhID8gJ2Ryb3Bfbm9uX2VtcHR5JyA6ICdkcm9wX2VtcHR5Jyk7CiAgcHJvcHMuc2V0U3RhdGUoKDAsIF9zdGF0ZV9oZWxwZXJzLmNoYW5nZUNvbHVtbikoewogICAgc3RhdGU6IHByb3BzLnN0YXRlLAogICAgbGF5ZXJJZDogbGF5ZXJJZCwKICAgIGNvbHVtbklkOiBwcm9wcy5jb2x1bW5JZCwKICAgIG5ld0NvbHVtbjogbmV3Q29sdW1uLAogICAgLy8gSWYgdGhlIGZpZWxkIGhhcyBjaGFuZ2VkLCB0aGUgb25GaWVsZENoYW5nZSBtZXRob2QgbmVlZHMgdG8gdGFrZSBjYXJlIG9mIGV2ZXJ5dGhpbmcgaW5jbHVkaW5nIG1vdmluZwogICAgLy8gb3ZlciBwYXJhbXMuIElmIHdlIGNyZWF0ZSBhIG5ldyBjb2x1bW4gYWJvdmUgd2Ugd2FudCBjaGFuZ2VDb2x1bW4gdG8gbW92ZSBvdmVyIHBhcmFtcy4KICAgIGtlZXBQYXJhbXM6ICFoYXNGaWVsZENoYW5nZWQKICB9KSk7CiAgcmV0dXJuIHRydWU7Cn0KCnZhciBJbmRleFBhdHRlcm5EaW1lbnNpb25UcmlnZ2VyQ29tcG9uZW50ID0gZnVuY3Rpb24gSW5kZXhQYXR0ZXJuRGltZW5zaW9uVHJpZ2dlcihwcm9wcykgewogIHZhciBsYXllcklkID0gcHJvcHMubGF5ZXJJZDsKICB2YXIgc2VsZWN0ZWRDb2x1bW4gPSBwcm9wcy5zdGF0ZS5sYXllcnNbbGF5ZXJJZF0uY29sdW1uc1twcm9wcy5jb2x1bW5JZF0gfHwgbnVsbDsKICB2YXIgY29sdW1uSWQgPSBwcm9wcy5jb2x1bW5JZCwKICAgICAgdW5pcXVlTGFiZWwgPSBwcm9wcy51bmlxdWVMYWJlbDsKCiAgaWYgKCFzZWxlY3RlZENvbHVtbikgewogICAgcmV0dXJuIG51bGw7CiAgfQoKICByZXR1cm4gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUxpbmssIHsKICAgIGlkOiBjb2x1bW5JZCwKICAgIGNsYXNzTmFtZTogImxuc0NvbmZpZ1BhbmVsX190cmlnZ2VyTGluayIsCiAgICBvbkNsaWNrOiBmdW5jdGlvbiBvbkNsaWNrKCkgewogICAgICBwcm9wcy50b2dnbGVQb3BvdmVyKCk7CiAgICB9LAogICAgImRhdGEtdGVzdC1zdWJqIjogImxucy1kaW1lbnNpb25UcmlnZ2VyIiwKICAgICJhcmlhLWxhYmVsIjogX2kxOG4uaTE4bi50cmFuc2xhdGUoJ3hwYWNrLmxlbnMuY29uZmlndXJlLmVkaXRDb25maWcnLCB7CiAgICAgIGRlZmF1bHRNZXNzYWdlOiAnRWRpdCBjb25maWd1cmF0aW9uJwogICAgfSksCiAgICB0aXRsZTogX2kxOG4uaTE4bi50cmFuc2xhdGUoJ3hwYWNrLmxlbnMuY29uZmlndXJlLmVkaXRDb25maWcnLCB7CiAgICAgIGRlZmF1bHRNZXNzYWdlOiAnRWRpdCBjb25maWd1cmF0aW9uJwogICAgfSkKICB9LCB1bmlxdWVMYWJlbCk7Cn07CgpleHBvcnRzLkluZGV4UGF0dGVybkRpbWVuc2lvblRyaWdnZXJDb21wb25lbnQgPSBJbmRleFBhdHRlcm5EaW1lbnNpb25UcmlnZ2VyQ29tcG9uZW50OwoKdmFyIEluZGV4UGF0dGVybkRpbWVuc2lvbkVkaXRvckNvbXBvbmVudCA9IGZ1bmN0aW9uIEluZGV4UGF0dGVybkRpbWVuc2lvblBhbmVsKHByb3BzKSB7CiAgdmFyIF9wcm9wcyRzdGF0ZSRsYXllcnMkbDI7CgogIHZhciBsYXllcklkID0gcHJvcHMubGF5ZXJJZDsKICB2YXIgY3VycmVudEluZGV4UGF0dGVybiA9IHByb3BzLnN0YXRlLmluZGV4UGF0dGVybnNbKF9wcm9wcyRzdGF0ZSRsYXllcnMkbDIgPSBwcm9wcy5zdGF0ZS5sYXllcnNbbGF5ZXJJZF0pID09PSBudWxsIHx8IF9wcm9wcyRzdGF0ZSRsYXllcnMkbDIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9wcm9wcyRzdGF0ZSRsYXllcnMkbDIuaW5kZXhQYXR0ZXJuSWRdOwogIHZhciBvcGVyYXRpb25GaWVsZFN1cHBvcnRNYXRyaXggPSBnZXRPcGVyYXRpb25GaWVsZFN1cHBvcnRNYXRyaXgocHJvcHMpOwogIHZhciBzZWxlY3RlZENvbHVtbiA9IHByb3BzLnN0YXRlLmxheWVyc1tsYXllcklkXS5jb2x1bW5zW3Byb3BzLmNvbHVtbklkXSB8fCBudWxsOwogIHJldHVybiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9wb3BvdmVyX2VkaXRvci5Qb3BvdmVyRWRpdG9yLCBfZXh0ZW5kcyh7fSwgcHJvcHMsIHsKICAgIGN1cnJlbnRJbmRleFBhdHRlcm46IGN1cnJlbnRJbmRleFBhdHRlcm4sCiAgICBzZWxlY3RlZENvbHVtbjogc2VsZWN0ZWRDb2x1bW4sCiAgICBvcGVyYXRpb25GaWVsZFN1cHBvcnRNYXRyaXg6IG9wZXJhdGlvbkZpZWxkU3VwcG9ydE1hdHJpeAogIH0pKTsKfTsKCmV4cG9ydHMuSW5kZXhQYXR0ZXJuRGltZW5zaW9uRWRpdG9yQ29tcG9uZW50ID0gSW5kZXhQYXR0ZXJuRGltZW5zaW9uRWRpdG9yQ29tcG9uZW50Owp2YXIgSW5kZXhQYXR0ZXJuRGltZW5zaW9uVHJpZ2dlciA9ICgwLCBfcmVhY3QubWVtbykoSW5kZXhQYXR0ZXJuRGltZW5zaW9uVHJpZ2dlckNvbXBvbmVudCk7CmV4cG9ydHMuSW5kZXhQYXR0ZXJuRGltZW5zaW9uVHJpZ2dlciA9IEluZGV4UGF0dGVybkRpbWVuc2lvblRyaWdnZXI7CnZhciBJbmRleFBhdHRlcm5EaW1lbnNpb25FZGl0b3IgPSAoMCwgX3JlYWN0Lm1lbW8pKEluZGV4UGF0dGVybkRpbWVuc2lvbkVkaXRvckNvbXBvbmVudCk7CmV4cG9ydHMuSW5kZXhQYXR0ZXJuRGltZW5zaW9uRWRpdG9yID0gSW5kZXhQYXR0ZXJuRGltZW5zaW9uRWRpdG9yOw=="},null]}