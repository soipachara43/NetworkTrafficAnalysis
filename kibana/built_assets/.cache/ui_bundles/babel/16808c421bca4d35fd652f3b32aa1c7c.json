{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/siem/public/components/page/network/network_dns_table/columns.js","dependencies":[{"path":"x-pack/legacy/plugins/siem/public/components/page/network/network_dns_table/columns.js","mtime":1589249553096},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmdldE5ldHdvcmtEbnNDb2x1bW5zID0gdm9pZCAwOwoKdmFyIF9udW1lcmFsID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCJAZWxhc3RpYy9udW1lcmFsIikpOwoKdmFyIF9yZWFjdCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgicmVhY3QiKSk7Cgp2YXIgX3R5cGVzID0gcmVxdWlyZSgiLi4vLi4vLi4vLi4vZ3JhcGhxbC90eXBlcyIpOwoKdmFyIF9kcmFnZ2FibGVfd3JhcHBlciA9IHJlcXVpcmUoIi4uLy4uLy4uL2RyYWdfYW5kX2Ryb3AvZHJhZ2dhYmxlX3dyYXBwZXIiKTsKCnZhciBfaGVscGVycyA9IHJlcXVpcmUoIi4uLy4uLy4uL2RyYWdfYW5kX2Ryb3AvaGVscGVycyIpOwoKdmFyIF9lbXB0eV92YWx1ZSA9IHJlcXVpcmUoIi4uLy4uLy4uL2VtcHR5X3ZhbHVlIik7Cgp2YXIgX2RhdGFfcHJvdmlkZXIgPSByZXF1aXJlKCIuLi8uLi8uLi90aW1lbGluZS9kYXRhX3Byb3ZpZGVycy9kYXRhX3Byb3ZpZGVyIik7Cgp2YXIgX2Zvcm1hdHRlZF9ieXRlcyA9IHJlcXVpcmUoIi4uLy4uLy4uL2Zvcm1hdHRlZF9ieXRlcyIpOwoKdmFyIF9wcm92aWRlciA9IHJlcXVpcmUoIi4uLy4uLy4uL3RpbWVsaW5lL2RhdGFfcHJvdmlkZXJzL3Byb3ZpZGVyIik7Cgp2YXIgaTE4biA9IF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKHJlcXVpcmUoIi4vdHJhbnNsYXRpb25zIikpOwoKZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQob2JqKSB7CiAgaWYgKG9iaiAmJiBvYmouX19lc01vZHVsZSkgewogICAgcmV0dXJuIG9iajsKICB9IGVsc2UgewogICAgdmFyIG5ld09iaiA9IHt9OwoKICAgIGlmIChvYmogIT0gbnVsbCkgewogICAgICBmb3IgKHZhciBrZXkgaW4gb2JqKSB7CiAgICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGtleSkpIHsKICAgICAgICAgIHZhciBkZXNjID0gT2JqZWN0LmRlZmluZVByb3BlcnR5ICYmIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IgPyBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iaiwga2V5KSA6IHt9OwoKICAgICAgICAgIGlmIChkZXNjLmdldCB8fCBkZXNjLnNldCkgewogICAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobmV3T2JqLCBrZXksIGRlc2MpOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgbmV3T2JqW2tleV0gPSBvYmpba2V5XTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgIH0KCiAgICBuZXdPYmouZGVmYXVsdCA9IG9iajsKICAgIHJldHVybiBuZXdPYmo7CiAgfQp9CgpmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgewogIHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7CiAgICBkZWZhdWx0OiBvYmoKICB9Owp9Ci8qCiAqIENvcHlyaWdodCBFbGFzdGljc2VhcmNoIEIuVi4gYW5kL29yIGxpY2Vuc2VkIHRvIEVsYXN0aWNzZWFyY2ggQi5WLiB1bmRlciBvbmUKICogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuIExpY2Vuc2VkIHVuZGVyIHRoZSBFbGFzdGljIExpY2Vuc2U7CiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgRWxhc3RpYyBMaWNlbnNlLgogKi8KCgp2YXIgZ2V0TmV0d29ya0Ruc0NvbHVtbnMgPSBmdW5jdGlvbiBnZXROZXR3b3JrRG5zQ29sdW1ucygpIHsKICByZXR1cm4gW3sKICAgIGZpZWxkOiAibm9kZS4iLmNvbmNhdChfdHlwZXMuTmV0d29ya0Ruc0ZpZWxkcy5kbnNOYW1lKSwKICAgIG5hbWU6IGkxOG4uUkVHSVNURVJFRF9ET01BSU4sCiAgICB0cnVuY2F0ZVRleHQ6IGZhbHNlLAogICAgaGlkZUZvck1vYmlsZTogZmFsc2UsCiAgICBzb3J0YWJsZTogdHJ1ZSwKICAgIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKGRuc05hbWUpIHsKICAgICAgaWYgKGRuc05hbWUgIT0gbnVsbCkgewogICAgICAgIHZhciBpZCA9ICgwLCBfaGVscGVycy5lc2NhcGVEYXRhUHJvdmlkZXJJZCkoIm5ldHdvcmtEbnMtdGFibGUtLW5hbWUtIi5jb25jYXQoZG5zTmFtZSkpOwogICAgICAgIHJldHVybiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9kcmFnZ2FibGVfd3JhcHBlci5EcmFnZ2FibGVXcmFwcGVyLCB7CiAgICAgICAgICBrZXk6IGlkLAogICAgICAgICAgZGF0YVByb3ZpZGVyOiB7CiAgICAgICAgICAgIGFuZDogW10sCiAgICAgICAgICAgIGVuYWJsZWQ6IHRydWUsCiAgICAgICAgICAgIGlkOiBpZCwKICAgICAgICAgICAgbmFtZTogZG5zTmFtZSwKICAgICAgICAgICAgZXhjbHVkZWQ6IGZhbHNlLAogICAgICAgICAgICBrcWxRdWVyeTogJycsCiAgICAgICAgICAgIHF1ZXJ5TWF0Y2g6IHsKICAgICAgICAgICAgICBmaWVsZDogJ2Rucy5xdWVzdGlvbi5yZWdpc3RlcmVkX2RvbWFpbicsCiAgICAgICAgICAgICAgdmFsdWU6IGRuc05hbWUsCiAgICAgICAgICAgICAgb3BlcmF0b3I6IF9kYXRhX3Byb3ZpZGVyLklTX09QRVJBVE9SCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcihkYXRhUHJvdmlkZXIsIF8sIHNuYXBzaG90KSB7CiAgICAgICAgICAgIHJldHVybiBzbmFwc2hvdC5pc0RyYWdnaW5nID8gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZHJhZ2dhYmxlX3dyYXBwZXIuRHJhZ0VmZmVjdHMsIG51bGwsIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3Byb3ZpZGVyLlByb3ZpZGVyLCB7CiAgICAgICAgICAgICAgZGF0YVByb3ZpZGVyOiBkYXRhUHJvdmlkZXIKICAgICAgICAgICAgfSkpIDogKDAsIF9lbXB0eV92YWx1ZS5kZWZhdWx0VG9FbXB0eVRhZykoZG5zTmFtZSk7CiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuICgwLCBfZW1wdHlfdmFsdWUuZ2V0RW1wdHlUYWdWYWx1ZSkoKTsKICAgICAgfQogICAgfQogIH0sIHsKICAgIGFsaWduOiAncmlnaHQnLAogICAgZmllbGQ6ICJub2RlLiIuY29uY2F0KF90eXBlcy5OZXR3b3JrRG5zRmllbGRzLnF1ZXJ5Q291bnQpLAogICAgbmFtZTogaTE4bi5UT1RBTF9RVUVSSUVTLAogICAgc29ydGFibGU6IHRydWUsCiAgICB0cnVuY2F0ZVRleHQ6IGZhbHNlLAogICAgaGlkZUZvck1vYmlsZTogZmFsc2UsCiAgICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcihxdWVyeUNvdW50KSB7CiAgICAgIGlmIChxdWVyeUNvdW50ICE9IG51bGwpIHsKICAgICAgICByZXR1cm4gKDAsIF9udW1lcmFsLmRlZmF1bHQpKHF1ZXJ5Q291bnQpLmZvcm1hdCgnMCcpOwogICAgICB9IGVsc2UgewogICAgICAgIHJldHVybiAoMCwgX2VtcHR5X3ZhbHVlLmdldEVtcHR5VGFnVmFsdWUpKCk7CiAgICAgIH0KICAgIH0KICB9LCB7CiAgICBhbGlnbjogJ3JpZ2h0JywKICAgIGZpZWxkOiAibm9kZS4iLmNvbmNhdChfdHlwZXMuTmV0d29ya0Ruc0ZpZWxkcy51bmlxdWVEb21haW5zKSwKICAgIG5hbWU6IGkxOG4uVU5JUVVFX0RPTUFJTlMsCiAgICBzb3J0YWJsZTogdHJ1ZSwKICAgIHRydW5jYXRlVGV4dDogZmFsc2UsCiAgICBoaWRlRm9yTW9iaWxlOiBmYWxzZSwKICAgIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKHVuaXF1ZURvbWFpbnMpIHsKICAgICAgaWYgKHVuaXF1ZURvbWFpbnMgIT0gbnVsbCkgewogICAgICAgIHJldHVybiAoMCwgX251bWVyYWwuZGVmYXVsdCkodW5pcXVlRG9tYWlucykuZm9ybWF0KCcwJyk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuICgwLCBfZW1wdHlfdmFsdWUuZ2V0RW1wdHlUYWdWYWx1ZSkoKTsKICAgICAgfQogICAgfQogIH0sIHsKICAgIGFsaWduOiAncmlnaHQnLAogICAgZmllbGQ6ICJub2RlLiIuY29uY2F0KF90eXBlcy5OZXR3b3JrRG5zRmllbGRzLmRuc0J5dGVzSW4pLAogICAgbmFtZTogaTE4bi5ETlNfQllURVNfSU4sCiAgICBzb3J0YWJsZTogdHJ1ZSwKICAgIHRydW5jYXRlVGV4dDogZmFsc2UsCiAgICBoaWRlRm9yTW9iaWxlOiBmYWxzZSwKICAgIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKGRuc0J5dGVzSW4pIHsKICAgICAgaWYgKGRuc0J5dGVzSW4gIT0gbnVsbCkgewogICAgICAgIHJldHVybiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9mb3JtYXR0ZWRfYnl0ZXMuUHJlZmVyZW5jZUZvcm1hdHRlZEJ5dGVzLCB7CiAgICAgICAgICB2YWx1ZTogZG5zQnl0ZXNJbgogICAgICAgIH0pOwogICAgICB9IGVsc2UgewogICAgICAgIHJldHVybiAoMCwgX2VtcHR5X3ZhbHVlLmdldEVtcHR5VGFnVmFsdWUpKCk7CiAgICAgIH0KICAgIH0KICB9LCB7CiAgICBhbGlnbjogJ3JpZ2h0JywKICAgIGZpZWxkOiAibm9kZS4iLmNvbmNhdChfdHlwZXMuTmV0d29ya0Ruc0ZpZWxkcy5kbnNCeXRlc091dCksCiAgICBuYW1lOiBpMThuLkROU19CWVRFU19PVVQsCiAgICBzb3J0YWJsZTogdHJ1ZSwKICAgIHRydW5jYXRlVGV4dDogZmFsc2UsCiAgICBoaWRlRm9yTW9iaWxlOiBmYWxzZSwKICAgIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKGRuc0J5dGVzT3V0KSB7CiAgICAgIGlmIChkbnNCeXRlc091dCAhPSBudWxsKSB7CiAgICAgICAgcmV0dXJuIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2Zvcm1hdHRlZF9ieXRlcy5QcmVmZXJlbmNlRm9ybWF0dGVkQnl0ZXMsIHsKICAgICAgICAgIHZhbHVlOiBkbnNCeXRlc091dAogICAgICAgIH0pOwogICAgICB9IGVsc2UgewogICAgICAgIHJldHVybiAoMCwgX2VtcHR5X3ZhbHVlLmdldEVtcHR5VGFnVmFsdWUpKCk7CiAgICAgIH0KICAgIH0KICB9XTsKfTsKCmV4cG9ydHMuZ2V0TmV0d29ya0Ruc0NvbHVtbnMgPSBnZXROZXR3b3JrRG5zQ29sdW1uczs="},null]}