{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/siem/public/pages/overview/overview.js","dependencies":[{"path":"x-pack/legacy/plugins/siem/public/pages/overview/overview.js","mtime":1589249553336},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLlN0YXRlZnVsT3ZlcnZpZXcgPSB2b2lkIDA7Cgp2YXIgX2V1aSA9IHJlcXVpcmUoIkBlbGFzdGljL2V1aSIpOwoKdmFyIF9yZWFjdCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgicmVhY3QiKSk7Cgp2YXIgX3JlYWN0UmVkdXggPSByZXF1aXJlKCJyZWFjdC1yZWR1eCIpOwoKdmFyIF9yZWFjdFN0aWNreSA9IHJlcXVpcmUoInJlYWN0LXN0aWNreSIpOwoKdmFyIF9zdHlsZWRDb21wb25lbnRzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCJzdHlsZWQtY29tcG9uZW50cyIpKTsKCnZhciBfYWxlcnRzX2J5X2NhdGVnb3J5ID0gcmVxdWlyZSgiLi9hbGVydHNfYnlfY2F0ZWdvcnkiKTsKCnZhciBfZmlsdGVyc19nbG9iYWwgPSByZXF1aXJlKCIuLi8uLi9jb21wb25lbnRzL2ZpbHRlcnNfZ2xvYmFsIik7Cgp2YXIgX3NlYXJjaF9iYXIgPSByZXF1aXJlKCIuLi8uLi9jb21wb25lbnRzL3NlYXJjaF9iYXIiKTsKCnZhciBfd3JhcHBlcl9wYWdlID0gcmVxdWlyZSgiLi4vLi4vY29tcG9uZW50cy93cmFwcGVyX3BhZ2UiKTsKCnZhciBfZ2xvYmFsX3RpbWUgPSByZXF1aXJlKCIuLi8uLi9jb250YWluZXJzL2dsb2JhbF90aW1lIik7Cgp2YXIgX3NvdXJjZSA9IHJlcXVpcmUoIi4uLy4uL2NvbnRhaW5lcnMvc291cmNlIik7Cgp2YXIgX2V2ZW50c19ieV9kYXRhc2V0ID0gcmVxdWlyZSgiLi9ldmVudHNfYnlfZGF0YXNldCIpOwoKdmFyIF9ldmVudF9jb3VudHMgPSByZXF1aXJlKCIuL2V2ZW50X2NvdW50cyIpOwoKdmFyIF9vdmVydmlld19lbXB0eSA9IHJlcXVpcmUoIi4vb3ZlcnZpZXdfZW1wdHkiKTsKCnZhciBfc2lkZWJhciA9IHJlcXVpcmUoIi4vc2lkZWJhciIpOwoKdmFyIF9zaWduYWxzX2J5X2NhdGVnb3J5ID0gcmVxdWlyZSgiLi9zaWduYWxzX2J5X2NhdGVnb3J5Iik7Cgp2YXIgX3N0b3JlID0gcmVxdWlyZSgiLi4vLi4vc3RvcmUiKTsKCnZhciBfYWN0aW9ucyA9IHJlcXVpcmUoIi4uLy4uL3N0b3JlL2lucHV0cy9hY3Rpb25zIik7Cgp2YXIgX3NweV9yb3V0ZXMgPSByZXF1aXJlKCIuLi8uLi91dGlscy9yb3V0ZS9zcHlfcm91dGVzIik7CgpmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgewogIHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7CiAgICBkZWZhdWx0OiBvYmoKICB9Owp9Ci8qCiAqIENvcHlyaWdodCBFbGFzdGljc2VhcmNoIEIuVi4gYW5kL29yIGxpY2Vuc2VkIHRvIEVsYXN0aWNzZWFyY2ggQi5WLiB1bmRlciBvbmUKICogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuIExpY2Vuc2VkIHVuZGVyIHRoZSBFbGFzdGljIExpY2Vuc2U7CiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgRWxhc3RpYyBMaWNlbnNlLgogKi8KCgp2YXIgREVGQVVMVF9RVUVSWSA9IHsKICBxdWVyeTogJycsCiAgbGFuZ3VhZ2U6ICdrdWVyeScKfTsKdmFyIE5PX0ZJTFRFUlMgPSBbXTsKdmFyIFNpZGViYXJGbGV4SXRlbSA9ICgwLCBfc3R5bGVkQ29tcG9uZW50cy5kZWZhdWx0KShfZXVpLkV1aUZsZXhJdGVtKS53aXRoQ29uZmlnKHsKICBkaXNwbGF5TmFtZTogIlNpZGViYXJGbGV4SXRlbSIsCiAgY29tcG9uZW50SWQ6ICJtOHF5dnMtMCIKfSkoWyJtYXJnaW4tcmlnaHQ6MjRweDsiXSk7Cgp2YXIgT3ZlcnZpZXdDb21wb25lbnQgPSBmdW5jdGlvbiBPdmVydmlld0NvbXBvbmVudChfcmVmKSB7CiAgdmFyIF9yZWYkZmlsdGVycyA9IF9yZWYuZmlsdGVycywKICAgICAgZmlsdGVycyA9IF9yZWYkZmlsdGVycyA9PT0gdm9pZCAwID8gTk9fRklMVEVSUyA6IF9yZWYkZmlsdGVycywKICAgICAgX3JlZiRxdWVyeSA9IF9yZWYucXVlcnksCiAgICAgIHF1ZXJ5ID0gX3JlZiRxdWVyeSA9PT0gdm9pZCAwID8gREVGQVVMVF9RVUVSWSA6IF9yZWYkcXVlcnksCiAgICAgIHNldEFic29sdXRlUmFuZ2VEYXRlUGlja2VyID0gX3JlZi5zZXRBYnNvbHV0ZVJhbmdlRGF0ZVBpY2tlcjsKICByZXR1cm4gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfcmVhY3QuZGVmYXVsdC5GcmFnbWVudCwgbnVsbCwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfc291cmNlLldpdGhTb3VyY2UsIHsKICAgIHNvdXJjZUlkOiAiZGVmYXVsdCIKICB9LCBmdW5jdGlvbiAoX3JlZjIpIHsKICAgIHZhciBpbmRpY2VzRXhpc3QgPSBfcmVmMi5pbmRpY2VzRXhpc3QsCiAgICAgICAgaW5kZXhQYXR0ZXJuID0gX3JlZjIuaW5kZXhQYXR0ZXJuOwogICAgcmV0dXJuICgwLCBfc291cmNlLmluZGljZXNFeGlzdE9yRGF0YVRlbXBvcmFyaWx5VW5hdmFpbGFibGUpKGluZGljZXNFeGlzdCkgPyBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9yZWFjdFN0aWNreS5TdGlja3lDb250YWluZXIsIG51bGwsIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2ZpbHRlcnNfZ2xvYmFsLkZpbHRlcnNHbG9iYWwsIG51bGwsIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3NlYXJjaF9iYXIuU2llbVNlYXJjaEJhciwgewogICAgICBpZDogImdsb2JhbCIsCiAgICAgIGluZGV4UGF0dGVybjogaW5kZXhQYXR0ZXJuCiAgICB9KSksIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3dyYXBwZXJfcGFnZS5XcmFwcGVyUGFnZSwgbnVsbCwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUZsZXhHcm91cCwgewogICAgICBndXR0ZXJTaXplOiAibm9uZSIsCiAgICAgIGp1c3RpZnlDb250ZW50OiAic3BhY2VCZXR3ZWVuIgogICAgfSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChTaWRlYmFyRmxleEl0ZW0sIHsKICAgICAgZ3JvdzogZmFsc2UKICAgIH0sIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3NpZGViYXIuU3RhdGVmdWxTaWRlYmFyLCBudWxsKSksIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlGbGV4SXRlbSwgewogICAgICBncm93OiB0cnVlCiAgICB9LCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9nbG9iYWxfdGltZS5HbG9iYWxUaW1lLCBudWxsLCBmdW5jdGlvbiAoX3JlZjMpIHsKICAgICAgdmFyIGZyb20gPSBfcmVmMy5mcm9tLAogICAgICAgICAgZGVsZXRlUXVlcnkgPSBfcmVmMy5kZWxldGVRdWVyeSwKICAgICAgICAgIHNldFF1ZXJ5ID0gX3JlZjMuc2V0UXVlcnksCiAgICAgICAgICB0byA9IF9yZWYzLnRvOwogICAgICByZXR1cm4gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUZsZXhHcm91cCwgewogICAgICAgIGRpcmVjdGlvbjogImNvbHVtbiIsCiAgICAgICAgZ3V0dGVyU2l6ZTogIm5vbmUiCiAgICAgIH0sIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlGbGV4SXRlbSwgewogICAgICAgIGdyb3c6IGZhbHNlCiAgICAgIH0sIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3NpZ25hbHNfYnlfY2F0ZWdvcnkuU2lnbmFsc0J5Q2F0ZWdvcnksIHsKICAgICAgICBmaWx0ZXJzOiBmaWx0ZXJzLAogICAgICAgIGZyb206IGZyb20sCiAgICAgICAgaW5kZXhQYXR0ZXJuOiBpbmRleFBhdHRlcm4sCiAgICAgICAgcXVlcnk6IHF1ZXJ5LAogICAgICAgIHNldEFic29sdXRlUmFuZ2VEYXRlUGlja2VyOiBzZXRBYnNvbHV0ZVJhbmdlRGF0ZVBpY2tlciwKICAgICAgICBzZXRRdWVyeTogc2V0UXVlcnksCiAgICAgICAgdG86IHRvCiAgICAgIH0pLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpU3BhY2VyLCB7CiAgICAgICAgc2l6ZTogImwiCiAgICAgIH0pKSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUZsZXhJdGVtLCB7CiAgICAgICAgZ3JvdzogZmFsc2UKICAgICAgfSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfYWxlcnRzX2J5X2NhdGVnb3J5LkFsZXJ0c0J5Q2F0ZWdvcnksIHsKICAgICAgICBkZWxldGVRdWVyeTogZGVsZXRlUXVlcnksCiAgICAgICAgZmlsdGVyczogZmlsdGVycywKICAgICAgICBmcm9tOiBmcm9tLAogICAgICAgIGluZGV4UGF0dGVybjogaW5kZXhQYXR0ZXJuLAogICAgICAgIHF1ZXJ5OiBxdWVyeSwKICAgICAgICBzZXRRdWVyeTogc2V0UXVlcnksCiAgICAgICAgdG86IHRvCiAgICAgIH0pKSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUZsZXhJdGVtLCB7CiAgICAgICAgZ3JvdzogZmFsc2UKICAgICAgfSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXZlbnRzX2J5X2RhdGFzZXQuRXZlbnRzQnlEYXRhc2V0LCB7CiAgICAgICAgZGVsZXRlUXVlcnk6IGRlbGV0ZVF1ZXJ5LAogICAgICAgIGZpbHRlcnM6IGZpbHRlcnMsCiAgICAgICAgZnJvbTogZnJvbSwKICAgICAgICBpbmRleFBhdHRlcm46IGluZGV4UGF0dGVybiwKICAgICAgICBxdWVyeTogcXVlcnksCiAgICAgICAgc2V0UXVlcnk6IHNldFF1ZXJ5LAogICAgICAgIHRvOiB0bwogICAgICB9KSksIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlGbGV4SXRlbSwgewogICAgICAgIGdyb3c6IGZhbHNlCiAgICAgIH0sIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V2ZW50X2NvdW50cy5FdmVudENvdW50cywgewogICAgICAgIGZpbHRlcnM6IGZpbHRlcnMsCiAgICAgICAgZnJvbTogZnJvbSwKICAgICAgICBpbmRleFBhdHRlcm46IGluZGV4UGF0dGVybiwKICAgICAgICBxdWVyeTogcXVlcnksCiAgICAgICAgc2V0UXVlcnk6IHNldFF1ZXJ5LAogICAgICAgIHRvOiB0bwogICAgICB9KSkpOwogICAgfSkpKSkpIDogX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfb3ZlcnZpZXdfZW1wdHkuT3ZlcnZpZXdFbXB0eSwgbnVsbCk7CiAgfSksIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3NweV9yb3V0ZXMuU3B5Um91dGUsIG51bGwpKTsKfTsKCnZhciBtYWtlTWFwU3RhdGVUb1Byb3BzID0gZnVuY3Rpb24gbWFrZU1hcFN0YXRlVG9Qcm9wcygpIHsKICB2YXIgZ2V0R2xvYmFsRmlsdGVyc1F1ZXJ5U2VsZWN0b3IgPSBfc3RvcmUuaW5wdXRzU2VsZWN0b3JzLmdsb2JhbEZpbHRlcnNRdWVyeVNlbGVjdG9yKCk7CgogIHZhciBnZXRHbG9iYWxRdWVyeVNlbGVjdG9yID0gX3N0b3JlLmlucHV0c1NlbGVjdG9ycy5nbG9iYWxRdWVyeVNlbGVjdG9yKCk7CgogIHZhciBtYXBTdGF0ZVRvUHJvcHMgPSBmdW5jdGlvbiBtYXBTdGF0ZVRvUHJvcHMoc3RhdGUpIHsKICAgIHJldHVybiB7CiAgICAgIHF1ZXJ5OiBnZXRHbG9iYWxRdWVyeVNlbGVjdG9yKHN0YXRlKSwKICAgICAgZmlsdGVyczogZ2V0R2xvYmFsRmlsdGVyc1F1ZXJ5U2VsZWN0b3Ioc3RhdGUpCiAgICB9OwogIH07CgogIHJldHVybiBtYXBTdGF0ZVRvUHJvcHM7Cn07Cgp2YXIgbWFwRGlzcGF0Y2hUb1Byb3BzID0gewogIHNldEFic29sdXRlUmFuZ2VEYXRlUGlja2VyOiBfYWN0aW9ucy5zZXRBYnNvbHV0ZVJhbmdlRGF0ZVBpY2tlcgp9Owp2YXIgY29ubmVjdG9yID0gKDAsIF9yZWFjdFJlZHV4LmNvbm5lY3QpKG1ha2VNYXBTdGF0ZVRvUHJvcHMsIG1hcERpc3BhdGNoVG9Qcm9wcyk7CnZhciBTdGF0ZWZ1bE92ZXJ2aWV3ID0gY29ubmVjdG9yKF9yZWFjdC5kZWZhdWx0Lm1lbW8oT3ZlcnZpZXdDb21wb25lbnQpKTsKZXhwb3J0cy5TdGF0ZWZ1bE92ZXJ2aWV3ID0gU3RhdGVmdWxPdmVydmlldzs="},null]}