{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!src/plugins/data/public/index_patterns/index_patterns/flatten_hit.js","dependencies":[{"path":"src/plugins/data/public/index_patterns/index_patterns/flatten_hit.js","mtime":1589249550603},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmZsYXR0ZW5IaXRXcmFwcGVyID0gZmxhdHRlbkhpdFdyYXBwZXI7CmV4cG9ydHMuY3JlYXRlRmxhdHRlbkhpdFdyYXBwZXIgPSBjcmVhdGVGbGF0dGVuSGl0V3JhcHBlcjsKCnZhciBfbG9kYXNoID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCJsb2Rhc2giKSk7CgpmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgewogIHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7CiAgICBkZWZhdWx0OiBvYmoKICB9Owp9CgpmdW5jdGlvbiBvd25LZXlzKG9iamVjdCwgZW51bWVyYWJsZU9ubHkpIHsKICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9iamVjdCk7CgogIGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7CiAgICB2YXIgc3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMob2JqZWN0KTsKICAgIGlmIChlbnVtZXJhYmxlT25seSkgc3ltYm9scyA9IHN5bWJvbHMuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHsKICAgICAgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7CiAgICB9KTsKICAgIGtleXMucHVzaC5hcHBseShrZXlzLCBzeW1ib2xzKTsKICB9CgogIHJldHVybiBrZXlzOwp9CgpmdW5jdGlvbiBfb2JqZWN0U3ByZWFkKHRhcmdldCkgewogIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7CiAgICB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldICE9IG51bGwgPyBhcmd1bWVudHNbaV0gOiB7fTsKCiAgICBpZiAoaSAlIDIpIHsKICAgICAgb3duS2V5cyhzb3VyY2UsIHRydWUpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgewogICAgICAgIF9kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgc291cmNlW2tleV0pOwogICAgICB9KTsKICAgIH0gZWxzZSBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMpIHsKICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKTsKICAgIH0gZWxzZSB7CiAgICAgIG93bktleXMoc291cmNlKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsKICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBrZXkpKTsKICAgICAgfSk7CiAgICB9CiAgfQoKICByZXR1cm4gdGFyZ2V0Owp9CgpmdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7CiAgaWYgKGtleSBpbiBvYmopIHsKICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgewogICAgICB2YWx1ZTogdmFsdWUsCiAgICAgIGVudW1lcmFibGU6IHRydWUsCiAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSwKICAgICAgd3JpdGFibGU6IHRydWUKICAgIH0pOwogIH0gZWxzZSB7CiAgICBvYmpba2V5XSA9IHZhbHVlOwogIH0KCiAgcmV0dXJuIG9iajsKfSAvLyBUYWtlcyBhIGhpdCwgbWVyZ2VzIGl0IHdpdGggYW55IHN0b3JlZC9zY3JpcHRlZCBmaWVsZHMsIGFuZCB3aXRoIHRoZSBtZXRhRmllbGRzCi8vIHJldHVybnMgYSBmbGF0dGVuZWQgdmVyc2lvbgoKCmZ1bmN0aW9uIGZsYXR0ZW5IaXQoaW5kZXhQYXR0ZXJuLCBoaXQsIGRlZXApIHsKICB2YXIgZmxhdCA9IHt9OyAvLyByZWN1cnNpdmVseSBtZXJnZSBfc291cmNlCgogIHZhciBmaWVsZHMgPSBpbmRleFBhdHRlcm4uZmllbGRzLmdldEJ5TmFtZTsKCiAgKGZ1bmN0aW9uIGZsYXR0ZW4ob2JqKSB7CiAgICB2YXIga2V5UHJlZml4ID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiAnJzsKICAgIGtleVByZWZpeCA9IGtleVByZWZpeCA/IGtleVByZWZpeCArICcuJyA6ICcnOwoKICAgIF9sb2Rhc2guZGVmYXVsdC5mb3JPd24ob2JqLCBmdW5jdGlvbiAodmFsLCBrZXkpIHsKICAgICAga2V5ID0ga2V5UHJlZml4ICsga2V5OwoKICAgICAgaWYgKGRlZXApIHsKICAgICAgICB2YXIgX2ZpZWxkID0gZmllbGRzKGtleSk7CgogICAgICAgIHZhciBpc05lc3RlZEZpZWxkID0gX2ZpZWxkICYmIF9maWVsZC50eXBlID09PSAnbmVzdGVkJzsKCiAgICAgICAgdmFyIGlzQXJyYXlPZk9iamVjdHMgPSBBcnJheS5pc0FycmF5KHZhbCkgJiYgX2xvZGFzaC5kZWZhdWx0LmlzUGxhaW5PYmplY3QoX2xvZGFzaC5kZWZhdWx0LmZpcnN0KHZhbCkpOwoKICAgICAgICBpZiAoaXNBcnJheU9mT2JqZWN0cyAmJiAhaXNOZXN0ZWRGaWVsZCkgewogICAgICAgICAgX2xvZGFzaC5kZWZhdWx0LmVhY2godmFsLCBmdW5jdGlvbiAodikgewogICAgICAgICAgICByZXR1cm4gZmxhdHRlbih2LCBrZXkpOwogICAgICAgICAgfSk7CgogICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KICAgICAgfSBlbHNlIGlmIChmbGF0W2tleV0gIT09IHZvaWQgMCkgewogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgdmFyIGZpZWxkID0gZmllbGRzKGtleSk7CiAgICAgIHZhciBoYXNWYWxpZE1hcHBpbmcgPSBmaWVsZCAmJiBmaWVsZC50eXBlICE9PSAnY29uZmxpY3QnOwogICAgICB2YXIgaXNWYWx1ZSA9ICFfbG9kYXNoLmRlZmF1bHQuaXNQbGFpbk9iamVjdCh2YWwpOwoKICAgICAgaWYgKGhhc1ZhbGlkTWFwcGluZyB8fCBpc1ZhbHVlKSB7CiAgICAgICAgaWYgKCFmbGF0W2tleV0pIHsKICAgICAgICAgIGZsYXRba2V5XSA9IHZhbDsKICAgICAgICB9IGVsc2UgaWYgKEFycmF5LmlzQXJyYXkoZmxhdFtrZXldKSkgewogICAgICAgICAgZmxhdFtrZXldLnB1c2godmFsKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgZmxhdFtrZXldID0gW2ZsYXRba2V5XSwgdmFsXTsKICAgICAgICB9CgogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgZmxhdHRlbih2YWwsIGtleSk7CiAgICB9KTsKICB9KShoaXQuX3NvdXJjZSk7CgogIHJldHVybiBmbGF0Owp9CgpmdW5jdGlvbiBkZWNvcmF0ZUZsYXR0ZW5lZFdyYXBwZXIoaGl0LCBtZXRhRmllbGRzKSB7CiAgcmV0dXJuIGZ1bmN0aW9uIChmbGF0dGVuZWQpIHsKICAgIC8vIGFzc2lnbiB0aGUgbWV0YSBmaWVsZHMKICAgIF9sb2Rhc2guZGVmYXVsdC5lYWNoKG1ldGFGaWVsZHMsIGZ1bmN0aW9uIChtZXRhKSB7CiAgICAgIGlmIChtZXRhID09PSAnX3NvdXJjZScpIHJldHVybjsKICAgICAgZmxhdHRlbmVkW21ldGFdID0gaGl0W21ldGFdOwogICAgfSk7IC8vIHVud3JhcCBjb21wdXRlZCBmaWVsZHMKCgogICAgX2xvZGFzaC5kZWZhdWx0LmZvck93bihoaXQuZmllbGRzLCBmdW5jdGlvbiAodmFsLCBrZXkpIHsKICAgICAgaWYgKGtleVswXSA9PT0gJ18nICYmICFfbG9kYXNoLmRlZmF1bHQuY29udGFpbnMobWV0YUZpZWxkcywga2V5KSkgcmV0dXJuOwogICAgICBmbGF0dGVuZWRba2V5XSA9IEFycmF5LmlzQXJyYXkodmFsKSAmJiB2YWwubGVuZ3RoID09PSAxID8gdmFsWzBdIDogdmFsOwogICAgfSk7CgogICAgcmV0dXJuIGZsYXR0ZW5lZDsKICB9Owp9Ci8qKgogKiBUaGlzIGlzIHdyYXBwZWQgYnkgYGNyZWF0ZUZsYXR0ZW5IaXRXcmFwcGVyYCBpbiBvcmRlciB0byBwcm92aWRlIGEgc2luZ2xlIGNhY2hlIHRvIGJlCiAqIHNoYXJlZCBhY3Jvc3MgYWxsIHVzZXMgb2YgdGhpcyBmdW5jdGlvbi4gSXQgaXMgb25seSBleHBvcnRlZCBoZXJlIGZvciB1c2UgaW4gbW9ja3MuCiAqCiAqIEBpbnRlcm5hbAogKi8KCgpmdW5jdGlvbiBmbGF0dGVuSGl0V3JhcHBlcihpbmRleFBhdHRlcm4pIHsKICB2YXIgbWV0YUZpZWxkcyA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDoge307CiAgdmFyIGNhY2hlID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgYXJndW1lbnRzWzJdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMl0gOiBuZXcgV2Vha01hcCgpOwogIHJldHVybiBmdW5jdGlvbiBjYWNoZWRGbGF0dGVuKGhpdCkgewogICAgdmFyIGRlZXAgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IGZhbHNlOwogICAgdmFyIGRlY29yYXRlRmxhdHRlbmVkID0gZGVjb3JhdGVGbGF0dGVuZWRXcmFwcGVyKGhpdCwgbWV0YUZpZWxkcyk7CiAgICB2YXIgY2FjaGVkID0gY2FjaGUuZ2V0KGhpdCk7CiAgICB2YXIgZmxhdHRlbmVkID0gY2FjaGVkIHx8IGZsYXR0ZW5IaXQoaW5kZXhQYXR0ZXJuLCBoaXQsIGRlZXApOwoKICAgIGlmICghY2FjaGVkKSB7CiAgICAgIGNhY2hlLnNldChoaXQsIF9vYmplY3RTcHJlYWQoe30sIGZsYXR0ZW5lZCkpOwogICAgfQoKICAgIHJldHVybiBkZWNvcmF0ZUZsYXR0ZW5lZChmbGF0dGVuZWQpOwogIH07Cn0KLyoqCiAqIFRoaXMgd3JhcHMgYGZsYXR0ZW5IaXRXcmFwcGVyYCBzbyBvbmUgc2luZ2xlIGNhY2hlIGNhbiBiZSBwcm92aWRlZCBmb3IgYWxsIHVzZXMgb2YgdGhhdAogKiBmdW5jdGlvbi4gVGhlIHJldHVybmVkIHZhbHVlIG9mIHRoaXMgZnVuY3Rpb24gaXMgd2hhdCBpcyBpbmNsdWRlZCBpbiB0aGUgaW5kZXggcGF0dGVybnMKICogc2V0dXAgY29udHJhY3QuCiAqCiAqIEBwdWJsaWMKICovCgoKZnVuY3Rpb24gY3JlYXRlRmxhdHRlbkhpdFdyYXBwZXIoKSB7CiAgdmFyIGNhY2hlID0gbmV3IFdlYWtNYXAoKTsKICByZXR1cm4gX2xvZGFzaC5kZWZhdWx0LnBhcnRpYWwoZmxhdHRlbkhpdFdyYXBwZXIsIF9sb2Rhc2guZGVmYXVsdCwgX2xvZGFzaC5kZWZhdWx0LCBjYWNoZSk7Cn0="},null]}