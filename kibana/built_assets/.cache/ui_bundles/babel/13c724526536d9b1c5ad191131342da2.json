{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/canvas/public/components/arg_form/pending_arg_value.js","dependencies":[{"path":"x-pack/legacy/plugins/canvas/public/components/arg_form/pending_arg_value.js","mtime":1589249551943},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLlBlbmRpbmdBcmdWYWx1ZSA9IHZvaWQgMDsKCnZhciBfcmVhY3QgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoInJlYWN0IikpOwoKdmFyIF9wcm9wVHlwZXMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoInByb3AtdHlwZXMiKSk7Cgp2YXIgX2kxOG4gPSByZXF1aXJlKCIuLi8uLi8uLi9pMThuIik7Cgp2YXIgX2xvYWRpbmcgPSByZXF1aXJlKCIuLi9sb2FkaW5nIik7Cgp2YXIgX2FyZ19sYWJlbCA9IHJlcXVpcmUoIi4vYXJnX2xhYmVsIik7CgpmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfQoKZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgaWYgKHR5cGVvZiBTeW1ib2wgPT09ICJmdW5jdGlvbiIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gInN5bWJvbCIpIHsgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9OyB9IGVsc2UgeyBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSAiZnVuY3Rpb24iICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/ICJzeW1ib2wiIDogdHlwZW9mIG9iajsgfTsgfSByZXR1cm4gX3R5cGVvZihvYmopOyB9CgpmdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvbiIpOyB9IH0KCmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKCJ2YWx1ZSIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9CgpmdW5jdGlvbiBfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfQoKZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoY2FsbCAmJiAoX3R5cGVvZihjYWxsKSA9PT0gIm9iamVjdCIgfHwgdHlwZW9mIGNhbGwgPT09ICJmdW5jdGlvbiIpKSB7IHJldHVybiBjYWxsOyB9IHJldHVybiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpOyB9CgpmdW5jdGlvbiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpIHsgaWYgKHNlbGYgPT09IHZvaWQgMCkgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZCIpOyB9IHJldHVybiBzZWxmOyB9CgpmdW5jdGlvbiBfZ2V0UHJvdG90eXBlT2YobykgeyBfZ2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3QuZ2V0UHJvdG90eXBlT2YgOiBmdW5jdGlvbiBfZ2V0UHJvdG90eXBlT2YobykgeyByZXR1cm4gby5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKG8pOyB9OyByZXR1cm4gX2dldFByb3RvdHlwZU9mKG8pOyB9CgpmdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSAiZnVuY3Rpb24iICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcigiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24iKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBfc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpOyB9CgpmdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkgeyBfc2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHwgZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHsgby5fX3Byb3RvX18gPSBwOyByZXR1cm4gbzsgfTsgcmV0dXJuIF9zZXRQcm90b3R5cGVPZihvLCBwKTsgfQoKZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkgeyBpZiAoa2V5IGluIG9iaikgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHsgdmFsdWU6IHZhbHVlLCBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlIH0pOyB9IGVsc2UgeyBvYmpba2V5XSA9IHZhbHVlOyB9IHJldHVybiBvYmo7IH0KCnZhciBzdHJpbmdzID0gX2kxOG4uQ29tcG9uZW50U3RyaW5ncy5BcmdGb3JtUGVuZGluZ0FyZ1ZhbHVlOwoKdmFyIFBlbmRpbmdBcmdWYWx1ZSA9Ci8qI19fUFVSRV9fKi8KZnVuY3Rpb24gKF9SZWFjdCRQdXJlQ29tcG9uZW50KSB7CiAgX2luaGVyaXRzKFBlbmRpbmdBcmdWYWx1ZSwgX1JlYWN0JFB1cmVDb21wb25lbnQpOwoKICBmdW5jdGlvbiBQZW5kaW5nQXJnVmFsdWUoKSB7CiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgUGVuZGluZ0FyZ1ZhbHVlKTsKCiAgICByZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgX2dldFByb3RvdHlwZU9mKFBlbmRpbmdBcmdWYWx1ZSkuYXBwbHkodGhpcywgYXJndW1lbnRzKSk7CiAgfQoKICBfY3JlYXRlQ2xhc3MoUGVuZGluZ0FyZ1ZhbHVlLCBbewogICAga2V5OiAiY29tcG9uZW50RGlkTW91bnQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGNvbXBvbmVudERpZE1vdW50KCkgewogICAgICAvLyBvbiBtb3VudCwgcmVzb2x2ZSB0aGUgYXJnIHZhbHVlIHVzaW5nIHRoZSBhcmdSZXNvbHZlcgogICAgICB2YXIgX3RoaXMkcHJvcHMgPSB0aGlzLnByb3BzLAogICAgICAgICAgc2V0UmVzb2x2ZWRBcmdWYWx1ZSA9IF90aGlzJHByb3BzLnNldFJlc29sdmVkQXJnVmFsdWUsCiAgICAgICAgICB0ZW1wbGF0ZVByb3BzID0gX3RoaXMkcHJvcHMudGVtcGxhdGVQcm9wczsKICAgICAgdmFyIGFyZ1Jlc29sdmVyID0gdGVtcGxhdGVQcm9wcy5hcmdSZXNvbHZlciwKICAgICAgICAgIGFyZ1ZhbHVlID0gdGVtcGxhdGVQcm9wcy5hcmdWYWx1ZTsKCiAgICAgIGlmIChhcmdWYWx1ZSA9PSBudWxsKSB7CiAgICAgICAgc2V0UmVzb2x2ZWRBcmdWYWx1ZShudWxsKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBhcmdSZXNvbHZlcihhcmdWYWx1ZSkudGhlbihmdW5jdGlvbiAodmFsKSB7CiAgICAgICAgICByZXR1cm4gc2V0UmVzb2x2ZWRBcmdWYWx1ZSh2YWwgIT0gbnVsbCA/IHZhbCA6IG51bGwpOwogICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uICgpIHsKICAgICAgICAgIHJldHVybiBzZXRSZXNvbHZlZEFyZ1ZhbHVlKG51bGwpOwogICAgICAgIH0pOyAvLyBzd2FsbG93IGVycm9yLCBpdCdzIG5vdCBpbXBvcnRhbnQKICAgICAgfQogICAgfQogIH0sIHsKICAgIGtleTogInJlbmRlciIsCiAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkgewogICAgICB2YXIgX3RoaXMkcHJvcHMyID0gdGhpcy5wcm9wcywKICAgICAgICAgIGxhYmVsID0gX3RoaXMkcHJvcHMyLmxhYmVsLAogICAgICAgICAgYXJnVHlwZUluc3RhbmNlID0gX3RoaXMkcHJvcHMyLmFyZ1R5cGVJbnN0YW5jZTsKICAgICAgcmV0dXJuIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoImRpdiIsIHsKICAgICAgICBjbGFzc05hbWU6ICJjYW52YXNBcmciCiAgICAgIH0sIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2FyZ19sYWJlbC5BcmdMYWJlbCwgewogICAgICAgIGNsYXNzTmFtZTogInJlc29sdmUtcGVuZGluZyIsCiAgICAgICAgbGFiZWw6IGxhYmVsLAogICAgICAgIGhlbHA6IGFyZ1R5cGVJbnN0YW5jZS5oZWxwLAogICAgICAgIGV4cGFuZGFibGU6IGZhbHNlCiAgICAgIH0sIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoImRpdiIsIHsKICAgICAgICBjbGFzc05hbWU6ICJjYW52YXNBcmctLXBlbmRpbmciCiAgICAgIH0sIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2xvYWRpbmcuTG9hZGluZywgewogICAgICAgIGFuaW1hdGVkOiB0cnVlLAogICAgICAgIHRleHQ6IHN0cmluZ3MuZ2V0TG9hZGluZ01lc3NhZ2UoKQogICAgICB9KSkpKTsKICAgIH0KICB9XSk7CgogIHJldHVybiBQZW5kaW5nQXJnVmFsdWU7Cn0oX3JlYWN0LmRlZmF1bHQuUHVyZUNvbXBvbmVudCk7CgpleHBvcnRzLlBlbmRpbmdBcmdWYWx1ZSA9IFBlbmRpbmdBcmdWYWx1ZTsKCl9kZWZpbmVQcm9wZXJ0eShQZW5kaW5nQXJnVmFsdWUsICJwcm9wVHlwZXMiLCB7CiAgbGFiZWw6IF9wcm9wVHlwZXMuZGVmYXVsdC5zdHJpbmcsCiAgYXJnVHlwZUluc3RhbmNlOiBfcHJvcFR5cGVzLmRlZmF1bHQuc2hhcGUoewogICAgaGVscDogX3Byb3BUeXBlcy5kZWZhdWx0LnN0cmluZy5pc1JlcXVpcmVkCiAgfSkuaXNSZXF1aXJlZCwKICBzZXRSZXNvbHZlZEFyZ1ZhbHVlOiBfcHJvcFR5cGVzLmRlZmF1bHQuZnVuYy5pc1JlcXVpcmVkLAogIHRlbXBsYXRlUHJvcHM6IF9wcm9wVHlwZXMuZGVmYXVsdC5zaGFwZSh7CiAgICBhcmdSZXNvbHZlcjogX3Byb3BUeXBlcy5kZWZhdWx0LmZ1bmMuaXNSZXF1aXJlZCwKICAgIGFyZ1ZhbHVlOiBfcHJvcFR5cGVzLmRlZmF1bHQuYW55CiAgfSkKfSk7"},null]}