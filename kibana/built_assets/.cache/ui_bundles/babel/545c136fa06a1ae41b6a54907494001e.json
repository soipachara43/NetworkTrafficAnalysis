{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/siem/public/pages/network/ip_details/index.js","dependencies":[{"path":"x-pack/legacy/plugins/siem/public/pages/network/ip_details/index.js","mtime":1589249553332},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgImdldEJyZWFkY3J1bWJzIiwgewogIGVudW1lcmFibGU6IHRydWUsCiAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7CiAgICByZXR1cm4gX3V0aWxzLmdldEJyZWFkY3J1bWJzOwogIH0KfSk7CmV4cG9ydHMuSVBEZXRhaWxzID0gZXhwb3J0cy5jb25uZWN0b3IgPSBleHBvcnRzLklQRGV0YWlsc0NvbXBvbmVudCA9IHZvaWQgMDsKCnZhciBfZXVpID0gcmVxdWlyZSgiQGVsYXN0aWMvZXVpIik7Cgp2YXIgX3JlYWN0ID0gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQocmVxdWlyZSgicmVhY3QiKSk7Cgp2YXIgX3JlYWN0UmVkdXggPSByZXF1aXJlKCJyZWFjdC1yZWR1eCIpOwoKdmFyIF9yZWFjdFN0aWNreSA9IHJlcXVpcmUoInJlYWN0LXN0aWNreSIpOwoKdmFyIF9maWx0ZXJzX2dsb2JhbCA9IHJlcXVpcmUoIi4uLy4uLy4uL2NvbXBvbmVudHMvZmlsdGVyc19nbG9iYWwiKTsKCnZhciBfaGVhZGVyX3BhZ2UgPSByZXF1aXJlKCIuLi8uLi8uLi9jb21wb25lbnRzL2hlYWRlcl9wYWdlIik7Cgp2YXIgX2xhc3RfZXZlbnRfdGltZSA9IHJlcXVpcmUoIi4uLy4uLy4uL2NvbXBvbmVudHMvbGFzdF9ldmVudF90aW1lIik7Cgp2YXIgX2Fub21hbHlfdGFibGVfcHJvdmlkZXIgPSByZXF1aXJlKCIuLi8uLi8uLi9jb21wb25lbnRzL21sL2Fub21hbHkvYW5vbWFseV90YWJsZV9wcm92aWRlciIpOwoKdmFyIF9uZXR3b3JrX3RvX2NyaXRlcmlhID0gcmVxdWlyZSgiLi4vLi4vLi4vY29tcG9uZW50cy9tbC9jcml0ZXJpYS9uZXR3b3JrX3RvX2NyaXRlcmlhIik7Cgp2YXIgX3Njb3JlX2ludGVydmFsX3RvX2RhdGV0aW1lID0gcmVxdWlyZSgiLi4vLi4vLi4vY29tcG9uZW50cy9tbC9zY29yZS9zY29yZV9pbnRlcnZhbF90b19kYXRldGltZSIpOwoKdmFyIF9hbm9tYWxpZXNfbmV0d29ya190YWJsZSA9IHJlcXVpcmUoIi4uLy4uLy4uL2NvbXBvbmVudHMvbWwvdGFibGVzL2Fub21hbGllc19uZXR3b3JrX3RhYmxlIik7Cgp2YXIgX21hbmFnZV9xdWVyeSA9IHJlcXVpcmUoIi4uLy4uLy4uL2NvbXBvbmVudHMvcGFnZS9tYW5hZ2VfcXVlcnkiKTsKCnZhciBfZmxvd190YXJnZXRfc2VsZWN0X2Nvbm5lY3RlZCA9IHJlcXVpcmUoIi4uLy4uLy4uL2NvbXBvbmVudHMvcGFnZS9uZXR3b3JrL2Zsb3dfdGFyZ2V0X3NlbGVjdF9jb25uZWN0ZWQiKTsKCnZhciBfaXBfb3ZlcnZpZXcgPSByZXF1aXJlKCIuLi8uLi8uLi9jb21wb25lbnRzL3BhZ2UvbmV0d29yay9pcF9vdmVydmlldyIpOwoKdmFyIF9zZWFyY2hfYmFyID0gcmVxdWlyZSgiLi4vLi4vLi4vY29tcG9uZW50cy9zZWFyY2hfYmFyIik7Cgp2YXIgX3dyYXBwZXJfcGFnZSA9IHJlcXVpcmUoIi4uLy4uLy4uL2NvbXBvbmVudHMvd3JhcHBlcl9wYWdlIik7Cgp2YXIgX2lwX292ZXJ2aWV3MiA9IHJlcXVpcmUoIi4uLy4uLy4uL2NvbnRhaW5lcnMvaXBfb3ZlcnZpZXciKTsKCnZhciBfc291cmNlID0gcmVxdWlyZSgiLi4vLi4vLi4vY29udGFpbmVycy9zb3VyY2UiKTsKCnZhciBfdHlwZXMgPSByZXF1aXJlKCIuLi8uLi8uLi9ncmFwaHFsL3R5cGVzIik7Cgp2YXIgX2tpYmFuYSA9IHJlcXVpcmUoIi4uLy4uLy4uL2xpYi9raWJhbmEiKTsKCnZhciBfaGVscGVycyA9IHJlcXVpcmUoIi4uLy4uLy4uL2xpYi9oZWxwZXJzIik7Cgp2YXIgX2tldXJ5ID0gcmVxdWlyZSgiLi4vLi4vLi4vbGliL2tldXJ5Iik7Cgp2YXIgX2NvbmRpdGlvbmFsX2ZsZXhfZ3JvdXAgPSByZXF1aXJlKCIuLi8uLi8uLi9wYWdlcy9uZXR3b3JrL25hdmlnYXRpb24vY29uZGl0aW9uYWxfZmxleF9ncm91cCIpOwoKdmFyIF9zdG9yZSA9IHJlcXVpcmUoIi4uLy4uLy4uL3N0b3JlIik7Cgp2YXIgX2FjdGlvbnMgPSByZXF1aXJlKCIuLi8uLi8uLi9zdG9yZS9pbnB1dHMvYWN0aW9ucyIpOwoKdmFyIF9hY3Rpb25zMiA9IHJlcXVpcmUoIi4uLy4uLy4uL3N0b3JlL25ldHdvcmsvYWN0aW9ucyIpOwoKdmFyIF9zcHlfcm91dGVzID0gcmVxdWlyZSgiLi4vLi4vLi4vdXRpbHMvcm91dGUvc3B5X3JvdXRlcyIpOwoKdmFyIF9uZXR3b3JrX2VtcHR5X3BhZ2UgPSByZXF1aXJlKCIuLi9uZXR3b3JrX2VtcHR5X3BhZ2UiKTsKCnZhciBfbmV0d29ya19odHRwX3F1ZXJ5X3RhYmxlID0gcmVxdWlyZSgiLi9uZXR3b3JrX2h0dHBfcXVlcnlfdGFibGUiKTsKCnZhciBfbmV0d29ya190b3BfY291bnRyaWVzX3F1ZXJ5X3RhYmxlID0gcmVxdWlyZSgiLi9uZXR3b3JrX3RvcF9jb3VudHJpZXNfcXVlcnlfdGFibGUiKTsKCnZhciBfbmV0d29ya190b3Bfbl9mbG93X3F1ZXJ5X3RhYmxlID0gcmVxdWlyZSgiLi9uZXR3b3JrX3RvcF9uX2Zsb3dfcXVlcnlfdGFibGUiKTsKCnZhciBfdGxzX3F1ZXJ5X3RhYmxlID0gcmVxdWlyZSgiLi90bHNfcXVlcnlfdGFibGUiKTsKCnZhciBfdXNlcnNfcXVlcnlfdGFibGUgPSByZXF1aXJlKCIuL3VzZXJzX3F1ZXJ5X3RhYmxlIik7Cgp2YXIgX2Fub21hbGllc19xdWVyeV90YWJfYm9keSA9IHJlcXVpcmUoIi4uLy4uLy4uL2NvbnRhaW5lcnMvYW5vbWFsaWVzL2Fub21hbGllc19xdWVyeV90YWJfYm9keSIpOwoKdmFyIF9wdWJsaWMgPSByZXF1aXJlKCIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9zcmMvcGx1Z2lucy9kYXRhL3B1YmxpYyIpOwoKdmFyIF91dGlscyA9IHJlcXVpcmUoIi4vdXRpbHMiKTsKCmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKG9iaikgewogIGlmIChvYmogJiYgb2JqLl9fZXNNb2R1bGUpIHsKICAgIHJldHVybiBvYmo7CiAgfSBlbHNlIHsKICAgIHZhciBuZXdPYmogPSB7fTsKCiAgICBpZiAob2JqICE9IG51bGwpIHsKICAgICAgZm9yICh2YXIga2V5IGluIG9iaikgewogICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBrZXkpKSB7CiAgICAgICAgICB2YXIgZGVzYyA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSAmJiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID8gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmosIGtleSkgOiB7fTsKCiAgICAgICAgICBpZiAoZGVzYy5nZXQgfHwgZGVzYy5zZXQpIHsKICAgICAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG5ld09iaiwga2V5LCBkZXNjKTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIG5ld09ialtrZXldID0gb2JqW2tleV07CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9CgogICAgbmV3T2JqLmRlZmF1bHQgPSBvYmo7CiAgICByZXR1cm4gbmV3T2JqOwogIH0KfQovKgogKiBDb3B5cmlnaHQgRWxhc3RpY3NlYXJjaCBCLlYuIGFuZC9vciBsaWNlbnNlZCB0byBFbGFzdGljc2VhcmNoIEIuVi4gdW5kZXIgb25lCiAqIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiBMaWNlbnNlZCB1bmRlciB0aGUgRWxhc3RpYyBMaWNlbnNlOwogKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIEVsYXN0aWMgTGljZW5zZS4KICovCgoKdmFyIElwT3ZlcnZpZXdNYW5hZ2UgPSAoMCwgX21hbmFnZV9xdWVyeS5tYW5hZ2VRdWVyeSkoX2lwX292ZXJ2aWV3LklwT3ZlcnZpZXcpOwoKdmFyIElQRGV0YWlsc0NvbXBvbmVudCA9IGZ1bmN0aW9uIElQRGV0YWlsc0NvbXBvbmVudChfcmVmKSB7CiAgdmFyIGRldGFpbE5hbWUgPSBfcmVmLmRldGFpbE5hbWUsCiAgICAgIGZpbHRlcnMgPSBfcmVmLmZpbHRlcnMsCiAgICAgIGZsb3dUYXJnZXQgPSBfcmVmLmZsb3dUYXJnZXQsCiAgICAgIGZyb20gPSBfcmVmLmZyb20sCiAgICAgIGlzSW5pdGlhbGl6aW5nID0gX3JlZi5pc0luaXRpYWxpemluZywKICAgICAgcXVlcnkgPSBfcmVmLnF1ZXJ5LAogICAgICBzZXRBYnNvbHV0ZVJhbmdlRGF0ZVBpY2tlciA9IF9yZWYuc2V0QWJzb2x1dGVSYW5nZURhdGVQaWNrZXIsCiAgICAgIHNldElwRGV0YWlsc1RhYmxlc0FjdGl2ZVBhZ2VUb1plcm8gPSBfcmVmLnNldElwRGV0YWlsc1RhYmxlc0FjdGl2ZVBhZ2VUb1plcm8sCiAgICAgIHNldFF1ZXJ5ID0gX3JlZi5zZXRRdWVyeSwKICAgICAgdG8gPSBfcmVmLnRvOwogIHZhciB0eXBlID0gX3N0b3JlLm5ldHdvcmtNb2RlbC5OZXR3b3JrVHlwZS5kZXRhaWxzOwogIHZhciBuYXJyb3dEYXRlUmFuZ2UgPSAoMCwgX3JlYWN0LnVzZUNhbGxiYWNrKShmdW5jdGlvbiAoc2NvcmUsIGludGVydmFsKSB7CiAgICB2YXIgZnJvbVRvID0gKDAsIF9zY29yZV9pbnRlcnZhbF90b19kYXRldGltZS5zY29yZUludGVydmFsVG9EYXRlVGltZSkoc2NvcmUsIGludGVydmFsKTsKICAgIHNldEFic29sdXRlUmFuZ2VEYXRlUGlja2VyKHsKICAgICAgaWQ6ICdnbG9iYWwnLAogICAgICBmcm9tOiBmcm9tVG8uZnJvbSwKICAgICAgdG86IGZyb21Uby50bwogICAgfSk7CiAgfSwgW3NldEFic29sdXRlUmFuZ2VEYXRlUGlja2VyXSk7CiAgdmFyIGtpYmFuYSA9ICgwLCBfa2liYW5hLnVzZUtpYmFuYSkoKTsKICAoMCwgX3JlYWN0LnVzZUVmZmVjdCkoZnVuY3Rpb24gKCkgewogICAgc2V0SXBEZXRhaWxzVGFibGVzQWN0aXZlUGFnZVRvWmVybygpOwogIH0sIFtkZXRhaWxOYW1lLCBzZXRJcERldGFpbHNUYWJsZXNBY3RpdmVQYWdlVG9aZXJvXSk7CiAgcmV0dXJuIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3JlYWN0LmRlZmF1bHQuRnJhZ21lbnQsIG51bGwsIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3NvdXJjZS5XaXRoU291cmNlLCB7CiAgICBzb3VyY2VJZDogImRlZmF1bHQiLAogICAgImRhdGEtdGVzdC1zdWJqIjogImlwLWRldGFpbHMtcGFnZSIKICB9LCBmdW5jdGlvbiAoX3JlZjIpIHsKICAgIHZhciBpbmRpY2VzRXhpc3QgPSBfcmVmMi5pbmRpY2VzRXhpc3QsCiAgICAgICAgaW5kZXhQYXR0ZXJuID0gX3JlZjIuaW5kZXhQYXR0ZXJuOwogICAgdmFyIGlwID0gKDAsIF9oZWxwZXJzLmRlY29kZUlwdjYpKGRldGFpbE5hbWUpOwogICAgdmFyIGZpbHRlclF1ZXJ5ID0gKDAsIF9rZXVyeS5jb252ZXJ0VG9CdWlsZEVzUXVlcnkpKHsKICAgICAgY29uZmlnOiBfcHVibGljLmVzUXVlcnkuZ2V0RXNRdWVyeUNvbmZpZyhraWJhbmEuc2VydmljZXMudWlTZXR0aW5ncyksCiAgICAgIGluZGV4UGF0dGVybjogaW5kZXhQYXR0ZXJuLAogICAgICBxdWVyaWVzOiBbcXVlcnldLAogICAgICBmaWx0ZXJzOiBmaWx0ZXJzCiAgICB9KTsKICAgIHJldHVybiAoMCwgX3NvdXJjZS5pbmRpY2VzRXhpc3RPckRhdGFUZW1wb3JhcmlseVVuYXZhaWxhYmxlKShpbmRpY2VzRXhpc3QpID8gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfcmVhY3RTdGlja3kuU3RpY2t5Q29udGFpbmVyLCBudWxsLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9maWx0ZXJzX2dsb2JhbC5GaWx0ZXJzR2xvYmFsLCBudWxsLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9zZWFyY2hfYmFyLlNpZW1TZWFyY2hCYXIsIHsKICAgICAgaW5kZXhQYXR0ZXJuOiBpbmRleFBhdHRlcm4sCiAgICAgIGlkOiAiZ2xvYmFsIgogICAgfSkpLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF93cmFwcGVyX3BhZ2UuV3JhcHBlclBhZ2UsIG51bGwsIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2hlYWRlcl9wYWdlLkhlYWRlclBhZ2UsIHsKICAgICAgYm9yZGVyOiB0cnVlLAogICAgICAiZGF0YS10ZXN0LXN1YmoiOiAiaXAtZGV0YWlscy1oZWFkbGluZSIsCiAgICAgIGRyYWdnYWJsZUFyZ3VtZW50czogewogICAgICAgIGZpZWxkOiAiIi5jb25jYXQoZmxvd1RhcmdldCwgIi5pcCIpLAogICAgICAgIHZhbHVlOiBpcAogICAgICB9LAogICAgICBzdWJ0aXRsZTogX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfbGFzdF9ldmVudF90aW1lLkxhc3RFdmVudFRpbWUsIHsKICAgICAgICBpbmRleEtleTogX3R5cGVzLkxhc3RFdmVudEluZGV4S2V5LmlwRGV0YWlscywKICAgICAgICBpcDogaXAKICAgICAgfSksCiAgICAgIHRpdGxlOiBpcAogICAgfSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZmxvd190YXJnZXRfc2VsZWN0X2Nvbm5lY3RlZC5GbG93VGFyZ2V0U2VsZWN0Q29ubmVjdGVkLCB7CiAgICAgIGZsb3dUYXJnZXQ6IGZsb3dUYXJnZXQKICAgIH0pKSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfaXBfb3ZlcnZpZXcyLklwT3ZlcnZpZXdRdWVyeSwgewogICAgICBza2lwOiBpc0luaXRpYWxpemluZywKICAgICAgc291cmNlSWQ6ICJkZWZhdWx0IiwKICAgICAgZmlsdGVyUXVlcnk6IGZpbHRlclF1ZXJ5LAogICAgICB0eXBlOiB0eXBlLAogICAgICBpcDogaXAKICAgIH0sIGZ1bmN0aW9uIChfcmVmMykgewogICAgICB2YXIgaWQgPSBfcmVmMy5pZCwKICAgICAgICAgIGluc3BlY3QgPSBfcmVmMy5pbnNwZWN0LAogICAgICAgICAgaXBPdmVydmlld0RhdGEgPSBfcmVmMy5pcE92ZXJ2aWV3RGF0YSwKICAgICAgICAgIGxvYWRpbmcgPSBfcmVmMy5sb2FkaW5nLAogICAgICAgICAgcmVmZXRjaCA9IF9yZWYzLnJlZmV0Y2g7CiAgICAgIHJldHVybiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9hbm9tYWx5X3RhYmxlX3Byb3ZpZGVyLkFub21hbHlUYWJsZVByb3ZpZGVyLCB7CiAgICAgICAgY3JpdGVyaWFGaWVsZHM6ICgwLCBfbmV0d29ya190b19jcml0ZXJpYS5uZXR3b3JrVG9Dcml0ZXJpYSkoZGV0YWlsTmFtZSwgZmxvd1RhcmdldCksCiAgICAgICAgc3RhcnREYXRlOiBmcm9tLAogICAgICAgIGVuZERhdGU6IHRvLAogICAgICAgIHNraXA6IGlzSW5pdGlhbGl6aW5nCiAgICAgIH0sIGZ1bmN0aW9uIChfcmVmNCkgewogICAgICAgIHZhciBpc0xvYWRpbmdBbm9tYWxpZXNEYXRhID0gX3JlZjQuaXNMb2FkaW5nQW5vbWFsaWVzRGF0YSwKICAgICAgICAgICAgYW5vbWFsaWVzRGF0YSA9IF9yZWY0LmFub21hbGllc0RhdGE7CiAgICAgICAgcmV0dXJuIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoSXBPdmVydmlld01hbmFnZSwgewogICAgICAgICAgaWQ6IGlkLAogICAgICAgICAgaW5zcGVjdDogaW5zcGVjdCwKICAgICAgICAgIGlwOiBpcCwKICAgICAgICAgIGRhdGE6IGlwT3ZlcnZpZXdEYXRhLAogICAgICAgICAgYW5vbWFsaWVzRGF0YTogYW5vbWFsaWVzRGF0YSwKICAgICAgICAgIGxvYWRpbmc6IGxvYWRpbmcsCiAgICAgICAgICBpc0xvYWRpbmdBbm9tYWxpZXNEYXRhOiBpc0xvYWRpbmdBbm9tYWxpZXNEYXRhLAogICAgICAgICAgdHlwZTogdHlwZSwKICAgICAgICAgIGZsb3dUYXJnZXQ6IGZsb3dUYXJnZXQsCiAgICAgICAgICByZWZldGNoOiByZWZldGNoLAogICAgICAgICAgc2V0UXVlcnk6IHNldFF1ZXJ5LAogICAgICAgICAgc3RhcnREYXRlOiBmcm9tLAogICAgICAgICAgZW5kRGF0ZTogdG8sCiAgICAgICAgICBuYXJyb3dEYXRlUmFuZ2U6IG5hcnJvd0RhdGVSYW5nZQogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0pLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpSG9yaXpvbnRhbFJ1bGUsIG51bGwpLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9jb25kaXRpb25hbF9mbGV4X2dyb3VwLkNvbmRpdGlvbmFsRmxleEdyb3VwLCB7CiAgICAgIGRpcmVjdGlvbjogImNvbHVtbiIKICAgIH0sIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlGbGV4SXRlbSwgbnVsbCwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfbmV0d29ya190b3Bfbl9mbG93X3F1ZXJ5X3RhYmxlLk5ldHdvcmtUb3BORmxvd1F1ZXJ5VGFibGUsIHsKICAgICAgZW5kRGF0ZTogdG8sCiAgICAgIGZpbHRlclF1ZXJ5OiBmaWx0ZXJRdWVyeSwKICAgICAgZmxvd1RhcmdldDogX3R5cGVzLkZsb3dUYXJnZXRTb3VyY2VEZXN0LnNvdXJjZSwKICAgICAgaXA6IGlwLAogICAgICBza2lwOiBpc0luaXRpYWxpemluZywKICAgICAgc3RhcnREYXRlOiBmcm9tLAogICAgICB0eXBlOiB0eXBlLAogICAgICBzZXRRdWVyeTogc2V0UXVlcnksCiAgICAgIGluZGV4UGF0dGVybjogaW5kZXhQYXR0ZXJuCiAgICB9KSksIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlGbGV4SXRlbSwgbnVsbCwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfbmV0d29ya190b3Bfbl9mbG93X3F1ZXJ5X3RhYmxlLk5ldHdvcmtUb3BORmxvd1F1ZXJ5VGFibGUsIHsKICAgICAgZW5kRGF0ZTogdG8sCiAgICAgIGZsb3dUYXJnZXQ6IF90eXBlcy5GbG93VGFyZ2V0U291cmNlRGVzdC5kZXN0aW5hdGlvbiwKICAgICAgZmlsdGVyUXVlcnk6IGZpbHRlclF1ZXJ5LAogICAgICBpcDogaXAsCiAgICAgIHNraXA6IGlzSW5pdGlhbGl6aW5nLAogICAgICBzdGFydERhdGU6IGZyb20sCiAgICAgIHR5cGU6IHR5cGUsCiAgICAgIHNldFF1ZXJ5OiBzZXRRdWVyeSwKICAgICAgaW5kZXhQYXR0ZXJuOiBpbmRleFBhdHRlcm4KICAgIH0pKSksIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlTcGFjZXIsIG51bGwpLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9jb25kaXRpb25hbF9mbGV4X2dyb3VwLkNvbmRpdGlvbmFsRmxleEdyb3VwLCB7CiAgICAgIGRpcmVjdGlvbjogImNvbHVtbiIKICAgIH0sIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlGbGV4SXRlbSwgbnVsbCwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfbmV0d29ya190b3BfY291bnRyaWVzX3F1ZXJ5X3RhYmxlLk5ldHdvcmtUb3BDb3VudHJpZXNRdWVyeVRhYmxlLCB7CiAgICAgIGVuZERhdGU6IHRvLAogICAgICBmaWx0ZXJRdWVyeTogZmlsdGVyUXVlcnksCiAgICAgIGZsb3dUYXJnZXQ6IF90eXBlcy5GbG93VGFyZ2V0U291cmNlRGVzdC5zb3VyY2UsCiAgICAgIGlwOiBpcCwKICAgICAgc2tpcDogaXNJbml0aWFsaXppbmcsCiAgICAgIHN0YXJ0RGF0ZTogZnJvbSwKICAgICAgdHlwZTogdHlwZSwKICAgICAgc2V0UXVlcnk6IHNldFF1ZXJ5LAogICAgICBpbmRleFBhdHRlcm46IGluZGV4UGF0dGVybgogICAgfSkpLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpRmxleEl0ZW0sIG51bGwsIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX25ldHdvcmtfdG9wX2NvdW50cmllc19xdWVyeV90YWJsZS5OZXR3b3JrVG9wQ291bnRyaWVzUXVlcnlUYWJsZSwgewogICAgICBlbmREYXRlOiB0bywKICAgICAgZmxvd1RhcmdldDogX3R5cGVzLkZsb3dUYXJnZXRTb3VyY2VEZXN0LmRlc3RpbmF0aW9uLAogICAgICBmaWx0ZXJRdWVyeTogZmlsdGVyUXVlcnksCiAgICAgIGlwOiBpcCwKICAgICAgc2tpcDogaXNJbml0aWFsaXppbmcsCiAgICAgIHN0YXJ0RGF0ZTogZnJvbSwKICAgICAgdHlwZTogdHlwZSwKICAgICAgc2V0UXVlcnk6IHNldFF1ZXJ5LAogICAgICBpbmRleFBhdHRlcm46IGluZGV4UGF0dGVybgogICAgfSkpKSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aVNwYWNlciwgbnVsbCksIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3VzZXJzX3F1ZXJ5X3RhYmxlLlVzZXJzUXVlcnlUYWJsZSwgewogICAgICBlbmREYXRlOiB0bywKICAgICAgZmlsdGVyUXVlcnk6IGZpbHRlclF1ZXJ5LAogICAgICBmbG93VGFyZ2V0OiBmbG93VGFyZ2V0LAogICAgICBpcDogaXAsCiAgICAgIHNraXA6IGlzSW5pdGlhbGl6aW5nLAogICAgICBzdGFydERhdGU6IGZyb20sCiAgICAgIHR5cGU6IHR5cGUsCiAgICAgIHNldFF1ZXJ5OiBzZXRRdWVyeQogICAgfSksIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlTcGFjZXIsIG51bGwpLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9uZXR3b3JrX2h0dHBfcXVlcnlfdGFibGUuTmV0d29ya0h0dHBRdWVyeVRhYmxlLCB7CiAgICAgIGVuZERhdGU6IHRvLAogICAgICBmaWx0ZXJRdWVyeTogZmlsdGVyUXVlcnksCiAgICAgIGlwOiBpcCwKICAgICAgc2tpcDogaXNJbml0aWFsaXppbmcsCiAgICAgIHN0YXJ0RGF0ZTogZnJvbSwKICAgICAgdHlwZTogdHlwZSwKICAgICAgc2V0UXVlcnk6IHNldFF1ZXJ5CiAgICB9KSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aVNwYWNlciwgbnVsbCksIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3Rsc19xdWVyeV90YWJsZS5UbHNRdWVyeVRhYmxlLCB7CiAgICAgIGVuZERhdGU6IHRvLAogICAgICBmaWx0ZXJRdWVyeTogZmlsdGVyUXVlcnksCiAgICAgIGZsb3dUYXJnZXQ6IGZsb3dUYXJnZXQsCiAgICAgIGlwOiBpcCwKICAgICAgc2V0UXVlcnk6IHNldFF1ZXJ5LAogICAgICBza2lwOiBpc0luaXRpYWxpemluZywKICAgICAgc3RhcnREYXRlOiBmcm9tLAogICAgICB0eXBlOiB0eXBlCiAgICB9KSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aVNwYWNlciwgbnVsbCksIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2Fub21hbGllc19xdWVyeV90YWJfYm9keS5Bbm9tYWxpZXNRdWVyeVRhYkJvZHksIHsKICAgICAgZmlsdGVyUXVlcnk6IGZpbHRlclF1ZXJ5LAogICAgICBzZXRRdWVyeTogc2V0UXVlcnksCiAgICAgIHN0YXJ0RGF0ZTogZnJvbSwKICAgICAgZW5kRGF0ZTogdG8sCiAgICAgIHNraXA6IGlzSW5pdGlhbGl6aW5nLAogICAgICBpcDogaXAsCiAgICAgIHR5cGU6IHR5cGUsCiAgICAgIGZsb3dUYXJnZXQ6IGZsb3dUYXJnZXQsCiAgICAgIG5hcnJvd0RhdGVSYW5nZTogbmFycm93RGF0ZVJhbmdlLAogICAgICBoaWRlSGlzdG9ncmFtSWZFbXB0eTogdHJ1ZSwKICAgICAgQW5vbWFsaWVzVGFibGVDb21wb25lbnQ6IF9hbm9tYWxpZXNfbmV0d29ya190YWJsZS5Bbm9tYWxpZXNOZXR3b3JrVGFibGUKICAgIH0pKSkgOiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF93cmFwcGVyX3BhZ2UuV3JhcHBlclBhZ2UsIG51bGwsIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2hlYWRlcl9wYWdlLkhlYWRlclBhZ2UsIHsKICAgICAgYm9yZGVyOiB0cnVlLAogICAgICB0aXRsZTogaXAKICAgIH0pLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9uZXR3b3JrX2VtcHR5X3BhZ2UuTmV0d29ya0VtcHR5UGFnZSwgbnVsbCkpOwogIH0pLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9zcHlfcm91dGVzLlNweVJvdXRlLCBudWxsKSk7Cn07CgpleHBvcnRzLklQRGV0YWlsc0NvbXBvbmVudCA9IElQRGV0YWlsc0NvbXBvbmVudDsKSVBEZXRhaWxzQ29tcG9uZW50LmRpc3BsYXlOYW1lID0gJ0lQRGV0YWlsc0NvbXBvbmVudCc7Cgp2YXIgbWFrZU1hcFN0YXRlVG9Qcm9wcyA9IGZ1bmN0aW9uIG1ha2VNYXBTdGF0ZVRvUHJvcHMoKSB7CiAgdmFyIGdldEdsb2JhbFF1ZXJ5U2VsZWN0b3IgPSBfc3RvcmUuaW5wdXRzU2VsZWN0b3JzLmdsb2JhbFF1ZXJ5U2VsZWN0b3IoKTsKCiAgdmFyIGdldEdsb2JhbEZpbHRlcnNRdWVyeVNlbGVjdG9yID0gX3N0b3JlLmlucHV0c1NlbGVjdG9ycy5nbG9iYWxGaWx0ZXJzUXVlcnlTZWxlY3RvcigpOwoKICByZXR1cm4gZnVuY3Rpb24gKHN0YXRlKSB7CiAgICByZXR1cm4gewogICAgICBxdWVyeTogZ2V0R2xvYmFsUXVlcnlTZWxlY3RvcihzdGF0ZSksCiAgICAgIGZpbHRlcnM6IGdldEdsb2JhbEZpbHRlcnNRdWVyeVNlbGVjdG9yKHN0YXRlKQogICAgfTsKICB9Owp9OwoKdmFyIG1hcERpc3BhdGNoVG9Qcm9wcyA9IHsKICBzZXRBYnNvbHV0ZVJhbmdlRGF0ZVBpY2tlcjogX2FjdGlvbnMuc2V0QWJzb2x1dGVSYW5nZURhdGVQaWNrZXIsCiAgc2V0SXBEZXRhaWxzVGFibGVzQWN0aXZlUGFnZVRvWmVybzogX2FjdGlvbnMyLnNldElwRGV0YWlsc1RhYmxlc0FjdGl2ZVBhZ2VUb1plcm8KfTsKdmFyIGNvbm5lY3RvciA9ICgwLCBfcmVhY3RSZWR1eC5jb25uZWN0KShtYWtlTWFwU3RhdGVUb1Byb3BzLCBtYXBEaXNwYXRjaFRvUHJvcHMpOwpleHBvcnRzLmNvbm5lY3RvciA9IGNvbm5lY3RvcjsKdmFyIElQRGV0YWlscyA9IGNvbm5lY3RvcihfcmVhY3QuZGVmYXVsdC5tZW1vKElQRGV0YWlsc0NvbXBvbmVudCkpOwpleHBvcnRzLklQRGV0YWlscyA9IElQRGV0YWlsczs="},null]}