{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/siem/public/components/page/network/network_top_countries_table/index.js","dependencies":[{"path":"x-pack/legacy/plugins/siem/public/components/page/network/network_top_countries_table/index.js","mtime":1589249553100},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLk5ldHdvcmtUb3BDb3VudHJpZXNUYWJsZSA9IGV4cG9ydHMuTmV0d29ya1RvcENvdW50cmllc1RhYmxlSWQgPSB2b2lkIDA7Cgp2YXIgX2ZwID0gcmVxdWlyZSgibG9kYXNoL2ZwIik7Cgp2YXIgX3JlYWN0ID0gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQocmVxdWlyZSgicmVhY3QiKSk7Cgp2YXIgX3JlYWN0UmVkdXggPSByZXF1aXJlKCJyZWFjdC1yZWR1eCIpOwoKdmFyIF9mYXN0RGVlcEVxdWFsID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCJmYXN0LWRlZXAtZXF1YWwiKSk7Cgp2YXIgX2FjdGlvbnMgPSByZXF1aXJlKCIuLi8uLi8uLi8uLi9zdG9yZS9hY3Rpb25zIik7Cgp2YXIgX3R5cGVzID0gcmVxdWlyZSgiLi4vLi4vLi4vLi4vZ3JhcGhxbC90eXBlcyIpOwoKdmFyIF9zdG9yZSA9IHJlcXVpcmUoIi4uLy4uLy4uLy4uL3N0b3JlIik7Cgp2YXIgX3BhZ2luYXRlZF90YWJsZSA9IHJlcXVpcmUoIi4uLy4uLy4uL3BhZ2luYXRlZF90YWJsZSIpOwoKdmFyIF9jb2x1bW5zID0gcmVxdWlyZSgiLi9jb2x1bW5zIik7Cgp2YXIgaTE4biA9IF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKHJlcXVpcmUoIi4vdHJhbnNsYXRpb25zIikpOwoKZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsKICByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogewogICAgZGVmYXVsdDogb2JqCiAgfTsKfQoKZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQob2JqKSB7CiAgaWYgKG9iaiAmJiBvYmouX19lc01vZHVsZSkgewogICAgcmV0dXJuIG9iajsKICB9IGVsc2UgewogICAgdmFyIG5ld09iaiA9IHt9OwoKICAgIGlmIChvYmogIT0gbnVsbCkgewogICAgICBmb3IgKHZhciBrZXkgaW4gb2JqKSB7CiAgICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGtleSkpIHsKICAgICAgICAgIHZhciBkZXNjID0gT2JqZWN0LmRlZmluZVByb3BlcnR5ICYmIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IgPyBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iaiwga2V5KSA6IHt9OwoKICAgICAgICAgIGlmIChkZXNjLmdldCB8fCBkZXNjLnNldCkgewogICAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobmV3T2JqLCBrZXksIGRlc2MpOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgbmV3T2JqW2tleV0gPSBvYmpba2V5XTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgIH0KCiAgICBuZXdPYmouZGVmYXVsdCA9IG9iajsKICAgIHJldHVybiBuZXdPYmo7CiAgfQp9Ci8qCiAqIENvcHlyaWdodCBFbGFzdGljc2VhcmNoIEIuVi4gYW5kL29yIGxpY2Vuc2VkIHRvIEVsYXN0aWNzZWFyY2ggQi5WLiB1bmRlciBvbmUKICogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuIExpY2Vuc2VkIHVuZGVyIHRoZSBFbGFzdGljIExpY2Vuc2U7CiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgRWxhc3RpYyBMaWNlbnNlLgogKi8KCgp2YXIgcm93SXRlbXMgPSBbewogIHRleHQ6IGkxOG4uUk9XU181LAogIG51bWJlck9mUm93OiA1Cn0sIHsKICB0ZXh0OiBpMThuLlJPV1NfMTAsCiAgbnVtYmVyT2ZSb3c6IDEwCn1dOwp2YXIgTmV0d29ya1RvcENvdW50cmllc1RhYmxlSWQgPSAnbmV0d29ya1RvcENvdW50cmllcy10b3AtdGFsa2Vycyc7CmV4cG9ydHMuTmV0d29ya1RvcENvdW50cmllc1RhYmxlSWQgPSBOZXR3b3JrVG9wQ291bnRyaWVzVGFibGVJZDsKCnZhciBOZXR3b3JrVG9wQ291bnRyaWVzVGFibGVDb21wb25lbnQgPSBfcmVhY3QuZGVmYXVsdC5tZW1vKGZ1bmN0aW9uIChfcmVmKSB7CiAgdmFyIGFjdGl2ZVBhZ2UgPSBfcmVmLmFjdGl2ZVBhZ2UsCiAgICAgIGRhdGEgPSBfcmVmLmRhdGEsCiAgICAgIGZha2VUb3RhbENvdW50ID0gX3JlZi5mYWtlVG90YWxDb3VudCwKICAgICAgZmxvd1RhcmdldGVkID0gX3JlZi5mbG93VGFyZ2V0ZWQsCiAgICAgIGlkID0gX3JlZi5pZCwKICAgICAgaW5kZXhQYXR0ZXJuID0gX3JlZi5pbmRleFBhdHRlcm4sCiAgICAgIGlzSW5zcGVjdCA9IF9yZWYuaXNJbnNwZWN0LAogICAgICBsaW1pdCA9IF9yZWYubGltaXQsCiAgICAgIGxvYWRpbmcgPSBfcmVmLmxvYWRpbmcsCiAgICAgIGxvYWRQYWdlID0gX3JlZi5sb2FkUGFnZSwKICAgICAgc2hvd01vcmVQYWdlc0luZGljYXRvciA9IF9yZWYuc2hvd01vcmVQYWdlc0luZGljYXRvciwKICAgICAgc29ydCA9IF9yZWYuc29ydCwKICAgICAgdG90YWxDb3VudCA9IF9yZWYudG90YWxDb3VudCwKICAgICAgdHlwZSA9IF9yZWYudHlwZSwKICAgICAgdXBkYXRlTmV0d29ya1RhYmxlID0gX3JlZi51cGRhdGVOZXR3b3JrVGFibGU7CiAgdmFyIHRhYmxlVHlwZTsKICB2YXIgaGVhZGVyVGl0bGUgPSBmbG93VGFyZ2V0ZWQgPT09IF90eXBlcy5GbG93VGFyZ2V0U291cmNlRGVzdC5zb3VyY2UgPyBpMThuLlNPVVJDRV9DT1VOVFJJRVMgOiBpMThuLkRFU1RJTkFUSU9OX0NPVU5UUklFUzsKCiAgaWYgKHR5cGUgPT09IF9zdG9yZS5uZXR3b3JrTW9kZWwuTmV0d29ya1R5cGUucGFnZSkgewogICAgdGFibGVUeXBlID0gZmxvd1RhcmdldGVkID09PSBfdHlwZXMuRmxvd1RhcmdldFNvdXJjZURlc3Quc291cmNlID8gX3N0b3JlLm5ldHdvcmtNb2RlbC5OZXR3b3JrVGFibGVUeXBlLnRvcENvdW50cmllc1NvdXJjZSA6IF9zdG9yZS5uZXR3b3JrTW9kZWwuTmV0d29ya1RhYmxlVHlwZS50b3BDb3VudHJpZXNEZXN0aW5hdGlvbjsKICB9IGVsc2UgewogICAgdGFibGVUeXBlID0gZmxvd1RhcmdldGVkID09PSBfdHlwZXMuRmxvd1RhcmdldFNvdXJjZURlc3Quc291cmNlID8gX3N0b3JlLm5ldHdvcmtNb2RlbC5JcERldGFpbHNUYWJsZVR5cGUudG9wQ291bnRyaWVzU291cmNlIDogX3N0b3JlLm5ldHdvcmtNb2RlbC5JcERldGFpbHNUYWJsZVR5cGUudG9wQ291bnRyaWVzRGVzdGluYXRpb247CiAgfQoKICB2YXIgZmllbGQgPSBzb3J0LmZpZWxkID09PSBfdHlwZXMuTmV0d29ya1RvcFRhYmxlc0ZpZWxkcy5ieXRlc19vdXQgfHwgc29ydC5maWVsZCA9PT0gX3R5cGVzLk5ldHdvcmtUb3BUYWJsZXNGaWVsZHMuYnl0ZXNfaW4gPyAibm9kZS5uZXR3b3JrLiIuY29uY2F0KHNvcnQuZmllbGQpIDogIm5vZGUuIi5jb25jYXQoZmxvd1RhcmdldGVkLCAiLiIpLmNvbmNhdChzb3J0LmZpZWxkKTsKICB2YXIgdXBkYXRlTGltaXRQYWdpbmF0aW9uID0gKDAsIF9yZWFjdC51c2VDYWxsYmFjaykoZnVuY3Rpb24gKG5ld0xpbWl0KSB7CiAgICByZXR1cm4gdXBkYXRlTmV0d29ya1RhYmxlKHsKICAgICAgbmV0d29ya1R5cGU6IHR5cGUsCiAgICAgIHRhYmxlVHlwZTogdGFibGVUeXBlLAogICAgICB1cGRhdGVzOiB7CiAgICAgICAgbGltaXQ6IG5ld0xpbWl0CiAgICAgIH0KICAgIH0pOwogIH0sIFt0eXBlLCB1cGRhdGVOZXR3b3JrVGFibGUsIHRhYmxlVHlwZV0pOwogIHZhciB1cGRhdGVBY3RpdmVQYWdlID0gKDAsIF9yZWFjdC51c2VDYWxsYmFjaykoZnVuY3Rpb24gKG5ld1BhZ2UpIHsKICAgIHJldHVybiB1cGRhdGVOZXR3b3JrVGFibGUoewogICAgICBuZXR3b3JrVHlwZTogdHlwZSwKICAgICAgdGFibGVUeXBlOiB0YWJsZVR5cGUsCiAgICAgIHVwZGF0ZXM6IHsKICAgICAgICBhY3RpdmVQYWdlOiBuZXdQYWdlCiAgICAgIH0KICAgIH0pOwogIH0sIFt0eXBlLCB1cGRhdGVOZXR3b3JrVGFibGUsIHRhYmxlVHlwZV0pOwogIHZhciBvbkNoYW5nZSA9ICgwLCBfcmVhY3QudXNlQ2FsbGJhY2spKGZ1bmN0aW9uIChjcml0ZXJpYSkgewogICAgaWYgKGNyaXRlcmlhLnNvcnQgIT0gbnVsbCkgewogICAgICB2YXIgc3BsaXRGaWVsZCA9IGNyaXRlcmlhLnNvcnQuZmllbGQuc3BsaXQoJy4nKTsKICAgICAgdmFyIGxhc3RGaWVsZCA9ICgwLCBfZnAubGFzdCkoc3BsaXRGaWVsZCk7CiAgICAgIHZhciBuZXdTb3J0RGlyZWN0aW9uID0gbGFzdEZpZWxkICE9PSBzb3J0LmZpZWxkID8gX3R5cGVzLkRpcmVjdGlvbi5kZXNjIDogY3JpdGVyaWEuc29ydC5kaXJlY3Rpb247IC8vIHNvcnQgYnkgZGVzYyBvbiBpbml0IGNsaWNrCgogICAgICB2YXIgbmV3VG9wQ291bnRyaWVzU29ydCA9IHsKICAgICAgICBmaWVsZDogbGFzdEZpZWxkLAogICAgICAgIGRpcmVjdGlvbjogbmV3U29ydERpcmVjdGlvbgogICAgICB9OwoKICAgICAgaWYgKCEoMCwgX2Zhc3REZWVwRXF1YWwuZGVmYXVsdCkobmV3VG9wQ291bnRyaWVzU29ydCwgc29ydCkpIHsKICAgICAgICB1cGRhdGVOZXR3b3JrVGFibGUoewogICAgICAgICAgbmV0d29ya1R5cGU6IHR5cGUsCiAgICAgICAgICB0YWJsZVR5cGU6IHRhYmxlVHlwZSwKICAgICAgICAgIHVwZGF0ZXM6IHsKICAgICAgICAgICAgc29ydDogbmV3VG9wQ291bnRyaWVzU29ydAogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICB9CiAgICB9CiAgfSwgW3R5cGUsIHNvcnQsIHRhYmxlVHlwZSwgdXBkYXRlTmV0d29ya1RhYmxlXSk7CiAgdmFyIGNvbHVtbnMgPSAoMCwgX3JlYWN0LnVzZU1lbW8pKGZ1bmN0aW9uICgpIHsKICAgIHJldHVybiAoMCwgX2NvbHVtbnMuZ2V0Q291bnRyaWVzQ29sdW1uc0N1cmF0ZWQpKGluZGV4UGF0dGVybiwgZmxvd1RhcmdldGVkLCB0eXBlLCBOZXR3b3JrVG9wQ291bnRyaWVzVGFibGVJZCk7CiAgfSwgW2luZGV4UGF0dGVybiwgZmxvd1RhcmdldGVkLCB0eXBlXSk7CiAgcmV0dXJuIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3BhZ2luYXRlZF90YWJsZS5QYWdpbmF0ZWRUYWJsZSwgewogICAgYWN0aXZlUGFnZTogYWN0aXZlUGFnZSwKICAgIGNvbHVtbnM6IGNvbHVtbnMsCiAgICBkYXRhVGVzdFN1Ymo6ICJ0YWJsZS0iLmNvbmNhdCh0YWJsZVR5cGUpLAogICAgaGVhZGVyQ291bnQ6IHRvdGFsQ291bnQsCiAgICBoZWFkZXJUaXRsZTogaGVhZGVyVGl0bGUsCiAgICBoZWFkZXJVbml0OiBpMThuLlVOSVQodG90YWxDb3VudCksCiAgICBpZDogaWQsCiAgICBpc0luc3BlY3Q6IGlzSW5zcGVjdCwKICAgIGl0ZW1zUGVyUm93OiByb3dJdGVtcywKICAgIGxpbWl0OiBsaW1pdCwKICAgIGxvYWRpbmc6IGxvYWRpbmcsCiAgICBsb2FkUGFnZTogbG9hZFBhZ2UsCiAgICBvbkNoYW5nZTogb25DaGFuZ2UsCiAgICBwYWdlT2ZJdGVtczogZGF0YSwKICAgIHNob3dNb3JlUGFnZXNJbmRpY2F0b3I6IHNob3dNb3JlUGFnZXNJbmRpY2F0b3IsCiAgICBzb3J0aW5nOiB7CiAgICAgIGZpZWxkOiBmaWVsZCwKICAgICAgZGlyZWN0aW9uOiBzb3J0LmRpcmVjdGlvbgogICAgfSwKICAgIHRvdGFsQ291bnQ6IGZha2VUb3RhbENvdW50LAogICAgdXBkYXRlQWN0aXZlUGFnZTogdXBkYXRlQWN0aXZlUGFnZSwKICAgIHVwZGF0ZUxpbWl0UGFnaW5hdGlvbjogdXBkYXRlTGltaXRQYWdpbmF0aW9uCiAgfSk7Cn0pOwoKTmV0d29ya1RvcENvdW50cmllc1RhYmxlQ29tcG9uZW50LmRpc3BsYXlOYW1lID0gJ05ldHdvcmtUb3BDb3VudHJpZXNUYWJsZUNvbXBvbmVudCc7Cgp2YXIgbWFrZU1hcFN0YXRlVG9Qcm9wcyA9IGZ1bmN0aW9uIG1ha2VNYXBTdGF0ZVRvUHJvcHMoKSB7CiAgdmFyIGdldFRvcENvdW50cmllc1NlbGVjdG9yID0gX3N0b3JlLm5ldHdvcmtTZWxlY3RvcnMudG9wQ291bnRyaWVzU2VsZWN0b3IoKTsKCiAgcmV0dXJuIGZ1bmN0aW9uIChzdGF0ZSwgX3JlZjIpIHsKICAgIHZhciB0eXBlID0gX3JlZjIudHlwZSwKICAgICAgICBmbG93VGFyZ2V0ZWQgPSBfcmVmMi5mbG93VGFyZ2V0ZWQ7CiAgICByZXR1cm4gZ2V0VG9wQ291bnRyaWVzU2VsZWN0b3Ioc3RhdGUsIHR5cGUsIGZsb3dUYXJnZXRlZCk7CiAgfTsKfTsKCnZhciBtYXBEaXNwYXRjaFRvUHJvcHMgPSB7CiAgdXBkYXRlTmV0d29ya1RhYmxlOiBfYWN0aW9ucy5uZXR3b3JrQWN0aW9ucy51cGRhdGVOZXR3b3JrVGFibGUKfTsKdmFyIGNvbm5lY3RvciA9ICgwLCBfcmVhY3RSZWR1eC5jb25uZWN0KShtYWtlTWFwU3RhdGVUb1Byb3BzLCBtYXBEaXNwYXRjaFRvUHJvcHMpOwp2YXIgTmV0d29ya1RvcENvdW50cmllc1RhYmxlID0gY29ubmVjdG9yKE5ldHdvcmtUb3BDb3VudHJpZXNUYWJsZUNvbXBvbmVudCk7CmV4cG9ydHMuTmV0d29ya1RvcENvdW50cmllc1RhYmxlID0gTmV0d29ya1RvcENvdW50cmllc1RhYmxlOw=="},null]}