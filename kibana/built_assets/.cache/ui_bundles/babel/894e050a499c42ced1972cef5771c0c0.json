{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!src/legacy/core_plugins/vis_type_vislib/public/area.js","dependencies":[{"path":"src/legacy/core_plugins/vis_type_vislib/public/area.js","mtime":1589249550086},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmNyZWF0ZUFyZWFWaXNUeXBlRGVmaW5pdGlvbiA9IHZvaWQgMDsKCnZhciBfaTE4biA9IHJlcXVpcmUoIkBrYm4vaTE4biIpOwoKdmFyIF9zZXJ2aWNlcyA9IHJlcXVpcmUoIkBlbGFzdGljL2V1aS9saWIvc2VydmljZXMiKTsKCnZhciBfcHVibGljID0gcmVxdWlyZSgiLi4vLi4vLi4vLi4vcGx1Z2lucy9kYXRhL3B1YmxpYyIpOwoKdmFyIF9wdWJsaWMyID0gcmVxdWlyZSgiLi4vLi4vdmlzX2RlZmF1bHRfZWRpdG9yL3B1YmxpYyIpOwoKdmFyIF9jb2xsZWN0aW9ucyA9IHJlcXVpcmUoIi4vdXRpbHMvY29sbGVjdGlvbnMiKTsKCnZhciBfY29tbW9uX2NvbmZpZyA9IHJlcXVpcmUoIi4vdXRpbHMvY29tbW9uX2NvbmZpZyIpOwoKdmFyIF92aXNfY29udHJvbGxlciA9IHJlcXVpcmUoIi4vdmlzX2NvbnRyb2xsZXIiKTsKLyoKICogTGljZW5zZWQgdG8gRWxhc3RpY3NlYXJjaCBCLlYuIHVuZGVyIG9uZSBvciBtb3JlIGNvbnRyaWJ1dG9yCiAqIGxpY2Vuc2UgYWdyZWVtZW50cy4gU2VlIHRoZSBOT1RJQ0UgZmlsZSBkaXN0cmlidXRlZCB3aXRoCiAqIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvbiByZWdhcmRpbmcgY29weXJpZ2h0CiAqIG93bmVyc2hpcC4gRWxhc3RpY3NlYXJjaCBCLlYuIGxpY2Vuc2VzIHRoaXMgZmlsZSB0byB5b3UgdW5kZXIKICogdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlICJMaWNlbnNlIik7IHlvdSBtYXkKICogbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4KICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0CiAqCiAqICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMAogKgogKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsCiAqIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuCiAqICJBUyBJUyIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWQogKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUKICogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9ucwogKiB1bmRlciB0aGUgTGljZW5zZS4KICovCi8vIEB0cy1pZ25vcmUKCgp2YXIgY3JlYXRlQXJlYVZpc1R5cGVEZWZpbml0aW9uID0gZnVuY3Rpb24gY3JlYXRlQXJlYVZpc1R5cGVEZWZpbml0aW9uKGRlcHMpIHsKICByZXR1cm4gewogICAgbmFtZTogJ2FyZWEnLAogICAgdGl0bGU6IF9pMThuLmkxOG4udHJhbnNsYXRlKCd2aXNUeXBlVmlzbGliLmFyZWEuYXJlYVRpdGxlJywgewogICAgICBkZWZhdWx0TWVzc2FnZTogJ0FyZWEnCiAgICB9KSwKICAgIGljb246ICd2aXNBcmVhJywKICAgIGRlc2NyaXB0aW9uOiBfaTE4bi5pMThuLnRyYW5zbGF0ZSgndmlzVHlwZVZpc2xpYi5hcmVhLmFyZWFEZXNjcmlwdGlvbicsIHsKICAgICAgZGVmYXVsdE1lc3NhZ2U6ICdFbXBoYXNpemUgdGhlIHF1YW50aXR5IGJlbmVhdGggYSBsaW5lIGNoYXJ0JwogICAgfSksCiAgICB2aXN1YWxpemF0aW9uOiAoMCwgX3Zpc19jb250cm9sbGVyLmNyZWF0ZVZpc2xpYlZpc0NvbnRyb2xsZXIpKGRlcHMpLAogICAgdmlzQ29uZmlnOiB7CiAgICAgIGRlZmF1bHRzOiB7CiAgICAgICAgdHlwZTogJ2FyZWEnLAogICAgICAgIGdyaWQ6IHsKICAgICAgICAgIGNhdGVnb3J5TGluZXM6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICBjYXRlZ29yeUF4ZXM6IFt7CiAgICAgICAgICBpZDogJ0NhdGVnb3J5QXhpcy0xJywKICAgICAgICAgIHR5cGU6IF9jb2xsZWN0aW9ucy5BeGlzVHlwZXMuQ0FURUdPUlksCiAgICAgICAgICBwb3NpdGlvbjogX2NvbGxlY3Rpb25zLlBvc2l0aW9ucy5CT1RUT00sCiAgICAgICAgICBzaG93OiB0cnVlLAogICAgICAgICAgc3R5bGU6IHt9LAogICAgICAgICAgc2NhbGU6IHsKICAgICAgICAgICAgdHlwZTogX2NvbGxlY3Rpb25zLlNjYWxlVHlwZXMuTElORUFSCiAgICAgICAgICB9LAogICAgICAgICAgbGFiZWxzOiB7CiAgICAgICAgICAgIHNob3c6IHRydWUsCiAgICAgICAgICAgIGZpbHRlcjogdHJ1ZSwKICAgICAgICAgICAgdHJ1bmNhdGU6IDEwMAogICAgICAgICAgfSwKICAgICAgICAgIHRpdGxlOiB7fQogICAgICAgIH1dLAogICAgICAgIHZhbHVlQXhlczogW3sKICAgICAgICAgIGlkOiAnVmFsdWVBeGlzLTEnLAogICAgICAgICAgbmFtZTogJ0xlZnRBeGlzLTEnLAogICAgICAgICAgdHlwZTogX2NvbGxlY3Rpb25zLkF4aXNUeXBlcy5WQUxVRSwKICAgICAgICAgIHBvc2l0aW9uOiBfY29sbGVjdGlvbnMuUG9zaXRpb25zLkxFRlQsCiAgICAgICAgICBzaG93OiB0cnVlLAogICAgICAgICAgc3R5bGU6IHt9LAogICAgICAgICAgc2NhbGU6IHsKICAgICAgICAgICAgdHlwZTogX2NvbGxlY3Rpb25zLlNjYWxlVHlwZXMuTElORUFSLAogICAgICAgICAgICBtb2RlOiBfY29sbGVjdGlvbnMuQXhpc01vZGVzLk5PUk1BTAogICAgICAgICAgfSwKICAgICAgICAgIGxhYmVsczogewogICAgICAgICAgICBzaG93OiB0cnVlLAogICAgICAgICAgICByb3RhdGU6IF9jb2xsZWN0aW9ucy5Sb3RhdGVzLkhPUklaT05UQUwsCiAgICAgICAgICAgIGZpbHRlcjogZmFsc2UsCiAgICAgICAgICAgIHRydW5jYXRlOiAxMDAKICAgICAgICAgIH0sCiAgICAgICAgICB0aXRsZTogewogICAgICAgICAgICB0ZXh0OiBfY29tbW9uX2NvbmZpZy5jb3VudExhYmVsCiAgICAgICAgICB9CiAgICAgICAgfV0sCiAgICAgICAgc2VyaWVzUGFyYW1zOiBbewogICAgICAgICAgc2hvdzogdHJ1ZSwKICAgICAgICAgIHR5cGU6IF9jb2xsZWN0aW9ucy5DaGFydFR5cGVzLkFSRUEsCiAgICAgICAgICBtb2RlOiBfY29sbGVjdGlvbnMuQ2hhcnRNb2Rlcy5TVEFDS0VELAogICAgICAgICAgZGF0YTogewogICAgICAgICAgICBsYWJlbDogX2NvbW1vbl9jb25maWcuY291bnRMYWJlbCwKICAgICAgICAgICAgaWQ6ICcxJwogICAgICAgICAgfSwKICAgICAgICAgIGRyYXdMaW5lc0JldHdlZW5Qb2ludHM6IHRydWUsCiAgICAgICAgICBsaW5lV2lkdGg6IDIsCiAgICAgICAgICBzaG93Q2lyY2xlczogdHJ1ZSwKICAgICAgICAgIGludGVycG9sYXRlOiBfY29sbGVjdGlvbnMuSW50ZXJwb2xhdGlvbk1vZGVzLkxJTkVBUiwKICAgICAgICAgIHZhbHVlQXhpczogJ1ZhbHVlQXhpcy0xJwogICAgICAgIH1dLAogICAgICAgIGFkZFRvb2x0aXA6IHRydWUsCiAgICAgICAgYWRkTGVnZW5kOiB0cnVlLAogICAgICAgIGxlZ2VuZFBvc2l0aW9uOiBfY29sbGVjdGlvbnMuUG9zaXRpb25zLlJJR0hULAogICAgICAgIHRpbWVzOiBbXSwKICAgICAgICBhZGRUaW1lTWFya2VyOiBmYWxzZSwKICAgICAgICB0aHJlc2hvbGRMaW5lOiB7CiAgICAgICAgICBzaG93OiBmYWxzZSwKICAgICAgICAgIHZhbHVlOiAxMCwKICAgICAgICAgIHdpZHRoOiAxLAogICAgICAgICAgc3R5bGU6IF9jb2xsZWN0aW9ucy5UaHJlc2hvbGRMaW5lU3R5bGVzLkZVTEwsCiAgICAgICAgICBjb2xvcjogKDAsIF9zZXJ2aWNlcy5ldWlQYWxldHRlQ29sb3JCbGluZCkoKVs5XQogICAgICAgIH0sCiAgICAgICAgbGFiZWxzOiB7fQogICAgICB9CiAgICB9LAogICAgZXZlbnRzOiB7CiAgICAgIGJydXNoOiB7CiAgICAgICAgZGlzYWJsZWQ6IGZhbHNlCiAgICAgIH0KICAgIH0sCiAgICBlZGl0b3JDb25maWc6IHsKICAgICAgY29sbGVjdGlvbnM6ICgwLCBfY29sbGVjdGlvbnMuZ2V0Q29uZmlnQ29sbGVjdGlvbnMpKCksCiAgICAgIG9wdGlvblRhYnM6ICgwLCBfY29tbW9uX2NvbmZpZy5nZXRBcmVhT3B0aW9uVGFicykoKSwKICAgICAgc2NoZW1hczogbmV3IF9wdWJsaWMyLlNjaGVtYXMoW3sKICAgICAgICBncm91cDogX3B1YmxpYy5BZ2dHcm91cE5hbWVzLk1ldHJpY3MsCiAgICAgICAgbmFtZTogJ21ldHJpYycsCiAgICAgICAgdGl0bGU6IF9pMThuLmkxOG4udHJhbnNsYXRlKCd2aXNUeXBlVmlzbGliLmFyZWEubWV0cmljc1RpdGxlJywgewogICAgICAgICAgZGVmYXVsdE1lc3NhZ2U6ICdZLWF4aXMnCiAgICAgICAgfSksCiAgICAgICAgYWdnRmlsdGVyOiBbJyFnZW9fY2VudHJvaWQnLCAnIWdlb19ib3VuZHMnXSwKICAgICAgICBtaW46IDEsCiAgICAgICAgZGVmYXVsdHM6IFt7CiAgICAgICAgICBzY2hlbWE6ICdtZXRyaWMnLAogICAgICAgICAgdHlwZTogJ2NvdW50JwogICAgICAgIH1dCiAgICAgIH0sIHsKICAgICAgICBncm91cDogX3B1YmxpYy5BZ2dHcm91cE5hbWVzLk1ldHJpY3MsCiAgICAgICAgbmFtZTogJ3JhZGl1cycsCiAgICAgICAgdGl0bGU6IF9pMThuLmkxOG4udHJhbnNsYXRlKCd2aXNUeXBlVmlzbGliLmFyZWEucmFkaXVzVGl0bGUnLCB7CiAgICAgICAgICBkZWZhdWx0TWVzc2FnZTogJ0RvdCBzaXplJwogICAgICAgIH0pLAogICAgICAgIG1pbjogMCwKICAgICAgICBtYXg6IDEsCiAgICAgICAgYWdnRmlsdGVyOiBbJ2NvdW50JywgJ2F2ZycsICdzdW0nLCAnbWluJywgJ21heCcsICdjYXJkaW5hbGl0eSddCiAgICAgIH0sIHsKICAgICAgICBncm91cDogX3B1YmxpYy5BZ2dHcm91cE5hbWVzLkJ1Y2tldHMsCiAgICAgICAgbmFtZTogJ3NlZ21lbnQnLAogICAgICAgIHRpdGxlOiBfaTE4bi5pMThuLnRyYW5zbGF0ZSgndmlzVHlwZVZpc2xpYi5hcmVhLnNlZ21lbnRUaXRsZScsIHsKICAgICAgICAgIGRlZmF1bHRNZXNzYWdlOiAnWC1heGlzJwogICAgICAgIH0pLAogICAgICAgIG1pbjogMCwKICAgICAgICBtYXg6IDEsCiAgICAgICAgYWdnRmlsdGVyOiBbJyFnZW9oYXNoX2dyaWQnLCAnIWdlb3RpbGVfZ3JpZCcsICchZmlsdGVyJ10KICAgICAgfSwgewogICAgICAgIGdyb3VwOiBfcHVibGljLkFnZ0dyb3VwTmFtZXMuQnVja2V0cywKICAgICAgICBuYW1lOiAnZ3JvdXAnLAogICAgICAgIHRpdGxlOiBfaTE4bi5pMThuLnRyYW5zbGF0ZSgndmlzVHlwZVZpc2xpYi5hcmVhLmdyb3VwVGl0bGUnLCB7CiAgICAgICAgICBkZWZhdWx0TWVzc2FnZTogJ1NwbGl0IHNlcmllcycKICAgICAgICB9KSwKICAgICAgICBtaW46IDAsCiAgICAgICAgbWF4OiAzLAogICAgICAgIGFnZ0ZpbHRlcjogWychZ2VvaGFzaF9ncmlkJywgJyFnZW90aWxlX2dyaWQnLCAnIWZpbHRlciddCiAgICAgIH0sIHsKICAgICAgICBncm91cDogX3B1YmxpYy5BZ2dHcm91cE5hbWVzLkJ1Y2tldHMsCiAgICAgICAgbmFtZTogJ3NwbGl0JywKICAgICAgICB0aXRsZTogX2kxOG4uaTE4bi50cmFuc2xhdGUoJ3Zpc1R5cGVWaXNsaWIuYXJlYS5zcGxpdFRpdGxlJywgewogICAgICAgICAgZGVmYXVsdE1lc3NhZ2U6ICdTcGxpdCBjaGFydCcKICAgICAgICB9KSwKICAgICAgICBtaW46IDAsCiAgICAgICAgbWF4OiAxLAogICAgICAgIGFnZ0ZpbHRlcjogWychZ2VvaGFzaF9ncmlkJywgJyFnZW90aWxlX2dyaWQnLCAnIWZpbHRlciddCiAgICAgIH1dKQogICAgfQogIH07Cn07CgpleHBvcnRzLmNyZWF0ZUFyZWFWaXNUeXBlRGVmaW5pdGlvbiA9IGNyZWF0ZUFyZWFWaXNUeXBlRGVmaW5pdGlvbjs="},null]}