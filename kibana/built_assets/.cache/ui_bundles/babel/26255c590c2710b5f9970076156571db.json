{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!src/legacy/core_plugins/kibana/public/management/sections/index_patterns/create_index_pattern_wizard/lib/ensure_minimum_time.js","dependencies":[{"path":"src/legacy/core_plugins/kibana/public/management/sections/index_patterns/create_index_pattern_wizard/lib/ensure_minimum_time.js","mtime":1589249549822},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmVuc3VyZU1pbmltdW1UaW1lID0gZW5zdXJlTWluaW11bVRpbWU7CmV4cG9ydHMuREVGQVVMVF9NSU5JTVVNX1RJTUVfTVMgPSB2b2lkIDA7CgpmdW5jdGlvbiBhc3luY0dlbmVyYXRvclN0ZXAoZ2VuLCByZXNvbHZlLCByZWplY3QsIF9uZXh0LCBfdGhyb3csIGtleSwgYXJnKSB7CiAgdHJ5IHsKICAgIHZhciBpbmZvID0gZ2VuW2tleV0oYXJnKTsKICAgIHZhciB2YWx1ZSA9IGluZm8udmFsdWU7CiAgfSBjYXRjaCAoZXJyb3IpIHsKICAgIHJlamVjdChlcnJvcik7CiAgICByZXR1cm47CiAgfQoKICBpZiAoaW5mby5kb25lKSB7CiAgICByZXNvbHZlKHZhbHVlKTsKICB9IGVsc2UgewogICAgUHJvbWlzZS5yZXNvbHZlKHZhbHVlKS50aGVuKF9uZXh0LCBfdGhyb3cpOwogIH0KfQoKZnVuY3Rpb24gX2FzeW5jVG9HZW5lcmF0b3IoZm4pIHsKICByZXR1cm4gZnVuY3Rpb24gKCkgewogICAgdmFyIHNlbGYgPSB0aGlzLAogICAgICAgIGFyZ3MgPSBhcmd1bWVudHM7CiAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgICB2YXIgZ2VuID0gZm4uYXBwbHkoc2VsZiwgYXJncyk7CgogICAgICBmdW5jdGlvbiBfbmV4dCh2YWx1ZSkgewogICAgICAgIGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywgIm5leHQiLCB2YWx1ZSk7CiAgICAgIH0KCiAgICAgIGZ1bmN0aW9uIF90aHJvdyhlcnIpIHsKICAgICAgICBhc3luY0dlbmVyYXRvclN0ZXAoZ2VuLCByZXNvbHZlLCByZWplY3QsIF9uZXh0LCBfdGhyb3csICJ0aHJvdyIsIGVycik7CiAgICAgIH0KCiAgICAgIF9uZXh0KHVuZGVmaW5lZCk7CiAgICB9KTsKICB9Owp9Ci8qCiAqIExpY2Vuc2VkIHRvIEVsYXN0aWNzZWFyY2ggQi5WLiB1bmRlciBvbmUgb3IgbW9yZSBjb250cmlidXRvcgogKiBsaWNlbnNlIGFncmVlbWVudHMuIFNlZSB0aGUgTk9USUNFIGZpbGUgZGlzdHJpYnV0ZWQgd2l0aAogKiB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24gcmVnYXJkaW5nIGNvcHlyaWdodAogKiBvd25lcnNoaXAuIEVsYXN0aWNzZWFyY2ggQi5WLiBsaWNlbnNlcyB0aGlzIGZpbGUgdG8geW91IHVuZGVyCiAqIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSAiTGljZW5zZSIpOyB5b3UgbWF5CiAqIG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuCiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdAogKgogKiAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKICoKICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLAogKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbgogKiAiQVMgSVMiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkKICogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlCiAqIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnMKICogdW5kZXIgdGhlIExpY2Vuc2UuCiAqLwoKLyoqCiAqIFdoZW4geW91IG1ha2UgYW4gYXN5bmMgcmVxdWVzdCwgdHlwaWNhbGx5IHlvdSB3YW50IHRvIHNob3cgdGhlIHVzZXIgYSBzcGlubmVyIHdoaWxlIHRoZXkgd2FpdC4KICogSG93ZXZlciwgaWYgdGhlIHJlcXVlc3QgdGFrZXMgbGVzcyB0aGFuIDMwMCBtcywgdGhlIHNwaW5uZXIgd2lsbCBmbGlja2VyIGluIHRoZSBVSSBhbmQgdGhlIHVzZXIKICogd29uJ3QgaGF2ZSB0aW1lIHRvIHJlZ2lzdGVyIGl0IGFzIGEgc3Bpbm5lci4gVGhpcyBmdW5jdGlvbiBlbnN1cmVzIHRoZSBzcGlubmVyIChvciB3aGF0ZXZlcgogKiB5b3UncmUgc2hvd2luZyB0aGUgdXNlcikgZGlzcGxheXMgZm9yIGF0IGxlYXN0IDMwMCBtcywgZXZlbiBpZiB0aGUgcmVxdWVzdCBjb21wbGV0ZXMgYmVmb3JlIHRoZW4uCiAqLwoKCnZhciBERUZBVUxUX01JTklNVU1fVElNRV9NUyA9IDMwMDsKZXhwb3J0cy5ERUZBVUxUX01JTklNVU1fVElNRV9NUyA9IERFRkFVTFRfTUlOSU1VTV9USU1FX01TOwoKZnVuY3Rpb24gZW5zdXJlTWluaW11bVRpbWUoX3gpIHsKICByZXR1cm4gX2Vuc3VyZU1pbmltdW1UaW1lLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7Cn0KCmZ1bmN0aW9uIF9lbnN1cmVNaW5pbXVtVGltZSgpIHsKICBfZW5zdXJlTWluaW11bVRpbWUgPSBfYXN5bmNUb0dlbmVyYXRvcigKICAvKiNfX1BVUkVfXyovCiAgcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShwcm9taXNlT3JQcm9taXNlcykgewogICAgdmFyIG1pbmltdW1UaW1lTXMsCiAgICAgICAgcmV0dXJuVmFsdWUsCiAgICAgICAgYnVmZmVyZWRNaW5pbXVtVGltZU1zLAogICAgICAgIGFzeW5jQWN0aW9uU3RhcnRUaW1lLAogICAgICAgIGFzeW5jQWN0aW9uQ29tcGxldGlvblRpbWUsCiAgICAgICAgYXN5bmNBY3Rpb25EdXJhdGlvbiwKICAgICAgICBhZGRpdGlvbmFsV2FpdGluZ1RpbWUsCiAgICAgICAgX2FyZ3MgPSBhcmd1bWVudHM7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIG1pbmltdW1UaW1lTXMgPSBfYXJncy5sZW5ndGggPiAxICYmIF9hcmdzWzFdICE9PSB1bmRlZmluZWQgPyBfYXJnc1sxXSA6IERFRkFVTFRfTUlOSU1VTV9USU1FX01TOyAvLyBodHRwczovL2tpYmFuYS1jaS5lbGFzdGljLmNvL2pvYi9lbGFzdGljK2tpYmFuYSs2LngrbXVsdGlqb2ItaW50YWtlLzEyOC9jb25zb2xlCiAgICAgICAgICAgIC8vIFdlJ3JlIGhhdmluZyBwZXJpb2RpYyBmYWlsdXJlcyBhcm91bmQgdGhlIHRpbWluZyBoZXJlLiBJJ20gbm90IGV4YWN0bHkgc3VyZQogICAgICAgICAgICAvLyB3aHkgaXQncyBub3QgY29uc2lzdGVudCBidXQgSSdtIGdvaW5nIHRvIGFkZCBzb21lIGJ1ZmZlciBzcGFjZSBoZXJlIHRvCiAgICAgICAgICAgIC8vIHByZXZlbnQgdGhlc2UgcmFuZG9tIGZhaWx1cmVzCgogICAgICAgICAgICBidWZmZXJlZE1pbmltdW1UaW1lTXMgPSBtaW5pbXVtVGltZU1zICsgNTsgLy8gQmxvY2sgb24gdGhlIGFzeW5jIGFjdGlvbiBhbmQgc3RhcnQgdGhlIGNsb2NrLgoKICAgICAgICAgICAgYXN5bmNBY3Rpb25TdGFydFRpbWUgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKTsKCiAgICAgICAgICAgIGlmICghQXJyYXkuaXNBcnJheShwcm9taXNlT3JQcm9taXNlcykpIHsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gOTsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDY7CiAgICAgICAgICAgIHJldHVybiBQcm9taXNlLmFsbChwcm9taXNlT3JQcm9taXNlcyk7CgogICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICByZXR1cm5WYWx1ZSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxMjsKICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTE7CiAgICAgICAgICAgIHJldHVybiBwcm9taXNlT3JQcm9taXNlczsKCiAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICByZXR1cm5WYWx1ZSA9IF9jb250ZXh0LnNlbnQ7CgogICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgICAgLy8gTWVhc3VyZSBob3cgbG9uZyB0aGUgYXN5bmMgYWN0aW9uIHRvb2sgdG8gY29tcGxldGUuCiAgICAgICAgICAgIGFzeW5jQWN0aW9uQ29tcGxldGlvblRpbWUgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKTsKICAgICAgICAgICAgYXN5bmNBY3Rpb25EdXJhdGlvbiA9IGFzeW5jQWN0aW9uQ29tcGxldGlvblRpbWUgLSBhc3luY0FjdGlvblN0YXJ0VGltZTsgLy8gV2FpdCBsb25nZXIgaWYgdGhlIGFzeW5jIGFjdGlvbiBjb21wbGV0ZWQgdG9vIHF1aWNrbHkuCgogICAgICAgICAgICBpZiAoIShhc3luY0FjdGlvbkR1cmF0aW9uIDwgYnVmZmVyZWRNaW5pbXVtVGltZU1zKSkgewogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxODsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgYWRkaXRpb25hbFdhaXRpbmdUaW1lID0gYnVmZmVyZWRNaW5pbXVtVGltZU1zIC0gKGFzeW5jQWN0aW9uQ29tcGxldGlvblRpbWUgLSBhc3luY0FjdGlvblN0YXJ0VGltZSk7CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxODsKICAgICAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlKSB7CiAgICAgICAgICAgICAgcmV0dXJuIHNldFRpbWVvdXQocmVzb2x2ZSwgYWRkaXRpb25hbFdhaXRpbmdUaW1lKTsKICAgICAgICAgICAgfSk7CgogICAgICAgICAgY2FzZSAxODoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgcmV0dXJuVmFsdWUpOwoKICAgICAgICAgIGNhc2UgMTk6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZSk7CiAgfSkpOwogIHJldHVybiBfZW5zdXJlTWluaW11bVRpbWUuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKfQ=="},null]}