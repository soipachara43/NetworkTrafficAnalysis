{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/monitoring/public/np_imports/angular/providers/private.js","dependencies":[{"path":"x-pack/legacy/plugins/monitoring/public/np_imports/angular/providers/private.js","mtime":1589249552604},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLlByaXZhdGVQcm92aWRlciA9IFByaXZhdGVQcm92aWRlcjsKCnZhciBfbG9kYXNoID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCJsb2Rhc2giKSk7CgpmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfQoKLyoKICogQ29weXJpZ2h0IEVsYXN0aWNzZWFyY2ggQi5WLiBhbmQvb3IgbGljZW5zZWQgdG8gRWxhc3RpY3NlYXJjaCBCLlYuIHVuZGVyIG9uZQogKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gTGljZW5zZWQgdW5kZXIgdGhlIEVsYXN0aWMgTGljZW5zZTsKICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBFbGFzdGljIExpY2Vuc2UuCiAqLwoKLyoqCiAqICMgYFByaXZhdGUoKWAKICogUHJpdmF0ZSBtb2R1bGUgbG9hZGVyLCB1c2VkIHRvIG1lcmdlIGFuZ3VsYXIgYW5kIHJlcXVpcmUganMgZGVwZW5kZW5jeSBzdHlsZXMKICogYnkgYWxsb3dpbmcgYSByZXF1aXJlLmpzIG1vZHVsZSB0byBleHBvcnQgYSBzaW5nbGUgcHJvdmlkZXIgZnVuY3Rpb24gdGhhdCB3aWxsCiAqIGNyZWF0ZSBhIHZhbHVlIHVzZWQgd2l0aGluIGFuIGFuZ3VsYXIgYXBwbGljYXRpb24uIFRoaXMgcHJvdmlkZXIgY2FuIGRlY2xhcmUKICogYW5ndWxhciBkZXBlbmRlbmNpZXMgYnkgbGlzdGluZyB0aGVtIGFzIGFyZ3VtZW50cywgYW5kIGNhbiBiZSByZXF1aXJlIGFkZGl0aW9uYWwKICogUHJpdmF0ZSBtb2R1bGVzLgogKgogKiAjIyBEZWZpbmUgYSBwcml2YXRlIG1vZHVsZSBwcm92aWRlcjoKICogYGBganMKICogZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gUGluZ1Byb3ZpZGVyKCRodHRwKSB7CiAqICAgdGhpcy5waW5nID0gZnVuY3Rpb24gKCkgewogKiAgICAgcmV0dXJuICRodHRwLmhlYWQoJy9oZWFsdGgtY2hlY2snKTsKICogICB9OwogKiB9OwogKiBgYGAKICoKICogIyMgUmVxdWlyZSBhIHByaXZhdGUgbW9kdWxlOgogKiBgYGBqcwogKiBleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBTZXJ2ZXJIZWFsdGhQcm92aWRlcihQcml2YXRlLCBQcm9taXNlKSB7CiAqICAgbGV0IHBpbmcgPSBQcml2YXRlKHJlcXVpcmUoJ3VpL3BpbmcnKSk7CiAqICAgcmV0dXJuIHsKICogICAgIGNoZWNrOiBQcm9taXNlLm1ldGhvZChmdW5jdGlvbiAoKSB7CiAqICAgICAgIGxldCBhdHRlbXB0cyA9IDA7CiAqICAgICAgIHJldHVybiAoZnVuY3Rpb24gYXR0ZW1wdCgpIHsKICogICAgICAgICBhdHRlbXB0cyArPSAxOwogKiAgICAgICAgIHJldHVybiBwaW5nLnBpbmcoKQogKiAgICAgICAgIC5jYXRjaChmdW5jdGlvbiAoZXJyKSB7CiAqICAgICAgICAgICBpZiAoYXR0ZW1wdHMgPCAzKSByZXR1cm4gYXR0ZW1wdCgpOwogKiAgICAgICAgIH0pCiAqICAgICAgIH0oKSkKICogICAgICAgLnRoZW4oZnVuY3Rpb24gKCkgewogKiAgICAgICAgIHJldHVybiB0cnVlOwogKiAgICAgICB9KQogKiAgICAgICAuY2F0Y2goZnVuY3Rpb24gKCkgewogKiAgICAgICAgIHJldHVybiBmYWxzZTsKICogICAgICAgfSk7CiAqICAgICB9KQogKiAgIH0KICogfTsKICogYGBgCiAqCiAqICMgYFByaXZhdGUuc3R1Yihwcm92aWRlciwgbmV3SW5zdGFuY2UpYAogKiBgUHJpdmF0ZS5zdHViKClgIHJlcGxhY2VzIHRoZSBpbnN0YW5jZSBvZiBhIG1vZHVsZSB3aXRoIGFub3RoZXIgdmFsdWUuIFRoaXMgaXMgYWxsIHdlIGhhdmUgbmVlZGVkIHVudGlsIG5vdy4KICoKICogYGBganMKICogYmVmb3JlRWFjaChpbmplY3QoZnVuY3Rpb24gKCRpbmplY3RvciwgUHJpdmF0ZSkgewogKiAgIFByaXZhdGUuc3R1YigKICogICAgIC8vIHNpbmNlIHRoaXMgbW9kdWxlIGp1c3QgZXhwb3J0cyBhIGZ1bmN0aW9uLCB3ZSBuZWVkIHRvIGNoYW5nZQogKiAgICAgLy8gd2hhdCBQcml2YXRlIHJldHVybnMgaW4gb3JkZXIgdG8gbW9kaWZ5IGl0J3MgYmVoYXZpb3IKICogICAgIHJlcXVpcmUoJ3VpL2FnZ19yZXNwb25zZS9oaWVyYXJjaGljYWwvX2J1aWxkX3NwbGl0JyksCiAqICAgICBzaW5vbi5zdHViKCkucmV0dXJucyhmYWtlU3BsaXQpCiAqICAgKTsKICogfSkpOwogKiBgYGAKICoKICogIyBgUHJpdmF0ZS5zd2FwKG9sZFByb3ZpZGVyLCBuZXdQcm92aWRlcilgCiAqIFRoaXMgbmV3IG1ldGhvZCBkb2VzIGFuIDEtZm9yLTEgc3dhcCBvZiBtb2R1bGUgcHJvdmlkZXJzLCB1bmxpa2UgYHN0dWIoKWAgd2hpY2ggcmVwbGFjZXMgYSBtb2R1bGVzIGluc3RhbmNlLgogKiBQYXNzIHRoZSBtb2R1bGUgeW91IHdhbnQgdG8gc3dhcCBvdXQsIGFuZCB0aGUgb25lIGl0IHNob3VsZCBiZSByZXBsYWNlZCB3aXRoLCB0aGVuIHByb2ZpdC4KICoKICogTm90ZTogZXZlbiB0aG91Z2ggdGhpcyBleGFtcGxlIHNob3dzIGBzd2FwKClgIGJlaW5nIGNhbGxlZCBpbiBhIGNvbmZpZwogKiBmdW5jdGlvbiwgaXQgY2FuIGJlIGNhbGxlZCBmcm9tIGFueXdoZXJlLiBJdCBpcyBwYXJ0aWN1bGFybHkgdXNlZnVsCiAqIGluIHRoaXMgc2NlbmFyaW8gdGhvdWdoLgogKgogKiBgYGBqcwogKiBiZWZvcmVFYWNoKG1vZHVsZSgna2liYW5hJywgZnVuY3Rpb24gKFByaXZhdGVQcm92aWRlcikgewogKiAgIFByaXZhdGVQcm92aWRlci5zd2FwKAogKiAgICAgZnVuY3Rpb24gU3R1YmJlZFJlZGlyZWN0UHJvdmlkZXIoJGRlY29yYXRlKSB7CiAqICAgICAgIC8vICRkZWNvcmF0ZSBpcyBhIGZ1bmN0aW9uIHRoYXQgd2lsbCBpbnN0YW50aWF0ZSB0aGUgb3JpZ2luYWwgbW9kdWxlIHdoZW4gY2FsbGVkCiAqICAgICAgIHJldHVybiBzaW5vbi5zcHkoJGRlY29yYXRlKCkpOwogKiAgICAgfQogKiAgICk7CiAqIH0pKTsKICogYGBgCiAqCiAqIEBwYXJhbSB7W3R5cGVdfSBwcm92IFtkZXNjcmlwdGlvbl0KICovCnZhciBuZXh0SWQgPSBfbG9kYXNoLmRlZmF1bHQucGFydGlhbChfbG9kYXNoLmRlZmF1bHQudW5pcXVlSWQsICdwcml2YXRlUHJvdmlkZXIjJyk7CgpmdW5jdGlvbiBuYW1lKGZuKSB7CiAgcmV0dXJuIGZuLm5hbWUgfHwgZm4udG9TdHJpbmcoKS5zcGxpdCgnXG4nKS5zaGlmdCgpOwp9CgpmdW5jdGlvbiBQcml2YXRlUHJvdmlkZXIoKSB7CiAgdmFyIHByb3ZpZGVyID0gdGhpczsgLy8gb25lIGNhY2hlL3N3YXBzIHBlciBQcm92aWRlcgoKICB2YXIgY2FjaGUgPSB7fTsKICB2YXIgc3dhcHMgPSB7fTsgLy8gcmV0dXJuIHRoZSB1bmlxIGlkIGZvciB0aGlzIGZ1bmN0aW9uCgogIGZ1bmN0aW9uIGlkZW50aWZ5KGZuKSB7CiAgICBpZiAodHlwZW9mIGZuICE9PSAnZnVuY3Rpb24nKSB7CiAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIHByaXZhdGUgbW9kdWxlICInICsgZm4gKyAnIiB0byBiZSBhIGZ1bmN0aW9uJyk7CiAgICB9CgogICAgaWYgKGZuLiQkaWQpIHJldHVybiBmbi4kJGlkO2Vsc2UgcmV0dXJuIGZuLiQkaWQgPSBuZXh0SWQoKTsKICB9CgogIHByb3ZpZGVyLnN0dWIgPSBmdW5jdGlvbiAoZm4sIGluc3RhbmNlKSB7CiAgICBjYWNoZVtpZGVudGlmeShmbildID0gaW5zdGFuY2U7CiAgICByZXR1cm4gaW5zdGFuY2U7CiAgfTsKCiAgcHJvdmlkZXIuc3dhcCA9IGZ1bmN0aW9uIChmbiwgcHJvdikgewogICAgdmFyIGlkID0gaWRlbnRpZnkoZm4pOwogICAgc3dhcHNbaWRdID0gcHJvdjsKICB9OwoKICBwcm92aWRlci4kZ2V0ID0gWyckaW5qZWN0b3InLCBmdW5jdGlvbiBQcml2YXRlRmFjdG9yeSgkaW5qZWN0b3IpIHsKICAgIC8vIHByZXZlbnQgY2lyY3VsYXIgZGVwcyBieSB0cmFja2luZyB3aGVyZSB3ZSBjYW1lIGZyb20KICAgIHZhciBwcml2UGF0aCA9IFtdOwoKICAgIHZhciBwYXRoVG9TdHJpbmcgPSBmdW5jdGlvbiBwYXRoVG9TdHJpbmcoKSB7CiAgICAgIHJldHVybiBwcml2UGF0aC5tYXAobmFtZSkuam9pbignIC0+ICcpOwogICAgfTsgLy8gY2FsbCBhIHByaXZhdGUgcHJvdmlkZXIgYW5kIHJldHVybiB0aGUgaW5zdGFuY2UgaXQgY3JlYXRlcwoKCiAgICBmdW5jdGlvbiBpbnN0YW50aWF0ZShwcm92LCBsb2NhbHMpIHsKICAgICAgaWYgKH5wcml2UGF0aC5pbmRleE9mKHByb3YpKSB7CiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdDaXJjdWxhciByZWZlcmVuY2UgdG8gIicgKyBuYW1lKHByb3YpICsgJyInICsgJyBmb3VuZCB3aGlsZSByZXNvbHZpbmcgcHJpdmF0ZSBkZXBzOiAnICsgcGF0aFRvU3RyaW5nKCkpOwogICAgICB9CgogICAgICBwcml2UGF0aC5wdXNoKHByb3YpOwogICAgICB2YXIgY29udGV4dCA9IHt9OwogICAgICB2YXIgaW5zdGFuY2UgPSAkaW5qZWN0b3IuaW52b2tlKHByb3YsIGNvbnRleHQsIGxvY2Fscyk7CiAgICAgIGlmICghX2xvZGFzaC5kZWZhdWx0LmlzT2JqZWN0KGluc3RhbmNlKSkgaW5zdGFuY2UgPSBjb250ZXh0OwogICAgICBwcml2UGF0aC5wb3AoKTsKICAgICAgcmV0dXJuIGluc3RhbmNlOwogICAgfSAvLyByZXRyaWV2ZSBhbiBpbnN0YW5jZSBmcm9tIGNhY2hlIG9yIGNyZWF0ZSBhbmQgc3RvcmUgb24KCgogICAgZnVuY3Rpb24gZ2V0KGlkLCBwcm92LCAkZGVsZWdhdGVJZCwgJGRlbGVnYXRlUHJvdikgewogICAgICBpZiAoY2FjaGVbaWRdKSByZXR1cm4gY2FjaGVbaWRdOwogICAgICB2YXIgaW5zdGFuY2U7CgogICAgICBpZiAoJGRlbGVnYXRlSWQgIT0gbnVsbCAmJiAkZGVsZWdhdGVQcm92ICE9IG51bGwpIHsKICAgICAgICBpbnN0YW5jZSA9IGluc3RhbnRpYXRlKHByb3YsIHsKICAgICAgICAgICRkZWNvcmF0ZTogX2xvZGFzaC5kZWZhdWx0LnBhcnRpYWwoZ2V0LCAkZGVsZWdhdGVJZCwgJGRlbGVnYXRlUHJvdikKICAgICAgICB9KTsKICAgICAgfSBlbHNlIHsKICAgICAgICBpbnN0YW5jZSA9IGluc3RhbnRpYXRlKHByb3YpOwogICAgICB9CgogICAgICByZXR1cm4gY2FjaGVbaWRdID0gaW5zdGFuY2U7CiAgICB9IC8vIG1haW4gYXBpLCBnZXQgdGhlIGFwcHJvcHJpYXRlIGluc3RhbmNlIGZvciBhIHByb3ZpZGVyCgoKICAgIGZ1bmN0aW9uIFByaXZhdGUocHJvdikgewogICAgICB2YXIgaWQgPSBpZGVudGlmeShwcm92KTsKICAgICAgdmFyICRkZWxlZ2F0ZUlkOwogICAgICB2YXIgJGRlbGVnYXRlUHJvdjsKCiAgICAgIGlmIChzd2Fwc1tpZF0pIHsKICAgICAgICAkZGVsZWdhdGVJZCA9IGlkOwogICAgICAgICRkZWxlZ2F0ZVByb3YgPSBwcm92OwogICAgICAgIHByb3YgPSBzd2Fwc1skZGVsZWdhdGVJZF07CiAgICAgICAgaWQgPSBpZGVudGlmeShwcm92KTsKICAgICAgfQoKICAgICAgcmV0dXJuIGdldChpZCwgcHJvdiwgJGRlbGVnYXRlSWQsICRkZWxlZ2F0ZVByb3YpOwogICAgfQoKICAgIFByaXZhdGUuc3R1YiA9IHByb3ZpZGVyLnN0dWI7CiAgICBQcml2YXRlLnN3YXAgPSBwcm92aWRlci5zd2FwOwogICAgcmV0dXJuIFByaXZhdGU7CiAgfV07Cn0="},null]}