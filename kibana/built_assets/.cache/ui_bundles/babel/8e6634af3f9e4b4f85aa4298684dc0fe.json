{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/siem/public/components/timeline/body/renderers/dns/dns_request_event_details_line.js","dependencies":[{"path":"x-pack/legacy/plugins/siem/public/components/timeline/body/renderers/dns/dns_request_event_details_line.js","mtime":1589249553172},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLkRuc1JlcXVlc3RFdmVudERldGFpbHNMaW5lID0gdm9pZCAwOwoKdmFyIF9ldWkgPSByZXF1aXJlKCJAZWxhc3RpYy9ldWkiKTsKCnZhciBfcmVhY3QgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoInJlYWN0IikpOwoKdmFyIF9kcmFnZ2FibGVzID0gcmVxdWlyZSgiLi4vLi4vLi4vLi4vZHJhZ2dhYmxlcyIpOwoKdmFyIF9oZWxwZXJzID0gcmVxdWlyZSgiLi4vaGVscGVycyIpOwoKdmFyIF9wcm9jZXNzX2RyYWdnYWJsZSA9IHJlcXVpcmUoIi4uL3Byb2Nlc3NfZHJhZ2dhYmxlIik7Cgp2YXIgX3VzZXJfaG9zdF93b3JraW5nX2RpciA9IHJlcXVpcmUoIi4uL3VzZXJfaG9zdF93b3JraW5nX2RpciIpOwoKdmFyIGkxOG4gPSBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChyZXF1aXJlKCIuL3RyYW5zbGF0aW9ucyIpKTsKCmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKG9iaikgewogIGlmIChvYmogJiYgb2JqLl9fZXNNb2R1bGUpIHsKICAgIHJldHVybiBvYmo7CiAgfSBlbHNlIHsKICAgIHZhciBuZXdPYmogPSB7fTsKCiAgICBpZiAob2JqICE9IG51bGwpIHsKICAgICAgZm9yICh2YXIga2V5IGluIG9iaikgewogICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBrZXkpKSB7CiAgICAgICAgICB2YXIgZGVzYyA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSAmJiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID8gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmosIGtleSkgOiB7fTsKCiAgICAgICAgICBpZiAoZGVzYy5nZXQgfHwgZGVzYy5zZXQpIHsKICAgICAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG5ld09iaiwga2V5LCBkZXNjKTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIG5ld09ialtrZXldID0gb2JqW2tleV07CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9CgogICAgbmV3T2JqLmRlZmF1bHQgPSBvYmo7CiAgICByZXR1cm4gbmV3T2JqOwogIH0KfQoKZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsKICByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogewogICAgZGVmYXVsdDogb2JqCiAgfTsKfQovKgogKiBDb3B5cmlnaHQgRWxhc3RpY3NlYXJjaCBCLlYuIGFuZC9vciBsaWNlbnNlZCB0byBFbGFzdGljc2VhcmNoIEIuVi4gdW5kZXIgb25lCiAqIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiBMaWNlbnNlZCB1bmRlciB0aGUgRWxhc3RpYyBMaWNlbnNlOwogKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIEVsYXN0aWMgTGljZW5zZS4KICovCgoKdmFyIERuc1JlcXVlc3RFdmVudERldGFpbHNMaW5lID0gX3JlYWN0LmRlZmF1bHQubWVtbyhmdW5jdGlvbiAoX3JlZikgewogIHZhciBjb250ZXh0SWQgPSBfcmVmLmNvbnRleHRJZCwKICAgICAgZG5zUXVlc3Rpb25OYW1lID0gX3JlZi5kbnNRdWVzdGlvbk5hbWUsCiAgICAgIGRuc1F1ZXN0aW9uVHlwZSA9IF9yZWYuZG5zUXVlc3Rpb25UeXBlLAogICAgICBkbnNSZXNvbHZlZElwID0gX3JlZi5kbnNSZXNvbHZlZElwLAogICAgICBkbnNSZXNwb25zZUNvZGUgPSBfcmVmLmRuc1Jlc3BvbnNlQ29kZSwKICAgICAgZXZlbnRDb2RlID0gX3JlZi5ldmVudENvZGUsCiAgICAgIGhvc3ROYW1lID0gX3JlZi5ob3N0TmFtZSwKICAgICAgaWQgPSBfcmVmLmlkLAogICAgICBwcm9jZXNzRXhlY3V0YWJsZSA9IF9yZWYucHJvY2Vzc0V4ZWN1dGFibGUsCiAgICAgIHByb2Nlc3NOYW1lID0gX3JlZi5wcm9jZXNzTmFtZSwKICAgICAgcHJvY2Vzc1BpZCA9IF9yZWYucHJvY2Vzc1BpZCwKICAgICAgdXNlckRvbWFpbiA9IF9yZWYudXNlckRvbWFpbiwKICAgICAgdXNlck5hbWUgPSBfcmVmLnVzZXJOYW1lLAogICAgICB3aW5sb2dFdmVudElkID0gX3JlZi53aW5sb2dFdmVudElkOwogIHJldHVybiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9yZWFjdC5kZWZhdWx0LkZyYWdtZW50LCBudWxsLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpRmxleEdyb3VwLCB7CiAgICBhbGlnbkl0ZW1zOiAiY2VudGVyIiwKICAgIGp1c3RpZnlDb250ZW50OiAiY2VudGVyIiwKICAgIGd1dHRlclNpemU6ICJub25lIiwKICAgIHdyYXA6IHRydWUKICB9LCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF91c2VyX2hvc3Rfd29ya2luZ19kaXIuVXNlckhvc3RXb3JraW5nRGlyLCB7CiAgICBjb250ZXh0SWQ6IGNvbnRleHRJZCwKICAgIGV2ZW50SWQ6IGlkLAogICAgaG9zdE5hbWU6IGhvc3ROYW1lLAogICAgdXNlckRvbWFpbjogdXNlckRvbWFpbiwKICAgIHVzZXJOYW1lOiB1c2VyTmFtZSwKICAgIHdvcmtpbmdEaXJlY3Rvcnk6IHVuZGVmaW5lZAogIH0pLCAhKDAsIF9oZWxwZXJzLmlzTmlsbEVtcHR5T3JOb3RGaW5pdGUpKGRuc1F1ZXN0aW9uTmFtZSkgJiYgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfcmVhY3QuZGVmYXVsdC5GcmFnbWVudCwgbnVsbCwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfaGVscGVycy5Ub2tlbnNGbGV4SXRlbSwgewogICAgY29tcG9uZW50OiAic3BhbiIsCiAgICAiZGF0YS10ZXN0LXN1YmoiOiAiYXNrZWQtZm9yIiwKICAgIGdyb3c6IGZhbHNlCiAgfSwgaTE4bi5BU0tFRF9GT1IpLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9oZWxwZXJzLlRva2Vuc0ZsZXhJdGVtLCB7CiAgICBjb21wb25lbnQ6ICJzcGFuIiwKICAgIGdyb3c6IGZhbHNlCiAgfSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZHJhZ2dhYmxlcy5EcmFnZ2FibGVCYWRnZSwgewogICAgY29udGV4dElkOiBjb250ZXh0SWQsCiAgICBldmVudElkOiBpZCwKICAgIGZpZWxkOiAiZG5zLnF1ZXN0aW9uLm5hbWUiLAogICAgdmFsdWU6IGRuc1F1ZXN0aW9uTmFtZQogIH0pKSksICEoMCwgX2hlbHBlcnMuaXNOaWxsRW1wdHlPck5vdEZpbml0ZSkoZG5zUXVlc3Rpb25UeXBlKSAmJiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9yZWFjdC5kZWZhdWx0LkZyYWdtZW50LCBudWxsLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9oZWxwZXJzLlRva2Vuc0ZsZXhJdGVtLCB7CiAgICBjb21wb25lbnQ6ICJzcGFuIiwKICAgICJkYXRhLXRlc3Qtc3ViaiI6ICJ3aXRoLXF1ZXN0aW9uLXR5cGUiLAogICAgZ3JvdzogZmFsc2UKICB9LCBpMThuLldJVEhfUVVFU1RJT05fVFlQRSksIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2hlbHBlcnMuVG9rZW5zRmxleEl0ZW0sIHsKICAgIGNvbXBvbmVudDogInNwYW4iLAogICAgZ3JvdzogZmFsc2UKICB9LCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9kcmFnZ2FibGVzLkRyYWdnYWJsZUJhZGdlLCB7CiAgICBjb250ZXh0SWQ6IGNvbnRleHRJZCwKICAgIGV2ZW50SWQ6IGlkLAogICAgZmllbGQ6ICJkbnMucXVlc3Rpb24udHlwZSIsCiAgICB2YWx1ZTogZG5zUXVlc3Rpb25UeXBlCiAgfSkpKSwgISgwLCBfaGVscGVycy5pc05pbGxFbXB0eU9yTm90RmluaXRlKShkbnNSZXNvbHZlZElwKSAmJiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9yZWFjdC5kZWZhdWx0LkZyYWdtZW50LCBudWxsLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9oZWxwZXJzLlRva2Vuc0ZsZXhJdGVtLCB7CiAgICBjb21wb25lbnQ6ICJzcGFuIiwKICAgICJkYXRhLXRlc3Qtc3ViaiI6ICJ3aGljaC1yZXNvbHZlZC10byIsCiAgICBncm93OiBmYWxzZQogIH0sIGkxOG4uV0hJQ0hfUkVTT0xWRURfVE8pLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9oZWxwZXJzLlRva2Vuc0ZsZXhJdGVtLCB7CiAgICBjb21wb25lbnQ6ICJzcGFuIiwKICAgIGdyb3c6IGZhbHNlCiAgfSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZHJhZ2dhYmxlcy5EcmFnZ2FibGVCYWRnZSwgewogICAgY29udGV4dElkOiBjb250ZXh0SWQsCiAgICBldmVudElkOiBpZCwKICAgIGZpZWxkOiAiZG5zLnJlc29sdmVkX2lwIiwKICAgIHZhbHVlOiBkbnNSZXNvbHZlZElwCiAgfSkpKSwgISgwLCBfaGVscGVycy5pc05pbGxFbXB0eU9yTm90RmluaXRlKShkbnNSZXNwb25zZUNvZGUpICYmIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3JlYWN0LmRlZmF1bHQuRnJhZ21lbnQsIG51bGwsIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2hlbHBlcnMuVG9rZW5zRmxleEl0ZW0sIHsKICAgIGNvbXBvbmVudDogInNwYW4iLAogICAgZ3JvdzogZmFsc2UKICB9LCAnKCcpLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9oZWxwZXJzLlRva2Vuc0ZsZXhJdGVtLCB7CiAgICBjb21wb25lbnQ6ICJzcGFuIiwKICAgICJkYXRhLXRlc3Qtc3ViaiI6ICJyZXNwb25zZS1jb2RlIiwKICAgIGdyb3c6IGZhbHNlCiAgfSwgaTE4bi5SRVNQT05TRV9DT0RFKSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfaGVscGVycy5Ub2tlbnNGbGV4SXRlbSwgewogICAgY29tcG9uZW50OiAic3BhbiIsCiAgICBncm93OiBmYWxzZQogIH0sIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2RyYWdnYWJsZXMuRHJhZ2dhYmxlQmFkZ2UsIHsKICAgIGNvbnRleHRJZDogY29udGV4dElkLAogICAgZXZlbnRJZDogaWQsCiAgICBmaWVsZDogImRucy5yZXNwb25zZV9jb2RlIiwKICAgIHZhbHVlOiBkbnNSZXNwb25zZUNvZGUKICB9KSksIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2hlbHBlcnMuVG9rZW5zRmxleEl0ZW0sIHsKICAgIGNvbXBvbmVudDogInNwYW4iLAogICAgZ3JvdzogZmFsc2UKICB9LCAnKScpKSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfaGVscGVycy5Ub2tlbnNGbGV4SXRlbSwgewogICAgY29tcG9uZW50OiAic3BhbiIsCiAgICBncm93OiBmYWxzZQogIH0sIGkxOG4uVklBKSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfaGVscGVycy5Ub2tlbnNGbGV4SXRlbSwgewogICAgY29tcG9uZW50OiAic3BhbiIsCiAgICBncm93OiBmYWxzZQogIH0sIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3Byb2Nlc3NfZHJhZ2dhYmxlLlByb2Nlc3NEcmFnZ2FibGVXaXRoTm9uRXhpc3RlbnRQcm9jZXNzLCB7CiAgICBjb250ZXh0SWQ6IGNvbnRleHRJZCwKICAgIGVuZGdhbWVQaWQ6IHVuZGVmaW5lZCwKICAgIGVuZGdhbWVQcm9jZXNzTmFtZTogdW5kZWZpbmVkLAogICAgZXZlbnRJZDogaWQsCiAgICBwcm9jZXNzUGlkOiBwcm9jZXNzUGlkLAogICAgcHJvY2Vzc05hbWU6IHByb2Nlc3NOYW1lLAogICAgcHJvY2Vzc0V4ZWN1dGFibGU6IHByb2Nlc3NFeGVjdXRhYmxlCiAgfSkpLCAoISgwLCBfaGVscGVycy5pc05pbGxFbXB0eU9yTm90RmluaXRlKShldmVudENvZGUpIHx8ICEoMCwgX2hlbHBlcnMuaXNOaWxsRW1wdHlPck5vdEZpbml0ZSkod2lubG9nRXZlbnRJZCkpICYmIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3JlYWN0LmRlZmF1bHQuRnJhZ21lbnQsIG51bGwsICEoMCwgX2hlbHBlcnMuaXNOaWxsRW1wdHlPck5vdEZpbml0ZSkoZXZlbnRDb2RlKSA/IF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2hlbHBlcnMuVG9rZW5zRmxleEl0ZW0sIHsKICAgIGNvbXBvbmVudDogInNwYW4iLAogICAgZ3JvdzogZmFsc2UKICB9LCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9kcmFnZ2FibGVzLkRyYWdnYWJsZUJhZGdlLCB7CiAgICBjb250ZXh0SWQ6IGNvbnRleHRJZCwKICAgIGV2ZW50SWQ6IGlkLAogICAgZmllbGQ6ICJldmVudC5jb2RlIiwKICAgIHZhbHVlOiBldmVudENvZGUKICB9KSkgOiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9oZWxwZXJzLlRva2Vuc0ZsZXhJdGVtLCB7CiAgICBjb21wb25lbnQ6ICJzcGFuIiwKICAgIGdyb3c6IGZhbHNlCiAgfSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZHJhZ2dhYmxlcy5EcmFnZ2FibGVCYWRnZSwgewogICAgY29udGV4dElkOiBjb250ZXh0SWQsCiAgICBldmVudElkOiBpZCwKICAgIGljb25UeXBlOiAibG9nb1dpbmRvd3MiLAogICAgZmllbGQ6ICJ3aW5sb2cuZXZlbnRfaWQiLAogICAgdmFsdWU6IHdpbmxvZ0V2ZW50SWQKICB9KSkpKSk7Cn0pOwoKZXhwb3J0cy5EbnNSZXF1ZXN0RXZlbnREZXRhaWxzTGluZSA9IERuc1JlcXVlc3RFdmVudERldGFpbHNMaW5lOwpEbnNSZXF1ZXN0RXZlbnREZXRhaWxzTGluZS5kaXNwbGF5TmFtZSA9ICdEbnNSZXF1ZXN0RXZlbnREZXRhaWxzTGluZSc7"},null]}