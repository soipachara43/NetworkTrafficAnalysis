{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/canvas/public/components/arg_form/arg_template_form.js","dependencies":[{"path":"x-pack/legacy/plugins/canvas/public/components/arg_form/arg_template_form.js","mtime":1589249551943},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLkFyZ1RlbXBsYXRlRm9ybSA9IHZvaWQgMDsKCnZhciBfcmVhY3QgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoInJlYWN0IikpOwoKdmFyIF9wcm9wVHlwZXMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoInByb3AtdHlwZXMiKSk7Cgp2YXIgX3JlY29tcG9zZSA9IHJlcXVpcmUoInJlY29tcG9zZSIpOwoKdmFyIF9yZW5kZXJfdG9fZG9tID0gcmVxdWlyZSgiLi4vcmVuZGVyX3RvX2RvbSIpOwoKdmFyIF9leHByZXNzaW9uX2Zvcm1faGFuZGxlcnMgPSByZXF1aXJlKCIuLi8uLi8uLi9jb21tb24vbGliL2V4cHJlc3Npb25fZm9ybV9oYW5kbGVycyIpOwoKZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH0KCmZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IGlmICh0eXBlb2YgU3ltYm9sID09PSAiZnVuY3Rpb24iICYmIHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPT09ICJzeW1ib2wiKSB7IF90eXBlb2YgPSBmdW5jdGlvbiBfdHlwZW9mKG9iaikgeyByZXR1cm4gdHlwZW9mIG9iajsgfTsgfSBlbHNlIHsgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gImZ1bmN0aW9uIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyAic3ltYm9sIiA6IHR5cGVvZiBvYmo7IH07IH0gcmV0dXJuIF90eXBlb2Yob2JqKTsgfQoKZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb24iKTsgfSB9CgpmdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmICgidmFsdWUiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfQoKZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH0KCmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKGNhbGwgJiYgKF90eXBlb2YoY2FsbCkgPT09ICJvYmplY3QiIHx8IHR5cGVvZiBjYWxsID09PSAiZnVuY3Rpb24iKSkgeyByZXR1cm4gY2FsbDsgfSByZXR1cm4gX2Fzc2VydFRoaXNJbml0aWFsaXplZChzZWxmKTsgfQoKZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHsgX2dldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LmdldFByb3RvdHlwZU9mIDogZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHsgcmV0dXJuIG8uX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihvKTsgfTsgcmV0dXJuIF9nZXRQcm90b3R5cGVPZihvKTsgfQoKZnVuY3Rpb24gX2Fzc2VydFRoaXNJbml0aWFsaXplZChzZWxmKSB7IGlmIChzZWxmID09PSB2b2lkIDApIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWQiKTsgfSByZXR1cm4gc2VsZjsgfQoKZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gImZ1bmN0aW9uIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uIik7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgX3NldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKTsgfQoKZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHsgX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8IGZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7IG8uX19wcm90b19fID0gcDsgcmV0dXJuIG87IH07IHJldHVybiBfc2V0UHJvdG90eXBlT2YobywgcCk7IH0KCmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHsgaWYgKGtleSBpbiBvYmopIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7IHZhbHVlOiB2YWx1ZSwgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSB9KTsgfSBlbHNlIHsgb2JqW2tleV0gPSB2YWx1ZTsgfSByZXR1cm4gb2JqOyB9Cgp2YXIgQXJnVGVtcGxhdGVGb3JtQ29tcG9uZW50ID0KLyojX19QVVJFX18qLwpmdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkgewogIF9pbmhlcml0cyhBcmdUZW1wbGF0ZUZvcm1Db21wb25lbnQsIF9SZWFjdCRDb21wb25lbnQpOwoKICBmdW5jdGlvbiBBcmdUZW1wbGF0ZUZvcm1Db21wb25lbnQoKSB7CiAgICB2YXIgX2dldFByb3RvdHlwZU9mMjsKCiAgICB2YXIgX3RoaXM7CgogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEFyZ1RlbXBsYXRlRm9ybUNvbXBvbmVudCk7CgogICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7CiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07CiAgICB9CgogICAgX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCAoX2dldFByb3RvdHlwZU9mMiA9IF9nZXRQcm90b3R5cGVPZihBcmdUZW1wbGF0ZUZvcm1Db21wb25lbnQpKS5jYWxsLmFwcGx5KF9nZXRQcm90b3R5cGVPZjIsIFt0aGlzXS5jb25jYXQoYXJncykpKTsKCiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksICJfZG9tTm9kZSIsIG51bGwpOwoKICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgIl9yZW5kZXJUZW1wbGF0ZSIsIGZ1bmN0aW9uIChkb21Ob2RlKSB7CiAgICAgIHZhciBfdGhpcyRwcm9wcyA9IF90aGlzLnByb3BzLAogICAgICAgICAgdGVtcGxhdGUgPSBfdGhpcyRwcm9wcy50ZW1wbGF0ZSwKICAgICAgICAgIGFyZ3VtZW50UHJvcHMgPSBfdGhpcyRwcm9wcy5hcmd1bWVudFByb3BzLAogICAgICAgICAgaGFuZGxlcnMgPSBfdGhpcyRwcm9wcy5oYW5kbGVyczsKCiAgICAgIGlmICh0ZW1wbGF0ZSkgewogICAgICAgIHJldHVybiB0ZW1wbGF0ZShkb21Ob2RlLCBhcmd1bWVudFByb3BzLCBoYW5kbGVycyk7CiAgICAgIH0KICAgIH0pOwoKICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgIl9yZW5kZXJFcnJvclRlbXBsYXRlIiwgZnVuY3Rpb24gKCkgewogICAgICB2YXIgX3RoaXMkcHJvcHMyID0gX3RoaXMucHJvcHMsCiAgICAgICAgICBlcnJvclRlbXBsYXRlID0gX3RoaXMkcHJvcHMyLmVycm9yVGVtcGxhdGUsCiAgICAgICAgICBhcmd1bWVudFByb3BzID0gX3RoaXMkcHJvcHMyLmFyZ3VtZW50UHJvcHM7CiAgICAgIHJldHVybiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KGVycm9yVGVtcGxhdGUsIGFyZ3VtZW50UHJvcHMpOwogICAgfSk7CgogICAgcmV0dXJuIF90aGlzOwogIH0KCiAgX2NyZWF0ZUNsYXNzKEFyZ1RlbXBsYXRlRm9ybUNvbXBvbmVudCwgW3sKICAgIGtleTogIlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBVTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZShwcmV2UHJvcHMpIHsKICAgICAgLy9zZWUgaWYgZXJyb3Igc3RhdGUgY2hhbmdlZAogICAgICBpZiAodGhpcy5wcm9wcy5lcnJvciAhPT0gcHJldlByb3BzLmVycm9yKSB7CiAgICAgICAgdGhpcy5wcm9wcy5oYW5kbGVycy5kZXN0cm95KCk7CiAgICAgIH0KICAgIH0KICB9LCB7CiAgICBrZXk6ICJjb21wb25lbnREaWRVcGRhdGUiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGNvbXBvbmVudERpZFVwZGF0ZSgpIHsKICAgICAgaWYgKHRoaXMucHJvcHMuZXJyb3IpIHsKICAgICAgICByZXR1cm4gdGhpcy5fcmVuZGVyRXJyb3JUZW1wbGF0ZSgpOwogICAgICB9CgogICAgICB0aGlzLl9yZW5kZXJUZW1wbGF0ZSh0aGlzLl9kb21Ob2RlKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJjb21wb25lbnRXaWxsVW5tb3VudCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gY29tcG9uZW50V2lsbFVubW91bnQoKSB7CiAgICAgIHRoaXMucHJvcHMuaGFuZGxlcnMuZGVzdHJveSgpOwogICAgfQogIH0sIHsKICAgIGtleTogInJlbmRlciIsCiAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHZhciBfdGhpcyRwcm9wczMgPSB0aGlzLnByb3BzLAogICAgICAgICAgdGVtcGxhdGUgPSBfdGhpcyRwcm9wczMudGVtcGxhdGUsCiAgICAgICAgICBlcnJvciA9IF90aGlzJHByb3BzMy5lcnJvcjsKCiAgICAgIGlmIChlcnJvcikgewogICAgICAgIHJldHVybiB0aGlzLl9yZW5kZXJFcnJvclRlbXBsYXRlKCk7CiAgICAgIH0KCiAgICAgIGlmICghdGVtcGxhdGUpIHsKICAgICAgICByZXR1cm4gbnVsbDsKICAgICAgfQoKICAgICAgcmV0dXJuIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3JlbmRlcl90b19kb20uUmVuZGVyVG9Eb20sIHsKICAgICAgICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcihkb21Ob2RlKSB7CiAgICAgICAgICBfdGhpczIuX2RvbU5vZGUgPSBkb21Ob2RlOwoKICAgICAgICAgIF90aGlzMi5fcmVuZGVyVGVtcGxhdGUoZG9tTm9kZSk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0KICB9XSk7CgogIHJldHVybiBBcmdUZW1wbGF0ZUZvcm1Db21wb25lbnQ7Cn0oX3JlYWN0LmRlZmF1bHQuQ29tcG9uZW50KTsKCl9kZWZpbmVQcm9wZXJ0eShBcmdUZW1wbGF0ZUZvcm1Db21wb25lbnQsICJwcm9wVHlwZXMiLCB7CiAgdGVtcGxhdGU6IF9wcm9wVHlwZXMuZGVmYXVsdC5mdW5jLAogIGFyZ3VtZW50UHJvcHM6IF9wcm9wVHlwZXMuZGVmYXVsdC5zaGFwZSh7CiAgICB2YWx1ZU1pc3Npbmc6IF9wcm9wVHlwZXMuZGVmYXVsdC5ib29sLAogICAgbGFiZWw6IF9wcm9wVHlwZXMuZGVmYXVsdC5zdHJpbmcsCiAgICBzZXRMYWJlbDogX3Byb3BUeXBlcy5kZWZhdWx0LmZ1bmMuaXNSZXF1aXJlZCwKICAgIGV4cGFuZDogX3Byb3BUeXBlcy5kZWZhdWx0LmJvb2wsCiAgICBzZXRFeHBhbmQ6IF9wcm9wVHlwZXMuZGVmYXVsdC5mdW5jLAogICAgb25WYWx1ZVJlbW92ZTogX3Byb3BUeXBlcy5kZWZhdWx0LmZ1bmMsCiAgICByZXNldEVycm9yU3RhdGU6IF9wcm9wVHlwZXMuZGVmYXVsdC5mdW5jLmlzUmVxdWlyZWQsCiAgICByZW5kZXJFcnJvcjogX3Byb3BUeXBlcy5kZWZhdWx0LmZ1bmMuaXNSZXF1aXJlZAogIH0pLAogIGhhbmRsZXJzOiBfcHJvcFR5cGVzLmRlZmF1bHQub2JqZWN0LmlzUmVxdWlyZWQsCiAgZXJyb3I6IF9wcm9wVHlwZXMuZGVmYXVsdC5vbmVPZlR5cGUoW19wcm9wVHlwZXMuZGVmYXVsdC5vYmplY3QsIF9wcm9wVHlwZXMuZGVmYXVsdC5ib29sXSkuaXNSZXF1aXJlZCwKICBlcnJvclRlbXBsYXRlOiBfcHJvcFR5cGVzLmRlZmF1bHQub25lT2ZUeXBlKFtfcHJvcFR5cGVzLmRlZmF1bHQuZWxlbWVudCwgX3Byb3BUeXBlcy5kZWZhdWx0LmZ1bmNdKS5pc1JlcXVpcmVkCn0pOwoKdmFyIEFyZ1RlbXBsYXRlRm9ybSA9ICgwLCBfcmVjb21wb3NlLmNvbXBvc2UpKCgwLCBfcmVjb21wb3NlLndpdGhQcm9wc09uQ2hhbmdlKShmdW5jdGlvbiAoKSB7CiAgcmV0dXJuIGZhbHNlOwp9LCBmdW5jdGlvbiAoKSB7CiAgcmV0dXJuIHsKICAgIGV4cHJlc3Npb25Gb3JtSGFuZGxlcnM6IG5ldyBfZXhwcmVzc2lvbl9mb3JtX2hhbmRsZXJzLkV4cHJlc3Npb25Gb3JtSGFuZGxlcnMoKQogIH07Cn0pLCAoMCwgX3JlY29tcG9zZS53aXRoUHJvcHMpKGZ1bmN0aW9uIChfcmVmKSB7CiAgdmFyIGhhbmRsZXJzID0gX3JlZi5oYW5kbGVycywKICAgICAgZXhwcmVzc2lvbkZvcm1IYW5kbGVycyA9IF9yZWYuZXhwcmVzc2lvbkZvcm1IYW5kbGVyczsKICByZXR1cm4gewogICAgaGFuZGxlcnM6IE9iamVjdC5hc3NpZ24oZXhwcmVzc2lvbkZvcm1IYW5kbGVycywgaGFuZGxlcnMpCiAgfTsKfSkpKEFyZ1RlbXBsYXRlRm9ybUNvbXBvbmVudCk7CmV4cG9ydHMuQXJnVGVtcGxhdGVGb3JtID0gQXJnVGVtcGxhdGVGb3JtOw=="},null]}