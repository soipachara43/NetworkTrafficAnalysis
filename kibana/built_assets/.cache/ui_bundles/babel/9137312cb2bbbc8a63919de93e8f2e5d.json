{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/monitoring/public/components/metricbeat_migration/instruction_steps/kibana/disable_internal_collection_instructions.js","dependencies":[{"path":"x-pack/legacy/plugins/monitoring/public/components/metricbeat_migration/instruction_steps/kibana/disable_internal_collection_instructions.js","mtime":1589249552572},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmdldEtpYmFuYUluc3RydWN0aW9uc0ZvckRpc2FibGluZ0ludGVybmFsQ29sbGVjdGlvbiA9IGdldEtpYmFuYUluc3RydWN0aW9uc0ZvckRpc2FibGluZ0ludGVybmFsQ29sbGVjdGlvbjsKCnZhciBfaTE4biA9IHJlcXVpcmUoIkBrYm4vaTE4biIpOwoKdmFyIF9yZWFjdCA9IF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKHJlcXVpcmUoInJlYWN0IikpOwoKdmFyIF9ldWkgPSByZXF1aXJlKCJAZWxhc3RpYy9ldWkiKTsKCnZhciBfbW9ub3NwYWNlID0gcmVxdWlyZSgiLi4vY29tcG9uZW50cy9tb25vc3BhY2UiKTsKCnZhciBfcmVhY3QyID0gcmVxdWlyZSgiQGtibi9pMThuL3JlYWN0Iik7Cgp2YXIgX2NvbW1vbl9pbnN0cnVjdGlvbnMgPSByZXF1aXJlKCIuLi9jb21tb25faW5zdHJ1Y3Rpb25zIik7CgpmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChvYmopIHsgaWYgKG9iaiAmJiBvYmouX19lc01vZHVsZSkgeyByZXR1cm4gb2JqOyB9IGVsc2UgeyB2YXIgbmV3T2JqID0ge307IGlmIChvYmogIT0gbnVsbCkgeyBmb3IgKHZhciBrZXkgaW4gb2JqKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBrZXkpKSB7IHZhciBkZXNjID0gT2JqZWN0LmRlZmluZVByb3BlcnR5ICYmIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IgPyBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iaiwga2V5KSA6IHt9OyBpZiAoZGVzYy5nZXQgfHwgZGVzYy5zZXQpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KG5ld09iaiwga2V5LCBkZXNjKTsgfSBlbHNlIHsgbmV3T2JqW2tleV0gPSBvYmpba2V5XTsgfSB9IH0gfSBuZXdPYmouZGVmYXVsdCA9IG9iajsgcmV0dXJuIG5ld09iajsgfSB9CgovKgogKiBDb3B5cmlnaHQgRWxhc3RpY3NlYXJjaCBCLlYuIGFuZC9vciBsaWNlbnNlZCB0byBFbGFzdGljc2VhcmNoIEIuVi4gdW5kZXIgb25lCiAqIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiBMaWNlbnNlZCB1bmRlciB0aGUgRWxhc3RpYyBMaWNlbnNlOwogKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIEVsYXN0aWMgTGljZW5zZS4KICovCmZ1bmN0aW9uIGdldEtpYmFuYUluc3RydWN0aW9uc0ZvckRpc2FibGluZ0ludGVybmFsQ29sbGVjdGlvbihwcm9kdWN0LCBtZXRhKSB7CiAgdmFyIHJlc3RhcnRXYXJuaW5nID0gbnVsbDsKCiAgaWYgKHByb2R1Y3QuaXNQcmltYXJ5KSB7CiAgICByZXN0YXJ0V2FybmluZyA9IF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3JlYWN0LkZyYWdtZW50LCBudWxsLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpU3BhY2VyLCB7CiAgICAgIHNpemU6ICJzIgogICAgfSksIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlDYWxsT3V0LCB7CiAgICAgIHRpdGxlOiBfaTE4bi5pMThuLnRyYW5zbGF0ZSgneHBhY2subW9uaXRvcmluZy5tZXRyaWNiZWF0TWlncmF0aW9uLmtpYmFuYUluc3RydWN0aW9ucy5kaXNhYmxlSW50ZXJuYWxDb2xsZWN0aW9uLnJlc3RhcnRXYXJuaW5nVGl0bGUnLCB7CiAgICAgICAgZGVmYXVsdE1lc3NhZ2U6ICdUaGlzIHN0ZXAgcmVxdWlyZXMgeW91IHRvIHJlc3RhcnQgdGhlIEtpYmFuYSBzZXJ2ZXInCiAgICAgIH0pLAogICAgICBjb2xvcjogIndhcm5pbmciLAogICAgICBpY29uVHlwZTogImhlbHAiCiAgICB9LCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpVGV4dCwgbnVsbCwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudCgicCIsIG51bGwsIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3JlYWN0Mi5Gb3JtYXR0ZWRNZXNzYWdlLCB7CiAgICAgIGlkOiAieHBhY2subW9uaXRvcmluZy5tZXRyaWNiZWF0TWlncmF0aW9uLmtpYmFuYUluc3RydWN0aW9ucy5kaXNhYmxlSW50ZXJuYWxDb2xsZWN0aW9uLnJlc3RhcnROb3RlIiwKICAgICAgZGVmYXVsdE1lc3NhZ2U6ICJFeHBlY3QgZXJyb3JzIHVudGlsIHRoZSBzZXJ2ZXIgaXMgcnVubmluZyBhZ2Fpbi4iCiAgICB9KSkpKSk7CiAgfQoKICB2YXIgZGlzYWJsZUludGVybmFsQ29sbGVjdGlvblN0ZXAgPSB7CiAgICB0aXRsZTogX2kxOG4uaTE4bi50cmFuc2xhdGUoJ3hwYWNrLm1vbml0b3JpbmcubWV0cmljYmVhdE1pZ3JhdGlvbi5raWJhbmFJbnN0cnVjdGlvbnMuZGlzYWJsZUludGVybmFsQ29sbGVjdGlvbi50aXRsZScsIHsKICAgICAgZGVmYXVsdE1lc3NhZ2U6ICdEaXNhYmxlIHNlbGYgbW9uaXRvcmluZyBvZiBLaWJhbmEgbW9uaXRvcmluZyBtZXRyaWNzJwogICAgfSksCiAgICBjaGlsZHJlbjogX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfcmVhY3QuRnJhZ21lbnQsIG51bGwsIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlUZXh0LCBudWxsLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KCJwIiwgbnVsbCwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfcmVhY3QyLkZvcm1hdHRlZE1lc3NhZ2UsIHsKICAgICAgaWQ6ICJ4cGFjay5tb25pdG9yaW5nLm1ldHJpY2JlYXRNaWdyYXRpb24ua2liYW5hSW5zdHJ1Y3Rpb25zLmRpc2FibGVJbnRlcm5hbENvbGxlY3Rpb24uZGVzY3JpcHRpb24iLAogICAgICBkZWZhdWx0TWVzc2FnZTogIkFkZCB0aGlzIHNldHRpbmcgdG8ge2ZpbGV9LiIsCiAgICAgIHZhbHVlczogewogICAgICAgIGZpbGU6IF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX21vbm9zcGFjZS5Nb25vc3BhY2UsIG51bGwsICJraWJhbmEueW1sIikKICAgICAgfQogICAgfSkpKSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aVNwYWNlciwgewogICAgICBzaXplOiAicyIKICAgIH0pLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpQ29kZUJsb2NrLCB7CiAgICAgIGlzQ29weWFibGU6IHRydWUsCiAgICAgIGxhbmd1YWdlOiAiYmFzaCIKICAgIH0sICJtb25pdG9yaW5nLmtpYmFuYS5jb2xsZWN0aW9uLmVuYWJsZWQ6IGZhbHNlIiksIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlTcGFjZXIsIHsKICAgICAgc2l6ZTogInMiCiAgICB9KSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aVRleHQsIG51bGwsIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoInAiLCBudWxsLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9yZWFjdDIuRm9ybWF0dGVkTWVzc2FnZSwgewogICAgICBpZDogInhwYWNrLm1vbml0b3JpbmcubWV0cmljYmVhdE1pZ3JhdGlvbi5raWJhbmFJbnN0cnVjdGlvbnMuZGlzYWJsZUludGVybmFsQ29sbGVjdGlvbi5ub3RlIiwKICAgICAgZGVmYXVsdE1lc3NhZ2U6ICJGb3Ige2NvbmZpZ30sIGxlYXZlIHRoZSBkZWZhdWx0IHZhbHVlIG9mICh7ZGVmYXVsdFZhbHVlfSkuIiwKICAgICAgdmFsdWVzOiB7CiAgICAgICAgY29uZmlnOiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9tb25vc3BhY2UuTW9ub3NwYWNlLCBudWxsLCAibW9uaXRvcmluZy5lbmFibGVkIiksCiAgICAgICAgZGVmYXVsdFZhbHVlOiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9tb25vc3BhY2UuTW9ub3NwYWNlLCBudWxsLCAidHJ1ZSIpCiAgICAgIH0KICAgIH0pKSksIHJlc3RhcnRXYXJuaW5nKQogIH07CiAgdmFyIG1pZ3JhdGlvblN0YXR1c1N0ZXAgPSAoMCwgX2NvbW1vbl9pbnN0cnVjdGlvbnMuZ2V0RGlzYWJsZVN0YXR1c1N0ZXApKHByb2R1Y3QsIG1ldGEpOwogIHJldHVybiBbZGlzYWJsZUludGVybmFsQ29sbGVjdGlvblN0ZXAsIG1pZ3JhdGlvblN0YXR1c1N0ZXBdOwp9"},null]}