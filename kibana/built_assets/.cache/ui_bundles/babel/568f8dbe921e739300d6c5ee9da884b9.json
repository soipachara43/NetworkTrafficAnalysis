{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/canvas/public/lib/app_state.js","dependencies":[{"path":"x-pack/legacy/plugins/canvas/public/lib/app_state.js","mtime":1589249552047},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmdldERlZmF1bHRBcHBTdGF0ZSA9IGdldERlZmF1bHRBcHBTdGF0ZTsKZXhwb3J0cy5nZXRDdXJyZW50QXBwU3RhdGUgPSBnZXRDdXJyZW50QXBwU3RhdGU7CmV4cG9ydHMuZ2V0QXBwU3RhdGUgPSBnZXRBcHBTdGF0ZTsKZXhwb3J0cy5hc3NpZ25BcHBTdGF0ZSA9IGFzc2lnbkFwcFN0YXRlOwpleHBvcnRzLnNldEZ1bGxzY3JlZW4gPSBzZXRGdWxsc2NyZWVuOwpleHBvcnRzLnNldEF1dG9wbGF5SW50ZXJ2YWwgPSBzZXRBdXRvcGxheUludGVydmFsOwpleHBvcnRzLnNldFJlZnJlc2hJbnRlcnZhbCA9IHNldFJlZnJlc2hJbnRlcnZhbDsKCnZhciBfcXVlcnlTdHJpbmcgPSByZXF1aXJlKCJxdWVyeS1zdHJpbmciKTsKCnZhciBfbG9kYXNoID0gcmVxdWlyZSgibG9kYXNoIik7Cgp2YXIgX2luaXRpYWxfc3RhdGUgPSByZXF1aXJlKCIuLi9zdGF0ZS9pbml0aWFsX3N0YXRlIik7Cgp2YXIgX2dldF93aW5kb3cgPSByZXF1aXJlKCIuL2dldF93aW5kb3ciKTsKCnZhciBfaGlzdG9yeV9wcm92aWRlciA9IHJlcXVpcmUoIi4vaGlzdG9yeV9wcm92aWRlciIpOwoKdmFyIF9yb3V0ZXJfcHJvdmlkZXIgPSByZXF1aXJlKCIuL3JvdXRlcl9wcm92aWRlciIpOwoKdmFyIF90aW1lX2ludGVydmFsID0gcmVxdWlyZSgiLi90aW1lX2ludGVydmFsIik7Cgp2YXIgX3R5cGVzID0gcmVxdWlyZSgiLi4vLi4vdHlwZXMiKTsKCmZ1bmN0aW9uIG93bktleXMob2JqZWN0LCBlbnVtZXJhYmxlT25seSkgewogIHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTsKCiAgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsKICAgIHZhciBzeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvYmplY3QpOwogICAgaWYgKGVudW1lcmFibGVPbmx5KSBzeW1ib2xzID0gc3ltYm9scy5maWx0ZXIoZnVuY3Rpb24gKHN5bSkgewogICAgICByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHN5bSkuZW51bWVyYWJsZTsKICAgIH0pOwogICAga2V5cy5wdXNoLmFwcGx5KGtleXMsIHN5bWJvbHMpOwogIH0KCiAgcmV0dXJuIGtleXM7Cn0KCmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7CiAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsKICAgIHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV0gIT0gbnVsbCA/IGFyZ3VtZW50c1tpXSA6IHt9OwoKICAgIGlmIChpICUgMikgewogICAgICBvd25LZXlzKHNvdXJjZSwgdHJ1ZSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7CiAgICAgICAgX2RlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBzb3VyY2Vba2V5XSk7CiAgICAgIH0pOwogICAgfSBlbHNlIGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycykgewogICAgICBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHNvdXJjZSkpOwogICAgfSBlbHNlIHsKICAgICAgb3duS2V5cyhzb3VyY2UpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgewogICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpOwogICAgICB9KTsKICAgIH0KICB9CgogIHJldHVybiB0YXJnZXQ7Cn0KCmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHsKICBpZiAoa2V5IGluIG9iaikgewogICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7CiAgICAgIHZhbHVlOiB2YWx1ZSwKICAgICAgZW51bWVyYWJsZTogdHJ1ZSwKICAgICAgY29uZmlndXJhYmxlOiB0cnVlLAogICAgICB3cml0YWJsZTogdHJ1ZQogICAgfSk7CiAgfSBlbHNlIHsKICAgIG9ialtrZXldID0gdmFsdWU7CiAgfQoKICByZXR1cm4gb2JqOwp9CgpmdW5jdGlvbiBnZXREZWZhdWx0QXBwU3RhdGUoKSB7CiAgdmFyIHRyYW5zaWVudFN0YXRlID0gKDAsIF9pbml0aWFsX3N0YXRlLmdldEluaXRpYWxTdGF0ZSkoJ3RyYW5zaWVudCcpOwogIHZhciBzdGF0ZSA9IHt9OwoKICBpZiAodHJhbnNpZW50U3RhdGUuZnVsbHNjcmVlbikgewogICAgc3RhdGVbX3R5cGVzLkFwcFN0YXRlS2V5cy5GVUxMU0NSRUVOXSA9IHRydWU7CiAgfQoKICBpZiAodHJhbnNpZW50U3RhdGUucmVmcmVzaC5pbnRlcnZhbCA+IDApIHsKICAgIHN0YXRlW190eXBlcy5BcHBTdGF0ZUtleXMuUkVGUkVTSF9JTlRFUlZBTF0gPSAoMCwgX3RpbWVfaW50ZXJ2YWwuY3JlYXRlVGltZUludGVydmFsKSh0cmFuc2llbnRTdGF0ZS5yZWZyZXNoLmludGVydmFsKTsKICB9CgogIGlmICh0cmFuc2llbnRTdGF0ZS5hdXRvcGxheS5lbmFibGVkKSB7CiAgICBzdGF0ZVtfdHlwZXMuQXBwU3RhdGVLZXlzLkFVVE9QTEFZX0lOVEVSVkFMXSA9ICgwLCBfdGltZV9pbnRlcnZhbC5jcmVhdGVUaW1lSW50ZXJ2YWwpKHRyYW5zaWVudFN0YXRlLmF1dG9wbGF5LmludGVydmFsKTsKICB9CgogIHJldHVybiBzdGF0ZTsKfQoKZnVuY3Rpb24gZ2V0Q3VycmVudEFwcFN0YXRlKCkgewogIHZhciBoaXN0b3J5ID0gKDAsIF9oaXN0b3J5X3Byb3ZpZGVyLmhpc3RvcnlQcm92aWRlcikoKDAsIF9nZXRfd2luZG93LmdldFdpbmRvdykoKSk7CgogIHZhciBfaGlzdG9yeSRnZXRMb2NhdGlvbiA9IGhpc3RvcnkuZ2V0TG9jYXRpb24oKSwKICAgICAgc2VhcmNoID0gX2hpc3RvcnkkZ2V0TG9jYXRpb24uc2VhcmNoOwoKICB2YXIgcXMgPSAhIXNlYXJjaCA/ICgwLCBfcXVlcnlTdHJpbmcucGFyc2UpKHNlYXJjaC5yZXBsYWNlKC9eXD8vLCAnJyksIHsKICAgIHNvcnQ6IGZhbHNlCiAgfSkgOiB7fTsKICB2YXIgYXBwU3RhdGUgPSBhc3NpZ25BcHBTdGF0ZSh7fSwgcXMpOwogIHJldHVybiBhcHBTdGF0ZTsKfQoKZnVuY3Rpb24gZ2V0QXBwU3RhdGUoa2V5KSB7CiAgdmFyIGFwcFN0YXRlID0gX29iamVjdFNwcmVhZCh7fSwgZ2V0RGVmYXVsdEFwcFN0YXRlKCksIHt9LCBnZXRDdXJyZW50QXBwU3RhdGUoKSk7CgogIHJldHVybiBrZXkgPyAoMCwgX2xvZGFzaC5nZXQpKGFwcFN0YXRlLCBrZXkpIDogYXBwU3RhdGU7Cn0KCmZ1bmN0aW9uIGFzc2lnbkFwcFN0YXRlKG9iaiwgYXBwU3RhdGUpIHsKICB2YXIgZnVsbHNjcmVlbiA9IGFwcFN0YXRlW190eXBlcy5BcHBTdGF0ZUtleXMuRlVMTFNDUkVFTl07CiAgdmFyIHJlZnJlc2hLZXkgPSBhcHBTdGF0ZVtfdHlwZXMuQXBwU3RhdGVLZXlzLlJFRlJFU0hfSU5URVJWQUxdOwogIHZhciBhdXRvcGxheUtleSA9IGFwcFN0YXRlW190eXBlcy5BcHBTdGF0ZUtleXMuQVVUT1BMQVlfSU5URVJWQUxdOwoKICBpZiAoZnVsbHNjcmVlbikgewogICAgb2JqW190eXBlcy5BcHBTdGF0ZUtleXMuRlVMTFNDUkVFTl0gPSB0cnVlOwogIH0gZWxzZSB7CiAgICBkZWxldGUgb2JqW190eXBlcy5BcHBTdGF0ZUtleXMuRlVMTFNDUkVFTl07CiAgfQoKICB2YXIgcmVmcmVzaCA9IEFycmF5LmlzQXJyYXkocmVmcmVzaEtleSkgPyByZWZyZXNoS2V5WzBdIDogcmVmcmVzaEtleTsKCiAgaWYgKHJlZnJlc2ggJiYgKDAsIF90aW1lX2ludGVydmFsLmlzVmFsaWRUaW1lSW50ZXJ2YWwpKHJlZnJlc2gpKSB7CiAgICBvYmpbX3R5cGVzLkFwcFN0YXRlS2V5cy5SRUZSRVNIX0lOVEVSVkFMXSA9IHJlZnJlc2g7CiAgfSBlbHNlIHsKICAgIGRlbGV0ZSBvYmpbX3R5cGVzLkFwcFN0YXRlS2V5cy5SRUZSRVNIX0lOVEVSVkFMXTsKICB9CgogIHZhciBhdXRvcGxheSA9IEFycmF5LmlzQXJyYXkoYXV0b3BsYXlLZXkpID8gYXV0b3BsYXlLZXlbMF0gOiBhdXRvcGxheUtleTsKCiAgaWYgKGF1dG9wbGF5ICYmICgwLCBfdGltZV9pbnRlcnZhbC5pc1ZhbGlkVGltZUludGVydmFsKShhdXRvcGxheSkpIHsKICAgIG9ialtfdHlwZXMuQXBwU3RhdGVLZXlzLkFVVE9QTEFZX0lOVEVSVkFMXSA9IGF1dG9wbGF5OwogIH0gZWxzZSB7CiAgICBkZWxldGUgb2JqW190eXBlcy5BcHBTdGF0ZUtleXMuQVVUT1BMQVlfSU5URVJWQUxdOwogIH0KCiAgcmV0dXJuIG9iajsKfQoKZnVuY3Rpb24gc2V0RnVsbHNjcmVlbihwYXlsb2FkKSB7CiAgdmFyIGFwcFN0YXRlID0gZ2V0QXBwU3RhdGUoKTsKICB2YXIgYXBwVmFsdWUgPSBhcHBTdGF0ZVtfdHlwZXMuQXBwU3RhdGVLZXlzLkZVTExTQ1JFRU5dOwoKICBpZiAocGF5bG9hZCA9PT0gZmFsc2UgJiYgYXBwVmFsdWUpIHsKICAgIGRlbGV0ZSBhcHBTdGF0ZVtfdHlwZXMuQXBwU3RhdGVLZXlzLkZVTExTQ1JFRU5dOwogICAgKDAsIF9yb3V0ZXJfcHJvdmlkZXIucm91dGVyUHJvdmlkZXIpKCkudXBkYXRlQXBwU3RhdGUoYXBwU3RhdGUpOwogIH0gZWxzZSBpZiAocGF5bG9hZCA9PT0gdHJ1ZSAmJiAhYXBwVmFsdWUpIHsKICAgIGFwcFN0YXRlW190eXBlcy5BcHBTdGF0ZUtleXMuRlVMTFNDUkVFTl0gPSB0cnVlOwogICAgKDAsIF9yb3V0ZXJfcHJvdmlkZXIucm91dGVyUHJvdmlkZXIpKCkudXBkYXRlQXBwU3RhdGUoYXBwU3RhdGUpOwogIH0KfQoKZnVuY3Rpb24gc2V0QXV0b3BsYXlJbnRlcnZhbChwYXlsb2FkKSB7CiAgdmFyIGFwcFN0YXRlID0gZ2V0QXBwU3RhdGUoKTsKICB2YXIgYXBwVmFsdWUgPSBhcHBTdGF0ZVtfdHlwZXMuQXBwU3RhdGVLZXlzLkFVVE9QTEFZX0lOVEVSVkFMXTsKCiAgaWYgKHBheWxvYWQgIT09IGFwcFZhbHVlKSB7CiAgICBpZiAoIXBheWxvYWQgJiYgYXBwVmFsdWUpIHsKICAgICAgZGVsZXRlIGFwcFN0YXRlW190eXBlcy5BcHBTdGF0ZUtleXMuQVVUT1BMQVlfSU5URVJWQUxdOwogICAgICAoMCwgX3JvdXRlcl9wcm92aWRlci5yb3V0ZXJQcm92aWRlcikoKS51cGRhdGVBcHBTdGF0ZShhcHBTdGF0ZSk7CiAgICB9IGVsc2UgaWYgKHBheWxvYWQpIHsKICAgICAgYXBwU3RhdGVbX3R5cGVzLkFwcFN0YXRlS2V5cy5BVVRPUExBWV9JTlRFUlZBTF0gPSBwYXlsb2FkOwogICAgICAoMCwgX3JvdXRlcl9wcm92aWRlci5yb3V0ZXJQcm92aWRlcikoKS51cGRhdGVBcHBTdGF0ZShhcHBTdGF0ZSk7CiAgICB9CiAgfQp9CgpmdW5jdGlvbiBzZXRSZWZyZXNoSW50ZXJ2YWwocGF5bG9hZCkgewogIHZhciBhcHBTdGF0ZSA9IGdldEFwcFN0YXRlKCk7CiAgdmFyIGFwcFZhbHVlID0gYXBwU3RhdGVbX3R5cGVzLkFwcFN0YXRlS2V5cy5SRUZSRVNIX0lOVEVSVkFMXTsKCiAgaWYgKHBheWxvYWQgIT09IGFwcFZhbHVlKSB7CiAgICBpZiAoKDAsIF90aW1lX2ludGVydmFsLmdldFRpbWVJbnRlcnZhbCkocGF5bG9hZCkpIHsKICAgICAgYXBwU3RhdGVbX3R5cGVzLkFwcFN0YXRlS2V5cy5SRUZSRVNIX0lOVEVSVkFMXSA9IHBheWxvYWQ7CiAgICAgICgwLCBfcm91dGVyX3Byb3ZpZGVyLnJvdXRlclByb3ZpZGVyKSgpLnVwZGF0ZUFwcFN0YXRlKGFwcFN0YXRlKTsKICAgIH0gZWxzZSB7CiAgICAgIGRlbGV0ZSBhcHBTdGF0ZVtfdHlwZXMuQXBwU3RhdGVLZXlzLlJFRlJFU0hfSU5URVJWQUxdOwogICAgICAoMCwgX3JvdXRlcl9wcm92aWRlci5yb3V0ZXJQcm92aWRlcikoKS51cGRhdGVBcHBTdGF0ZShhcHBTdGF0ZSk7CiAgICB9CiAgfQp9"},null]}