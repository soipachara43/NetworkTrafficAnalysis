{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!src/legacy/core_plugins/vis_type_vega/public/components/vega_vis_editor.js","dependencies":[{"path":"src/legacy/core_plugins/vis_type_vega/public/components/vega_vis_editor.js","mtime":1589249550082},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLlZlZ2FWaXNFZGl0b3IgPSBWZWdhVmlzRWRpdG9yOwoKdmFyIF9yZWFjdCA9IF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKHJlcXVpcmUoInJlYWN0IikpOwoKdmFyIF9ldWkgPSByZXF1aXJlKCJAZWxhc3RpYy9ldWkiKTsKCnZhciBfanNvblN0cmluZ2lmeVByZXR0eUNvbXBhY3QgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoImpzb24tc3RyaW5naWZ5LXByZXR0eS1jb21wYWN0IikpOwoKdmFyIF9oanNvbiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgiaGpzb24iKSk7Cgp2YXIgX2kxOG4gPSByZXF1aXJlKCJAa2JuL2kxOG4iKTsKCnZhciBfc2VydmljZXMgPSByZXF1aXJlKCIuLi9zZXJ2aWNlcyIpOwoKdmFyIF92ZWdhX2hlbHBfbWVudSA9IHJlcXVpcmUoIi4vdmVnYV9oZWxwX21lbnUiKTsKCnZhciBfdmVnYV9hY3Rpb25zX21lbnUgPSByZXF1aXJlKCIuL3ZlZ2FfYWN0aW9uc19tZW51Iik7CgpmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgewogIHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7CiAgICBkZWZhdWx0OiBvYmoKICB9Owp9CgpmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChvYmopIHsKICBpZiAob2JqICYmIG9iai5fX2VzTW9kdWxlKSB7CiAgICByZXR1cm4gb2JqOwogIH0gZWxzZSB7CiAgICB2YXIgbmV3T2JqID0ge307CgogICAgaWYgKG9iaiAhPSBudWxsKSB7CiAgICAgIGZvciAodmFyIGtleSBpbiBvYmopIHsKICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwga2V5KSkgewogICAgICAgICAgdmFyIGRlc2MgPSBPYmplY3QuZGVmaW5lUHJvcGVydHkgJiYgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvciA/IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqLCBrZXkpIDoge307CgogICAgICAgICAgaWYgKGRlc2MuZ2V0IHx8IGRlc2Muc2V0KSB7CiAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShuZXdPYmosIGtleSwgZGVzYyk7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBuZXdPYmpba2V5XSA9IG9ialtrZXldOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfQoKICAgIG5ld09iai5kZWZhdWx0ID0gb2JqOwogICAgcmV0dXJuIG5ld09iajsKICB9Cn0KLyoKICogTGljZW5zZWQgdG8gRWxhc3RpY3NlYXJjaCBCLlYuIHVuZGVyIG9uZSBvciBtb3JlIGNvbnRyaWJ1dG9yCiAqIGxpY2Vuc2UgYWdyZWVtZW50cy4gU2VlIHRoZSBOT1RJQ0UgZmlsZSBkaXN0cmlidXRlZCB3aXRoCiAqIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvbiByZWdhcmRpbmcgY29weXJpZ2h0CiAqIG93bmVyc2hpcC4gRWxhc3RpY3NlYXJjaCBCLlYuIGxpY2Vuc2VzIHRoaXMgZmlsZSB0byB5b3UgdW5kZXIKICogdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlICJMaWNlbnNlIik7IHlvdSBtYXkKICogbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4KICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0CiAqCiAqICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMAogKgogKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsCiAqIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuCiAqICJBUyBJUyIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWQogKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUKICogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9ucwogKiB1bmRlciB0aGUgTGljZW5zZS4KICovCi8vIEB0cy1pZ25vcmUKCgp2YXIgYWNlT3B0aW9ucyA9IHsKICBtYXhMaW5lczogSW5maW5pdHksCiAgaGlnaGxpZ2h0QWN0aXZlTGluZTogZmFsc2UsCiAgc2hvd1ByaW50TWFyZ2luOiBmYWxzZSwKICB0YWJTaXplOiAyLAogIHVzZVNvZnRUYWJzOiB0cnVlLAogIHdyYXA6IHRydWUKfTsKdmFyIGhqc29uU3RyaW5naWZ5T3B0aW9ucyA9IHsKICBicmFjZXNTYW1lTGluZTogdHJ1ZSwKICBrZWVwV3NjOiB0cnVlCn07CgpmdW5jdGlvbiBmb3JtYXQodmFsdWUsIHN0cmluZ2lmeSwgb3B0aW9ucykgewogIHRyeSB7CiAgICB2YXIgc3BlYyA9IF9oanNvbi5kZWZhdWx0LnBhcnNlKHZhbHVlLCB7CiAgICAgIGxlZ2FjeVJvb3Q6IGZhbHNlLAogICAgICBrZWVwV3NjOiB0cnVlCiAgICB9KTsKCiAgICByZXR1cm4gc3RyaW5naWZ5KHNwZWMsIG9wdGlvbnMpOwogIH0gY2F0Y2ggKGVycikgewogICAgLy8gVGhpcyBpcyBhIGNvbW1vbiBjYXNlIC0gdXNlciB0cmllcyB0byBmb3JtYXQgYW4gaW52YWxpZCBISlNPTiB0ZXh0CiAgICAoMCwgX3NlcnZpY2VzLmdldE5vdGlmaWNhdGlvbnMpKCkudG9hc3RzLmFkZEVycm9yKGVyciwgewogICAgICB0aXRsZTogX2kxOG4uaTE4bi50cmFuc2xhdGUoJ3Zpc1R5cGVWZWdhLmVkaXRvci5mb3JtYXRFcnJvcicsIHsKICAgICAgICBkZWZhdWx0TWVzc2FnZTogJ0Vycm9yIGZvcm1hdHRpbmcgc3BlYycKICAgICAgfSkKICAgIH0pOwogICAgcmV0dXJuIHZhbHVlOwogIH0KfQoKZnVuY3Rpb24gVmVnYVZpc0VkaXRvcihfcmVmKSB7CiAgdmFyIHN0YXRlUGFyYW1zID0gX3JlZi5zdGF0ZVBhcmFtcywKICAgICAgc2V0VmFsdWUgPSBfcmVmLnNldFZhbHVlOwogIHZhciBvbkNoYW5nZSA9ICgwLCBfcmVhY3QudXNlQ2FsbGJhY2spKGZ1bmN0aW9uICh2YWx1ZSkgewogICAgc2V0VmFsdWUoJ3NwZWMnLCB2YWx1ZSk7CiAgfSwgW3NldFZhbHVlXSk7CiAgdmFyIGZvcm1hdEpzb24gPSAoMCwgX3JlYWN0LnVzZUNhbGxiYWNrKShmdW5jdGlvbiAoKSB7CiAgICByZXR1cm4gc2V0VmFsdWUoJ3NwZWMnLCBmb3JtYXQoc3RhdGVQYXJhbXMuc3BlYywgX2pzb25TdHJpbmdpZnlQcmV0dHlDb21wYWN0LmRlZmF1bHQpKTsKICB9LCBbc2V0VmFsdWUsIHN0YXRlUGFyYW1zLnNwZWNdKTsKICB2YXIgZm9ybWF0SEpzb24gPSAoMCwgX3JlYWN0LnVzZUNhbGxiYWNrKShmdW5jdGlvbiAoKSB7CiAgICByZXR1cm4gc2V0VmFsdWUoJ3NwZWMnLCBmb3JtYXQoc3RhdGVQYXJhbXMuc3BlYywgX2hqc29uLmRlZmF1bHQuc3RyaW5naWZ5LCBoanNvblN0cmluZ2lmeU9wdGlvbnMpKTsKICB9LCBbc2V0VmFsdWUsIHN0YXRlUGFyYW1zLnNwZWNdKTsKICByZXR1cm4gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudCgiZGl2IiwgewogICAgY2xhc3NOYW1lOiAidmdhRWRpdG9yIgogIH0sIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlDb2RlRWRpdG9yLCB7CiAgICAiZGF0YS10ZXN0LXN1YmoiOiAidmVnYS1lZGl0b3IiLAogICAgbW9kZTogImhqc29uIiwKICAgIHRoZW1lOiAidGV4dG1hdGUiLAogICAgd2lkdGg6ICIxMDAlIiwKICAgIGhlaWdodDogImF1dG8iLAogICAgb25DaGFuZ2U6IG9uQ2hhbmdlLAogICAgdmFsdWU6IHN0YXRlUGFyYW1zLnNwZWMsCiAgICBzZXRPcHRpb25zOiBhY2VPcHRpb25zCiAgfSksIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoImRpdiIsIHsKICAgIGNsYXNzTmFtZTogInZnYUVkaXRvcl9fYWNlRWRpdG9yQWN0aW9ucyIKICB9LCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF92ZWdhX2hlbHBfbWVudS5WZWdhSGVscE1lbnUsIG51bGwpLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF92ZWdhX2FjdGlvbnNfbWVudS5WZWdhQWN0aW9uc01lbnUsIHsKICAgIGZvcm1hdEhKc29uOiBmb3JtYXRISnNvbiwKICAgIGZvcm1hdEpzb246IGZvcm1hdEpzb24KICB9KSkpOwp9"},null]}