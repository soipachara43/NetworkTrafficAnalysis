{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!src/legacy/core_plugins/vis_type_timeseries/public/components/series.js","dependencies":[{"path":"src/legacy/core_plugins/vis_type_timeseries/public/components/series.js","mtime":1589249550022},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLlNlcmllcyA9IHZvaWQgMDsKCnZhciBfcHJvcFR5cGVzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCJwcm9wLXR5cGVzIikpOwoKdmFyIF9yZWFjdCA9IF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKHJlcXVpcmUoInJlYWN0IikpOwoKdmFyIF9sb2Rhc2ggPSByZXF1aXJlKCJsb2Rhc2giKTsKCnZhciBfc2VyaWVzID0gcmVxdWlyZSgiLi92aXNfdHlwZXMvdGltZXNlcmllcy9zZXJpZXMiKTsKCnZhciBfc2VyaWVzMiA9IHJlcXVpcmUoIi4vdmlzX3R5cGVzL21ldHJpYy9zZXJpZXMiKTsKCnZhciBfc2VyaWVzMyA9IHJlcXVpcmUoIi4vdmlzX3R5cGVzL3RvcF9uL3NlcmllcyIpOwoKdmFyIF9zZXJpZXM0ID0gcmVxdWlyZSgiLi92aXNfdHlwZXMvdGFibGUvc2VyaWVzIik7Cgp2YXIgX3NlcmllczUgPSByZXF1aXJlKCIuL3Zpc190eXBlcy9nYXVnZS9zZXJpZXMiKTsKCnZhciBfc2VyaWVzNiA9IHJlcXVpcmUoIi4vdmlzX3R5cGVzL21hcmtkb3duL3NlcmllcyIpOwoKdmFyIF9yZWFjdDIgPSByZXF1aXJlKCJAa2JuL2kxOG4vcmVhY3QiKTsKCnZhciBfdmlzX2RhdGFfY29udGV4dCA9IHJlcXVpcmUoIi4uL2NvbnRleHRzL3Zpc19kYXRhX2NvbnRleHQiKTsKCmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKG9iaikgeyBpZiAob2JqICYmIG9iai5fX2VzTW9kdWxlKSB7IHJldHVybiBvYmo7IH0gZWxzZSB7IHZhciBuZXdPYmogPSB7fTsgaWYgKG9iaiAhPSBudWxsKSB7IGZvciAodmFyIGtleSBpbiBvYmopIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGtleSkpIHsgdmFyIGRlc2MgPSBPYmplY3QuZGVmaW5lUHJvcGVydHkgJiYgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvciA/IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqLCBrZXkpIDoge307IGlmIChkZXNjLmdldCB8fCBkZXNjLnNldCkgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkobmV3T2JqLCBrZXksIGRlc2MpOyB9IGVsc2UgeyBuZXdPYmpba2V5XSA9IG9ialtrZXldOyB9IH0gfSB9IG5ld09iai5kZWZhdWx0ID0gb2JqOyByZXR1cm4gbmV3T2JqOyB9IH0KCmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9CgpmdW5jdGlvbiBfdHlwZW9mKG9iaikgeyBpZiAodHlwZW9mIFN5bWJvbCA9PT0gImZ1bmN0aW9uIiAmJiB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID09PSAic3ltYm9sIikgeyBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgcmV0dXJuIHR5cGVvZiBvYmo7IH07IH0gZWxzZSB7IF90eXBlb2YgPSBmdW5jdGlvbiBfdHlwZW9mKG9iaikgeyByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09ICJmdW5jdGlvbiIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gInN5bWJvbCIgOiB0eXBlb2Ygb2JqOyB9OyB9IHJldHVybiBfdHlwZW9mKG9iaik7IH0KCmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcigiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uIik7IH0gfQoKZnVuY3Rpb24gX2RlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoInZhbHVlIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0KCmZ1bmN0aW9uIF9jcmVhdGVDbGFzcyhDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9CgpmdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmIChjYWxsICYmIChfdHlwZW9mKGNhbGwpID09PSAib2JqZWN0IiB8fCB0eXBlb2YgY2FsbCA9PT0gImZ1bmN0aW9uIikpIHsgcmV0dXJuIGNhbGw7IH0gcmV0dXJuIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZik7IH0KCmZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7IF9nZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5nZXRQcm90b3R5cGVPZiA6IGZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7IHJldHVybiBvLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2Yobyk7IH07IHJldHVybiBfZ2V0UHJvdG90eXBlT2Yobyk7IH0KCmZ1bmN0aW9uIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZikgeyBpZiAoc2VsZiA9PT0gdm9pZCAwKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcigidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkIik7IH0gcmV0dXJuIHNlbGY7IH0KCmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09ICJmdW5jdGlvbiIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiIpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIF9zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcyk7IH0KCmZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7IF9zZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fCBmdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkgeyBvLl9fcHJvdG9fXyA9IHA7IHJldHVybiBvOyB9OyByZXR1cm4gX3NldFByb3RvdHlwZU9mKG8sIHApOyB9CgpmdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7IGlmIChrZXkgaW4gb2JqKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgeyB2YWx1ZTogdmFsdWUsIGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUgfSk7IH0gZWxzZSB7IG9ialtrZXldID0gdmFsdWU7IH0gcmV0dXJuIG9iajsgfQoKdmFyIGxvb2t1cCA9IHsKICB0b3BfbjogX3NlcmllczMuVG9wTlNlcmllcywKICB0YWJsZTogX3NlcmllczQuVGFibGVTZXJpZXMsCiAgbWV0cmljOiBfc2VyaWVzMi5NZXRyaWNTZXJpZXMsCiAgdGltZXNlcmllczogX3Nlcmllcy5UaW1lc2VyaWVzU2VyaWVzLAogIGdhdWdlOiBfc2VyaWVzNS5HYXVnZVNlcmllcywKICBtYXJrZG93bjogX3NlcmllczYuTWFya2Rvd25TZXJpZXMKfTsKCnZhciBTZXJpZXMgPQovKiNfX1BVUkVfXyovCmZ1bmN0aW9uIChfQ29tcG9uZW50KSB7CiAgX2luaGVyaXRzKFNlcmllcywgX0NvbXBvbmVudCk7CgogIGZ1bmN0aW9uIFNlcmllcygpIHsKICAgIHZhciBfZ2V0UHJvdG90eXBlT2YyOwoKICAgIHZhciBfdGhpczsKCiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgU2VyaWVzKTsKCiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHsKICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTsKICAgIH0KCiAgICBfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIChfZ2V0UHJvdG90eXBlT2YyID0gX2dldFByb3RvdHlwZU9mKFNlcmllcykpLmNhbGwuYXBwbHkoX2dldFByb3RvdHlwZU9mMiwgW3RoaXNdLmNvbmNhdChhcmdzKSkpOwoKICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgInN0YXRlIiwgewogICAgICB2aXNpYmxlOiB0cnVlLAogICAgICBzZWxlY3RlZFRhYjogJ21ldHJpY3MnCiAgICB9KTsKCiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksICJzd2l0Y2hUYWIiLCBmdW5jdGlvbiAoc2VsZWN0ZWRUYWIpIHsKICAgICAgX3RoaXMuc2V0U3RhdGUoewogICAgICAgIHNlbGVjdGVkVGFiOiBzZWxlY3RlZFRhYgogICAgICB9KTsKICAgIH0pOwoKICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgImhhbmRsZUNoYW5nZSIsIGZ1bmN0aW9uIChwYXJ0KSB7CiAgICAgIGlmIChfdGhpcy5wcm9wcy5vbkNoYW5nZSkgewogICAgICAgIHZhciBtb2RlbCA9IF90aGlzLnByb3BzLm1vZGVsOwogICAgICAgIHZhciBkb2MgPSAoMCwgX2xvZGFzaC5hc3NpZ24pKHt9LCBtb2RlbCwgcGFydCk7CgogICAgICAgIF90aGlzLnByb3BzLm9uQ2hhbmdlKGRvYyk7CiAgICAgIH0KICAgIH0pOwoKICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgInRvZ2dsZVBhbmVsQWN0aXZhdGlvbiIsIGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIG1vZGVsID0gX3RoaXMucHJvcHMubW9kZWw7CgogICAgICBfdGhpcy5oYW5kbGVDaGFuZ2UoewogICAgICAgIGhpZGRlbjogIW1vZGVsLmhpZGRlbgogICAgICB9KTsKICAgIH0pOwoKICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgInRvZ2dsZVZpc2libGUiLCBmdW5jdGlvbiAoZSkgewogICAgICBlLnByZXZlbnREZWZhdWx0KCk7CgogICAgICBfdGhpcy5zZXRTdGF0ZSh7CiAgICAgICAgdmlzaWJsZTogIV90aGlzLnN0YXRlLnZpc2libGUKICAgICAgfSk7CiAgICB9KTsKCiAgICByZXR1cm4gX3RoaXM7CiAgfQoKICBfY3JlYXRlQ2xhc3MoU2VyaWVzLCBbewogICAga2V5OiAicmVuZGVyIiwKICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXIoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgdmFyIHBhbmVsID0gdGhpcy5wcm9wcy5wYW5lbDsKICAgICAgdmFyIENvbXBvbmVudCA9IGxvb2t1cFtwYW5lbC50eXBlXTsKICAgICAgcmV0dXJuIEJvb2xlYW4oQ29tcG9uZW50KSA/IF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3Zpc19kYXRhX2NvbnRleHQuVmlzRGF0YUNvbnRleHQuQ29uc3VtZXIsIG51bGwsIGZ1bmN0aW9uICh2aXNEYXRhKSB7CiAgICAgICAgdmFyIHNlcmllcyA9ICgwLCBfbG9kYXNoLmdldCkodmlzRGF0YSwgIiIuY29uY2F0KHBhbmVsLmlkLCAiLnNlcmllcyIpLCBbXSk7CiAgICAgICAgdmFyIGNvdW50ZXIgPSB7fTsKICAgICAgICB2YXIgc2VyaWVzUXVhbnRpdHkgPSBzZXJpZXMucmVkdWNlKGZ1bmN0aW9uIChhY2MsIHZhbHVlKSB7CiAgICAgICAgICBjb3VudGVyW3ZhbHVlLnNlcmllc0lkXSA9IGNvdW50ZXJbdmFsdWUuc2VyaWVzSWRdICsgMSB8fCAxOwogICAgICAgICAgYWNjW3ZhbHVlLnNlcmllc0lkXSA9IGNvdW50ZXJbdmFsdWUuc2VyaWVzSWRdOwogICAgICAgICAgcmV0dXJuIGFjYzsKICAgICAgICB9LCB7fSk7CiAgICAgICAgcmV0dXJuIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoQ29tcG9uZW50LCB7CiAgICAgICAgICBjbGFzc05hbWU6IF90aGlzMi5wcm9wcy5jbGFzc05hbWUsCiAgICAgICAgICBkaXNhYmxlQWRkOiBfdGhpczIucHJvcHMuZGlzYWJsZUFkZCwKICAgICAgICAgIHVpUmVzdHJpY3Rpb25zOiB2aXNEYXRhLnVpUmVzdHJpY3Rpb25zLAogICAgICAgICAgc2VyaWVzUXVhbnRpdHk6IHNlcmllc1F1YW50aXR5LAogICAgICAgICAgZGlzYWJsZURlbGV0ZTogX3RoaXMyLnByb3BzLmRpc2FibGVEZWxldGUsCiAgICAgICAgICBmaWVsZHM6IF90aGlzMi5wcm9wcy5maWVsZHMsCiAgICAgICAgICBuYW1lOiBfdGhpczIucHJvcHMubmFtZSwKICAgICAgICAgIG9uQWRkOiBfdGhpczIucHJvcHMub25BZGQsCiAgICAgICAgICBvbkNoYW5nZTogX3RoaXMyLmhhbmRsZUNoYW5nZSwKICAgICAgICAgIG9uQ2xvbmU6IF90aGlzMi5wcm9wcy5vbkNsb25lLAogICAgICAgICAgb25EZWxldGU6IF90aGlzMi5wcm9wcy5vbkRlbGV0ZSwKICAgICAgICAgIG1vZGVsOiBfdGhpczIucHJvcHMubW9kZWwsCiAgICAgICAgICBwYW5lbDogX3RoaXMyLnByb3BzLnBhbmVsLAogICAgICAgICAgc2VsZWN0ZWRUYWI6IF90aGlzMi5zdGF0ZS5zZWxlY3RlZFRhYiwKICAgICAgICAgIHN0eWxlOiBfdGhpczIucHJvcHMuc3R5bGUsCiAgICAgICAgICBzd2l0Y2hUYWI6IF90aGlzMi5zd2l0Y2hUYWIsCiAgICAgICAgICB0b2dnbGVWaXNpYmxlOiBfdGhpczIudG9nZ2xlVmlzaWJsZSwKICAgICAgICAgIHRvZ2dsZVBhbmVsQWN0aXZhdGlvbjogX3RoaXMyLnRvZ2dsZVBhbmVsQWN0aXZhdGlvbiwKICAgICAgICAgIHZpc2libGU6IF90aGlzMi5zdGF0ZS52aXNpYmxlLAogICAgICAgICAgZHJhZ0hhbmRsZVByb3BzOiBfdGhpczIucHJvcHMuZHJhZ0hhbmRsZVByb3BzLAogICAgICAgICAgaW5kZXhQYXR0ZXJuRm9yUXVlcnk6IHBhbmVsLmluZGV4X3BhdHRlcm4gfHwgcGFuZWwuZGVmYXVsdF9pbmRleF9wYXR0ZXJuCiAgICAgICAgfSk7CiAgICAgIH0pIDogX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfcmVhY3QyLkZvcm1hdHRlZE1lc3NhZ2UsIHsKICAgICAgICBpZDogInZpc1R5cGVUaW1lc2VyaWVzLnNlcmllc0NvbmZpZy5taXNzaW5nU2VyaWVzQ29tcG9uZW50RGVzY3JpcHRpb24iLAogICAgICAgIGRlZmF1bHRNZXNzYWdlOiAiTWlzc2luZyBTZXJpZXMgY29tcG9uZW50IGZvciBwYW5lbCB0eXBlOiB7cGFuZWxUeXBlfSIsCiAgICAgICAgdmFsdWVzOiB7CiAgICAgICAgICBwYW5lbFR5cGU6IHBhbmVsLnR5cGUKICAgICAgICB9CiAgICAgIH0pOwogICAgfQogIH1dKTsKCiAgcmV0dXJuIFNlcmllczsKfShfcmVhY3QuQ29tcG9uZW50KTsKCmV4cG9ydHMuU2VyaWVzID0gU2VyaWVzOwpTZXJpZXMuZGVmYXVsdFByb3BzID0gewogIG5hbWU6ICdtZXRyaWNzJwp9OwpTZXJpZXMucHJvcFR5cGVzID0gewogIGNsYXNzTmFtZTogX3Byb3BUeXBlcy5kZWZhdWx0LnN0cmluZywKICBkaXNhYmxlQWRkOiBfcHJvcFR5cGVzLmRlZmF1bHQuYm9vbCwKICBkaXNhYmxlRGVsZXRlOiBfcHJvcFR5cGVzLmRlZmF1bHQuYm9vbCwKICBmaWVsZHM6IF9wcm9wVHlwZXMuZGVmYXVsdC5vYmplY3QsCiAgbmFtZTogX3Byb3BUeXBlcy5kZWZhdWx0LnN0cmluZywKICBvbkFkZDogX3Byb3BUeXBlcy5kZWZhdWx0LmZ1bmMsCiAgb25DaGFuZ2U6IF9wcm9wVHlwZXMuZGVmYXVsdC5mdW5jLAogIG9uQ2xvbmU6IF9wcm9wVHlwZXMuZGVmYXVsdC5mdW5jLAogIG9uRGVsZXRlOiBfcHJvcFR5cGVzLmRlZmF1bHQuZnVuYywKICBtb2RlbDogX3Byb3BUeXBlcy5kZWZhdWx0Lm9iamVjdCwKICBwYW5lbDogX3Byb3BUeXBlcy5kZWZhdWx0Lm9iamVjdCwKICBkcmFnSGFuZGxlUHJvcHM6IF9wcm9wVHlwZXMuZGVmYXVsdC5vYmplY3QKfTs="},null]}