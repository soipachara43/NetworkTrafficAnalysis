{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/canvas/public/components/router/router.js","dependencies":[{"path":"x-pack/legacy/plugins/canvas/public/components/router/router.js","mtime":1589249552003},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLlJvdXRlciA9IHZvaWQgMDsKCnZhciBfcmVhY3QgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoInJlYWN0IikpOwoKdmFyIF9wcm9wVHlwZXMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoInByb3AtdHlwZXMiKSk7Cgp2YXIgX3JvdXRlcl9wcm92aWRlciA9IHJlcXVpcmUoIi4uLy4uL2xpYi9yb3V0ZXJfcHJvdmlkZXIiKTsKCnZhciBfYXBwX3N0YXRlID0gcmVxdWlyZSgiLi4vLi4vbGliL2FwcF9zdGF0ZSIpOwoKdmFyIF90aW1lX2ludGVydmFsID0gcmVxdWlyZSgiLi4vLi4vbGliL3RpbWVfaW50ZXJ2YWwiKTsKCnZhciBfY2FudmFzX2xvYWRpbmcgPSByZXF1aXJlKCIuL2NhbnZhc19sb2FkaW5nIik7CgpmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfQoKZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgaWYgKHR5cGVvZiBTeW1ib2wgPT09ICJmdW5jdGlvbiIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gInN5bWJvbCIpIHsgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9OyB9IGVsc2UgeyBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSAiZnVuY3Rpb24iICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/ICJzeW1ib2wiIDogdHlwZW9mIG9iajsgfTsgfSByZXR1cm4gX3R5cGVvZihvYmopOyB9CgpmdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvbiIpOyB9IH0KCmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKCJ2YWx1ZSIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9CgpmdW5jdGlvbiBfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfQoKZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoY2FsbCAmJiAoX3R5cGVvZihjYWxsKSA9PT0gIm9iamVjdCIgfHwgdHlwZW9mIGNhbGwgPT09ICJmdW5jdGlvbiIpKSB7IHJldHVybiBjYWxsOyB9IHJldHVybiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpOyB9CgpmdW5jdGlvbiBfZ2V0UHJvdG90eXBlT2YobykgeyBfZ2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3QuZ2V0UHJvdG90eXBlT2YgOiBmdW5jdGlvbiBfZ2V0UHJvdG90eXBlT2YobykgeyByZXR1cm4gby5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKG8pOyB9OyByZXR1cm4gX2dldFByb3RvdHlwZU9mKG8pOyB9CgpmdW5jdGlvbiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpIHsgaWYgKHNlbGYgPT09IHZvaWQgMCkgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZCIpOyB9IHJldHVybiBzZWxmOyB9CgpmdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSAiZnVuY3Rpb24iICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcigiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24iKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBfc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpOyB9CgpmdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkgeyBfc2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHwgZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHsgby5fX3Byb3RvX18gPSBwOyByZXR1cm4gbzsgfTsgcmV0dXJuIF9zZXRQcm90b3R5cGVPZihvLCBwKTsgfQoKZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkgeyBpZiAoa2V5IGluIG9iaikgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHsgdmFsdWU6IHZhbHVlLCBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlIH0pOyB9IGVsc2UgeyBvYmpba2V5XSA9IHZhbHVlOyB9IHJldHVybiBvYmo7IH0KCnZhciBSb3V0ZXIgPQovKiNfX1BVUkVfXyovCmZ1bmN0aW9uIChfUmVhY3QkUHVyZUNvbXBvbmVudCkgewogIF9pbmhlcml0cyhSb3V0ZXIsIF9SZWFjdCRQdXJlQ29tcG9uZW50KTsKCiAgZnVuY3Rpb24gUm91dGVyKCkgewogICAgdmFyIF9nZXRQcm90b3R5cGVPZjI7CgogICAgdmFyIF90aGlzOwoKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBSb3V0ZXIpOwoKICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykgewogICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldOwogICAgfQoKICAgIF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgKF9nZXRQcm90b3R5cGVPZjIgPSBfZ2V0UHJvdG90eXBlT2YoUm91dGVyKSkuY2FsbC5hcHBseShfZ2V0UHJvdG90eXBlT2YyLCBbdGhpc10uY29uY2F0KGFyZ3MpKSk7CgogICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCAic3RhdGUiLCB7CiAgICAgIHJvdXRlcjoge30sCiAgICAgIGFjdGl2ZUNvbXBvbmVudDogX2NhbnZhc19sb2FkaW5nLkNhbnZhc0xvYWRpbmcKICAgIH0pOwoKICAgIHJldHVybiBfdGhpczsKICB9CgogIF9jcmVhdGVDbGFzcyhSb3V0ZXIsIFt7CiAgICBrZXk6ICJnZXRDaGlsZENvbnRleHQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdldENoaWxkQ29udGV4dCgpIHsKICAgICAgdmFyIHJvdXRlciA9IHRoaXMuc3RhdGUucm91dGVyOwogICAgICByZXR1cm4gewogICAgICAgIHJvdXRlcjogcm91dGVyCiAgICAgIH07CiAgICB9CiAgfSwgewogICAga2V5OiAiVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICAvLyByb3V0ZXJQcm92aWRlciBpcyBhIHNpbmdsZXRvbiwgYW5kIHdpbGwgb25seSBldmVyIHJldHVybiBvbmUgaW5zdGFuY2UKICAgICAgdmFyIF90aGlzJHByb3BzID0gdGhpcy5wcm9wcywKICAgICAgICAgIHJvdXRlcyA9IF90aGlzJHByb3BzLnJvdXRlcywKICAgICAgICAgIG9uUm91dGVDaGFuZ2UgPSBfdGhpcyRwcm9wcy5vblJvdXRlQ2hhbmdlLAogICAgICAgICAgb25Mb2FkID0gX3RoaXMkcHJvcHMub25Mb2FkLAogICAgICAgICAgb25FcnJvciA9IF90aGlzJHByb3BzLm9uRXJyb3I7CiAgICAgIHZhciByb3V0ZXIgPSAoMCwgX3JvdXRlcl9wcm92aWRlci5yb3V0ZXJQcm92aWRlcikocm91dGVzKTsKICAgICAgdmFyIGZpcnN0TG9hZCA9IHRydWU7IC8vIHdoZW4gdGhlIGNvbXBvbmVudCBpbiB0aGUgcm91dGUgY2hhbmdlcywgcmVuZGVyIGl0CgogICAgICByb3V0ZXIub25QYXRoQ2hhbmdlKGZ1bmN0aW9uIChyb3V0ZSkgewogICAgICAgIHZhciBwYXRobmFtZSA9IHJvdXRlLmxvY2F0aW9uLnBhdGhuYW1lOwogICAgICAgIHZhciBjb21wb25lbnQgPSByb3V0ZS5tZXRhLmNvbXBvbmVudDsKCiAgICAgICAgaWYgKCFjb21wb25lbnQpIHsKICAgICAgICAgIC8vIFRPRE86IHJlbmRlciBzb21lIGtpbmQgb2YgNDA0IHBhZ2UsIG1heWJlIGZyb20gYSBwcm9wPwogICAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHsKICAgICAgICAgICAgY29uc29sZS53YXJuKCJObyBjb21wb25lbnQgZGVmaW5lZCBvbiByb3V0ZTogIi5jb25jYXQocm91dGUubmFtZSkpOwogICAgICAgICAgfQoKICAgICAgICAgIHJldHVybjsKICAgICAgICB9IC8vIGlmIHRoaXMgaXMgdGhlIGZpcnN0IGxvYWQsIGV4ZWN1dGUgdGhlIHJvdXRlCgoKICAgICAgICBpZiAoZmlyc3RMb2FkKSB7CiAgICAgICAgICBmaXJzdExvYWQgPSBmYWxzZTsgLy8gZXhlY3V0ZSB0aGUgcm91dGUKCiAgICAgICAgICByb3V0ZXIuZXhlY3V0ZSgpLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgICAgICByZXR1cm4gb25Mb2FkKCk7CiAgICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyKSB7CiAgICAgICAgICAgIHJldHVybiBvbkVycm9yKGVycik7CiAgICAgICAgICB9KTsKICAgICAgICB9CgogICAgICAgIHZhciBhcHBTdGF0ZSA9ICgwLCBfYXBwX3N0YXRlLmdldEFwcFN0YXRlKSgpOwoKICAgICAgICBpZiAoYXBwU3RhdGUuX19mdWxsc2NyZWVuKSB7CiAgICAgICAgICBfdGhpczIucHJvcHMuc2V0RnVsbHNjcmVlbihhcHBTdGF0ZS5fX2Z1bGxzY3JlZW4pOwogICAgICAgIH0KCiAgICAgICAgaWYgKGFwcFN0YXRlLl9fcmVmcmVzaEludGVydmFsKSB7CiAgICAgICAgICBfdGhpczIucHJvcHMuc2V0UmVmcmVzaEludGVydmFsKCgwLCBfdGltZV9pbnRlcnZhbC5nZXRUaW1lSW50ZXJ2YWwpKGFwcFN0YXRlLl9fcmVmcmVzaEludGVydmFsKSk7CiAgICAgICAgfQoKICAgICAgICBpZiAoISFhcHBTdGF0ZS5fX2F1dG9wbGF5SW50ZXJ2YWwpIHsKICAgICAgICAgIF90aGlzMi5wcm9wcy5lbmFibGVBdXRvcGxheSh0cnVlKTsKCiAgICAgICAgICBfdGhpczIucHJvcHMuc2V0QXV0b3BsYXlJbnRlcnZhbCgoMCwgX3RpbWVfaW50ZXJ2YWwuZ2V0VGltZUludGVydmFsKShhcHBTdGF0ZS5fX2F1dG9wbGF5SW50ZXJ2YWwpKTsKICAgICAgICB9IC8vIG5vdGlmeSB1cHN0cmVhbSBoYW5kbGVyIG9mIHJvdXRlIGNoYW5nZQoKCiAgICAgICAgb25Sb3V0ZUNoYW5nZSAmJiBvblJvdXRlQ2hhbmdlKHBhdGhuYW1lKTsKCiAgICAgICAgX3RoaXMyLnNldFN0YXRlKHsKICAgICAgICAgIGFjdGl2ZUNvbXBvbmVudDogY29tcG9uZW50CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgICB0aGlzLnNldFN0YXRlKHsKICAgICAgICByb3V0ZXI6IHJvdXRlcgogICAgICB9KTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJyZW5kZXIiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcigpIHsKICAgICAgLy8gc2hvdyBsb2FkaW5nCiAgICAgIGlmICh0aGlzLnByb3BzLnNob3dMb2FkaW5nKSB7CiAgICAgICAgcmV0dXJuIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2NhbnZhc19sb2FkaW5nLkNhbnZhc0xvYWRpbmcsIHsKICAgICAgICAgIG1zZzogdGhpcy5wcm9wcy5sb2FkaW5nTWVzc2FnZQogICAgICAgIH0pOwogICAgICB9CgogICAgICByZXR1cm4gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudCh0aGlzLnN0YXRlLmFjdGl2ZUNvbXBvbmVudCwgbnVsbCk7CiAgICB9CiAgfV0pOwoKICByZXR1cm4gUm91dGVyOwp9KF9yZWFjdC5kZWZhdWx0LlB1cmVDb21wb25lbnQpOwoKZXhwb3J0cy5Sb3V0ZXIgPSBSb3V0ZXI7CgpfZGVmaW5lUHJvcGVydHkoUm91dGVyLCAicHJvcFR5cGVzIiwgewogIHNob3dMb2FkaW5nOiBfcHJvcFR5cGVzLmRlZmF1bHQuYm9vbC5pc1JlcXVpcmVkLAogIG9uTG9hZDogX3Byb3BUeXBlcy5kZWZhdWx0LmZ1bmMuaXNSZXF1aXJlZCwKICBvbkVycm9yOiBfcHJvcFR5cGVzLmRlZmF1bHQuZnVuYy5pc1JlcXVpcmVkLAogIHJvdXRlczogX3Byb3BUeXBlcy5kZWZhdWx0LmFycmF5LmlzUmVxdWlyZWQsCiAgbG9hZGluZ01lc3NhZ2U6IF9wcm9wVHlwZXMuZGVmYXVsdC5zdHJpbmcsCiAgb25Sb3V0ZUNoYW5nZTogX3Byb3BUeXBlcy5kZWZhdWx0LmZ1bmMsCiAgc2V0RnVsbHNjcmVlbjogX3Byb3BUeXBlcy5kZWZhdWx0LmZ1bmMuaXNSZXF1aXJlZAp9KTsKCl9kZWZpbmVQcm9wZXJ0eShSb3V0ZXIsICJjaGlsZENvbnRleHRUeXBlcyIsIHsKICByb3V0ZXI6IF9wcm9wVHlwZXMuZGVmYXVsdC5vYmplY3QuaXNSZXF1aXJlZAp9KTs="},null]}