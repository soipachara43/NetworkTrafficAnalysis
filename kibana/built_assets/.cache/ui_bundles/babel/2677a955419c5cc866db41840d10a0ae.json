{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/monitoring/public/components/elasticsearch/shard_allocation/components/cluster_view.js","dependencies":[{"path":"x-pack/legacy/plugins/monitoring/public/components/elasticsearch/shard_allocation/components/cluster_view.js","mtime":1589249552536},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLkNsdXN0ZXJWaWV3ID0gdm9pZCAwOwoKdmFyIF9yZWFjdCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgicmVhY3QiKSk7Cgp2YXIgX3RhYmxlX2hlYWQgPSByZXF1aXJlKCIuL3RhYmxlX2hlYWQiKTsKCnZhciBfdGFibGVfYm9keSA9IHJlcXVpcmUoIi4vdGFibGVfYm9keSIpOwoKdmFyIF9pMThuID0gcmVxdWlyZSgiQGtibi9pMThuIik7CgpmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfQoKZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgaWYgKHR5cGVvZiBTeW1ib2wgPT09ICJmdW5jdGlvbiIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gInN5bWJvbCIpIHsgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9OyB9IGVsc2UgeyBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSAiZnVuY3Rpb24iICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/ICJzeW1ib2wiIDogdHlwZW9mIG9iajsgfTsgfSByZXR1cm4gX3R5cGVvZihvYmopOyB9CgpmdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvbiIpOyB9IH0KCmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKCJ2YWx1ZSIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9CgpmdW5jdGlvbiBfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfQoKZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoY2FsbCAmJiAoX3R5cGVvZihjYWxsKSA9PT0gIm9iamVjdCIgfHwgdHlwZW9mIGNhbGwgPT09ICJmdW5jdGlvbiIpKSB7IHJldHVybiBjYWxsOyB9IHJldHVybiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpOyB9CgpmdW5jdGlvbiBfZ2V0UHJvdG90eXBlT2YobykgeyBfZ2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3QuZ2V0UHJvdG90eXBlT2YgOiBmdW5jdGlvbiBfZ2V0UHJvdG90eXBlT2YobykgeyByZXR1cm4gby5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKG8pOyB9OyByZXR1cm4gX2dldFByb3RvdHlwZU9mKG8pOyB9CgpmdW5jdGlvbiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpIHsgaWYgKHNlbGYgPT09IHZvaWQgMCkgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZCIpOyB9IHJldHVybiBzZWxmOyB9CgpmdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSAiZnVuY3Rpb24iICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcigiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24iKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBfc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpOyB9CgpmdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkgeyBfc2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHwgZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHsgby5fX3Byb3RvX18gPSBwOyByZXR1cm4gbzsgfTsgcmV0dXJuIF9zZXRQcm90b3R5cGVPZihvLCBwKTsgfQoKZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkgeyBpZiAoa2V5IGluIG9iaikgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHsgdmFsdWU6IHZhbHVlLCBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlIH0pOyB9IGVsc2UgeyBvYmpba2V5XSA9IHZhbHVlOyB9IHJldHVybiBvYmo7IH0KCnZhciBDbHVzdGVyVmlldyA9Ci8qI19fUFVSRV9fKi8KZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHsKICBfaW5oZXJpdHMoQ2x1c3RlclZpZXcsIF9SZWFjdCRDb21wb25lbnQpOwoKICBmdW5jdGlvbiBDbHVzdGVyVmlldyhwcm9wcykgewogICAgdmFyIF90aGlzOwoKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBDbHVzdGVyVmlldyk7CgogICAgX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfZ2V0UHJvdG90eXBlT2YoQ2x1c3RlclZpZXcpLmNhbGwodGhpcywgcHJvcHMpKTsKCiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksICJzZXRTaG93aW5nIiwgZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgaWYgKGRhdGEpIHsKICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7CiAgICAgICAgICBzaG93aW5nOiBkYXRhCiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0pOwoKICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgInNldFNoYXJkU3RhdHMiLCBmdW5jdGlvbiAoc3RhdHMpIHsKICAgICAgX3RoaXMuc2V0U3RhdGUoewogICAgICAgIHNoYXJkU3RhdHM6IHN0YXRzCiAgICAgIH0pOwogICAgfSk7CgogICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCAiaGFzVW5hc3NpZ25lZCIsIGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIF90aGlzLnN0YXRlLnNob3dpbmcubGVuZ3RoICYmIF90aGlzLnN0YXRlLnNob3dpbmdbMF0udW5hc3NpZ25lZCAmJiBfdGhpcy5zdGF0ZS5zaG93aW5nWzBdLnVuYXNzaWduZWQubGVuZ3RoOwogICAgfSk7CgogICAgdmFyIHNjb3BlID0gcHJvcHMuc2NvcGU7CiAgICB2YXIga2JuQ2hhbmdlUGF0aCA9IHByb3BzLmtiblVybC5jaGFuZ2VQYXRoOwogICAgX3RoaXMuc3RhdGUgPSB7CiAgICAgIGxhYmVsczogcHJvcHMuc2NvcGUubGFiZWxzIHx8IFtdLAogICAgICBzaG93aW5nOiBwcm9wcy5zY29wZS5zaG93aW5nIHx8IFtdLAogICAgICBzaGFyZFN0YXRzOiBwcm9wcy5zY29wZS5wYWdlRGF0YS5zaGFyZFN0YXRzLAogICAgICBzaG93U3lzdGVtSW5kaWNlczogcHJvcHMuc2hvd1N5c3RlbUluZGljZXMsCiAgICAgIHRvZ2dsZVNob3dTeXN0ZW1JbmRpY2VzOiBwcm9wcy50b2dnbGVTaG93U3lzdGVtSW5kaWNlcywKICAgICAgYW5ndWxhckNoYW5nZVVybDogZnVuY3Rpb24gYW5ndWxhckNoYW5nZVVybCh1cmwpIHsKICAgICAgICBzY29wZS4kZXZhbEFzeW5jKGZ1bmN0aW9uICgpIHsKICAgICAgICAgIHJldHVybiBrYm5DaGFuZ2VQYXRoKHVybCk7CiAgICAgICAgfSk7CiAgICAgIH0KICAgIH07CiAgICByZXR1cm4gX3RoaXM7CiAgfQoKICBfY3JlYXRlQ2xhc3MoQ2x1c3RlclZpZXcsIFt7CiAgICBrZXk6ICJVTlNBRkVfY29tcG9uZW50V2lsbE1vdW50IiwKICAgIHZhbHVlOiBmdW5jdGlvbiBVTlNBRkVfY29tcG9uZW50V2lsbE1vdW50KCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHRoaXMucHJvcHMuc2NvcGUuJHdhdGNoKCdzaG93aW5nJywgdGhpcy5zZXRTaG93aW5nKTsKICAgICAgdGhpcy5wcm9wcy5zY29wZS4kd2F0Y2goZnVuY3Rpb24gKCkgewogICAgICAgIHJldHVybiBfdGhpczIucHJvcHMuc2NvcGUucGFnZURhdGEuc2hhcmRTdGF0czsKICAgICAgfSwgdGhpcy5zZXRTaGFyZFN0YXRzKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJyZW5kZXIiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcigpIHsKICAgICAgcmV0dXJuIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoInRhYmxlIiwgewogICAgICAgIGNlbGxQYWRkaW5nOiAiMCIsCiAgICAgICAgY2VsbFNwYWNpbmc6ICIwIiwKICAgICAgICBjbGFzc05hbWU6ICJ0YWJsZSIKICAgICAgfSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfdGFibGVfaGVhZC5UYWJsZUhlYWQsIHsKICAgICAgICBoYXNVbmFzc2lnbmVkOiB0aGlzLmhhc1VuYXNzaWduZWQoKSwKICAgICAgICBzY29wZTogdGhpcy5wcm9wcy5zY29wZSwKICAgICAgICB0b2dnbGVTaG93U3lzdGVtSW5kaWNlczogdGhpcy5zdGF0ZS50b2dnbGVTaG93U3lzdGVtSW5kaWNlcwogICAgICB9KSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfdGFibGVfYm9keS5UYWJsZUJvZHksIHsKICAgICAgICBmaWx0ZXI6IHRoaXMucHJvcHMuc2NvcGUuZmlsdGVyLAogICAgICAgIHRvdGFsQ291bnQ6IHRoaXMucHJvcHMuc2NvcGUudG90YWxDb3VudCwKICAgICAgICByb3dzOiB0aGlzLnN0YXRlLnNob3dpbmcsCiAgICAgICAgY29sczogdGhpcy5zdGF0ZS5sYWJlbHMubGVuZ3RoLAogICAgICAgIHNoYXJkU3RhdHM6IHRoaXMuc3RhdGUuc2hhcmRTdGF0cywKICAgICAgICBjaGFuZ2VVcmw6IHRoaXMuc3RhdGUuYW5ndWxhckNoYW5nZVVybAogICAgICB9KSk7CiAgICB9CiAgfV0pOwoKICByZXR1cm4gQ2x1c3RlclZpZXc7Cn0oX3JlYWN0LmRlZmF1bHQuQ29tcG9uZW50KTsKCmV4cG9ydHMuQ2x1c3RlclZpZXcgPSBDbHVzdGVyVmlldzsKCl9kZWZpbmVQcm9wZXJ0eShDbHVzdGVyVmlldywgImRpc3BsYXlOYW1lIiwgX2kxOG4uaTE4bi50cmFuc2xhdGUoJ3hwYWNrLm1vbml0b3JpbmcuZWxhc3RpY3NlYXJjaC5zaGFyZEFsbG9jYXRpb24uY2x1c3RlclZpZXdEaXNwbGF5TmFtZScsIHsKICBkZWZhdWx0TWVzc2FnZTogJ0NsdXN0ZXJWaWV3Jwp9KSk7"},null]}