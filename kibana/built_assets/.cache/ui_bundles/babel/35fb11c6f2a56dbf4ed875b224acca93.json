{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/siem/public/pages/case/components/configure_cases/field_mapping.js","dependencies":[{"path":"x-pack/legacy/plugins/siem/public/pages/case/components/configure_cases/field_mapping.js","mtime":1589249553268},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLkZpZWxkTWFwcGluZyA9IHZvaWQgMDsKCnZhciBfcmVhY3QgPSBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChyZXF1aXJlKCJyZWFjdCIpKTsKCnZhciBfZXVpID0gcmVxdWlyZSgiQGVsYXN0aWMvZXVpIik7Cgp2YXIgX3N0eWxlZENvbXBvbmVudHMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoInN0eWxlZC1jb21wb25lbnRzIikpOwoKdmFyIF9maWVsZF9tYXBwaW5nX3JvdyA9IHJlcXVpcmUoIi4vZmllbGRfbWFwcGluZ19yb3ciKTsKCnZhciBpMThuID0gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQocmVxdWlyZSgiLi90cmFuc2xhdGlvbnMiKSk7Cgp2YXIgX2NvbmZpZyA9IHJlcXVpcmUoIi4uLy4uLy4uLy4uL2xpYi9jb25uZWN0b3JzL2NvbmZpZyIpOwoKdmFyIF91dGlscyA9IHJlcXVpcmUoIi4vdXRpbHMiKTsKCmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7CiAgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsKICAgIGRlZmF1bHQ6IG9iagogIH07Cn0KCmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKG9iaikgewogIGlmIChvYmogJiYgb2JqLl9fZXNNb2R1bGUpIHsKICAgIHJldHVybiBvYmo7CiAgfSBlbHNlIHsKICAgIHZhciBuZXdPYmogPSB7fTsKCiAgICBpZiAob2JqICE9IG51bGwpIHsKICAgICAgZm9yICh2YXIga2V5IGluIG9iaikgewogICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBrZXkpKSB7CiAgICAgICAgICB2YXIgZGVzYyA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSAmJiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID8gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmosIGtleSkgOiB7fTsKCiAgICAgICAgICBpZiAoZGVzYy5nZXQgfHwgZGVzYy5zZXQpIHsKICAgICAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG5ld09iaiwga2V5LCBkZXNjKTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIG5ld09ialtrZXldID0gb2JqW2tleV07CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9CgogICAgbmV3T2JqLmRlZmF1bHQgPSBvYmo7CiAgICByZXR1cm4gbmV3T2JqOwogIH0KfQovKgogKiBDb3B5cmlnaHQgRWxhc3RpY3NlYXJjaCBCLlYuIGFuZC9vciBsaWNlbnNlZCB0byBFbGFzdGljc2VhcmNoIEIuVi4gdW5kZXIgb25lCiAqIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiBMaWNlbnNlZCB1bmRlciB0aGUgRWxhc3RpYyBMaWNlbnNlOwogKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIEVsYXN0aWMgTGljZW5zZS4KICovCgoKdmFyIEZpZWxkUm93V3JhcHBlciA9IF9zdHlsZWRDb21wb25lbnRzLmRlZmF1bHQuZGl2LndpdGhDb25maWcoewogIGRpc3BsYXlOYW1lOiAiRmllbGRSb3dXcmFwcGVyIiwKICBjb21wb25lbnRJZDogInNjLTFhY2JqamktMCIKfSkoWyJtYXJnaW4tdG9wOjhweDtmb250LXNpemU6MTRweDsiXSk7Cgp2YXIgc3VwcG9ydGVkVGhpcmRQYXJ0eUZpZWxkcyA9IFt7CiAgdmFsdWU6ICdub3RfbWFwcGVkJywKICBpbnB1dERpc3BsYXk6IF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoInNwYW4iLCBudWxsLCBpMThuLkZJRUxEX01BUFBJTkdfRklFTERfTk9UX01BUFBFRCksCiAgJ2RhdGEtdGVzdC1zdWJqJzogJ3RoaXJkLXBhcnR5LWZpZWxkLW5vdC1tYXBwZWQnCn0sIHsKICB2YWx1ZTogJ3Nob3J0X2Rlc2NyaXB0aW9uJywKICBpbnB1dERpc3BsYXk6IF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoInNwYW4iLCBudWxsLCBpMThuLkZJRUxEX01BUFBJTkdfRklFTERfU0hPUlRfREVTQyksCiAgJ2RhdGEtdGVzdC1zdWJqJzogJ3RoaXJkLXBhcnR5LWZpZWxkLXNob3J0LWRlc2NyaXB0aW9uJwp9LCB7CiAgdmFsdWU6ICdjb21tZW50cycsCiAgaW5wdXREaXNwbGF5OiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KCJzcGFuIiwgbnVsbCwgaTE4bi5GSUVMRF9NQVBQSU5HX0ZJRUxEX0NPTU1FTlRTKSwKICAnZGF0YS10ZXN0LXN1YmonOiAndGhpcmQtcGFydHktZmllbGQtY29tbWVudHMnCn0sIHsKICB2YWx1ZTogJ2Rlc2NyaXB0aW9uJywKICBpbnB1dERpc3BsYXk6IF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoInNwYW4iLCBudWxsLCBpMThuLkZJRUxEX01BUFBJTkdfRklFTERfREVTQyksCiAgJ2RhdGEtdGVzdC1zdWJqJzogJ3RoaXJkLXBhcnR5LWZpZWxkLWRlc2NyaXB0aW9uJwp9XTsKCnZhciBGaWVsZE1hcHBpbmdDb21wb25lbnQgPSBmdW5jdGlvbiBGaWVsZE1hcHBpbmdDb21wb25lbnQoX3JlZikgewogIHZhciBkaXNhYmxlZCA9IF9yZWYuZGlzYWJsZWQsCiAgICAgIG1hcHBpbmcgPSBfcmVmLm1hcHBpbmcsCiAgICAgIG9uQ2hhbmdlTWFwcGluZyA9IF9yZWYub25DaGFuZ2VNYXBwaW5nOwogIHZhciBvbkNoYW5nZUFjdGlvblR5cGUgPSAoMCwgX3JlYWN0LnVzZUNhbGxiYWNrKShmdW5jdGlvbiAoY2FzZUZpZWxkLCBuZXdBY3Rpb25UeXBlKSB7CiAgICB2YXIgbXlNYXBwaW5nID0gbWFwcGluZyAhPT0gbnVsbCAmJiBtYXBwaW5nICE9PSB2b2lkIDAgPyBtYXBwaW5nIDogX2NvbmZpZy5kZWZhdWx0TWFwcGluZzsKICAgIG9uQ2hhbmdlTWFwcGluZygoMCwgX3V0aWxzLnNldEFjdGlvblR5cGVUb01hcHBpbmcpKGNhc2VGaWVsZCwgbmV3QWN0aW9uVHlwZSwgbXlNYXBwaW5nKSk7CiAgfSwgW21hcHBpbmddKTsKICB2YXIgb25DaGFuZ2VUaGlyZFBhcnR5ID0gKDAsIF9yZWFjdC51c2VDYWxsYmFjaykoZnVuY3Rpb24gKGNhc2VGaWVsZCwgbmV3VGhpcmRQYXJ0eUZpZWxkKSB7CiAgICB2YXIgbXlNYXBwaW5nID0gbWFwcGluZyAhPT0gbnVsbCAmJiBtYXBwaW5nICE9PSB2b2lkIDAgPyBtYXBwaW5nIDogX2NvbmZpZy5kZWZhdWx0TWFwcGluZzsKICAgIG9uQ2hhbmdlTWFwcGluZygoMCwgX3V0aWxzLnNldFRoaXJkUGFydHlUb01hcHBpbmcpKGNhc2VGaWVsZCwgbmV3VGhpcmRQYXJ0eUZpZWxkLCBteU1hcHBpbmcpKTsKICB9LCBbbWFwcGluZ10pOwogIHJldHVybiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9yZWFjdC5kZWZhdWx0LkZyYWdtZW50LCBudWxsLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpRm9ybVJvdywgewogICAgZnVsbFdpZHRoOiB0cnVlLAogICAgImRhdGEtdGVzdC1zdWJqIjogImNhc2UtY29uZmlndXJlLWZpZWxkLW1hcHBpbmctY29scyIKICB9LCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpRmxleEdyb3VwLCBudWxsLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpRmxleEl0ZW0sIG51bGwsIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoInNwYW4iLCB7CiAgICBjbGFzc05hbWU6ICJldWlGb3JtTGFiZWwiCiAgfSwgaTE4bi5GSUVMRF9NQVBQSU5HX0ZJUlNUX0NPTCkpLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpRmxleEl0ZW0sIG51bGwsIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoInNwYW4iLCB7CiAgICBjbGFzc05hbWU6ICJldWlGb3JtTGFiZWwiCiAgfSwgaTE4bi5GSUVMRF9NQVBQSU5HX1NFQ09ORF9DT0wpKSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUZsZXhJdGVtLCBudWxsLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KCJzcGFuIiwgewogICAgY2xhc3NOYW1lOiAiZXVpRm9ybUxhYmVsIgogIH0sIGkxOG4uRklFTERfTUFQUElOR19USElSRF9DT0wpKSkpLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KEZpZWxkUm93V3JhcHBlciwgewogICAgImRhdGEtdGVzdC1zdWJqIjogImNhc2UtY29uZmlndXJlLWZpZWxkLW1hcHBpbmctcm93LXdyYXBwZXIiCiAgfSwgKG1hcHBpbmcgIT09IG51bGwgJiYgbWFwcGluZyAhPT0gdm9pZCAwID8gbWFwcGluZyA6IF9jb25maWcuZGVmYXVsdE1hcHBpbmcpLm1hcChmdW5jdGlvbiAoaXRlbSkgewogICAgdmFyIF9pdGVtJHRhcmdldDsKCiAgICByZXR1cm4gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZmllbGRfbWFwcGluZ19yb3cuRmllbGRNYXBwaW5nUm93LCB7CiAgICAgIGtleTogaXRlbS5zb3VyY2UsCiAgICAgIGRpc2FibGVkOiBkaXNhYmxlZCwKICAgICAgc2llbUZpZWxkOiBpdGVtLnNvdXJjZSwKICAgICAgdGhpcmRQYXJ0eU9wdGlvbnM6IHN1cHBvcnRlZFRoaXJkUGFydHlGaWVsZHMsCiAgICAgIG9uQ2hhbmdlQWN0aW9uVHlwZTogb25DaGFuZ2VBY3Rpb25UeXBlLAogICAgICBvbkNoYW5nZVRoaXJkUGFydHk6IG9uQ2hhbmdlVGhpcmRQYXJ0eSwKICAgICAgc2VsZWN0ZWRBY3Rpb25UeXBlOiBpdGVtLmFjdGlvblR5cGUsCiAgICAgIHNlbGVjdGVkVGhpcmRQYXJ0eTogKF9pdGVtJHRhcmdldCA9IGl0ZW0udGFyZ2V0KSAhPT0gbnVsbCAmJiBfaXRlbSR0YXJnZXQgIT09IHZvaWQgMCA/IF9pdGVtJHRhcmdldCA6ICdub3RfbWFwcGVkJwogICAgfSk7CiAgfSkpKTsKfTsKCnZhciBGaWVsZE1hcHBpbmcgPSBfcmVhY3QuZGVmYXVsdC5tZW1vKEZpZWxkTWFwcGluZ0NvbXBvbmVudCk7CgpleHBvcnRzLkZpZWxkTWFwcGluZyA9IEZpZWxkTWFwcGluZzs="},null]}