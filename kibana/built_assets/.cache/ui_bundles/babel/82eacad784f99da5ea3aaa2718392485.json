{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!src/legacy/ui/public/chrome/chrome.js","dependencies":[{"path":"src/legacy/ui/public/chrome/chrome.js","mtime":1589249550279},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmNocm9tZSA9IHZvaWQgMDsKCnZhciBfbG9kYXNoID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCJsb2Rhc2giKSk7Cgp2YXIgX2FuZ3VsYXIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoImFuZ3VsYXIiKSk7Cgp2YXIgX21ldGFkYXRhID0gcmVxdWlyZSgiLi4vbWV0YWRhdGEiKTsKCnJlcXVpcmUoIi4uL3N0YXRlX21hbmFnZW1lbnQvZ2xvYmFsX3N0YXRlIik7CgpyZXF1aXJlKCIuLi9jb25maWciKTsKCnJlcXVpcmUoIi4uL25vdGlmeSIpOwoKcmVxdWlyZSgiLi4vcHJpdmF0ZSIpOwoKcmVxdWlyZSgiLi4vcHJvbWlzZXMiKTsKCnJlcXVpcmUoIi4uL2RpcmVjdGl2ZXMvc3RvcmFnZSIpOwoKcmVxdWlyZSgiLi4vZGlyZWN0aXZlcy93YXRjaF9tdWx0aSIpOwoKcmVxdWlyZSgiLi4vcmVhY3RfY29tcG9uZW50cyIpOwoKcmVxdWlyZSgiLi4vaTE4biIpOwoKdmFyIF9hbmd1bGFyMiA9IHJlcXVpcmUoIi4vYXBpL2FuZ3VsYXIiKTsKCnZhciBfYXBwcyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgiLi9hcGkvYXBwcyIpKTsKCnZhciBfY29udHJvbHMgPSByZXF1aXJlKCIuL2FwaS9jb250cm9scyIpOwoKdmFyIF9uYXYgPSByZXF1aXJlKCIuL2FwaS9uYXYiKTsKCnZhciBfYmFkZ2UgPSByZXF1aXJlKCIuL2FwaS9iYWRnZSIpOwoKdmFyIF9icmVhZGNydW1icyA9IHJlcXVpcmUoIi4vYXBpL2JyZWFkY3J1bWJzIik7Cgp2YXIgX3RlbXBsYXRlID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCIuL2FwaS90ZW1wbGF0ZSIpKTsKCnZhciBfdGhlbWUgPSByZXF1aXJlKCIuL2FwaS90aGVtZSIpOwoKdmFyIF94c3JmID0gcmVxdWlyZSgiLi9hcGkveHNyZiIpOwoKdmFyIF91aV9zZXR0aW5ncyA9IHJlcXVpcmUoIi4vYXBpL3VpX3NldHRpbmdzIik7Cgp2YXIgX2xvYWRpbmdfY291bnQgPSByZXF1aXJlKCIuL2FwaS9sb2FkaW5nX2NvdW50Iik7Cgp2YXIgX3NhdmVkX29iamVjdF9jbGllbnQgPSByZXF1aXJlKCIuL2FwaS9zYXZlZF9vYmplY3RfY2xpZW50Iik7Cgp2YXIgX2Jhc2VfcGF0aCA9IHJlcXVpcmUoIi4vYXBpL2Jhc2VfcGF0aCIpOwoKdmFyIF9pbmplY3RlZF92YXJzID0gcmVxdWlyZSgiLi9hcGkvaW5qZWN0ZWRfdmFycyIpOwoKdmFyIF9oZWxwX2V4dGVuc2lvbiA9IHJlcXVpcmUoIi4vYXBpL2hlbHBfZXh0ZW5zaW9uIik7Cgp2YXIgX25ld19wbGF0Zm9ybSA9IHJlcXVpcmUoIi4uL25ld19wbGF0Zm9ybSIpOwoKZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH0KCi8qCiAqIExpY2Vuc2VkIHRvIEVsYXN0aWNzZWFyY2ggQi5WLiB1bmRlciBvbmUgb3IgbW9yZSBjb250cmlidXRvcgogKiBsaWNlbnNlIGFncmVlbWVudHMuIFNlZSB0aGUgTk9USUNFIGZpbGUgZGlzdHJpYnV0ZWQgd2l0aAogKiB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24gcmVnYXJkaW5nIGNvcHlyaWdodAogKiBvd25lcnNoaXAuIEVsYXN0aWNzZWFyY2ggQi5WLiBsaWNlbnNlcyB0aGlzIGZpbGUgdG8geW91IHVuZGVyCiAqIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSAiTGljZW5zZSIpOyB5b3UgbWF5CiAqIG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuCiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdAogKgogKiAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKICoKICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLAogKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbgogKiAiQVMgSVMiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkKICogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlCiAqIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnMKICogdW5kZXIgdGhlIExpY2Vuc2UuCiAqLwp2YXIgY2hyb21lID0ge307CmV4cG9ydHMuY2hyb21lID0gY2hyb21lOwoKdmFyIGludGVybmFscyA9IF9sb2Rhc2guZGVmYXVsdC5kZWZhdWx0cyhfbG9kYXNoLmRlZmF1bHQuY2xvbmVEZWVwKF9tZXRhZGF0YS5tZXRhZGF0YSksIHsKICBiYXNlUGF0aDogJycsCiAgcm9vdENvbnRyb2xsZXI6IG51bGwsCiAgcm9vdFRlbXBsYXRlOiBudWxsLAogIHNob3dBcHBzTGluazogbnVsbCwKICB4c3JmVG9rZW46IG51bGwsCiAgZGV2TW9kZTogdHJ1ZSwKICBicmFuZDogbnVsbCwKICBuYXY6IFtdLAogIGFwcGxpY2F0aW9uQ2xhc3NlczogW10KfSk7CgooMCwgX3VpX3NldHRpbmdzLmluaXRVaVNldHRpbmdzQXBpKShjaHJvbWUpOwooMCwgX3NhdmVkX29iamVjdF9jbGllbnQuaW5pdFNhdmVkT2JqZWN0Q2xpZW50KShjaHJvbWUpOwooMCwgX2FwcHMuZGVmYXVsdCkoY2hyb21lLCBpbnRlcm5hbHMpOwooMCwgX3hzcmYuaW5pdENocm9tZVhzcmZBcGkpKGNocm9tZSwgaW50ZXJuYWxzKTsKKDAsIF9iYXNlX3BhdGguaW5pdENocm9tZUJhc2VQYXRoQXBpKShjaHJvbWUpOwooMCwgX2luamVjdGVkX3ZhcnMuaW5pdENocm9tZUluamVjdGVkVmFyc0FwaSkoY2hyb21lKTsKKDAsIF9uYXYuaW5pdENocm9tZU5hdkFwaSkoY2hyb21lLCBpbnRlcm5hbHMpOwooMCwgX2JhZGdlLmluaXRDaHJvbWVCYWRnZUFwaSkoY2hyb21lKTsKKDAsIF9icmVhZGNydW1icy5pbml0QnJlYWRjcnVtYnNBcGkpKGNocm9tZSwgaW50ZXJuYWxzKTsKKDAsIF9sb2FkaW5nX2NvdW50LmluaXRMb2FkaW5nQ291bnRBcGkpKGNocm9tZSwgaW50ZXJuYWxzKTsKKDAsIF9oZWxwX2V4dGVuc2lvbi5pbml0SGVscEV4dGVuc2lvbkFwaSkoY2hyb21lLCBpbnRlcm5hbHMpOwooMCwgX2FuZ3VsYXIyLmluaXRBbmd1bGFyQXBpKShjaHJvbWUsIGludGVybmFscyk7CigwLCBfY29udHJvbHMuaW5pdENocm9tZUNvbnRyb2xzQXBpKShjaHJvbWUpOwooMCwgX3RlbXBsYXRlLmRlZmF1bHQpKGNocm9tZSwgaW50ZXJuYWxzKTsKKDAsIF90aGVtZS5pbml0Q2hyb21lVGhlbWVBcGkpKGNocm9tZSk7CgpfbmV3X3BsYXRmb3JtLm5wU3RhcnQuY29yZS5jaHJvbWUuc2V0QXBwVGl0bGUoY2hyb21lLmdldEFwcFRpdGxlKCkpOwoKdmFyIHdhaXRGb3JCb290c3RyYXAgPSBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSkgewogIGNocm9tZS5ib290c3RyYXAgPSBmdW5jdGlvbiAodGFyZ2V0RG9tRWxlbWVudCkgewogICAgLy8gaW1wb3J0IGNocm9tZSBuYXYgY29udHJvbHMgYW5kIGhhY2tzIG5vdyBzbyB0aGF0IHRoZXkgYXJlIGV4ZWN1dGVkIGFmdGVyCiAgICAvLyBldmVyeXRoaW5nIGVsc2UsIGNhbiBzYWZlbHkgaW1wb3J0IHRoZSBjaHJvbWUsIGFuZCBpbnRlcmFjdCB3aXRoIHNlcnZpY2VzCiAgICAvLyBhbmQgc3VjaCBzZXR1cCBieSBhbGwgb3RoZXIgbW9kdWxlcwogICAgcmVxdWlyZSgndWlFeHBvcnRzL2Nocm9tZU5hdkNvbnRyb2xzJyk7CgogICAgcmVxdWlyZSgndWlFeHBvcnRzL2hhY2tzJyk7IC8vIHNldHMgYXR0cmlidXRlIG9uIGJvZHkgZm9yIHN0eWxlc2hlZXQgc2FuZGJveGluZwoKCiAgICBkb2N1bWVudC5ib2R5LnNldEF0dHJpYnV0ZSgnaWQnLCAiIi5jb25jYXQoaW50ZXJuYWxzLmFwcC5pZCwgIi1hcHAiKSk7CiAgICBjaHJvbWUuc2V0dXBBbmd1bGFyKCk7CiAgICB0YXJnZXREb21FbGVtZW50LnNldEF0dHJpYnV0ZSgna2JuLWNocm9tZScsICd0cnVlJyk7CiAgICB0YXJnZXREb21FbGVtZW50LnNldEF0dHJpYnV0ZSgnbmctY2xhc3MnLCAieyAnaGlkZGVuLWNocm9tZSc6ICFjaHJvbWUuZ2V0VmlzaWJsZSgpIH0iKTsKICAgIHRhcmdldERvbUVsZW1lbnQuY2xhc3NOYW1lID0gJ2FwcC13cmFwcGVyJzsKCiAgICBfYW5ndWxhci5kZWZhdWx0LmJvb3RzdHJhcCh0YXJnZXREb21FbGVtZW50LCBbJ2tpYmFuYSddKTsKCiAgICByZXNvbHZlKHRhcmdldERvbUVsZW1lbnQpOwogIH07Cn0pOwovKioKICogLS0tLSBBVFRFTlRJT046IFJlYWQgZG9jdW1lbnRhdGlvbiBjYXJlZnVsbHkgYmVmb3JlIHVzaW5nIHRoaXMhIC0tLS0KICoKICogUmV0dXJucyBhIHByb21pc2UsIHRoYXQgcmVzb2x2ZXMgd2l0aCBhbiBpbnN0YW5jZSBvZiB0aGUgY3VycmVudGx5IHVzZWQgQW5ndWxhcgogKiAkaW5qZWN0b3Igc2VydmljZSBmb3IgdXNhZ2Ugb3V0c2lkZSBvZiBBbmd1bGFyLgogKiBZb3UgY2FuIHVzZSB0aGlzIGluamVjdG9yIHRvIGdldCBhY2Nlc3MgdG8gYW55IG90aGVyIGluamVjdGFibGUgY29tcG9uZW50IChzZXJ2aWNlLAogKiBjb25zdGFudCwgZXRjLikgYnkgdXNpbmcgaXRzIGdldCBtZXRob2QuCiAqCiAqIElmIHlvdSBldmVyIHVzZSBBbmd1bGFyIG91dHNpZGUgb2YgYW4gQW5ndWxhciBjb250ZXh0IHZpYSB0aGlzIG1ldGhvZCwgeW91IHNob3VsZAogKiBiZSByZWFsbHkgc3VyZSB5b3Uga25vdyB3aGF0IHlvdSBhcmUgZG9pbmchCiAqCiAqIFdoZW4gdXNpbmcgdGhpcyBtZXRob2QgaW5zaWRlIHlvdXIgY29kZSwgeW91IHdpbGwgbmVlZCB0byBzdHViIGl0IHdoaWxlIHJ1bm5pbmcKICogdGVzdHMuIExvb2sgaW50byAnc3JjL3Rlc3RfdXRpbHMvcHVibGljL3N0dWJfZ2V0X2FjdGl2ZV9pbmplY3RvcicgZm9yIG1vcmUgaW5mb3JtYXRpb24uCiAqLwoKY2hyb21lLmRhbmdlcm91c2x5R2V0QWN0aXZlSW5qZWN0b3IgPSBmdW5jdGlvbiAoKSB7CiAgcmV0dXJuIHdhaXRGb3JCb290c3RyYXAudGhlbihmdW5jdGlvbiAodGFyZ2V0RG9tRWxlbWVudCkgewogICAgdmFyICRpbmplY3RvciA9IF9hbmd1bGFyLmRlZmF1bHQuZWxlbWVudCh0YXJnZXREb21FbGVtZW50KS5pbmplY3RvcigpOwoKICAgIGlmICghJGluamVjdG9yKSB7CiAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdCgndGFyZ2V0RG9tRWxlbWVudCBoYWQgbm8gYW5ndWxhciBjb250ZXh0IGFmdGVyIGJvb3RzdHJhcHBpbmcnKTsKICAgIH0KCiAgICByZXR1cm4gJGluamVjdG9yOwogIH0pOwp9Ow=="},null]}