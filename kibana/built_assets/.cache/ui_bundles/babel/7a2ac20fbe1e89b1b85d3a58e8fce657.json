{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!src/legacy/ui/public/registry/_registry.js","dependencies":[{"path":"src/legacy/ui/public/registry/_registry.js","mtime":1589249550339},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLnVpUmVnaXN0cnkgPSB1aVJlZ2lzdHJ5OwoKdmFyIF9sb2Rhc2ggPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoImxvZGFzaCIpKTsKCnZhciBfaW5kZXhlZF9hcnJheSA9IHJlcXVpcmUoIi4uL2luZGV4ZWRfYXJyYXkiKTsKCmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9CgpmdW5jdGlvbiBfc2xpY2VkVG9BcnJheShhcnIsIGkpIHsgcmV0dXJuIF9hcnJheVdpdGhIb2xlcyhhcnIpIHx8IF9pdGVyYWJsZVRvQXJyYXlMaW1pdChhcnIsIGkpIHx8IF9ub25JdGVyYWJsZVJlc3QoKTsgfQoKZnVuY3Rpb24gX25vbkl0ZXJhYmxlUmVzdCgpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcigiSW52YWxpZCBhdHRlbXB0IHRvIGRlc3RydWN0dXJlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZSIpOyB9CgpmdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB7IHZhciBfYXJyID0gW107IHZhciBfbiA9IHRydWU7IHZhciBfZCA9IGZhbHNlOyB2YXIgX2UgPSB1bmRlZmluZWQ7IHRyeSB7IGZvciAodmFyIF9pID0gYXJyW1N5bWJvbC5pdGVyYXRvcl0oKSwgX3M7ICEoX24gPSAoX3MgPSBfaS5uZXh0KCkpLmRvbmUpOyBfbiA9IHRydWUpIHsgX2Fyci5wdXNoKF9zLnZhbHVlKTsgaWYgKGkgJiYgX2Fyci5sZW5ndGggPT09IGkpIGJyZWFrOyB9IH0gY2F0Y2ggKGVycikgeyBfZCA9IHRydWU7IF9lID0gZXJyOyB9IGZpbmFsbHkgeyB0cnkgeyBpZiAoIV9uICYmIF9pWyJyZXR1cm4iXSAhPSBudWxsKSBfaVsicmV0dXJuIl0oKTsgfSBmaW5hbGx5IHsgaWYgKF9kKSB0aHJvdyBfZTsgfSB9IHJldHVybiBfYXJyOyB9CgpmdW5jdGlvbiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB7IGlmIChBcnJheS5pc0FycmF5KGFycikpIHJldHVybiBhcnI7IH0KCnZhciBub3RQcm9wc09wdE5hbWVzID0gX2luZGV4ZWRfYXJyYXkuSW5kZXhlZEFycmF5Lk9QVF9OQU1FUy5jb25jYXQoJ2NvbnN0cnVjdG9yJywgJ2ludm9rZVByb3ZpZGVycycpOwovKioKICogQ3JlYXRlIGEgcmVnaXN0cnksIHdoaWNoIGlzIGp1c3QgYSBQcml2YXRlIG1vZHVsZSBwcm92aWRlci4KICoKICogVGhlIHJlZ2lzdHJ5IGFsbG93cyBtb2RpZnlpbmcgdGhlIHZhbHVlcyBpdCB3aWxsIHByb3ZpZGUKICogdXNpbmcgdGhlICNyZWdpc3RlciBtZXRob2QuCiAqCiAqIFRvIGFjY2VzcyB0aGVzZSBtb2R1bGVzLCBwYXNzIHRoZSByZWdpc3RyeSB0byB0aGUgUHJpdmF0ZQogKiBtb2R1bGUgbG9hZGVyLgogKgogKiAjIEV4YW1wbGVzCiAqCiAqICsgcmVnaXN0ZXIgYSBtb2R1bGUKICogYGBganMKICogbGV0IHJlZ2lzdHJ5ID0gcmVxdWlyZSgndWkvcmVnaXN0cnkvdmlzX3R5cGVzJyk7CiAqIHJlZ2lzdHJ5LmFkZChmdW5jdGlvbiBJbmplY3RhYmxlUHJpdmF0ZU1vZHVsZSgkaHR0cCwgUHJvbWlzZSkgewogKiAgIC4uLgogKiB9KQogKiBgYGAKICoKICogKyBnZXQgYWxsIHJlZ2lzdGVyZWQgbW9kdWxlcwogKiBgYGBqcwogKiBsZXQgdmlzVHlwZXMgPSBQcml2YXRlKFJlZ2lzdHJ5VmlzVHlwZXNQcm92aWRlcik7CiAqIGBgYAogKgogKgogKiBAcGFyYW0gIHtvYmplY3R9IFtzcGVjXSAtIGFuIG9iamVjdCBkZXNjcmliaW5nIHRoZSBwcm9wZXJ0aWVzIG9mCiAqICAgICAgICAgICAgICAgICAgICAgICAgIHRoZSByZWdpc3RyeSB0byBjcmVhdGUuIEFueSBwcm9wZXJ0eSBzcGVjaWZpZWQKICogICAgICAgICAgICAgICAgICAgICAgICAgdGhhdCBpcyBub3QgbGlzdGVkIGJlbG93IHdpbGwgYmUgbWl4ZWQgaW50byB0aGUKICogICAgICAgICAgICAgICAgICAgICAgICAgZmluYWwgSW5kZXhlZEFycmF5IG9iamVjdC4KICoKICogIyBpbml0CiAqIEBwYXJhbSB7RnVuY3Rpb259IFtzcGVjLmNvbnN0cnVjdG9yXSAtIGFuIGluamVjdGFibGUgZnVuY3Rpb24gdGhhdCBpcyBjYWxsZWQgd2hlbgogKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhlIHJlZ2lzdHJ5IGlzIGZpcnN0IGluc3RhbnRpYXRlZCBieSB0aGUgYXBwLgogKiBAcGFyYW0ge2Jvb2xlYW59IFtzcGVjLmZpbHRlcl0gLSBmdW5jdGlvbiB0aGF0IHdpbGwgYmUgdXNlZCB0byBmaWx0ZXIgaXRlbXMgYmVmb3JlCiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWdpc3RlcmluZyB0aGVtLiBGdW5jdGlvbiB3aWxsIGNhbGxlZCBvbiBlYWNoIGl0ZW0gYW5kCiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaG91bGQgcmV0dXJuIHRydWUgdG8ga2VlcCB0aGUgaXRlbSAocmVnaXN0ZXIgaXQpIG9yCiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBza2lwIGl0IChkb24ndCByZWdpc3RlciBpdCkKICoKICogIyBJbmRleGVkQXJyYXkgcGFyYW1zCiAqIEBwYXJhbSB7YXJyYXlbU3RyaW5nXX0gW3NwZWMuaW5kZXhdIC0gcGFzc2VkIHRvIHRoZSBJbmRleGVkQXJyYXkgY29uc3RydWN0b3IKICogQHBhcmFtIHthcnJheVtTdHJpbmddfSBbc3BlYy5ncm91cF0gLSBwYXNzZWQgdG8gdGhlIEluZGV4ZWRBcnJheSBjb25zdHJ1Y3RvcgogKiBAcGFyYW0ge2FycmF5W1N0cmluZ119IFtzcGVjLm9yZGVyXSAtIHBhc3NlZCB0byB0aGUgSW5kZXhlZEFycmF5IGNvbnN0cnVjdG9yCiAqIEBwYXJhbSB7YXJyYXlbU3RyaW5nXX0gW3NwZWMuaW5pdGlhbFNldF0gLSBwYXNzZWQgdG8gdGhlIEluZGV4ZWRBcnJheSBjb25zdHJ1Y3RvcgogKiBAcGFyYW0ge2FycmF5W1N0cmluZ119IFtzcGVjLmltbXV0YWJsZV0gLSBwYXNzZWQgdG8gdGhlIEluZGV4ZWRBcnJheSBjb25zdHJ1Y3RvcgogKgogKiBAcmV0dXJuIHtbdHlwZV19ICAgICAgW2Rlc2NyaXB0aW9uXQogKi8KCgpmdW5jdGlvbiB1aVJlZ2lzdHJ5KHNwZWMpIHsKICBzcGVjID0gc3BlYyB8fCB7fTsKICB2YXIgY29uc3RydWN0b3IgPSBfbG9kYXNoLmRlZmF1bHQuaGFzKHNwZWMsICdjb25zdHJ1Y3RvcicpICYmIHNwZWMuY29uc3RydWN0b3I7CiAgdmFyIGZpbHRlciA9IF9sb2Rhc2guZGVmYXVsdC5oYXMoc3BlYywgJ2ZpbHRlcicpICYmIHNwZWMuZmlsdGVyOwogIHZhciBpbnZva2VQcm92aWRlcnMgPSBfbG9kYXNoLmRlZmF1bHQuaGFzKHNwZWMsICdpbnZva2VQcm92aWRlcnMnKSAmJiBzcGVjLmludm9rZVByb3ZpZGVyczsKCiAgdmFyIGlhT3B0cyA9IF9sb2Rhc2guZGVmYXVsdC5kZWZhdWx0cyhfbG9kYXNoLmRlZmF1bHQucGljayhzcGVjLCBfaW5kZXhlZF9hcnJheS5JbmRleGVkQXJyYXkuT1BUX05BTUVTKSwgewogICAgaW5kZXg6IFsnbmFtZSddCiAgfSk7CgogIHZhciBwcm9wcyA9IF9sb2Rhc2guZGVmYXVsdC5vbWl0KHNwZWMsIG5vdFByb3BzT3B0TmFtZXMpOwoKICB2YXIgcHJvdmlkZXJzID0gW107CiAgdmFyIGlzSW5zdGFudGlhdGVkID0gZmFsc2U7CiAgdmFyIGdldEludm9rZWRQcm92aWRlcnM7CiAgdmFyIG1vZHVsZXM7CiAgLyoqCiAgICogVGhpcyBpcyB0aGUgUHJpdmF0ZSBtb2R1bGUgdGhhdCB3aWxsIGJlIGluc3RhbnRpYXRlZCBieQogICAqCiAgICogQHRhZzpQcml2YXRlTW9kdWxlCiAgICogQHJldHVybiB7SW5kZXhlZEFycmF5fSAtIGFuIGluZGV4ZWQgYXJyYXkgY29udGFpbmluZyB0aGUgdmFsdWVzCiAgICogICAgICAgICAgICAgICAgICAgICAgICAgIHRoYXQgd2VyZSByZWdpc3RlcmVkLCB0aGUgcmVnaXN0cnkgc3BlYwogICAqICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZpbmVzIGhvdyB0aGluZ3Mgd2lsbCBiZSBpbmRleGVkLgogICAqLwoKICB2YXIgcmVnaXN0cnkgPSBmdW5jdGlvbiByZWdpc3RyeShQcml2YXRlLCAkaW5qZWN0b3IpIHsKICAgIGdldEludm9rZWRQcm92aWRlcnMgPSBmdW5jdGlvbiBnZXRJbnZva2VkUHJvdmlkZXJzKG5ld1Byb3ZpZGVycykgewogICAgICB2YXIgc2V0ID0gaW52b2tlUHJvdmlkZXJzID8gJGluamVjdG9yLmludm9rZShpbnZva2VQcm92aWRlcnMsIHVuZGVmaW5lZCwgewogICAgICAgIHByb3ZpZGVyczogbmV3UHJvdmlkZXJzCiAgICAgIH0pIDogbmV3UHJvdmlkZXJzLm1hcChQcml2YXRlKTsKCiAgICAgIGlmIChmaWx0ZXIgJiYgX2xvZGFzaC5kZWZhdWx0LmlzRnVuY3Rpb24oZmlsdGVyKSkgewogICAgICAgIHNldCA9IHNldC5maWx0ZXIoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgIHJldHVybiBmaWx0ZXIoaXRlbSk7CiAgICAgICAgfSk7CiAgICAgIH0KCiAgICAgIHJldHVybiBzZXQ7CiAgICB9OwoKICAgIGlhT3B0cy5pbml0aWFsU2V0ID0gZ2V0SW52b2tlZFByb3ZpZGVycyhwcm92aWRlcnMpOwogICAgbW9kdWxlcyA9IG5ldyBfaW5kZXhlZF9hcnJheS5JbmRleGVkQXJyYXkoaWFPcHRzKTsgLy8gbWl4aW4gb3RoZXIgcHJvcHMKCiAgICBfbG9kYXNoLmRlZmF1bHQuYXNzaWduKG1vZHVsZXMsIHByb3BzKTsgLy8gY29uc3RydWN0CgoKICAgIGlmIChjb25zdHJ1Y3RvcikgewogICAgICBtb2R1bGVzID0gJGluamVjdG9yLmludm9rZShjb25zdHJ1Y3RvciwgbW9kdWxlcykgfHwgbW9kdWxlczsKICAgIH0KCiAgICBpc0luc3RhbnRpYXRlZCA9IHRydWU7CiAgICByZXR1cm4gbW9kdWxlczsKICB9OwoKICByZWdpc3RyeS5kaXNwbGF5TmFtZSA9ICdbcmVnaXN0cnkgJyArIHByb3BzLm5hbWUgKyAnXSc7CgogIHJlZ2lzdHJ5LnJlZ2lzdGVyID0gZnVuY3Rpb24gKHByaXZhdGVNb2R1bGUpIHsKICAgIHByb3ZpZGVycy5wdXNoKHByaXZhdGVNb2R1bGUpOwoKICAgIGlmIChpc0luc3RhbnRpYXRlZCkgewogICAgICB2YXIgX2dldEludm9rZWRQcm92aWRlcnMgPSBnZXRJbnZva2VkUHJvdmlkZXJzKFtwcml2YXRlTW9kdWxlXSksCiAgICAgICAgICBfZ2V0SW52b2tlZFByb3ZpZGVyczIgPSBfc2xpY2VkVG9BcnJheShfZ2V0SW52b2tlZFByb3ZpZGVycywgMSksCiAgICAgICAgICBwcm92aWRlciA9IF9nZXRJbnZva2VkUHJvdmlkZXJzMlswXTsKCiAgICAgIGlmIChwcm92aWRlcikgewogICAgICAgIG1vZHVsZXMucHVzaChwcm92aWRlcik7CiAgICAgIH0KICAgIH0KCiAgICByZXR1cm4gcmVnaXN0cnk7CiAgfTsKCiAgcmV0dXJuIHJlZ2lzdHJ5Owp9"},null]}