{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/canvas/canvas_plugin_src/renderers/shape/index.js","dependencies":[{"path":"x-pack/legacy/plugins/canvas/canvas_plugin_src/renderers/shape/index.js","mtime":1589249551827},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLnNoYXBlID0gdm9pZCAwOwoKdmFyIF9pMThuID0gcmVxdWlyZSgiLi4vLi4vLi4vaTE4biIpOwoKdmFyIF9zaGFwZXMgPSByZXF1aXJlKCIuL3NoYXBlcyIpOwoKZnVuY3Rpb24gX3NsaWNlZFRvQXJyYXkoYXJyLCBpKSB7IHJldHVybiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB8fCBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB8fCBfbm9uSXRlcmFibGVSZXN0KCk7IH0KCmZ1bmN0aW9uIF9ub25JdGVyYWJsZVJlc3QoKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoIkludmFsaWQgYXR0ZW1wdCB0byBkZXN0cnVjdHVyZSBub24taXRlcmFibGUgaW5zdGFuY2UiKTsgfQoKZnVuY3Rpb24gX2l0ZXJhYmxlVG9BcnJheUxpbWl0KGFyciwgaSkgeyB2YXIgX2FyciA9IFtdOyB2YXIgX24gPSB0cnVlOyB2YXIgX2QgPSBmYWxzZTsgdmFyIF9lID0gdW5kZWZpbmVkOyB0cnkgeyBmb3IgKHZhciBfaSA9IGFycltTeW1ib2wuaXRlcmF0b3JdKCksIF9zOyAhKF9uID0gKF9zID0gX2kubmV4dCgpKS5kb25lKTsgX24gPSB0cnVlKSB7IF9hcnIucHVzaChfcy52YWx1ZSk7IGlmIChpICYmIF9hcnIubGVuZ3RoID09PSBpKSBicmVhazsgfSB9IGNhdGNoIChlcnIpIHsgX2QgPSB0cnVlOyBfZSA9IGVycjsgfSBmaW5hbGx5IHsgdHJ5IHsgaWYgKCFfbiAmJiBfaVsicmV0dXJuIl0gIT0gbnVsbCkgX2lbInJldHVybiJdKCk7IH0gZmluYWxseSB7IGlmIChfZCkgdGhyb3cgX2U7IH0gfSByZXR1cm4gX2FycjsgfQoKZnVuY3Rpb24gX2FycmF5V2l0aEhvbGVzKGFycikgeyBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSByZXR1cm4gYXJyOyB9Cgp2YXIgc3RyaW5ncyA9IF9pMThuLlJlbmRlcmVyU3RyaW5ncy5zaGFwZTsKCnZhciBzaGFwZSA9IGZ1bmN0aW9uIHNoYXBlKCkgewogIHJldHVybiB7CiAgICBuYW1lOiAnc2hhcGUnLAogICAgZGlzcGxheU5hbWU6IHN0cmluZ3MuZ2V0RGlzcGxheU5hbWUoKSwKICAgIGhlbHA6IHN0cmluZ3MuZ2V0SGVscERlc2NyaXB0aW9uKCksCiAgICByZXVzZURvbU5vZGU6IHRydWUsCiAgICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcihkb21Ob2RlLCBjb25maWcsIGhhbmRsZXJzKSB7CiAgICAgIHZhciBzaGFwZSA9IGNvbmZpZy5zaGFwZSwKICAgICAgICAgIGZpbGwgPSBjb25maWcuZmlsbCwKICAgICAgICAgIGJvcmRlciA9IGNvbmZpZy5ib3JkZXIsCiAgICAgICAgICBib3JkZXJXaWR0aCA9IGNvbmZpZy5ib3JkZXJXaWR0aCwKICAgICAgICAgIG1haW50YWluQXNwZWN0ID0gY29uZmlnLm1haW50YWluQXNwZWN0OwogICAgICB2YXIgcGFyc2VyID0gbmV3IERPTVBhcnNlcigpOwoKICAgICAgdmFyIF9wYXJzZXIkcGFyc2VGcm9tU3RyaSA9IHBhcnNlci5wYXJzZUZyb21TdHJpbmcoX3NoYXBlcy5zaGFwZXNbc2hhcGVdLCAnaW1hZ2Uvc3ZnK3htbCcpLmdldEVsZW1lbnRzQnlUYWdOYW1lKCdzdmcnKSwKICAgICAgICAgIF9wYXJzZXIkcGFyc2VGcm9tU3RyaTIgPSBfc2xpY2VkVG9BcnJheShfcGFyc2VyJHBhcnNlRnJvbVN0cmksIDEpLAogICAgICAgICAgc2hhcGVTdmcgPSBfcGFyc2VyJHBhcnNlRnJvbVN0cmkyWzBdOwoKICAgICAgdmFyIHNoYXBlQ29udGVudCA9IHNoYXBlU3ZnLmZpcnN0RWxlbWVudENoaWxkOwoKICAgICAgaWYgKGZpbGwpIHsKICAgICAgICBzaGFwZUNvbnRlbnQuc2V0QXR0cmlidXRlKCdmaWxsJywgZmlsbCk7CiAgICAgIH0KCiAgICAgIGlmIChib3JkZXIpIHsKICAgICAgICBzaGFwZUNvbnRlbnQuc2V0QXR0cmlidXRlKCdzdHJva2UnLCBib3JkZXIpOwogICAgICB9CgogICAgICB2YXIgc3Ryb2tlV2lkdGggPSBNYXRoLm1heChib3JkZXJXaWR0aCwgMCk7CiAgICAgIHNoYXBlQ29udGVudC5zZXRBdHRyaWJ1dGUoJ3N0cm9rZS13aWR0aCcsIHN0cm9rZVdpZHRoKTsKICAgICAgc2hhcGVDb250ZW50LnNldEF0dHJpYnV0ZSgnc3Ryb2tlLW1pdGVybGltaXQnLCA5OTkpOwogICAgICBzaGFwZUNvbnRlbnQuc2V0QXR0cmlidXRlKCd2ZWN0b3ItZWZmZWN0JywgJ25vbi1zY2FsaW5nLXN0cm9rZScpOwogICAgICBzaGFwZVN2Zy5zZXRBdHRyaWJ1dGUoJ3ByZXNlcnZlQXNwZWN0UmF0aW8nLCBtYWludGFpbkFzcGVjdCA/ICd4TWlkWU1pZCBtZWV0JyA6ICdub25lJyk7CiAgICAgIHNoYXBlU3ZnLnNldEF0dHJpYnV0ZSgnb3ZlcmZsb3cnLCAndmlzaWJsZScpOwogICAgICB2YXIgaW5pdGlhbFZpZXdCb3ggPSBzaGFwZVN2Zy5nZXRBdHRyaWJ1dGUoJ3ZpZXdCb3gnKS5zcGxpdCgnICcpLm1hcChmdW5jdGlvbiAodikgewogICAgICAgIHJldHVybiBwYXJzZUludCh2LCAxMCk7CiAgICAgIH0pOwoKICAgICAgdmFyIGRyYXcgPSBmdW5jdGlvbiBkcmF3KCkgewogICAgICAgIHZhciB3aWR0aCA9IGRvbU5vZGUub2Zmc2V0V2lkdGg7CiAgICAgICAgdmFyIGhlaWdodCA9IGRvbU5vZGUub2Zmc2V0SGVpZ2h0OyAvLyBhZGp1c3Qgdmlld0JveCBiYXNlZCBvbiBib3JkZXIgd2lkdGgKCiAgICAgICAgdmFyIF9pbml0aWFsVmlld0JveCA9IF9zbGljZWRUb0FycmF5KGluaXRpYWxWaWV3Qm94LCA0KSwKICAgICAgICAgICAgbWluWCA9IF9pbml0aWFsVmlld0JveFswXSwKICAgICAgICAgICAgbWluWSA9IF9pbml0aWFsVmlld0JveFsxXSwKICAgICAgICAgICAgc2hhcGVXaWR0aCA9IF9pbml0aWFsVmlld0JveFsyXSwKICAgICAgICAgICAgc2hhcGVIZWlnaHQgPSBfaW5pdGlhbFZpZXdCb3hbM107CgogICAgICAgIHZhciBib3JkZXJPZmZzZXQgPSBzdHJva2VXaWR0aDsKCiAgICAgICAgaWYgKHdpZHRoKSB7CiAgICAgICAgICB2YXIgeE9mZnNldCA9IHNoYXBlV2lkdGggLyB3aWR0aCAqIGJvcmRlck9mZnNldDsKICAgICAgICAgIG1pblggLT0geE9mZnNldDsKICAgICAgICAgIHNoYXBlV2lkdGggKz0geE9mZnNldCAqIDI7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHNoYXBlV2lkdGggPSAwOwogICAgICAgIH0KCiAgICAgICAgaWYgKGhlaWdodCkgewogICAgICAgICAgdmFyIHlPZmZzZXQgPSBzaGFwZUhlaWdodCAvIGhlaWdodCAqIGJvcmRlck9mZnNldDsKICAgICAgICAgIG1pblkgLT0geU9mZnNldDsKICAgICAgICAgIHNoYXBlSGVpZ2h0ICs9IHlPZmZzZXQgKiAyOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBzaGFwZUhlaWdodCA9IDA7CiAgICAgICAgfQoKICAgICAgICBzaGFwZVN2Zy5zZXRBdHRyaWJ1dGUoJ3dpZHRoJywgd2lkdGgpOwogICAgICAgIHNoYXBlU3ZnLnNldEF0dHJpYnV0ZSgnaGVpZ2h0JywgaGVpZ2h0KTsKICAgICAgICBzaGFwZVN2Zy5zZXRBdHRyaWJ1dGUoJ3ZpZXdCb3gnLCBbbWluWCwgbWluWSwgc2hhcGVXaWR0aCwgc2hhcGVIZWlnaHRdLmpvaW4oJyAnKSk7CiAgICAgICAgdmFyIG9sZFNoYXBlID0gZG9tTm9kZS5maXJzdEVsZW1lbnRDaGlsZDsKCiAgICAgICAgaWYgKG9sZFNoYXBlKSB7CiAgICAgICAgICBkb21Ob2RlLnJlbW92ZUNoaWxkKG9sZFNoYXBlKTsKICAgICAgICB9CgogICAgICAgIGRvbU5vZGUuYXBwZW5kQ2hpbGQoc2hhcGVTdmcpOwogICAgICB9OwoKICAgICAgZHJhdygpOwogICAgICBoYW5kbGVycy5kb25lKCk7CiAgICAgIGhhbmRsZXJzLm9uUmVzaXplKGRyYXcpOyAvLyBkZWJvdW5jaW5nIGF2b2lkZWQgZm9yIGZsdWlkaXR5CiAgICB9CiAgfTsKfTsKCmV4cG9ydHMuc2hhcGUgPSBzaGFwZTs="},null]}