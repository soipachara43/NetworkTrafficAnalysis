{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!src/legacy/core_plugins/kibana/public/discover/build_services.js","dependencies":[{"path":"src/legacy/core_plugins/kibana/public/discover/build_services.js","mtime":1589249549670},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmJ1aWxkU2VydmljZXMgPSBidWlsZFNlcnZpY2VzOwoKdmFyIF9oaXN0b3J5ID0gcmVxdWlyZSgiaGlzdG9yeSIpOwoKdmFyIF9wdWJsaWMgPSByZXF1aXJlKCIuLi8uLi8uLi8uLi8uLi9wbHVnaW5zL2Rpc2NvdmVyL3B1YmxpYyIpOwoKZnVuY3Rpb24gYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCBrZXksIGFyZykgewogIHRyeSB7CiAgICB2YXIgaW5mbyA9IGdlbltrZXldKGFyZyk7CiAgICB2YXIgdmFsdWUgPSBpbmZvLnZhbHVlOwogIH0gY2F0Y2ggKGVycm9yKSB7CiAgICByZWplY3QoZXJyb3IpOwogICAgcmV0dXJuOwogIH0KCiAgaWYgKGluZm8uZG9uZSkgewogICAgcmVzb2x2ZSh2YWx1ZSk7CiAgfSBlbHNlIHsKICAgIFByb21pc2UucmVzb2x2ZSh2YWx1ZSkudGhlbihfbmV4dCwgX3Rocm93KTsKICB9Cn0KCmZ1bmN0aW9uIF9hc3luY1RvR2VuZXJhdG9yKGZuKSB7CiAgcmV0dXJuIGZ1bmN0aW9uICgpIHsKICAgIHZhciBzZWxmID0gdGhpcywKICAgICAgICBhcmdzID0gYXJndW1lbnRzOwogICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgICAgdmFyIGdlbiA9IGZuLmFwcGx5KHNlbGYsIGFyZ3MpOwoKICAgICAgZnVuY3Rpb24gX25leHQodmFsdWUpIHsKICAgICAgICBhc3luY0dlbmVyYXRvclN0ZXAoZ2VuLCByZXNvbHZlLCByZWplY3QsIF9uZXh0LCBfdGhyb3csICJuZXh0IiwgdmFsdWUpOwogICAgICB9CgogICAgICBmdW5jdGlvbiBfdGhyb3coZXJyKSB7CiAgICAgICAgYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCAidGhyb3ciLCBlcnIpOwogICAgICB9CgogICAgICBfbmV4dCh1bmRlZmluZWQpOwogICAgfSk7CiAgfTsKfQoKZnVuY3Rpb24gYnVpbGRTZXJ2aWNlcyhfeCwgX3gyKSB7CiAgcmV0dXJuIF9idWlsZFNlcnZpY2VzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7Cn0KCmZ1bmN0aW9uIF9idWlsZFNlcnZpY2VzKCkgewogIF9idWlsZFNlcnZpY2VzID0gX2FzeW5jVG9HZW5lcmF0b3IoCiAgLyojX19QVVJFX18qLwogIHJlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKGNvcmUsIHBsdWdpbnMpIHsKICAgIHZhciBzZXJ2aWNlcywgc2F2ZWRPYmplY3RTZXJ2aWNlOwogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgc2VydmljZXMgPSB7CiAgICAgICAgICAgICAgc2F2ZWRPYmplY3RzQ2xpZW50OiBjb3JlLnNhdmVkT2JqZWN0cy5jbGllbnQsCiAgICAgICAgICAgICAgaW5kZXhQYXR0ZXJuczogcGx1Z2lucy5kYXRhLmluZGV4UGF0dGVybnMsCiAgICAgICAgICAgICAgY2hyb21lOiBjb3JlLmNocm9tZSwKICAgICAgICAgICAgICBvdmVybGF5czogY29yZS5vdmVybGF5cwogICAgICAgICAgICB9OwogICAgICAgICAgICBzYXZlZE9iamVjdFNlcnZpY2UgPSAoMCwgX3B1YmxpYy5jcmVhdGVTYXZlZFNlYXJjaGVzTG9hZGVyKShzZXJ2aWNlcyk7CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuYWJydXB0KCJyZXR1cm4iLCB7CiAgICAgICAgICAgICAgYWRkQmFzZVBhdGg6IGNvcmUuaHR0cC5iYXNlUGF0aC5wcmVwZW5kLAogICAgICAgICAgICAgIGNhcGFiaWxpdGllczogY29yZS5hcHBsaWNhdGlvbi5jYXBhYmlsaXRpZXMsCiAgICAgICAgICAgICAgY2hyb21lOiBjb3JlLmNocm9tZSwKICAgICAgICAgICAgICBjb3JlOiBjb3JlLAogICAgICAgICAgICAgIGRhdGE6IHBsdWdpbnMuZGF0YSwKICAgICAgICAgICAgICBkb2NMaW5rczogY29yZS5kb2NMaW5rcywKICAgICAgICAgICAgICBEb2NWaWV3ZXI6IHBsdWdpbnMuZGlzY292ZXIuZG9jVmlld3MuRG9jVmlld2VyLAogICAgICAgICAgICAgIGhpc3Rvcnk6ICgwLCBfaGlzdG9yeS5jcmVhdGVIYXNoSGlzdG9yeSkoKSwKICAgICAgICAgICAgICB0aGVtZTogcGx1Z2lucy5jaGFydHMudGhlbWUsCiAgICAgICAgICAgICAgZmlsdGVyTWFuYWdlcjogcGx1Z2lucy5kYXRhLnF1ZXJ5LmZpbHRlck1hbmFnZXIsCiAgICAgICAgICAgICAgZ2V0U2F2ZWRTZWFyY2hCeUlkOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICB2YXIgX2dldFNhdmVkU2VhcmNoQnlJZCA9IF9hc3luY1RvR2VuZXJhdG9yKAogICAgICAgICAgICAgICAgLyojX19QVVJFX18qLwogICAgICAgICAgICAgICAgcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShpZCkgewogICAgICAgICAgICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgICAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgc2F2ZWRPYmplY3RTZXJ2aWNlLmdldChpZCkpOwoKICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAxOgogICAgICAgICAgICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgICAgICAgICAgIH0pKTsKCiAgICAgICAgICAgICAgICBmdW5jdGlvbiBnZXRTYXZlZFNlYXJjaEJ5SWQoX3gzKSB7CiAgICAgICAgICAgICAgICAgIHJldHVybiBfZ2V0U2F2ZWRTZWFyY2hCeUlkLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgcmV0dXJuIGdldFNhdmVkU2VhcmNoQnlJZDsKICAgICAgICAgICAgICB9KCksCiAgICAgICAgICAgICAgZ2V0U2F2ZWRTZWFyY2hVcmxCeUlkOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICB2YXIgX2dldFNhdmVkU2VhcmNoVXJsQnlJZCA9IF9hc3luY1RvR2VuZXJhdG9yKAogICAgICAgICAgICAgICAgLyojX19QVVJFX18qLwogICAgICAgICAgICAgICAgcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoaWQpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgICAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLmFicnVwdCgicmV0dXJuIiwgc2F2ZWRPYmplY3RTZXJ2aWNlLnVybEZvcihpZCkpOwoKICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAxOgogICAgICAgICAgICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSwgX2NhbGxlZTIpOwogICAgICAgICAgICAgICAgfSkpOwoKICAgICAgICAgICAgICAgIGZ1bmN0aW9uIGdldFNhdmVkU2VhcmNoVXJsQnlJZChfeDQpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIF9nZXRTYXZlZFNlYXJjaFVybEJ5SWQuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICByZXR1cm4gZ2V0U2F2ZWRTZWFyY2hVcmxCeUlkOwogICAgICAgICAgICAgIH0oKSwKICAgICAgICAgICAgICBpbmRleFBhdHRlcm5zOiBwbHVnaW5zLmRhdGEuaW5kZXhQYXR0ZXJucywKICAgICAgICAgICAgICBpbnNwZWN0b3I6IHBsdWdpbnMuaW5zcGVjdG9yLAogICAgICAgICAgICAgIC8vIEB0cy1pZ25vcmUKICAgICAgICAgICAgICBtZXRhZGF0YTogY29yZS5pbmplY3RlZE1ldGFkYXRhLmdldExlZ2FjeU1ldGFkYXRhKCksCiAgICAgICAgICAgICAgc2hhcmU6IHBsdWdpbnMuc2hhcmUsCiAgICAgICAgICAgICAgdGltZWZpbHRlcjogcGx1Z2lucy5kYXRhLnF1ZXJ5LnRpbWVmaWx0ZXIudGltZWZpbHRlciwKICAgICAgICAgICAgICB0b2FzdE5vdGlmaWNhdGlvbnM6IGNvcmUubm90aWZpY2F0aW9ucy50b2FzdHMsCiAgICAgICAgICAgICAgdWlTZXR0aW5nczogY29yZS51aVNldHRpbmdzLAogICAgICAgICAgICAgIHZpc3VhbGl6YXRpb25zOiBwbHVnaW5zLnZpc3VhbGl6YXRpb25zCiAgICAgICAgICAgIH0pOwoKICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZTMpOwogIH0pKTsKICByZXR1cm4gX2J1aWxkU2VydmljZXMuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKfQ=="},null]}