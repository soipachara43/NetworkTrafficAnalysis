{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/plugins/infra/public/pages/logs/log_entry_categories/service_calls/get_top_log_entry_categories.js","dependencies":[{"path":"x-pack/plugins/infra/public/pages/logs/log_entry_categories/service_calls/get_top_log_entry_categories.js","mtime":1589249554309},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmNhbGxHZXRUb3BMb2dFbnRyeUNhdGVnb3JpZXNBUEkgPSB2b2lkIDA7Cgp2YXIgX0VpdGhlciA9IHJlcXVpcmUoImZwLXRzL2xpYi9FaXRoZXIiKTsKCnZhciBfcGlwZWFibGUgPSByZXF1aXJlKCJmcC10cy9saWIvcGlwZWFibGUiKTsKCnZhciBfZnVuY3Rpb24gPSByZXF1aXJlKCJmcC10cy9saWIvZnVuY3Rpb24iKTsKCnZhciBfbGVnYWN5X3NpbmdsZXRvbnMgPSByZXF1aXJlKCIuLi8uLi8uLi8uLi9sZWdhY3lfc2luZ2xldG9ucyIpOwoKdmFyIF9sb2dfYW5hbHlzaXMgPSByZXF1aXJlKCIuLi8uLi8uLi8uLi8uLi9jb21tb24vaHR0cF9hcGkvbG9nX2FuYWx5c2lzIik7Cgp2YXIgX3J1bnRpbWVfdHlwZXMgPSByZXF1aXJlKCIuLi8uLi8uLi8uLi8uLi9jb21tb24vcnVudGltZV90eXBlcyIpOwoKZnVuY3Rpb24gYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCBrZXksIGFyZykgewogIHRyeSB7CiAgICB2YXIgaW5mbyA9IGdlbltrZXldKGFyZyk7CiAgICB2YXIgdmFsdWUgPSBpbmZvLnZhbHVlOwogIH0gY2F0Y2ggKGVycm9yKSB7CiAgICByZWplY3QoZXJyb3IpOwogICAgcmV0dXJuOwogIH0KCiAgaWYgKGluZm8uZG9uZSkgewogICAgcmVzb2x2ZSh2YWx1ZSk7CiAgfSBlbHNlIHsKICAgIFByb21pc2UucmVzb2x2ZSh2YWx1ZSkudGhlbihfbmV4dCwgX3Rocm93KTsKICB9Cn0KCmZ1bmN0aW9uIF9hc3luY1RvR2VuZXJhdG9yKGZuKSB7CiAgcmV0dXJuIGZ1bmN0aW9uICgpIHsKICAgIHZhciBzZWxmID0gdGhpcywKICAgICAgICBhcmdzID0gYXJndW1lbnRzOwogICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgICAgdmFyIGdlbiA9IGZuLmFwcGx5KHNlbGYsIGFyZ3MpOwoKICAgICAgZnVuY3Rpb24gX25leHQodmFsdWUpIHsKICAgICAgICBhc3luY0dlbmVyYXRvclN0ZXAoZ2VuLCByZXNvbHZlLCByZWplY3QsIF9uZXh0LCBfdGhyb3csICJuZXh0IiwgdmFsdWUpOwogICAgICB9CgogICAgICBmdW5jdGlvbiBfdGhyb3coZXJyKSB7CiAgICAgICAgYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCAidGhyb3ciLCBlcnIpOwogICAgICB9CgogICAgICBfbmV4dCh1bmRlZmluZWQpOwogICAgfSk7CiAgfTsKfQoKdmFyIGNhbGxHZXRUb3BMb2dFbnRyeUNhdGVnb3JpZXNBUEkgPQovKiNfX1BVUkVfXyovCmZ1bmN0aW9uICgpIHsKICB2YXIgX3JlZiA9IF9hc3luY1RvR2VuZXJhdG9yKAogIC8qI19fUFVSRV9fKi8KICByZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKHNvdXJjZUlkLCBzdGFydFRpbWUsIGVuZFRpbWUsIGNhdGVnb3J5Q291bnQsIGRhdGFzZXRzKSB7CiAgICB2YXIgaW50ZXJ2YWxEdXJhdGlvbiwgcmVzcG9uc2U7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIGludGVydmFsRHVyYXRpb24gPSBlbmRUaW1lIC0gc3RhcnRUaW1lOwogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgcmV0dXJuIF9sZWdhY3lfc2luZ2xldG9ucy5ucFN0YXJ0Lmh0dHAuZmV0Y2goX2xvZ19hbmFseXNpcy5MT0dfQU5BTFlTSVNfR0VUX0xPR19FTlRSWV9DQVRFR09SSUVTX1BBVEgsIHsKICAgICAgICAgICAgICBtZXRob2Q6ICdQT1NUJywKICAgICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeShfbG9nX2FuYWx5c2lzLmdldExvZ0VudHJ5Q2F0ZWdvcmllc1JlcXVlc3RQYXlsb2FkUlQuZW5jb2RlKHsKICAgICAgICAgICAgICAgIGRhdGE6IHsKICAgICAgICAgICAgICAgICAgc291cmNlSWQ6IHNvdXJjZUlkLAogICAgICAgICAgICAgICAgICB0aW1lUmFuZ2U6IHsKICAgICAgICAgICAgICAgICAgICBzdGFydFRpbWU6IHN0YXJ0VGltZSwKICAgICAgICAgICAgICAgICAgICBlbmRUaW1lOiBlbmRUaW1lCiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIGNhdGVnb3J5Q291bnQ6IGNhdGVnb3J5Q291bnQsCiAgICAgICAgICAgICAgICAgIGRhdGFzZXRzOiBkYXRhc2V0cywKICAgICAgICAgICAgICAgICAgaGlzdG9ncmFtczogW3sKICAgICAgICAgICAgICAgICAgICBpZDogJ2hpc3RvcnknLAogICAgICAgICAgICAgICAgICAgIHRpbWVSYW5nZTogewogICAgICAgICAgICAgICAgICAgICAgc3RhcnRUaW1lOiBzdGFydFRpbWUgLSBpbnRlcnZhbER1cmF0aW9uLAogICAgICAgICAgICAgICAgICAgICAgZW5kVGltZTogZW5kVGltZQogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgYnVja2V0Q291bnQ6IDEwCiAgICAgICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgICAgICBpZDogJ3JlZmVyZW5jZScsCiAgICAgICAgICAgICAgICAgICAgdGltZVJhbmdlOiB7CiAgICAgICAgICAgICAgICAgICAgICBzdGFydFRpbWU6IHN0YXJ0VGltZSAtIGludGVydmFsRHVyYXRpb24sCiAgICAgICAgICAgICAgICAgICAgICBlbmRUaW1lOiBzdGFydFRpbWUKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIGJ1Y2tldENvdW50OiAxCiAgICAgICAgICAgICAgICAgIH1dCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSkpCiAgICAgICAgICAgIH0pOwoKICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCAoMCwgX3BpcGVhYmxlLnBpcGUpKF9sb2dfYW5hbHlzaXMuZ2V0TG9nRW50cnlDYXRlZ29yaWVzU3VjY2Vzc1JlcG9uc2VQYXlsb2FkUlQuZGVjb2RlKHJlc3BvbnNlKSwgKDAsIF9FaXRoZXIuZm9sZCkoKDAsIF9ydW50aW1lX3R5cGVzLnRocm93RXJyb3JzKShfcnVudGltZV90eXBlcy5jcmVhdGVQbGFpbkVycm9yKSwgX2Z1bmN0aW9uLmlkZW50aXR5KSkpOwoKICAgICAgICAgIGNhc2UgNToKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlKTsKICB9KSk7CgogIHJldHVybiBmdW5jdGlvbiBjYWxsR2V0VG9wTG9nRW50cnlDYXRlZ29yaWVzQVBJKF94LCBfeDIsIF94MywgX3g0LCBfeDUpIHsKICAgIHJldHVybiBfcmVmLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpOwoKZXhwb3J0cy5jYWxsR2V0VG9wTG9nRW50cnlDYXRlZ29yaWVzQVBJID0gY2FsbEdldFRvcExvZ0VudHJ5Q2F0ZWdvcmllc0FQSTs="},null]}