{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!src/core/utils/url.js","dependencies":[{"path":"src/core/utils/url.js","mtime":1589249549510},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLm1vZGlmeVVybCA9IG1vZGlmeVVybDsKZXhwb3J0cy5pc1JlbGF0aXZlVXJsID0gaXNSZWxhdGl2ZVVybDsKCnZhciBfdXJsID0gcmVxdWlyZSgidXJsIik7Ci8qCiAqIExpY2Vuc2VkIHRvIEVsYXN0aWNzZWFyY2ggQi5WLiB1bmRlciBvbmUgb3IgbW9yZSBjb250cmlidXRvcgogKiBsaWNlbnNlIGFncmVlbWVudHMuIFNlZSB0aGUgTk9USUNFIGZpbGUgZGlzdHJpYnV0ZWQgd2l0aAogKiB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24gcmVnYXJkaW5nIGNvcHlyaWdodAogKiBvd25lcnNoaXAuIEVsYXN0aWNzZWFyY2ggQi5WLiBsaWNlbnNlcyB0aGlzIGZpbGUgdG8geW91IHVuZGVyCiAqIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSAiTGljZW5zZSIpOyB5b3UgbWF5CiAqIG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuCiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdAogKgogKiAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKICoKICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLAogKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbgogKiAiQVMgSVMiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkKICogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlCiAqIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnMKICogdW5kZXIgdGhlIExpY2Vuc2UuCiAqLwoKLyoqCiAqICBUYWtlcyBhIFVSTCBhbmQgYSBmdW5jdGlvbiB0aGF0IHRha2VzIHRoZSBtZWFuaW5nZnVsIHBhcnRzCiAqICBvZiB0aGUgVVJMIGFzIGEga2V5LXZhbHVlIG9iamVjdCwgbW9kaWZpZXMgc29tZSBvciBhbGwgb2YKICogIHRoZSBwYXJ0cywgYW5kIHJldHVybnMgdGhlIG1vZGlmaWVkIHBhcnRzIGZvcm1hdHRlZCBhZ2FpbgogKiAgYXMgYSB1cmwuCiAqCiAqICBVcmwgUGFydHMgc2VudDoKICogICAgLSBwcm90b2NvbAogKiAgICAtIHNsYXNoZXMgKGRvZXMgdGhlIHVybCBoYXZlIHRoZSAvLykKICogICAgLSBhdXRoCiAqICAgIC0gaG9zdG5hbWUgKGp1c3QgdGhlIG5hbWUgb2YgdGhlIGhvc3QsIG5vIHBvcnQgb3IgYXV0aCBpbmZvcm1hdGlvbikKICogICAgLSBwb3J0CiAqICAgIC0gcGF0aG5hbWUgKHRoZSBwYXRoIGFmdGVyIHRoZSBob3N0bmFtZSwgbm8gcXVlcnkgb3IgaGFzaCwgc3RhcnRzCiAqICAgICAgICB3aXRoIGEgc2xhc2ggaWYgdGhlcmUgd2FzIGEgcGF0aCkKICogICAgLSBxdWVyeSAoYWx3YXlzIGFuIG9iamVjdCwgZXZlbiB3aGVuIG5vIHF1ZXJ5IG9uIG9yaWdpbmFsIHVybCkKICogICAgLSBoYXNoCiAqCiAqICBXaHk/CiAqICAgIC0gVGhlIGRlZmF1bHQgdXJsIGxpYnJhcnkgaW4gbm9kZSBwcm9kdWNlcyBzZXZlcmFsIGNvbmZsaWN0aW5nCiAqICAgICAgcHJvcGVydGllcyBvbiB0aGUgInBhcnNlZCIgb3V0cHV0LiBNb2RpZnlpbmcgYW55IG9mIHRoZXNlIG1pZ2h0CiAqICAgICAgbGVhZCB0byB0aGUgbW9kaWZpY2F0aW9ucyBiZWluZyBpZ25vcmVkIChkZXBlbmRpbmcgb24gd2hpY2gKICogICAgICBwcm9wZXJ0eSB3YXMgbW9kaWZpZWQpCiAqICAgIC0gSXQncyBub3QgYWx3YXlzIGNsZWFyIHdoZXRoZXIgdG8gdXNlIHBhdGgvcGF0aG5hbWUsIGhvc3QvaG9zdG5hbWUsCiAqICAgICAgc28gdGhpcyB0cmllcyB0byBhZGQgaGVscGZ1bCBjb25zdHJhaW50cwogKgogKiAgQHBhcmFtIHVybCBUaGUgc3RyaW5nIHVybCB0byBwYXJzZS4KICogIEBwYXJhbSB1cmxNb2RpZmllciBBIGZ1bmN0aW9uIHRoYXQgd2lsbCBtb2RpZnkgdGhlIHBhcnNlZCB1cmwsIG9yIHJldHVybiBhIG5ldyBvbmUuCiAqICBAcmV0dXJucyBUaGUgbW9kaWZpZWQgYW5kIHJlZm9ybWF0dGVkIHVybAogKi8KCgpmdW5jdGlvbiBtb2RpZnlVcmwodXJsLCB1cmxNb2RpZmllcikgewogIHZhciBwYXJzZWQgPSAoMCwgX3VybC5wYXJzZSkodXJsLCB0cnVlKTsgLy8gQ29weSBvdmVyIHRoZSBtb3N0IHNwZWNpZmljIHZlcnNpb24gb2YgZWFjaCBwcm9wZXJ0eS4gQnkgZGVmYXVsdCwgdGhlIHBhcnNlZCB1cmwgaW5jbHVkZXMgc2V2ZXJhbAogIC8vIGNvbmZsaWN0aW5nIHByb3BlcnRpZXMgKGxpa2UgcGF0aCBhbmQgcGF0aG5hbWUgKyBzZWFyY2gsIG9yIHNlYXJjaCBhbmQgcXVlcnkpIGFuZCBrZWVwaW5nIHRyYWNrCiAgLy8gb2Ygd2hpY2ggcHJvcGVydHkgaXMgYWN0dWFsbHkgdXNlZCB3aGVuIHRoZXkgYXJlIGZvcm1hdHRlZCBpcyBoYXJkZXIgdGhhbiBuZWNlc3NhcnkuCgogIHZhciBtZWFuaW5nZnVsUGFydHMgPSB7CiAgICBhdXRoOiBwYXJzZWQuYXV0aCwKICAgIGhhc2g6IHBhcnNlZC5oYXNoLAogICAgaG9zdG5hbWU6IHBhcnNlZC5ob3N0bmFtZSwKICAgIHBhdGhuYW1lOiBwYXJzZWQucGF0aG5hbWUsCiAgICBwb3J0OiBwYXJzZWQucG9ydCwKICAgIHByb3RvY29sOiBwYXJzZWQucHJvdG9jb2wsCiAgICBxdWVyeTogcGFyc2VkLnF1ZXJ5IHx8IHt9LAogICAgc2xhc2hlczogcGFyc2VkLnNsYXNoZXMKICB9OyAvLyBUaGUgdXJsTW9kaWZpZXIgbW9kaWZpZXMgdGhlIG1lYW5pbmdmdWxQYXJ0cyBvYmplY3QsIG9yIHJldHVybnMgYSBuZXcgb25lLgoKICB2YXIgbW9kaWZpZWRQYXJ0cyA9IHVybE1vZGlmaWVyKG1lYW5pbmdmdWxQYXJ0cykgfHwgbWVhbmluZ2Z1bFBhcnRzOyAvLyBGb3JtYXQgdGhlIG1vZGlmaWVkL3JlcGxhY2VkIG1lYW5pbmdmdWxQYXJ0cyBiYWNrIGludG8gYSB1cmwuCgogIHJldHVybiAoMCwgX3VybC5mb3JtYXQpKHsKICAgIGF1dGg6IG1vZGlmaWVkUGFydHMuYXV0aCwKICAgIGhhc2g6IG1vZGlmaWVkUGFydHMuaGFzaCwKICAgIGhvc3RuYW1lOiBtb2RpZmllZFBhcnRzLmhvc3RuYW1lLAogICAgcGF0aG5hbWU6IG1vZGlmaWVkUGFydHMucGF0aG5hbWUsCiAgICBwb3J0OiBtb2RpZmllZFBhcnRzLnBvcnQsCiAgICBwcm90b2NvbDogbW9kaWZpZWRQYXJ0cy5wcm90b2NvbCwKICAgIHF1ZXJ5OiBtb2RpZmllZFBhcnRzLnF1ZXJ5LAogICAgc2xhc2hlczogbW9kaWZpZWRQYXJ0cy5zbGFzaGVzCiAgfSk7Cn0KCmZ1bmN0aW9uIGlzUmVsYXRpdmVVcmwoY2FuZGlkYXRlUGF0aCkgewogIC8vIHZhbGlkYXRlIHRoYXQgYGNhbmRpZGF0ZVBhdGhgIGlzIG5vdCBhdHRlbXB0aW5nIGEgcmVkaXJlY3QgdG8gc29tZXdoZXJlCiAgLy8gb3V0c2lkZSBvZiB0aGlzIEtpYmFuYSBpbnN0YWxsCiAgdmFyIGFsbCA9ICgwLCBfdXJsLnBhcnNlKShjYW5kaWRhdGVQYXRoLCBmYWxzZQogIC8qIHBhcnNlUXVlcnlTdHJpbmcgKi8KICAsIHRydWUKICAvKiBzbGFzaGVzRGVub3RlSG9zdCAqLwogICk7CiAgdmFyIHByb3RvY29sID0gYWxsLnByb3RvY29sLAogICAgICBob3N0bmFtZSA9IGFsbC5ob3N0bmFtZSwKICAgICAgcG9ydCA9IGFsbC5wb3J0OyAvLyBXZSBzaG91bGQgZXhwbGljaXRseSBjb21wYXJlIGBwcm90b2NvbGAsIGBwb3J0YCBhbmQgYGhvc3RuYW1lYCB0byBudWxsIHRvIG1ha2Ugc3VyZSB0aGVzZSBhcmUgbm90CiAgLy8gZGV0ZWN0ZWQgaW4gdGhlIFVSTCBhdCBhbGwuIEZvciBleGFtcGxlIGBob3N0bmFtZWAgY2FuIGJlIGVtcHR5IHN0cmluZyBmb3IgTm9kZSBVUkwgcGFyc2VyLCBidXQKICAvLyBicm93c2VyIChiZWNhdXNlIG9mIHZhcmlvdXMgYndjIHJlYXNvbnMpIHByb2Nlc3NlcyBVUkwgZGlmZmVyZW50bHkgKGUuZy4gYC8vL2FiYy5jb21gIC0gZm9yIGJyb3dzZXIKICAvLyBob3N0bmFtZSBpcyBgYWJjLmNvbWAsIGJ1dCBmb3IgTm9kZSBob3N0bmFtZSBpcyBhbiBlbXB0eSBzdHJpbmcgaS5lLiBldmVyeXRoaW5nIGJldHdlZW4gc2NoZW1hIChgLy9gKQogIC8vIGFuZCB0aGUgZmlyc3Qgc2xhc2ggdGhhdCBiZWxvbmdzIHRvIHBhdGguCgogIGlmIChwcm90b2NvbCAhPT0gbnVsbCB8fCBob3N0bmFtZSAhPT0gbnVsbCB8fCBwb3J0ICE9PSBudWxsKSB7CiAgICByZXR1cm4gZmFsc2U7CiAgfQoKICByZXR1cm4gdHJ1ZTsKfQ=="},null]}