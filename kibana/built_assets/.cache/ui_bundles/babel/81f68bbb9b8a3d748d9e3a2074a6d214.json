{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/siem/public/components/fields_browser/categories_pane.js","dependencies":[{"path":"x-pack/legacy/plugins/siem/public/components/fields_browser/categories_pane.js","mtime":1589249552976},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLkNhdGVnb3JpZXNQYW5lID0gdm9pZCAwOwoKdmFyIF9ldWkgPSByZXF1aXJlKCJAZWxhc3RpYy9ldWkiKTsKCnZhciBfcmVhY3QgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoInJlYWN0IikpOwoKdmFyIF9zdHlsZWRDb21wb25lbnRzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCJzdHlsZWQtY29tcG9uZW50cyIpKTsKCnZhciBfY2F0ZWdvcnlfY29sdW1ucyA9IHJlcXVpcmUoIi4vY2F0ZWdvcnlfY29sdW1ucyIpOwoKdmFyIF9oZWxwZXJzID0gcmVxdWlyZSgiLi9oZWxwZXJzIik7Cgp2YXIgaTE4biA9IF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKHJlcXVpcmUoIi4vdHJhbnNsYXRpb25zIikpOwoKZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQob2JqKSB7CiAgaWYgKG9iaiAmJiBvYmouX19lc01vZHVsZSkgewogICAgcmV0dXJuIG9iajsKICB9IGVsc2UgewogICAgdmFyIG5ld09iaiA9IHt9OwoKICAgIGlmIChvYmogIT0gbnVsbCkgewogICAgICBmb3IgKHZhciBrZXkgaW4gb2JqKSB7CiAgICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGtleSkpIHsKICAgICAgICAgIHZhciBkZXNjID0gT2JqZWN0LmRlZmluZVByb3BlcnR5ICYmIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IgPyBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iaiwga2V5KSA6IHt9OwoKICAgICAgICAgIGlmIChkZXNjLmdldCB8fCBkZXNjLnNldCkgewogICAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobmV3T2JqLCBrZXksIGRlc2MpOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgbmV3T2JqW2tleV0gPSBvYmpba2V5XTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgIH0KCiAgICBuZXdPYmouZGVmYXVsdCA9IG9iajsKICAgIHJldHVybiBuZXdPYmo7CiAgfQp9CgpmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgewogIHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7CiAgICBkZWZhdWx0OiBvYmoKICB9Owp9Ci8qCiAqIENvcHlyaWdodCBFbGFzdGljc2VhcmNoIEIuVi4gYW5kL29yIGxpY2Vuc2VkIHRvIEVsYXN0aWNzZWFyY2ggQi5WLiB1bmRlciBvbmUKICogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuIExpY2Vuc2VkIHVuZGVyIHRoZSBFbGFzdGljIExpY2Vuc2U7CiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgRWxhc3RpYyBMaWNlbnNlLgogKi8KCgp2YXIgQ2F0ZWdvcnlOYW1lcyA9IF9zdHlsZWRDb21wb25lbnRzLmRlZmF1bHQuZGl2LndpdGhDb25maWcoewogIGRpc3BsYXlOYW1lOiAiQ2F0ZWdvcnlOYW1lcyIsCiAgY29tcG9uZW50SWQ6ICJzYy0zZ2k1enEtMCIKfSkoWyIiLCAiO292ZXJmbG93OmF1dG87cGFkZGluZzo1cHg7IiwgIjt0aGVhZHtkaXNwbGF5Om5vbmU7fSJdLCBmdW5jdGlvbiAoX3JlZikgewogIHZhciBoZWlnaHQgPSBfcmVmLmhlaWdodDsKICByZXR1cm4gImhlaWdodDogIi5jb25jYXQoaGVpZ2h0LCAicHgiKTsKfSwgZnVuY3Rpb24gKF9yZWYyKSB7CiAgdmFyIHdpZHRoID0gX3JlZjIud2lkdGg7CiAgcmV0dXJuICJ3aWR0aDogIi5jb25jYXQod2lkdGgsICJweCIpOwp9KTsKCkNhdGVnb3J5TmFtZXMuZGlzcGxheU5hbWUgPSAnQ2F0ZWdvcnlOYW1lcyc7CnZhciBUaXRsZSA9ICgwLCBfc3R5bGVkQ29tcG9uZW50cy5kZWZhdWx0KShfZXVpLkV1aVRpdGxlKS53aXRoQ29uZmlnKHsKICBkaXNwbGF5TmFtZTogIlRpdGxlIiwKICBjb21wb25lbnRJZDogInNjLTNnaTV6cS0xIgp9KShbInBhZGRpbmctbGVmdDo1cHg7Il0pOwpUaXRsZS5kaXNwbGF5TmFtZSA9ICdUaXRsZSc7Cgp2YXIgQ2F0ZWdvcmllc1BhbmUgPSBfcmVhY3QuZGVmYXVsdC5tZW1vKGZ1bmN0aW9uIChfcmVmMykgewogIHZhciBicm93c2VyRmllbGRzID0gX3JlZjMuYnJvd3NlckZpZWxkcywKICAgICAgZmlsdGVyZWRCcm93c2VyRmllbGRzID0gX3JlZjMuZmlsdGVyZWRCcm93c2VyRmllbGRzLAogICAgICBvbkNhdGVnb3J5U2VsZWN0ZWQgPSBfcmVmMy5vbkNhdGVnb3J5U2VsZWN0ZWQsCiAgICAgIG9uVXBkYXRlQ29sdW1ucyA9IF9yZWYzLm9uVXBkYXRlQ29sdW1ucywKICAgICAgc2VsZWN0ZWRDYXRlZ29yeUlkID0gX3JlZjMuc2VsZWN0ZWRDYXRlZ29yeUlkLAogICAgICB0aW1lbGluZUlkID0gX3JlZjMudGltZWxpbmVJZCwKICAgICAgd2lkdGggPSBfcmVmMy53aWR0aDsKICByZXR1cm4gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfcmVhY3QuZGVmYXVsdC5GcmFnbWVudCwgbnVsbCwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChUaXRsZSwgewogICAgc2l6ZTogInh4cyIKICB9LCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KCJoNSIsIHsKICAgICJkYXRhLXRlc3Qtc3ViaiI6ICJjYXRlZ29yaWVzLXBhbmUtdGl0bGUiCiAgfSwgaTE4bi5DQVRFR09SSUVTKSksIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoQ2F0ZWdvcnlOYW1lcywgewogICAgY2xhc3NOYW1lOiAiZXVpVGFibGUtLWNvbXByZXNzZWQiLAogICAgImRhdGEtdGVzdC1zdWJqIjogImNhdGVnb3JpZXMtY29udGFpbmVyIiwKICAgIGhlaWdodDogX2hlbHBlcnMuVEFCTEVfSEVJR0hULAogICAgd2lkdGg6IHdpZHRoCiAgfSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUluTWVtb3J5VGFibGUsIHsKICAgIGNvbHVtbnM6ICgwLCBfY2F0ZWdvcnlfY29sdW1ucy5nZXRDYXRlZ29yeUNvbHVtbnMpKHsKICAgICAgYnJvd3NlckZpZWxkczogYnJvd3NlckZpZWxkcywKICAgICAgZmlsdGVyZWRCcm93c2VyRmllbGRzOiBmaWx0ZXJlZEJyb3dzZXJGaWVsZHMsCiAgICAgIG9uQ2F0ZWdvcnlTZWxlY3RlZDogb25DYXRlZ29yeVNlbGVjdGVkLAogICAgICBvblVwZGF0ZUNvbHVtbnM6IG9uVXBkYXRlQ29sdW1ucywKICAgICAgc2VsZWN0ZWRDYXRlZ29yeUlkOiBzZWxlY3RlZENhdGVnb3J5SWQsCiAgICAgIHRpbWVsaW5lSWQ6IHRpbWVsaW5lSWQKICAgIH0pLAogICAgaXRlbXM6IE9iamVjdC5rZXlzKGZpbHRlcmVkQnJvd3NlckZpZWxkcykuc29ydCgpLm1hcChmdW5jdGlvbiAoY2F0ZWdvcnlJZCkgewogICAgICByZXR1cm4gewogICAgICAgIGNhdGVnb3J5SWQ6IGNhdGVnb3J5SWQKICAgICAgfTsKICAgIH0pLAogICAgbWVzc2FnZTogaTE4bi5OT19GSUVMRFNfTUFUQ0gsCiAgICBwYWdpbmF0aW9uOiBmYWxzZSwKICAgIHNvcnRpbmc6IGZhbHNlCiAgfSkpKTsKfSk7CgpleHBvcnRzLkNhdGVnb3JpZXNQYW5lID0gQ2F0ZWdvcmllc1BhbmU7CkNhdGVnb3JpZXNQYW5lLmRpc3BsYXlOYW1lID0gJ0NhdGVnb3JpZXNQYW5lJzs="},null]}