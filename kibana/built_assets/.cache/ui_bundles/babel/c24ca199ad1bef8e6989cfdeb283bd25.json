{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/siem/public/pages/case/components/user_action_tree/helpers.js","dependencies":[{"path":"x-pack/legacy/plugins/siem/public/pages/case/components/user_action_tree/helpers.js","mtime":1589249553276},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1589249605183},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1589249608558},{"path":"node_modules/babel-loader/lib/index.js","mtime":1589249591025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmdldExhYmVsVGl0bGUgPSB2b2lkIDA7Cgp2YXIgX2V1aSA9IHJlcXVpcmUoIkBlbGFzdGljL2V1aSIpOwoKdmFyIF9yZWFjdCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgicmVhY3QiKSk7Cgp2YXIgaTE4biA9IF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKHJlcXVpcmUoIi4uL2Nhc2Vfdmlldy90cmFuc2xhdGlvbnMiKSk7CgpmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChvYmopIHsKICBpZiAob2JqICYmIG9iai5fX2VzTW9kdWxlKSB7CiAgICByZXR1cm4gb2JqOwogIH0gZWxzZSB7CiAgICB2YXIgbmV3T2JqID0ge307CgogICAgaWYgKG9iaiAhPSBudWxsKSB7CiAgICAgIGZvciAodmFyIGtleSBpbiBvYmopIHsKICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwga2V5KSkgewogICAgICAgICAgdmFyIGRlc2MgPSBPYmplY3QuZGVmaW5lUHJvcGVydHkgJiYgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvciA/IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqLCBrZXkpIDoge307CgogICAgICAgICAgaWYgKGRlc2MuZ2V0IHx8IGRlc2Muc2V0KSB7CiAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShuZXdPYmosIGtleSwgZGVzYyk7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBuZXdPYmpba2V5XSA9IG9ialtrZXldOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfQoKICAgIG5ld09iai5kZWZhdWx0ID0gb2JqOwogICAgcmV0dXJuIG5ld09iajsKICB9Cn0KCmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7CiAgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsKICAgIGRlZmF1bHQ6IG9iagogIH07Cn0KLyoKICogQ29weXJpZ2h0IEVsYXN0aWNzZWFyY2ggQi5WLiBhbmQvb3IgbGljZW5zZWQgdG8gRWxhc3RpY3NlYXJjaCBCLlYuIHVuZGVyIG9uZQogKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gTGljZW5zZWQgdW5kZXIgdGhlIEVsYXN0aWMgTGljZW5zZTsKICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBFbGFzdGljIExpY2Vuc2UuCiAqLwoKCnZhciBnZXRMYWJlbFRpdGxlID0gZnVuY3Rpb24gZ2V0TGFiZWxUaXRsZShfcmVmKSB7CiAgdmFyIGFjdGlvbiA9IF9yZWYuYWN0aW9uLAogICAgICBmaWVsZCA9IF9yZWYuZmllbGQsCiAgICAgIGZpcnN0SW5kZXhQdXNoVG9TZXJ2aWNlID0gX3JlZi5maXJzdEluZGV4UHVzaFRvU2VydmljZSwKICAgICAgaW5kZXggPSBfcmVmLmluZGV4OwoKICBpZiAoZmllbGQgPT09ICd0YWdzJykgewogICAgcmV0dXJuIGdldFRhZ3NMYWJlbFRpdGxlKGFjdGlvbik7CiAgfSBlbHNlIGlmIChmaWVsZCA9PT0gJ3RpdGxlJyAmJiBhY3Rpb24uYWN0aW9uID09PSAndXBkYXRlJykgewogICAgcmV0dXJuICIiLmNvbmNhdChpMThuLkNIQU5HRURfRklFTEQudG9Mb3dlckNhc2UoKSwgIiAiKS5jb25jYXQoaTE4bi5DQVNFX05BTUUudG9Mb3dlckNhc2UoKSwgIiAgIikuY29uY2F0KGkxOG4uVE8sICIgXCIiKS5jb25jYXQoYWN0aW9uLm5ld1ZhbHVlLCAiXCIiKTsKICB9IGVsc2UgaWYgKGZpZWxkID09PSAnZGVzY3JpcHRpb24nICYmIGFjdGlvbi5hY3Rpb24gPT09ICd1cGRhdGUnKSB7CiAgICByZXR1cm4gIiIuY29uY2F0KGkxOG4uRURJVEVEX0ZJRUxELCAiICIpLmNvbmNhdChpMThuLkRFU0NSSVBUSU9OLnRvTG93ZXJDYXNlKCkpOwogIH0gZWxzZSBpZiAoZmllbGQgPT09ICdzdGF0dXMnICYmIGFjdGlvbi5hY3Rpb24gPT09ICd1cGRhdGUnKSB7CiAgICByZXR1cm4gIiIuY29uY2F0KGFjdGlvbi5uZXdWYWx1ZSA9PT0gJ29wZW4nID8gaTE4bi5SRU9QRU5FRF9DQVNFLnRvTG93ZXJDYXNlKCkgOiBpMThuLkNMT1NFRF9DQVNFLnRvTG93ZXJDYXNlKCksICIgIikuY29uY2F0KGkxOG4uQ0FTRSk7CiAgfSBlbHNlIGlmIChmaWVsZCA9PT0gJ2NvbW1lbnQnICYmIGFjdGlvbi5hY3Rpb24gPT09ICd1cGRhdGUnKSB7CiAgICByZXR1cm4gIiIuY29uY2F0KGkxOG4uRURJVEVEX0ZJRUxELCAiICIpLmNvbmNhdChpMThuLkNPTU1FTlQudG9Mb3dlckNhc2UoKSk7CiAgfSBlbHNlIGlmIChmaWVsZCA9PT0gJ3B1c2hlZCcgJiYgYWN0aW9uLmFjdGlvbiA9PT0gJ3B1c2gtdG8tc2VydmljZScgJiYgYWN0aW9uLm5ld1ZhbHVlICE9IG51bGwpIHsKICAgIHJldHVybiBnZXRQdXNoZWRTZXJ2aWNlTGFiZWxUaXRsZShhY3Rpb24sIGZpcnN0SW5kZXhQdXNoVG9TZXJ2aWNlLCBpbmRleCk7CiAgfQoKICByZXR1cm4gJyc7Cn07CgpleHBvcnRzLmdldExhYmVsVGl0bGUgPSBnZXRMYWJlbFRpdGxlOwoKdmFyIGdldFRhZ3NMYWJlbFRpdGxlID0gZnVuY3Rpb24gZ2V0VGFnc0xhYmVsVGl0bGUoYWN0aW9uKSB7CiAgcmV0dXJuIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlGbGV4R3JvdXAsIHsKICAgIGFsaWduSXRlbXM6ICJiYXNlbGluZSIsCiAgICBndXR0ZXJTaXplOiAieHMiLAogICAgY29tcG9uZW50OiAic3BhbiIKICB9LCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpRmxleEl0ZW0sIG51bGwsIGFjdGlvbi5hY3Rpb24gPT09ICdhZGQnICYmIGkxOG4uQURERURfRklFTEQsIGFjdGlvbi5hY3Rpb24gPT09ICdkZWxldGUnICYmIGkxOG4uUkVNT1ZFRF9GSUVMRCwgIiAiLCBpMThuLlRBR1MudG9Mb3dlckNhc2UoKSksIGFjdGlvbi5uZXdWYWx1ZSAhPSBudWxsICYmIGFjdGlvbi5uZXdWYWx1ZS5zcGxpdCgnLCcpLm1hcChmdW5jdGlvbiAodGFnKSB7CiAgICByZXR1cm4gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUZsZXhJdGVtLCB7CiAgICAgIGdyb3c6IGZhbHNlLAogICAgICBrZXk6IHRhZwogICAgfSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUJhZGdlLCB7CiAgICAgIGNvbG9yOiAiZGVmYXVsdCIKICAgIH0sIHRhZykpOwogIH0pKTsKfTsKCnZhciBnZXRQdXNoZWRTZXJ2aWNlTGFiZWxUaXRsZSA9IGZ1bmN0aW9uIGdldFB1c2hlZFNlcnZpY2VMYWJlbFRpdGxlKGFjdGlvbiwgZmlyc3RJbmRleFB1c2hUb1NlcnZpY2UsIGluZGV4KSB7CiAgdmFyIF9hY3Rpb24kbmV3VmFsdWU7CgogIHZhciBwdXNoZWRWYWwgPSBKU09OLnBhcnNlKChfYWN0aW9uJG5ld1ZhbHVlID0gYWN0aW9uLm5ld1ZhbHVlKSAhPT0gbnVsbCAmJiBfYWN0aW9uJG5ld1ZhbHVlICE9PSB2b2lkIDAgPyBfYWN0aW9uJG5ld1ZhbHVlIDogJycpOwogIHJldHVybiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpRmxleEdyb3VwLCB7CiAgICBhbGlnbkl0ZW1zOiAiYmFzZWxpbmUiLAogICAgZ3V0dGVyU2l6ZTogInhzIgogIH0sIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlGbGV4SXRlbSwgbnVsbCwgZmlyc3RJbmRleFB1c2hUb1NlcnZpY2UgPT09IGluZGV4ID8gaTE4bi5QVVNIRURfTkVXX0lOQ0lERU5UIDogaTE4bi5VUERBVEVfSU5DSURFTlQpLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpRmxleEl0ZW0sIHsKICAgIGdyb3c6IGZhbHNlCiAgfSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUxpbmssIHsKICAgIGhyZWY6IHB1c2hlZFZhbCA9PT0gbnVsbCB8fCBwdXNoZWRWYWwgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHB1c2hlZFZhbC5leHRlcm5hbF91cmwsCiAgICB0YXJnZXQ6ICJfYmxhbmsiCiAgfSwgcHVzaGVkVmFsID09PSBudWxsIHx8IHB1c2hlZFZhbCA9PT0gdm9pZCAwID8gdm9pZCAwIDogcHVzaGVkVmFsLmNvbm5lY3Rvcl9uYW1lLCAiICIsIHB1c2hlZFZhbCA9PT0gbnVsbCB8fCBwdXNoZWRWYWwgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHB1c2hlZFZhbC5leHRlcm5hbF90aXRsZSkpKTsKfTs="},null]}