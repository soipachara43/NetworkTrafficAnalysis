"use strict";
/*
 * Licensed to Elasticsearch B.V. under one or more contributor
 * license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright
 * ownership. Elasticsearch B.V. licenses this file to you under
 * the Apache License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const kbn_client_requester_1 = require("./kbn_client_requester");
class KbnClientSavedObjects {
    constructor(log, requester) {
        this.log = log;
        this.requester = requester;
    }
    /**
     * Run the saved objects migration
     */
    async migrate() {
        this.log.debug('Migrating saved objects');
        return await this.requester.request({
            description: 'migrate saved objects',
            path: kbn_client_requester_1.uriencode `/internal/saved_objects/_migrate`,
            method: 'POST',
            body: {},
        });
    }
    /**
     * Get an object
     */
    async get(options) {
        this.log.debug('Gettings saved object: %j', options);
        return await this.requester.request({
            description: 'get saved object',
            path: kbn_client_requester_1.uriencode `/api/saved_objects/${options.type}/${options.id}`,
            method: 'GET',
        });
    }
    /**
     * Create a saved object
     */
    async create(options) {
        this.log.debug('Creating saved object: %j', options);
        return await this.requester.request({
            description: 'update saved object',
            path: options.id
                ? kbn_client_requester_1.uriencode `/api/saved_objects/${options.type}/${options.id}`
                : kbn_client_requester_1.uriencode `/api/saved_objects/${options.type}`,
            query: {
                overwrite: options.overwrite,
            },
            method: 'POST',
            body: {
                attributes: options.attributes,
                migrationVersion: options.migrationVersion,
                references: options.references,
            },
        });
    }
    /**
     * Update a saved object
     */
    async update(options) {
        this.log.debug('Updating saved object: %j', options);
        return await this.requester.request({
            description: 'update saved object',
            path: kbn_client_requester_1.uriencode `/api/saved_objects/${options.type}/${options.id}`,
            query: {
                overwrite: options.overwrite,
            },
            method: 'PUT',
            body: {
                attributes: options.attributes,
                migrationVersion: options.migrationVersion,
                references: options.references,
            },
        });
    }
    /**
     * Delete an object
     */
    async delete(options) {
        this.log.debug('Deleting saved object %s/%s', options);
        return await this.requester.request({
            description: 'delete saved object',
            path: kbn_client_requester_1.uriencode `/api/saved_objects/${options.type}/${options.id}`,
            method: 'DELETE',
        });
    }
}
exports.KbnClientSavedObjects = KbnClientSavedObjects;
