"use strict";

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.EuiNavDrawerFlyout = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _tabbable = _interopRequireDefault(require("tabbable"));

var _services = require("../../services");

var _title = require("../title");

var _nav_drawer_group = require("./nav_drawer_group");

var _list_group = require("../list_group/list_group");

var _focus_trap = require("../focus_trap");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var EuiNavDrawerFlyout = function EuiNavDrawerFlyout(_ref) {
  var className = _ref.className,
      title = _ref.title,
      isCollapsed = _ref.isCollapsed,
      listItems = _ref.listItems,
      wrapText = _ref.wrapText,
      onClose = _ref.onClose,
      rest = _objectWithoutProperties(_ref, ["className", "title", "isCollapsed", "listItems", "wrapText", "onClose"]);

  var _useState = (0, _react.useState)(),
      _useState2 = _slicedToArray(_useState, 2),
      menuEl = _useState2[0],
      setMenuEl = _useState2[1];

  var _useState3 = (0, _react.useState)(),
      _useState4 = _slicedToArray(_useState3, 2),
      tabbables = _useState4[0],
      setTabbables = _useState4[1];

  var LABEL = 'navDrawerFlyoutTitle';
  var classes = (0, _classnames.default)('euiNavDrawerFlyout', {
    'euiNavDrawerFlyout-isCollapsed': isCollapsed,
    'euiNavDrawerFlyout-isExpanded': !isCollapsed
  }, className);

  var handleKeyDown = function handleKeyDown(e) {
    if (e.keyCode === _services.keyCodes.ESCAPE) {
      handleClose();
    } else if (e.keyCode === _services.keyCodes.TAB) {
      var tabs = tabbables;

      if (!tabs) {
        tabs = (0, _tabbable.default)(menuEl).filter(function (el) {
          return el.tagName !== 'DIV';
        });
        setTabbables(tabs);
      }

      if (!e.shiftKey && document.activeElement === tabs[tabs.length - 1] || e.shiftKey && document.activeElement === tabs[0]) {
        handleClose();
      }
    }
  };

  var handleClose = function handleClose() {
    var shouldReturnFocus = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
    setTabbables(null);
    onClose(shouldReturnFocus);
  };

  return _react.default.createElement("div", _extends({
    className: classes,
    "aria-labelledby": LABEL,
    onKeyDown: handleKeyDown,
    ref: setMenuEl
  }, rest), _react.default.createElement(_title.EuiTitle, {
    className: "euiNavDrawerFlyout__title",
    tabIndex: "-1",
    size: "xxs"
  }, _react.default.createElement("div", {
    id: LABEL
  }, title)), listItems ? _react.default.createElement(_focus_trap.EuiFocusTrap, {
    returnFocus: false
  }, _react.default.createElement(_nav_drawer_group.EuiNavDrawerGroup, {
    className: "euiNavDrawerFlyout__listGroup",
    ariaLabelledby: LABEL,
    listItems: listItems,
    wrapText: wrapText,
    onClose: function onClose() {
      return handleClose(false);
    }
  })) : null);
};

exports.EuiNavDrawerFlyout = EuiNavDrawerFlyout;
EuiNavDrawerFlyout.propTypes = {
  className: _propTypes.default.string,
  listItems: _list_group.EuiListGroup.propTypes.listItems,
  wrapText: _list_group.EuiListGroup.propTypes.wrapText,

  /**
   * Display a title atop the flyout
   */
  title: _propTypes.default.string,

  /**
   * Toggle the nav drawer between collapsed and expanded
   */
  isCollapsed: _propTypes.default.bool,

  /**
   * Passthrough function to be called when the flyout is closing
   * See ./nav_drawer.js
   */
  onClose: _propTypes.default.func
};
EuiNavDrawerFlyout.defaultProps = {
  isCollapsed: true
};
EuiNavDrawerFlyout.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "EuiNavDrawerFlyout",
  "props": {
    "isCollapsed": {
      "defaultValue": {
        "value": "true",
        "computed": false
      },
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "Toggle the nav drawer between collapsed and expanded"
    },
    "className": {
      "type": {
        "name": "string"
      },
      "required": false,
      "description": ""
    },
    "listItems": {
      "type": {
        "name": "custom",
        "raw": "EuiListGroup.propTypes.listItems"
      },
      "required": false,
      "description": ""
    },
    "wrapText": {
      "type": {
        "name": "custom",
        "raw": "EuiListGroup.propTypes.wrapText"
      },
      "required": false,
      "description": ""
    },
    "title": {
      "type": {
        "name": "string"
      },
      "required": false,
      "description": "Display a title atop the flyout"
    },
    "onClose": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": "Passthrough function to be called when the flyout is closing\nSee ./nav_drawer.js"
    }
  }
};