"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spread = (this && this.__spread) || function () {
    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
    return ar;
};
Object.defineProperty(exports, "__esModule", { value: true });
var viewmodel_1 = require("../../layout/viewmodel/viewmodel");
var measure_1 = require("../../layout/utils/measure");
var viewmodel_types_1 = require("../../layout/types/viewmodel_types");
var group_by_rollup_1 = require("../../layout/utils/group_by_rollup");
var commons_1 = require("../../../../utils/commons");
var config_1 = require("../../layout/config/config");
function rawTextGetter(layers) {
    return function (node) {
        var accessorFn = layers[node[group_by_rollup_1.DEPTH_KEY] - 1].nodeLabel || commons_1.identity;
        return "" + accessorFn(node.dataName);
    };
}
function valueGetterFunction(valueGetter) {
    return typeof valueGetter === 'function' ? valueGetter : config_1.VALUE_GETTERS[valueGetter];
}
exports.valueGetterFunction = valueGetterFunction;
function render(partitionSpec, parentDimensions) {
    var width = parentDimensions.width, height = parentDimensions.height;
    var layers = partitionSpec.layers, facts = partitionSpec.data, specConfig = partitionSpec.config;
    var textMeasurer = document.createElement('canvas');
    var textMeasurerCtx = textMeasurer.getContext('2d');
    var partialConfig = __assign(__assign({}, specConfig), { width: width, height: height });
    var config = commons_1.mergePartial(config_1.config, partialConfig);
    if (!textMeasurerCtx) {
        return viewmodel_types_1.nullShapeViewModel(config, { x: width / 2, y: height / 2 });
    }
    var valueGetter = valueGetterFunction(partitionSpec.valueGetter);
    return viewmodel_1.shapeViewModel(measure_1.measureText(textMeasurerCtx), config, layers, facts, rawTextGetter(layers), partitionSpec.valueAccessor, partitionSpec.valueFormatter, partitionSpec.percentFormatter, valueGetter, __spread([function () { return null; }], layers.map(function (_a) {
        var groupByRollup = _a.groupByRollup;
        return groupByRollup;
    })));
}
exports.render = render;
//# sourceMappingURL=scenegraph.js.map