"use strict";
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spread = (this && this.__spread) || function () {
    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
    return ar;
};
Object.defineProperty(exports, "__esModule", { value: true });
var d3_utils_1 = require("./d3_utils");
function hueInterpolator(colors) {
    return function (d) {
        var index = Math.round(d * 255);
        var _a = __read(colors[index], 4), r = _a[0], g = _a[1], b = _a[2], a = _a[3];
        return colors[index].length === 3 ? "rgb(" + r + "," + g + "," + b + ")" : "rgba(" + r + "," + g + "," + b + "," + a + ")";
    };
}
exports.hueInterpolator = hueInterpolator;
function addOpacity(hexColorString, opacity) {
    return opacity === 1
        ? hexColorString
        : hexColorString.slice(0, 7) +
            (hexColorString.slice(7).length === 0 || parseInt(hexColorString.slice(7, 2), 16) === 255
                ? ("00" + Math.round(opacity * 255).toString(16)).substr(-2)
                : ("00" + Math.round((parseInt(hexColorString.slice(7, 2), 16) / 255) * opacity * 255).toString(16)).substr(-2));
}
exports.addOpacity = addOpacity;
function arrayToLookup(keyFun, array) {
    return Object.assign.apply(Object, __spread([{}], array.map(function (d) {
        var _a;
        return (_a = {}, _a[keyFun(d)] = d, _a);
    })));
}
exports.arrayToLookup = arrayToLookup;
function colorIsDark(color) {
    var rgba = d3_utils_1.stringToRGB(color);
    var r = rgba.r, g = rgba.g, b = rgba.b, opacity = rgba.opacity;
    var a = rgba.hasOwnProperty('opacity') ? opacity : 1;
    return r * 0.299 + g * 0.587 + b * 0.114 < a * 150;
}
exports.colorIsDark = colorIsDark;
//# sourceMappingURL=calcs.js.map