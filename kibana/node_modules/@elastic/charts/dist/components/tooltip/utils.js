"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function getFinalTooltipPosition(container, tooltip, anchorPosition) {
    var x1 = anchorPosition.x1, y1 = anchorPosition.y1, isRotated = anchorPosition.isRotated, _a = anchorPosition.padding, padding = _a === void 0 ? 10 : _a;
    var left = 0;
    var top = 0;
    var x0 = anchorPosition.x0 || anchorPosition.x1;
    var y0 = anchorPosition.y0 || anchorPosition.y1;
    if (!isRotated) {
        var leftOfBand = window.pageXOffset + container.left + x0;
        if (x1 + tooltip.width + padding > container.width) {
            left = leftOfBand - tooltip.width - padding;
        }
        else {
            left = leftOfBand + (x1 - x0) + padding;
        }
        var topOfBand = window.pageYOffset + container.top;
        if (y0 + tooltip.height > container.height) {
            top = topOfBand + container.height - tooltip.height;
        }
        else {
            top = topOfBand + y0;
        }
    }
    else {
        var leftOfBand = window.pageXOffset + container.left;
        if (x1 + tooltip.width > container.width) {
            left = leftOfBand + container.width - tooltip.width;
        }
        else {
            left = leftOfBand + x1;
        }
        var topOfBand = window.pageYOffset + container.top + y0;
        if (y1 + tooltip.height + padding > container.height) {
            top = topOfBand - tooltip.height - padding;
        }
        else {
            top = topOfBand + (y1 - y0) + padding;
        }
    }
    return {
        left: Math.round(left) + "px",
        top: Math.round(top) + "px",
    };
}
exports.getFinalTooltipPosition = getFinalTooltipPosition;
//# sourceMappingURL=utils.js.map